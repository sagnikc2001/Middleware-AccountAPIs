<wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:sch0="http://ws.core.cortex.com/domain/services/inqccapp" xmlns:sch1="http://ws.core.cortex.com/domain/id/currId" xmlns:sch10="http://ws.core.cortex.com/domain/types/branchdet" xmlns:sch11="http://ws.core.cortex.com/domain/types/apptype" xmlns:sch12="http://ws.core.cortex.com/domain/types/apphist" xmlns:sch13="http://ws.core.cortex.com/domain/types/appdetadd" xmlns:sch14="http://ws.core.cortex.com/domain/types/appdetdoc" xmlns:sch15="http://ws.core.cortex.com/domain/types/appdet" xmlns:sch16="http://ws.core.cortex.com/domain/types/appstatus" xmlns:sch17="http://ws.core.cortex.com/domain/types/custdet" xmlns:sch18="http://ws.core.cortex.com/domain/types/cardidrsp" xmlns:sch19="http://ws.core.cortex.com/domain/types/crddet" xmlns:sch2="http://ws.core.cortex.com/domain/types" xmlns:sch20="http://ws.core.cortex.com/domain/types/accdet" xmlns:sch21="http://ws.core.cortex.com/domain/types/corpdet" xmlns:sch22="http://ws.core.cortex.com/domain/types/cccycledet" xmlns:sch23="http://ws.core.cortex.com/domain/types/ccaccdet" xmlns:sch3="http://ws.core.cortex.com/domain/common/hdrusrdata" xmlns:sch4="http://ws.core.cortex.com/domain/common/security" xmlns:sch5="http://ws.core.cortex.com/domain/common/reqhdr" xmlns:sch6="http://ws.core.cortex.com/domain/common/rsphdr" xmlns:sch7="http://ws.core.cortex.com/domain/types/ctrydet" xmlns:sch8="http://ws.core.cortex.com/domain/types/addressdet" xmlns:sch9="http://ws.core.cortex.com/domain/id/applId" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://ws.core.cortex.com/domain/services/inqccapp" targetNamespace="http://ws.core.cortex.com/domain/services/inqccapp">
<wsdl:types>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:accdet="http://ws.core.cortex.com/domain/types/accdet" xmlns:addressType="http://ws.core.cortex.com/domain/types/addressdet" xmlns:appId="http://ws.core.cortex.com/domain/id/applId" xmlns:appdet="http://ws.core.cortex.com/domain/types/appdet" xmlns:apphist="http://ws.core.cortex.com/domain/types/apphist" xmlns:appstatus="http://ws.core.cortex.com/domain/types/appstatus" xmlns:apptype="http://ws.core.cortex.com/domain/types/apptype" xmlns:branchtype="http://ws.core.cortex.com/domain/types/branchdet" xmlns:ccsaccdet="http://ws.core.cortex.com/domain/types/ccaccdet" xmlns:corpdet="http://ws.core.cortex.com/domain/types/corpdet" xmlns:crddet="http://ws.core.cortex.com/domain/types/crddet" xmlns:ctxtypes="http://ws.core.cortex.com/domain/types" xmlns:custdet="http://ws.core.cortex.com/domain/types/custdet" xmlns:reqHdr="http://ws.core.cortex.com/domain/common/reqhdr" xmlns:rspHdr="http://ws.core.cortex.com/domain/common/rsphdr" xmlns:svcns="http://ws.core.cortex.com/domain/services/inqccapp" attributeFormDefault="qualified" elementFormDefault="qualified" targetNamespace="http://ws.core.cortex.com/domain/services/inqccapp">
<xs:annotation>
<xs:appinfo> Service to inquire the details of a specific Credit Card Application </xs:appinfo>
</xs:annotation>
<xs:import namespace="http://ws.core.cortex.com/domain/common/reqhdr"/>
<xs:import namespace="http://ws.core.cortex.com/domain/common/rsphdr"/>
<xs:import namespace="http://ws.core.cortex.com/domain/types/addressdet"/>
<xs:import namespace="http://ws.core.cortex.com/domain/types"/>
<xs:import namespace="http://ws.core.cortex.com/domain/id/applId"/>
<xs:import namespace="http://ws.core.cortex.com/domain/types/branchdet"/>
<xs:import namespace="http://ws.core.cortex.com/domain/types/apptype"/>
<xs:import namespace="http://ws.core.cortex.com/domain/types/apphist"/>
<xs:import namespace="http://ws.core.cortex.com/domain/types/appdet"/>
<xs:import namespace="http://ws.core.cortex.com/domain/types/appstatus"/>
<xs:import namespace="http://ws.core.cortex.com/domain/types/custdet"/>
<xs:import namespace="http://ws.core.cortex.com/domain/types/crddet"/>
<xs:import namespace="http://ws.core.cortex.com/domain/types/accdet"/>
<xs:import namespace="http://ws.core.cortex.com/domain/types/corpdet"/>
<xs:import namespace="http://ws.core.cortex.com/domain/types/ccaccdet"/>
<xs:element name="InquireApplicationRequest">
<xs:complexType>
<xs:sequence>
<xs:element ref="reqHdr:RequestHeader"/>
<xs:element name="InquireApplicationRequestDetails" type="svcns:InquireApplicationRequestDetailsType"/>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:complexType name="InquireApplicationRequestDetailsType">
<xs:sequence>
<xs:element ref="appId:ApplicationIdentifier"/>
<xs:element minOccurs="0" name="AdditionalData" type="svcns:AdditionalDataType">
<xs:annotation>
<xs:documentation>Used to limit the data returned in the response in case not required </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="HistoryTypeFilterList" type="svcns:HistoryTypeFilterListType">
<xs:annotation>
<xs:documentation>Filter for the history types to be returned in case the ReturnHistory in additional data is set to true. In case the filters are not specified and ReturnHistory is set to true, all history types are returned </xs:documentation>
</xs:annotation>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="AdditionalDataType">
<xs:sequence>
<xs:element minOccurs="0" name="ReturnApplicationType">
<xs:annotation>
<xs:documentation>Specifies if the application type details should be returned in the response. Defaulted to false in case not specified </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:boolean"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ReturnApplicationStatus">
<xs:annotation>
<xs:documentation>Specifies if the application status details should be returned in the response. Defaulted to false in case not specified </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:boolean"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ReturnAddresses">
<xs:annotation>
<xs:documentation>Specifies if the application address should be returned in the response. Defaulted to false in case not specified </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:boolean"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ReturnBranch">
<xs:annotation>
<xs:documentation>Specifies if the branch details the application is linked to should be returned in the response. Defaulted to false in case not specified </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:boolean"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ReturnHistory">
<xs:annotation>
<xs:documentation>Specifies if the application history returned in the response. Defaulted to false in case not specified </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:boolean"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ReturnCard">
<xs:annotation>
<xs:documentation>Specifies if the card details in case the card is created for this application should be returned in the response. Defaulted to false in case not specified </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:boolean"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ReturnCustomer">
<xs:annotation>
<xs:documentation>Specifies if the customer details in case a customer is created for this application should be returned in the response. Defaulted to false in case not specified </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:boolean"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ReturnAccount">
<xs:annotation>
<xs:documentation>Specifies if the account details in case an account is created for this application should be returned in the response. Defaulted to false in case not specified </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:boolean"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ReturnCreditAccountDetails">
<xs:annotation>
<xs:documentation>Specifies if the credit account details should be returned in case credit accounts were created for the application. Only returned in case ReturnAccount is also set to true. Defaulted to false if not specified. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:boolean"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ReturnCreditAccountDueComponentsDetails">
<xs:annotation>
<xs:documentation>Specifies if the due component details should be returned for the credit account. Only applicable in case the ReturnCreditAccountDetails is set to true </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:boolean"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ReturnCreditAccountNotDueComponentsDetails">
<xs:annotation>
<xs:documentation>Specifies if the not due component details should be returned for the credit account. Only applicable in case the ReturnCreditAccountDetails is set to true </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:boolean"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ReturnCreditAccountDueAgeDetails">
<xs:annotation>
<xs:documentation>Specifies if the due age details should be returned for the credit account (due amounts per previous cycles). Only applicable in case the ReturnCreditAccountDetails is set to true </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:boolean"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ReturnDirectDebitDetails">
<xs:annotation>
<xs:documentation>Specifies if the direct debit details for the credit account should be returned. Only applicable in case the ReturnCreditAccountDetails is set to true </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:boolean"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ReturnCreditCycleDetails">
<xs:annotation>
<xs:documentation>Specifies if the details of the credit cycle should be returned for the credit account. Only applicable in case ReturnCreditAccountDetails is set to true. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:boolean"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ReturnCorporateDetails">
<xs:annotation>
<xs:documentation>Specifies if details of the entity should be returned in case the application is linked to one. Defaulted to false in case not specified </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:boolean"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ReturnApplicationAdditionalDetails">
<xs:annotation>
<xs:documentation>Specifies if additional details of the application should be returned in case the application is linked to one. Defaulted to false in case not specified </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:boolean"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ReturnApplicationDocumentsDetails">
<xs:annotation>
<xs:documentation>Specifies if documents details of the application should be returned in case the application is linked to one. Defaulted to false in case not specified </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:boolean"/>
</xs:simpleType>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="HistoryTypeFilterListType">
<xs:sequence>
<xs:element maxOccurs="unbounded" name="HistoryType">
<xs:simpleType>
<xs:restriction base="xs:short">
<xs:enumeration value="1">
<xs:annotation>
<xs:documentation>Application Creation</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="2">
<xs:annotation>
<xs:documentation>Process Stage Change</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="3">
<xs:annotation>
<xs:documentation>Details Update</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="4">
<xs:annotation>
<xs:documentation>Approve Application</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="5">
<xs:annotation>
<xs:documentation>Decline Application</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="6">
<xs:annotation>
<xs:documentation>Refer Application</xs:documentation>
</xs:annotation>
</xs:enumeration>
</xs:restriction>
</xs:simpleType>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:element name="InquireApplicationResponse">
<xs:complexType>
<xs:sequence>
<xs:element ref="rspHdr:ResponseHeader"/>
<xs:element minOccurs="0" name="InquireApplicationResponseDetails" type="svcns:InquireApplicationResponseDetails"/>
</xs:sequence>
</xs:complexType>
</xs:element>
<xs:complexType name="InquireApplicationResponseDetails">
<xs:sequence>
<xs:element name="InstitutionCode">
<xs:annotation>
<xs:documentation>Institution code the application is linked to </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="4"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ApplicationTypeDetails" type="apptype:ApplicationTypeDetailsType">
<xs:annotation>
<xs:documentation>Type of the application, only returned in case ReturnApplicationType is set to true in the AdditionalData </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="ApplicationDetails" type="appdet:ApplicationDetailsType">
<xs:annotation>
<xs:documentation>Details of the application in case found </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="ApplicationStatusDetails" type="appstatus:ApplicationStatusDetailsType">
<xs:annotation>
<xs:documentation>Current status found and the ReturnApplicationStatus is set to true in the AdditionalData of the request </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="ApplicationHistoryList" type="apphist:ApplicationHistoryDetailsListType">
<xs:annotation>
<xs:documentation>List of application history records in case requested </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="ApplicationAddressList" type="addressType:AddressListType">
<xs:annotation>
<xs:documentation>List of addresses linked ot the application </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="CorporateDetails" type="corpdet:CorporateDetailsType">
<xs:annotation>
<xs:documentation>Only available in case the application is for a corporate card and the corporate company is found and valid </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="CustomerDetails" type="custdet:CustomerDetailsType">
<xs:annotation>
<xs:documentation>Holds customer related details in case found and ReturnCustomerDetails is set to true in the AdditionalData of the request </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="AccountDetailsList" type="svcns:AccountDetailsListType">
<xs:annotation>
<xs:documentation>List of credit accounts created for the application if any </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="CreditAccountDetails" type="ccsaccdet:CreditAccountDetailsListType">
<xs:annotation>
<xs:documentation>Credit account details in case requested </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="CardDetailsList" type="svcns:CardDetailsListType">
<xs:annotation>
<xs:documentation>Details of the cards linked to this application in case the GetCardDetails is set to true in the AdditionalData of the request. Multiple cards might be returned including the ones that replaced the first created card for the application </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="BranchDetails" type="branchtype:BranchType">
<xs:annotation>
<xs:documentation>Details of the branch the application is linked to. Only returned in case the GetBranchDetails is set to true in the AdditionalData of the request </xs:documentation>
</xs:annotation>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="AccountDetailsListType">
<xs:sequence>
<xs:element maxOccurs="unbounded" name="SingleAccountDetails" type="svcns:SingleAccountDetailsType">
<xs:annotation>
<xs:documentation>Single account created by the application approval if any </xs:documentation>
</xs:annotation>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="SingleAccountDetailsType">
<xs:sequence>
<xs:element name="AccountDetails" type="accdet:AccountDetailsType">
<xs:annotation>
<xs:documentation>Single account created by the application approval if any </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="CreditAccountDetails" type="ccsaccdet:CreditAccountDetailsType">
<xs:annotation>
<xs:documentation>Credit account details in case requested </xs:documentation>
</xs:annotation>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="CardDetailsListType">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="CardDetails" type="crddet:CardDetailsType">
<xs:annotation>
<xs:documentation>Details of a single card created </xs:documentation>
</xs:annotation>
</xs:element>
</xs:sequence>
</xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:currId="http://ws.core.cortex.com/domain/id/currId" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://ws.core.cortex.com/domain/id/currId">
<xs:complexType name="CurrencyListType">
<xs:sequence>
<xs:element maxOccurs="unbounded" name="Currency" type="currId:CurrencyType"/>
</xs:sequence>
</xs:complexType>
<xs:element name="Currency" type="currId:CurrencyType"/>
<xs:complexType name="CurrencyType">
<xs:annotation>
<xs:documentation> Identifier for a currency. Can be either the ISO numeric code or ISO Alpha Code </xs:documentation>
</xs:annotation>
<xs:sequence>
<xs:element minOccurs="0" name="CurrCode">
<xs:annotation>
<xs:documentation> Numeric ISO code identifying the currency </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="3"/>
<xs:maxLength value="3"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="AlphaCode">
<xs:annotation>
<xs:documentation> ISO Alpha Code identifying the currency </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="3"/>
<xs:maxLength value="3"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
</xs:sequence>
</xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ctxtypes="http://ws.core.cortex.com/domain/types" xmlns:currId="http://ws.core.cortex.com/domain/id/currId" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://ws.core.cortex.com/domain/types">
<xs:import namespace="http://ws.core.cortex.com/domain/id/currId"/>
<xs:simpleType name="CortexDate">
<xs:annotation>
<xs:documentation> Date type used for any date field used in the webservices. The format is yyyy-MM-dd </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:minLength value="10"/>
<xs:maxLength value="10"/>
<xs:pattern value="[1-2][0-9][0-9][0-9]-[0-1][0-9]-[0-3][0-9]"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="CortexTime">
<xs:annotation>
<xs:documentation>Time type used for any time field in the webservices. The format is HHmmss where HH is the current hour in 24 hours format, MM are the minutes and SS are the seconds. Left Padded with 0 up to six characters </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:minLength value="6"/>
<xs:maxLength value="6"/>
<xs:pattern value="[0-2][0-9][0-5][0-9][0-5][0-9]"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="Stan">
<xs:annotation>
<xs:documentation>System Audit Trace Number.</xs:documentation>
</xs:annotation>
<xs:restriction base="xs:long">
<xs:maxInclusive value="999999"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="Rrn">
<xs:annotation>
<xs:documentation>Retrieval Reference Number</xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="12"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="ActionCode">
<xs:annotation>
<xs:documentation>Action code identifying the result of a transaction. </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:enumeration value="0">
<xs:annotation>
<xs:documentation>Approved</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="1">
<xs:annotation>
<xs:documentation>Declined - No Pick Up</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="2">
<xs:annotation>
<xs:documentation>Decline - Pick Up</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="9">
<xs:annotation>
<xs:documentation>System Error</xs:documentation>
</xs:annotation>
</xs:enumeration>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="ResponseCode">
<xs:annotation>
<xs:documentation>Response Code providing additional details about the response. To get the list of supported values, use the GetNumericDescription with the below tag: - r0: to get the list of supported values for action code 0 - r1: to get the list of supported values for action code 1 - r2: to get the list of supported values for action code 2 - r9: to get the list of supported values for action code 9 </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:maxLength value="2"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="ApprovalCode">
<xs:annotation>
<xs:documentation>Approval code also known as authorization code generated for approved transactions </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="9"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="RejectionReason">
<xs:annotation>
<xs:documentation>Rejection reason of a transaction (detailed). The list of supported values can be retrieved using the GetNumericDescription service with description type as 'rj' </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:short"/>
</xs:simpleType>
<xs:simpleType name="CardExpiryDate">
<xs:annotation>
<xs:documentation>Card Expiry Date. Format is configured for all services </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="10"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="YesNoFlag">
<xs:annotation>
<xs:documentation> Flag indicating if a specific option is enabled or disabled </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:enumeration value="Y">
<xs:annotation>
<xs:documentation>Flag Enabled</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="N">
<xs:annotation>
<xs:documentation>Flag Disabled</xs:documentation>
</xs:annotation>
</xs:enumeration>
</xs:restriction>
</xs:simpleType>
<xs:complexType name="AdditionalFieldsType">
<xs:annotation>
<xs:documentation>List additional fields requested for the application </xs:documentation>
</xs:annotation>
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="AdditionalField" type="ctxtypes:AdditionalFieldType">
<xs:annotation>
<xs:documentation>Additional fields to be used in the request instead of adding on each time new field in the request </xs:documentation>
</xs:annotation>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="AdditionalFieldType">
<xs:all>
<xs:element name="Code">
<xs:annotation>
<xs:documentation>Code of the additional field</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="Value">
<xs:annotation>
<xs:documentation>Value to be set for the field. In case not returned or empty, it means the field value is not set </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string"/>
</xs:simpleType>
</xs:element>
</xs:all>
</xs:complexType>
<xs:simpleType name="CortexTimeStamp">
<xs:annotation>
<xs:documentation> Timestamp type used for any timestamp/date time field in the webservices. The format is yyyy-MM-dd-HH:mm:ss.SSS </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:minLength value="23"/>
<xs:maxLength value="23"/>
<xs:pattern value="[1-2][0-9][0-9][0-9]-[0-1][0-9]-[0-3][0-9]-[0-2][0-9]:[0-5][0-9]:[0-5][0-9].[0-9][0-9][0-9]"/>
</xs:restriction>
</xs:simpleType>
<xs:complexType name="Money">
<xs:annotation>
<xs:documentation> Any amounts used in the webservices use the money type which is the combination of the amount and currency. To get the list of supported ISO currency codes, use the GetCurrencyList service </xs:documentation>
</xs:annotation>
<xs:all>
<xs:element name="Amount">
<xs:annotation>
<xs:documentation> Amount for the money object </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element ref="currId:Currency">
<xs:annotation>
<xs:documentation> Currency of the amount </xs:documentation>
</xs:annotation>
</xs:element>
</xs:all>
</xs:complexType>
<xs:complexType name="MoneyOptionalAmount">
<xs:annotation>
<xs:documentation> Same as money but with the amount as optional. Used in cases where the currency is required but the amount is optional </xs:documentation>
</xs:annotation>
<xs:all>
<xs:element minOccurs="0" name="Amount">
<xs:annotation>
<xs:documentation> Amount for the money object </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element ref="currId:Currency">
<xs:annotation>
<xs:documentation> Currency of the amount </xs:documentation>
</xs:annotation>
</xs:element>
</xs:all>
</xs:complexType>
<xs:simpleType name="Amount">
<xs:annotation>
<xs:documentation>Amount field</xs:documentation>
</xs:annotation>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
<xs:complexType name="CtxLocaleDescrList">
<xs:annotation>
<xs:documentation> List of Locale descriptions defined cortex for a specific element </xs:documentation>
</xs:annotation>
<xs:sequence>
<xs:element maxOccurs="unbounded" name="CtxLocaleDescr" type="ctxtypes:CtxLocaleDescrType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="CtxLocaleDescrType">
<xs:annotation>
<xs:documentation> Locale description having the defined cortex locale, description and short description </xs:documentation>
</xs:annotation>
<xs:all>
<xs:element name="Locale">
<xs:annotation>
<xs:documentation> Local of the description </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="2"/>
<xs:maxLength value="20"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="ShortDescription">
<xs:annotation>
<xs:documentation> Short description of the element </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="20"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="Description">
<xs:annotation>
<xs:documentation> Full description of the element </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="128"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
</xs:all>
</xs:complexType>
<xs:complexType name="DescriptionList">
<xs:annotation>
<xs:documentation> List of all description values available for a specific entity </xs:documentation>
</xs:annotation>
<xs:sequence>
<xs:element maxOccurs="unbounded" name="Description" type="ctxtypes:DescriptionType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="DescriptionType">
<xs:annotation>
<xs:documentation> Description in a specific language </xs:documentation>
</xs:annotation>
<xs:all>
<xs:element name="Language">
<xs:annotation>
<xs:documentation> Language of the description </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="2"/>
<xs:maxLength value="2"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="Description">
<xs:annotation>
<xs:documentation> Description in the specified language </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="160"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
</xs:all>
</xs:complexType>
<xs:complexType name="PageSetupType">
<xs:annotation>
<xs:documentation> Page setup required (number of records per page and the page number required) </xs:documentation>
</xs:annotation>
<xs:all>
<xs:element name="PageSize">
<xs:annotation>
<xs:documentation> Number of results supported in a single page </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:int"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="PageNumber">
<xs:annotation>
<xs:documentation> The requested page number starting with 1 for the first page. If not specified, it will be defaulted to 1 </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:int"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ReturnCount">
<xs:annotation>
<xs:documentation> Specifies if the count and page details are required in the response. If set to true, the PagingDetails tag will be returned in the response holding the total number of results, current number of results in the requested page, current page number and total page number. If not specified, defaults to true. This tag is introduced to enhance performance and response time in case the total count is not really required </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:boolean"/>
</xs:simpleType>
</xs:element>
</xs:all>
</xs:complexType>
<xs:complexType name="PagingDetailsType">
<xs:annotation>
<xs:documentation> Details of the paging returned in the response </xs:documentation>
</xs:annotation>
<xs:all>
<xs:element name="PageSize">
<xs:annotation>
<xs:documentation> Number of results supported in a single page. Echoed back from the request </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:int"/>
</xs:simpleType>
</xs:element>
<xs:element name="TotalNumberOfResults">
<xs:annotation>
<xs:documentation> Total number of results for the request </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:int"/>
</xs:simpleType>
</xs:element>
<xs:element name="CurrentNumberOfResults">
<xs:annotation>
<xs:documentation> Current of number of results returned in the response </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:int"/>
</xs:simpleType>
</xs:element>
<xs:element name="TotalNumberOfPages">
<xs:annotation>
<xs:documentation> Total number of pages for the all results satisfying the critieria of the request </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:int"/>
</xs:simpleType>
</xs:element>
<xs:element name="CurrentPageNumber">
<xs:annotation>
<xs:documentation> Current page number for the results </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:int"/>
</xs:simpleType>
</xs:element>
</xs:all>
</xs:complexType>
<xs:complexType name="TransactionTypeListType">
<xs:annotation>
<xs:documentation> A list of services (transaction types) defined and used in Cortex </xs:documentation>
</xs:annotation>
<xs:sequence>
<xs:element maxOccurs="unbounded" name="TransactionType" type="ctxtypes:TransactionTypeType">
<xs:annotation>
<xs:documentation> Start tag for the list of individual denied transaction types </xs:documentation>
</xs:annotation>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:simpleType name="BatchClassType">
<xs:annotation>
<xs:documentation>Value indicating if a card batch is instant or bulk... </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:short">
<xs:enumeration value="1">
<xs:annotation>
<xs:documentation>Bulk Issuance</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="3">
<xs:annotation>
<xs:documentation>Instant Issuance</xs:documentation>
</xs:annotation>
</xs:enumeration>
</xs:restriction>
</xs:simpleType>
<xs:complexType name="TransactionTypeType">
<xs:annotation>
<xs:documentation> A single transaction type </xs:documentation>
</xs:annotation>
<xs:all>
<xs:element name="TransactionCode" type="ctxtypes:TransactionCodeType"/>
</xs:all>
</xs:complexType>
<xs:simpleType name="TransactionCodeType">
<xs:annotation>
<xs:documentation> Code identifying the transaction type. To get the list of supported transaction types with their description, the GetNumericDescription service can be used with description type as tx </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:short"/>
</xs:simpleType>
<xs:simpleType name="AccountDerivationMethod">
<xs:annotation>
<xs:documentation>Used for requests where the account is not specified but the card is and the processing requires an account to be selected. It defines how the account will be selected based on the card specified </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:short">
<xs:enumeration value="1">
<xs:annotation>
<xs:documentation>Use the default account card</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="2">
<xs:annotation>
<xs:documentation>Use the account linked to the card with the request currency and if no match found, reject the request </xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="3">
<xs:annotation>
<xs:documentation>Use the account linked to the card with the request currency and if no match found, use the default account </xs:documentation>
</xs:annotation>
</xs:enumeration>
</xs:restriction>
</xs:simpleType>
<xs:complexType name="AmountRangeType">
<xs:all>
<xs:annotation>
<xs:documentation>Range of amount (low/high) mainly used for inquiry services. Both amount from and to can be specified or only one of them. </xs:documentation>
</xs:annotation>
<xs:element minOccurs="0" name="AmountFrom">
<xs:annotation>
<xs:documentation>Lower amount value for the range </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="AmountTo">
<xs:annotation>
<xs:documentation>Higher amount value for the range </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
</xs:all>
</xs:complexType>
<xs:simpleType name="CreditTransactionAction">
<xs:annotation>
<xs:documentation>Action for a new credit transaction. Defaulted to C - Create only if not specified </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:enumeration value="C">
<xs:annotation>
<xs:documentation>Create only - do not post. Posting will be done at EOD </xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="P">
<xs:annotation>
<xs:documentation>Create and post. The credit balance will be updated but the authorization system will not be notified. The authorization balance will not be updated. In case the End of Day processing is running, the posting will be skipped </xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="U">
<xs:annotation>
<xs:documentation>Create, post and upload. Both the credit account and authorization balances will be updated. In case the End of Day processing is running, the posting will be skipped </xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="V">
<xs:annotation>
<xs:documentation>Validate. This action does the checks on the account, risk and returns any fee that might be applicable on the request </xs:documentation>
</xs:annotation>
</xs:enumeration>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="InstitutionCodeType">
<xs:annotation>
<xs:documentation>Unique code identifying an institution in cortex </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="4"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="AccountNumberType">
<xs:annotation>
<xs:documentation>Account number in cortex</xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="28"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="ApprovalCodeType">
<xs:annotation>
<xs:documentation>Approval code type in cortex</xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="9"/>
</xs:restriction>
</xs:simpleType>
<xs:complexType name="IIDListType">
<xs:sequence>
<xs:element maxOccurs="unbounded" name="IID" type="ctxtypes:IIDType"/>
</xs:sequence>
</xs:complexType>
<xs:simpleType name="IIDType">
<xs:annotation>
<xs:documentation>ID identifying an issuer acquirer (can be a bin, ICA...) </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="11"/>
</xs:restriction>
</xs:simpleType>
<xs:complexType name="MccListType">
<xs:sequence>
<xs:element maxOccurs="unbounded" name="Mcc" type="ctxtypes:MccType"/>
</xs:sequence>
</xs:complexType>
<xs:simpleType name="MccType">
<xs:annotation>
<xs:documentation>Merchant category code of the acquirer that of the merchant. To get the list of supported values, use the GetNumericDescription service with description type 'ab' </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:short"/>
</xs:simpleType>
<xs:simpleType name="TransactionResponseSourceType">
<xs:annotation>
<xs:documentation>Code identifying the source of the authorization (approved the authorization). i.e. I - cortex genauth, N - network. To get the list of supported values, use the GetStringDescription service with description type as 'rspsrc' </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="1"/>
</xs:restriction>
</xs:simpleType>
<xs:complexType name="MessageClassListType">
<xs:sequence>
<xs:element maxOccurs="unbounded" name="MessageClass" type="ctxtypes:MessageClassType"/>
</xs:sequence>
</xs:complexType>
<xs:simpleType name="MessageClassType">
<xs:annotation>
<xs:documentation>Identifies if the transaction is an authorization transaction, financial, reversal.. </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:enumeration value="1">
<xs:annotation>
<xs:documentation>Authorization Transaction</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="2">
<xs:annotation>
<xs:documentation>Financial Transaction</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="3">
<xs:annotation>
<xs:documentation>File Update</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="4">
<xs:annotation>
<xs:documentation>Reversal</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="5">
<xs:annotation>
<xs:documentation>Reconciliation</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="6">
<xs:annotation>
<xs:documentation>Administration</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="7">
<xs:annotation>
<xs:documentation>Fee</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="8">
<xs:annotation>
<xs:documentation>Network Management</xs:documentation>
</xs:annotation>
</xs:enumeration>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="SubTransactionCodeType">
<xs:annotation>
<xs:documentation>Sub-transaction codes are defined per top level transaction code. Currently following are defined: - Sub-transaction codes for txn code 00: 00 – Default logic (same as empty value) 01 – Transit, Debt Recovery 02 – Incremental Authorization 03 – Transit, Unknown 04 – Transit, Prefunded 05 – Transit, Real-Time Authorized 06 – Transit, Post-Authorized Aggregated 07 – Transit, Authorized Agg Split Clear 08 – Transit, Other 09 – Transit, Post-Authorized Agg Maestro PayPass 10 – Network Installment - Sub-transaction codes for txn code 10: 00 – Default logic (same as empty value) 01 – VMT Account Funding txn - Sub-transaction codes for txn code 26: 00 – Default logic (same as empty value) 01 – VMT OCT/Fast Funds - Sub-transaction codes for txn code 93: 00 – Default logic (same as empty value) 01 – Purchase Account Status Inquiry 02 – Payment Account Status Inquiry 03 – MoneySend Payment Account Status Inquiry - Sub-transaction codes for txn code 99: 00 – Eligibility 01 – Activation request 02 – Activation code notification - Sub-transaction codes for txn code 109: 01 – ATC Update </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="2"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="TransactionReferenceNumberType">
<xs:annotation>
<xs:documentation>Transaction reference number as defined by the payment network e.g. VISA 62.2 or MasterCard 63. For MasterCard Incremental Authorizations, this field is populated from 48.63 This value is the same for all transactions in transaction life cycle i.e. authorization, incremental authorization, advice, chargeback and representment. </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="CardAcceptorLocationType">
<xs:annotation>
<xs:documentation>Card acceptor location of the transaction identifying the name of the merchant and the location where a transaction was executed. </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="64"/>
</xs:restriction>
</xs:simpleType>
<xs:complexType name="CardAcceptorIdListType">
<xs:sequence>
<xs:element maxOccurs="unbounded" name="CardAcceptorId" type="ctxtypes:CardAcceptorIdType"/>
</xs:sequence>
</xs:complexType>
<xs:simpleType name="CardAcceptorIdType">
<xs:annotation>
<xs:documentation>Card acceptor ID. Uniquely identifies card acceptor within acquirer. Required if card acceptor/terminal not uniquely identified by termcode. </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="15"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="CardAcceptorNameType">
<xs:annotation>
<xs:documentation>Card acceptor name or ATM location; first part of the card acceptor location field (DE#043) MasterCard uses only 22 characters </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="40"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="CardAcceptorNameCityType">
<xs:annotation>
<xs:documentation>City of card acceptor; second part of the card acceptor location field (DE#043) </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="40"/>
</xs:restriction>
</xs:simpleType>
<xs:complexType name="DateRangeType">
<xs:all>
<xs:annotation>
<xs:documentation>Range of dates mainly used for inquiry services. Both dates from and to can be specified or only one of them. (depending on the service) </xs:documentation>
</xs:annotation>
<xs:element minOccurs="0" name="DateFrom" type="ctxtypes:CortexDate">
<xs:annotation>
<xs:documentation>From date value for the range </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="DateTo" type="ctxtypes:CortexDate">
<xs:annotation>
<xs:documentation>to date value for the range </xs:documentation>
</xs:annotation>
</xs:element>
</xs:all>
</xs:complexType>
<xs:complexType name="TimeRangeType">
<xs:all>
<xs:annotation>
<xs:documentation>Range of times mainly used for inquiry services. Both time from and to can be specified or only one of them (depending on the service) </xs:documentation>
</xs:annotation>
<xs:element minOccurs="0" name="TimeFrom" type="ctxtypes:CortexTime">
<xs:annotation>
<xs:documentation>From Time value for the range</xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="TimeTo" type="ctxtypes:CortexTime">
<xs:annotation>
<xs:documentation>To Time value for the range</xs:documentation>
</xs:annotation>
</xs:element>
</xs:all>
</xs:complexType>
<xs:complexType name="ShortListType">
<xs:sequence>
<xs:element maxOccurs="unbounded" name="Value">
<xs:annotation>
<xs:documentation>Single short value</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:short"/>
</xs:simpleType>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="StringListType">
<xs:sequence>
<xs:element maxOccurs="unbounded" name="Value">
<xs:annotation>
<xs:documentation>Single short value</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string"/>
</xs:simpleType>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:simpleType name="SearchLevelType">
<xs:restriction base="xs:short">
<xs:enumeration value="0">
<xs:annotation>
<xs:documentation>Search for entries on the account specified only or the card specified only </xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="1">
<xs:annotation>
<xs:documentation>Search for entries on the default account linked to the card specified not only on the specified card. Applicable only when the account is not specified </xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="2">
<xs:annotation>
<xs:documentation>Search for entries on all accounts linked to the card specified. Applicable only when the account is not specified </xs:documentation>
</xs:annotation>
</xs:enumeration>
</xs:restriction>
</xs:simpleType>
<xs:complexType name="ItemTypeListType">
<xs:sequence>
<xs:element maxOccurs="unbounded" name="ItemType" type="ctxtypes:ItemTypeType"/>
</xs:sequence>
</xs:complexType>
<xs:simpleType name="ItemTypeType">
<xs:annotation>
<xs:documentation>Specifies the type of the item/transaction. A predefined list of values exists and custom items might be created. The pre-defined list of supported values is the following: 1= Transaction 2= Card-related fee 3= Card-related commission 4= Interest 5= Payment 6= Late payment penalty 7= Over limit penalty 8= Credit adjustment 9= Debit adjustment 10= Account-related fee 11 = Payment plan credit adjustment. Used to mark the movement of a item to a payment plan when the plan is initialized 12 = Payment plan debit adjustment. The corresponding debit to the item type ‘11’ 13 = Due installment (Interest) 14 = Due installment (principle) 15 = Due installment credit adjustment. This is the matching credit to item type ‘14’. 16 = Credit for a cancelled payment plan. This is a credit to the not due installment balance to mark the cancellation of a payment plan. 17 = Debit for a cancelled payment plan. This is a debit to a standard balance component of the account to mark the cancellation of a payment plan. This is the matching debit to item type ‘16’ 20=Targeted payment To get the full list of item types along with their description, please use the GetNumericDescription service with the description type as 'ccsity' </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:short"/>
</xs:simpleType>
<xs:simpleType name="CreditDebitType">
<xs:annotation>
<xs:documentation>This flag indicates if the transaction is a credit or debit one. In some cases where the transaction is suspended or not yet posted, the value will be U - Undefined </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:enumeration value="C">
<xs:annotation>
<xs:documentation>Credit</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="D">
<xs:annotation>
<xs:documentation>Debit</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="U">
<xs:annotation>
<xs:documentation>Undefined</xs:documentation>
</xs:annotation>
</xs:enumeration>
</xs:restriction>
</xs:simpleType>
<xs:complexType name="ItemCategoryListType">
<xs:sequence>
<xs:element maxOccurs="unbounded" name="ItemCategory" type="ctxtypes:ItemCategoryType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="ItemCategoryType">
<xs:annotation>
<xs:documentation>Used to categorize the transaction. The values are customer specific </xs:documentation>
</xs:annotation>
<xs:sequence>
<xs:element name="CategoryCode">
<xs:annotation>
<xs:documentation>Code identifying the category</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="255"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="LocaleDescriptionsList" type="ctxtypes:CtxLocaleDescrList">
<xs:annotation>
<xs:documentation>Locale descriptions in case configured for the item category </xs:documentation>
</xs:annotation>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:simpleType name="StatusType">
<xs:annotation>
<xs:documentation>Status type used for either card/account/application status </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:minLength value="2"/>
<xs:maxLength value="2"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="TypeCodeType">
<xs:annotation>
<xs:documentation>Type used for either account/application type </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:minLength value="2"/>
<xs:maxLength value="2"/>
</xs:restriction>
</xs:simpleType>
<xs:complexType name="TxnSearchOrderType">
<xs:sequence>
<xs:element minOccurs="0" name="DateLocalAsc">
<xs:annotation>
<xs:documentation>Specifies that the transactions should be ordered by local date ascending (oldest to newest). Should be skipped in case date local desc is specified </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:boolean"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="DateLocalDesc">
<xs:annotation>
<xs:documentation>Specifies that the transactions should be ordered by local date descending (newest to oldest). Should be skipped in case date local asc is specified </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:boolean"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="TimeLocalAsc">
<xs:annotation>
<xs:documentation>Specifies that the transactions should be ordered by local time ascending (oldest to newest). Should be skipped in case time local desc is specified </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:boolean"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="TimeLocalDesc">
<xs:annotation>
<xs:documentation>Specifies that the transactions should be ordered by local time descending (newest to oldest). Should be skipped in case time local asc is specified </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:boolean"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="PostingDateAsc">
<xs:annotation>
<xs:documentation>Specifies that the transactions should be ordered by posting date ascending (oldest to newest). Should be skipped in case posting date desc is specified </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:boolean"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="PostingDateDesc">
<xs:annotation>
<xs:documentation>Specifies that the transactions should be ordered by the posting date descending (newest to oldest). Should be skipped in case posting date asc is specified </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:boolean"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="TransactionAmountAsc">
<xs:annotation>
<xs:documentation>Specifies that the transactions should be ordered by the transaction amount ascending (smallest to largest). Should be skipped in case transaction amount desc is specified </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:boolean"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="TransactionAmountDesc">
<xs:annotation>
<xs:documentation>Specifies that the transactions should be ordered by the transaction amount descending (largest to smallest). Should be skipped in case transaction amount asc is specified </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:boolean"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="BillingAmountAsc">
<xs:annotation>
<xs:documentation>Specifies that the transactions should be ordered by the billing amount ascending (smallest to largest). Should be skipped in case billing amount desc is specified </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:boolean"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="BillingAmountDesc">
<xs:annotation>
<xs:documentation>Specifies that the transactions should be ordered by the billing amount descending (largest to smallest). Should be skipped in case billing amount asc is specified </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:boolean"/>
</xs:simpleType>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:simpleType name="PinTypeType">
<xs:annotation>
<xs:documentation> Specifies the type of the pin. As multiple pins are supported by Cortex, this will identify the usage of the pin </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:short">
<xs:enumeration value="1">
<xs:annotation>
<xs:documentation>Default PIN (used at ATM and POS) </xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="2">
<xs:annotation>
<xs:documentation>Secondary PIN (can be used as Mobile Pin) </xs:documentation>
</xs:annotation>
</xs:enumeration>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="CreditItemApplicationRuleType">
<xs:annotation>
<xs:documentation>Specifies if the transaction was applied on the due balance or not due balance of the credit account </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:short">
<xs:enumeration value="0">
<xs:annotation>
<xs:documentation>All - N/A. Applied on both due and not due </xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="1">
<xs:annotation>
<xs:documentation>Not Due Side</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="2">
<xs:annotation>
<xs:documentation>Due Side</xs:documentation>
</xs:annotation>
</xs:enumeration>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="PanType">
<xs:annotation>
<xs:documentation>Clear or encrypted card number/PAN </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:minLength value="10"/>
<xs:maxLength value="512"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="VPanType">
<xs:annotation>
<xs:documentation>Virtual PAN </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="BranchCodeType">
<xs:annotation>
<xs:documentation>Code identifying a branch under an institution </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="8"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="CardProductCodeType">
<xs:annotation>
<xs:documentation>Code identifying a product</xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="4"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="PaymentPlanFeeBasisType">
<xs:annotation>
<xs:documentation>Indicates the basis of the calculation of the fees for a payment plan </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:enumeration value="D">
<xs:annotation>
<xs:documentation>Daily</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="M">
<xs:annotation>
<xs:documentation>Monthly (30 days)</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="Y">
<xs:annotation>
<xs:documentation>Annual (365 days)</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="y">
<xs:annotation>
<xs:documentation>Annual (360 days)</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="A">
<xs:annotation>
<xs:documentation>True Annual (366 for leap years / 365 for none leap years) </xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="I">
<xs:annotation>
<xs:documentation>Applicable on Each Installment </xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="F">
<xs:annotation>
<xs:documentation>Percentage on full amount</xs:documentation>
</xs:annotation>
</xs:enumeration>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="PaymentPlanInterestCalculationMethodType">
<xs:annotation>
<xs:documentation>Specifies how the rate amount is applied and how the fee is calculated on a payment plan </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:short">
<xs:enumeration value="1">
<xs:annotation>
<xs:documentation>Debit on every installment, percentage applicable on full plan amount </xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="2">
<xs:annotation>
<xs:documentation>Debit on every installment, percentage applicable on outstanding plan amount </xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="3">
<xs:annotation>
<xs:documentation>Debit on plan creation, percentage applicable on full plan amount </xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="4">
<xs:annotation>
<xs:documentation>Debit on plan creation, percentage applicable on outstanding plan amount </xs:documentation>
</xs:annotation>
</xs:enumeration>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="PaymentPlanFixedAmountCalculationMethodType">
<xs:annotation>
<xs:documentation>Specifies how the fixed amount fee is applied </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:short">
<xs:enumeration value="1">
<xs:annotation>
<xs:documentation>Debit on every installment </xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="2">
<xs:annotation>
<xs:documentation>Debit on plan creation </xs:documentation>
</xs:annotation>
</xs:enumeration>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="PaymentPlanRemainingFeeActionType">
<xs:annotation>
<xs:documentation>Specifies what will happen with the remaining fee when the plan is prematurely canceled or closed </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:short">
<xs:enumeration value="1">
<xs:annotation>
<xs:documentation>Remaining fee will be applied (not reversed in case already applied) </xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="2">
<xs:annotation>
<xs:documentation>Remaining fee will not be applied (reversed in case already applied) </xs:documentation>
</xs:annotation>
</xs:enumeration>
</xs:restriction>
</xs:simpleType>
<xs:complexType name="PaymentPlanFeeRateDetailsType">
<xs:annotation>
<xs:documentation>Details of the rate based fee applicable on the payment plan </xs:documentation>
</xs:annotation>
<xs:sequence>
<xs:element name="RateBasis" type="ctxtypes:PaymentPlanFeeBasisType">
<xs:annotation>
<xs:documentation>Basis of interest rate </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="InterestRateCalculationMethod" type="ctxtypes:PaymentPlanInterestCalculationMethodType">
<xs:annotation>
<xs:documentation>Specifies how the payment plan interest rate is calculated </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="InterestRate">
<xs:annotation>
<xs:documentation>Interest rate % on the amount of the payment plan. It determines the interest added to the payment plan amount based on the rate divisor and the interest rate calculation method. For example if the amount of the transaction is 1000 and the rate is 5% with a rate divisor as I (Every Installment) and the rate calculation method is 2, the interest amount will be 50 each month and the total amount of the plan will become 10000 + (50 x number of installments). </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element name="InterestRateCancellationMethod" type="ctxtypes:PaymentPlanRemainingFeeActionType">
<xs:annotation>
<xs:documentation>Specifies what will be done with the remaining interest if the plan is canceled </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="InterestRateFullPaymentMethod" type="ctxtypes:PaymentPlanRemainingFeeActionType">
<xs:annotation>
<xs:documentation>Specifies what will be done with the remaining interest if the plan is fully paid before the expected end date </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="TotalFeeRateAmount">
<xs:annotation>
<xs:documentation>Total fee rate amount. If no other details are set, it means the fee is taken up-front and not on each installment </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="SingleInstallmentRateFeeAmount">
<xs:annotation>
<xs:documentation>Fee rate amount applicable on every installment. Only available in case the calculation method specifies rate on full plan amount </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="LastInstallmentRateFeeAmount">
<xs:annotation>
<xs:documentation>Fee rate amount applicable on the last installment. Only available in case the calculation method specifies rate on full plan amount </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="InstallmentsRateFeeDetails" type="ctxtypes:InstallmentsRateFeeDetailsType">
<xs:annotation>
<xs:documentation>Holds the rate applicable on each installment which will be different. Only available in case the calculation method specifies rate on outstanding plan amount </xs:documentation>
</xs:annotation>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="InstallmentsRateFeeDetailsType">
<xs:annotation>
<xs:documentation>Details of the rate fee applicable on each installment </xs:documentation>
</xs:annotation>
<xs:sequence>
<xs:element maxOccurs="unbounded" name="InstallmentsRateFee" type="ctxtypes:InstallmentsRateFeeType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="InstallmentsRateFeeType">
<xs:annotation>
<xs:documentation>Details of the rate applicable on an individual installment </xs:documentation>
</xs:annotation>
<xs:sequence>
<xs:element name="InstallmentNumber">
<xs:annotation>
<xs:documentation>Installment number this fee applies on </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:short"/>
</xs:simpleType>
</xs:element>
<xs:element name="ExpectedDate" type="ctxtypes:CortexDate">
<xs:annotation>
<xs:documentation>Date of the installment </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="FeeRateAmount">
<xs:annotation>
<xs:documentation>Applicable rate amount for this installment </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element name="OutstandingBalance">
<xs:annotation>
<xs:documentation>Outstanding balance the rate applied on to get the fee rate amount </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="PaymentPlanFixedFeeDetailsType">
<xs:annotation>
<xs:documentation>Fixed fee amount applicable on a payment plan. </xs:documentation>
</xs:annotation>
<xs:sequence>
<xs:element name="FixedAmountBasis" type="ctxtypes:PaymentPlanFeeBasisType">
<xs:annotation>
<xs:documentation>Basis of fixed amount fee </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="FixedAmountCalculationMethod" type="ctxtypes:PaymentPlanFixedAmountCalculationMethodType">
<xs:annotation>
<xs:documentation>Specifies how the payment plan fixed amount fee is applied </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="FixedAmount">
<xs:annotation>
<xs:documentation>Configured fixed amount. The calculation depends on the fixed amount basis. i.e. if the basis is I (on every installment) and the fixed amount is 10, a fixed fee of 10 is applied on every installment </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element name="FixedAmountFeeCancellationMethod" type="ctxtypes:PaymentPlanRemainingFeeActionType">
<xs:annotation>
<xs:documentation>Specifies what will be done with the remaining fee if the plan is canceled </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="FixedAmountFeeFullPaymentMethod" type="ctxtypes:PaymentPlanRemainingFeeActionType">
<xs:annotation>
<xs:documentation>Specifies what will be done with the remaining fee if the plan is fully paid before the expected end date </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="TotalFixedFeeAmount">
<xs:annotation>
<xs:documentation>Total fixed amount fee. If no other details are set, it means the fee is taken up-front and not on each installment </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="SingleInstallmentFixedFeeAmount">
<xs:annotation>
<xs:documentation>Fixed fee amount applicable on every installment. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="LastInstallmentFixedFeeAmount">
<xs:annotation>
<xs:documentation>Fixed fee amount applicable on the last installment. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="CardAuthorizationParametersType">
<xs:annotation>
<xs:documentation>Flags on card level for card specific rules and rejections. Each position will have a usage which is customer specific. Refer to the implementation team for customer specific usage </xs:documentation>
</xs:annotation>
<xs:sequence>
<xs:element maxOccurs="unbounded" name="CardAuthorizationParameter" type="ctxtypes:CardAuthorizationParameterType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="CardAuthorizationParameterType">
<xs:sequence>
<xs:element name="Position">
<xs:annotation>
<xs:documentation>Position of the card authorization parameters. Up to 32 positions are supported </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:short">
<xs:minInclusive value="1"/>
<xs:maxInclusive value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="Value">
<xs:annotation>
<xs:documentation>Value of the specified position </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="1"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:simpleType name="NewCcsItemExternalAccountActionType">
<xs:annotation>
<xs:documentation>Specifies the action to be done with the external account details for new CCS Item requests </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:enumeration value="L">
<xs:annotation>
<xs:documentation>Log only - the details will only be logged for reporting purposes </xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="V">
<xs:annotation>
<xs:documentation>Validate - in case specified, a validation will be done between the specified account number and the direct debit account number linked to the account. If different, the action will be rejected </xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="P">
<xs:annotation>
<xs:documentation>Post to external account immediately - an attempt to credit/debit an external account will be done on the spot regardless if end of day is running or not and if the item is posted in Cortex </xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="U">
<xs:annotation>
<xs:documentation>Post to external account immediately and update the blocked amount in cortex in case the item is not posted in Cortex - an attempt to credit/debit an external account will be done on the spot regardless if end of day is running or not and if the item is posted in Cortex or not. If the item is not posted in Cortex, the blocked amount will be increased (only allowed/applicable for debit items - credit items do not affect the blocked amount) </xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="A">
<xs:annotation>
<xs:documentation>Post to external account only when the item in Cortex is posted </xs:documentation>
</xs:annotation>
</xs:enumeration>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="ChargeProfileCodeType">
<xs:annotation>
<xs:documentation>Code identifying a charge profile in Cortex </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="4"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="CreditSchemeCodeType">
<xs:annotation>
<xs:documentation>Code identifying a credit scheme profile in Cortex </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="10"/>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="CycleBaseType">
<xs:annotation>
<xs:documentation>Identifies the cycle base used to calculate a cycle </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:short">
<xs:enumeration value="0">
<xs:annotation>
<xs:documentation>No Cycle - applies on every request </xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="1">
<xs:annotation>
<xs:documentation>Day - the cycle would be multiplier * days </xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="2">
<xs:annotation>
<xs:documentation>Week - the cycle would be multiplier * weeks </xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="3">
<xs:annotation>
<xs:documentation>Month - the cycle would be multiplier * month </xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="4">
<xs:annotation>
<xs:documentation>Year - the cycle would be multiplier * year </xs:documentation>
</xs:annotation>
</xs:enumeration>
</xs:restriction>
</xs:simpleType>
<xs:simpleType name="CycleStartType">
<xs:annotation>
<xs:documentation>Identifies how a cycle start is determined </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:short">
<xs:enumeration value="0">
<xs:annotation>
<xs:documentation>Next day of previous cycle. That is the cycle start will be previous cycle end + 1. in case this is the first cycle, the current date is used as cycle start </xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="1">
<xs:annotation>
<xs:documentation>First day of the cycle. For daily, it's the current date. For weekly, it will be monday. Monthly, the first day of the month. yearly the 1st of January </xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="2">
<xs:annotation>
<xs:documentation>Sliding - If the previous cycle is expired, the current date will be used as a start of cycle regardless of the previous cycle end date </xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="3">
<xs:annotation>
<xs:documentation>Fixed day and/or month. Only allowed for weekly, monthly and yearly based cycles. In this case, the cycle start should be set </xs:documentation>
</xs:annotation>
</xs:enumeration>
</xs:restriction>
</xs:simpleType>
<xs:complexType name="TransactionCategoryListType">
<xs:sequence>
<xs:element maxOccurs="unbounded" name="TransactionCategory" type="ctxtypes:TransactionCategory"/>
</xs:sequence>
</xs:complexType>
<xs:simpleType name="TransactionCategory">
<xs:annotation>
<xs:documentation>Specifies the Transaction category A transaction belongs to. A custom list of values exists Cash Advance Cash Withdrawal Credit Card Fund Transfer Credit Card Payment POS Purchase SADAD Payment SAWA Recharge </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ctxtypes="http://ws.core.cortex.com/domain/types" xmlns:hdrUsrdata="http://ws.core.cortex.com/domain/common/hdrusrdata" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://ws.core.cortex.com/domain/common/hdrusrdata">
<xs:element name="HeaderUserDataList" type="hdrUsrdata:HeaderUserDataListType"/>
<xs:complexType name="HeaderUserDataListType">
<xs:sequence>
<xs:element maxOccurs="unbounded" name="HeaderUserData" type="hdrUsrdata:HeaderUserDataType">
<xs:annotation>
<xs:documentation> Customer specific header user data </xs:documentation>
</xs:annotation>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="HeaderUserDataType">
<xs:sequence>
<xs:element name="Tag">
<xs:annotation>
<xs:documentation> Tag for the customer specific user data </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string"/>
</xs:simpleType>
</xs:element>
<xs:element name="Value">
<xs:annotation>
<xs:documentation> Value for the tag </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string"/>
</xs:simpleType>
</xs:element>
</xs:sequence>
</xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ctxtypes="http://ws.core.cortex.com/domain/types" xmlns:security="http://ws.core.cortex.com/domain/common/security" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://ws.core.cortex.com/domain/common/security">
<xs:element name="Security" type="security:SecurityType"/>
<xs:complexType name="SecurityType">
<xs:sequence>
<xs:element name="User">
<xs:annotation>
<xs:documentation> User name requesting the service. This will be validated and if not configured or not allowed for this service, the request will be rejected </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="3"/>
<xs:maxLength value="20"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="Password">
<xs:annotation>
<xs:documentation> Password of the user requesting the service. This will be validated and if incorrect, the request will be rejected </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="3"/>
<xs:maxLength value="20"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
</xs:sequence>
</xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ctxtypes="http://ws.core.cortex.com/domain/types" xmlns:hdrUsrData="http://ws.core.cortex.com/domain/common/hdrusrdata" xmlns:reqHdr="http://ws.core.cortex.com/domain/common/reqhdr" xmlns:security="http://ws.core.cortex.com/domain/common/security" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://ws.core.cortex.com/domain/common/reqhdr">
<xs:import namespace="http://ws.core.cortex.com/domain/types"/>
<xs:import namespace="http://ws.core.cortex.com/domain/common/hdrusrdata"/>
<xs:import namespace="http://ws.core.cortex.com/domain/common/security"/>
<xs:element name="RequestHeader" type="reqHdr:RequestHeaderType"/>
<xs:complexType name="RequestHeaderType">
<xs:sequence>
<xs:element name="Version">
<xs:annotation>
<xs:documentation> Specifies the version of the header used. Current supported values are 1.0.0. Echoed back in the response header </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="1.0.0"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="MsgUid">
<xs:simpleType>
<xs:annotation>
<xs:documentation> Unique message ID identifying a specific message. Echoed back in the response header </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:minLength value="36"/>
<xs:maxLength value="36"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="Source">
<xs:annotation>
<xs:documentation> Source of the request. Echoed back in the response header </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="2"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="ServiceId">
<xs:annotation>
<xs:documentation> Service Id of the service being called. Echoed back in the response header. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="2"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="ReqDateTime" type="ctxtypes:CortexTimeStamp">
<xs:annotation>
<xs:documentation> Request Date and Time echoed back in the response in the format yyyy-MM-dd-HH:mm:ss.SSS </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="Locale">
<xs:annotation>
<xs:documentation>Locale required for the localized response message. In case not specified, the localized response message will not be returned in the response. In case specified but invalid or no localized messages are setup for this locale message, the default English message will be returned in the localized response message </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" ref="security:Security">
<xs:annotation>
<xs:documentation>Security holding the user and password of the requester of the service. Only mandatory in case the security is enabled for the services </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" ref="hdrUsrData:HeaderUserDataList">
<xs:annotation>
<xs:documentation>Header user data for customer specific usage. This field will be echoed back as is in the response if present, mainly used for fields from the request that might be needed in the response for the customer's internal usage. No validation is done on these fields. In some rare cases, these can hold customer specific tags </xs:documentation>
</xs:annotation>
</xs:element>
</xs:sequence>
</xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ctxtypes="http://ws.core.cortex.com/domain/types" xmlns:hdrUsrData="http://ws.core.cortex.com/domain/common/hdrusrdata" xmlns:rspHdr="http://ws.core.cortex.com/domain/common/rsphdr" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://ws.core.cortex.com/domain/common/rsphdr">
<xs:import namespace="http://ws.core.cortex.com/domain/types"/>
<xs:import namespace="http://ws.core.cortex.com/domain/common/hdrusrdata"/>
<xs:element name="ResponseHeader" type="rspHdr:ResponseHeaderType"/>
<xs:complexType name="ResponseHeaderType">
<xs:sequence>
<xs:element name="Version">
<xs:annotation>
<xs:documentation> Specifies the version of the header used. Current supported values are 1.0.0. Echoed back from the request header </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="1.0.0"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="MsgUid">
<xs:simpleType>
<xs:annotation>
<xs:documentation> Unique message ID identifying a specific message. Echoed back from the request header </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:minLength value="36"/>
<xs:maxLength value="36"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="Source">
<xs:annotation>
<xs:documentation> Source of the request. Echoed back from the request header </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="2"/>
<xs:maxLength value="16"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="ServiceId">
<xs:annotation>
<xs:documentation> Service Id of the service called. Echoed back from the request header </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="2"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="ReqDateTime" type="ctxtypes:CortexTimeStamp">
<xs:annotation>
<xs:documentation> Request Date and Time echoed back from the request </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="RspDateTime" type="ctxtypes:CortexTimeStamp">
<xs:annotation>
<xs:documentation> Response Date and Time in the format yyyy-MM-dd-HH:mm:ss.SSS </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="ResponseCode">
<xs:annotation>
<xs:documentation> Response code of the request processing. This value is unique for each error. A response code of 000 indicates a successful operation. Any other response code indicates an error. The value 999 indicates an unknown system error </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="2"/>
<xs:maxLength value="6"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="ResponseType">
<xs:annotation>
<xs:documentation> Indicates the type of the response code. Supported values are - Validation Error: Returned when invalid elements are received in the request - Business Error: Indicates a business logic error (i.e. request operation on a card that does not exist) - System Error: Indicates a system error (i.e. Database Error) - Success: Indicates a successful request </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="7"/>
<xs:maxLength value="20"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="ProcessingTime">
<xs:annotation>
<xs:documentation> Time taken by the web-service to do the processing and reply in milli seconds </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="20"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="ResponseDescription">
<xs:annotation>
<xs:documentation> Description of the request result and the response code. Gives additional details about the result of the operation </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="516"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="LocalizedResponseDescription" type="rspHdr:LocalizedResponseDescriptionType">
<xs:annotation>
<xs:documentation>Only returned when a locale is specified in the request. </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="CustomerSpecificResponseDescriptionList" type="rspHdr:CustomerSpecificResponseDescriptionListType">
<xs:annotation>
<xs:documentation>List of customer specific response description in case configured </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" ref="hdrUsrData:HeaderUserDataList">
<xs:annotation>
<xs:documentation>Header user data for customer specific usage. This field will be echoed back as is in the response if present, mainly used for fields from the request that might be needed in the response for the customer's internal usage. No validation is done on these fields. In some rare cases, these can hold customer specific tags </xs:documentation>
</xs:annotation>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="LocalizedResponseDescriptionType">
<xs:sequence>
<xs:element name="Locale">
<xs:annotation>
<xs:documentation>Locale echoed back from the request regardless if it was valid or not </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string"/>
</xs:simpleType>
</xs:element>
<xs:element name="LocalizedDescription">
<xs:annotation>
<xs:documentation>Localized description of the response. In case the locale specified is invalid or the no localized messages are defined for the locale specified, this will hold the same value as the ResponseDescription </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="516"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="CustomerSpecificResponseDescriptionListType">
<xs:sequence>
<xs:element maxOccurs="unbounded" name="CustomerSpecificResponseDescription" type="rspHdr:CustomerSpecificResponseDescriptionType">
<xs:annotation>
<xs:documentation>Customer specific descriptions in case configured </xs:documentation>
</xs:annotation>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="CustomerSpecificResponseDescriptionType">
<xs:sequence>
<xs:element name="Locale">
<xs:annotation>
<xs:documentation>Locale for the message returned under this tag </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string"/>
</xs:simpleType>
</xs:element>
<xs:element name="ResponseDescription">
<xs:annotation>
<xs:documentation>Customer specific response description in the locale specified under this tag </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string"/>
</xs:simpleType>
</xs:element>
</xs:sequence>
</xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ctrydet="http://ws.core.cortex.com/domain/types/ctrydet" xmlns:ctxtypes="http://ws.core.cortex.com/domain/types" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://ws.core.cortex.com/domain/types/ctrydet">
<xs:import namespace="http://ws.core.cortex.com/domain/types"/>
<xs:complexType name="CountryListType">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="CountryDetails" type="ctrydet:CountryType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="CountryType">
<xs:sequence>
<xs:element name="IsoCode">
<xs:annotation>
<xs:documentation> Numeric country ISO Code </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="3"/>
<xs:maxLength value="3"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="Alpha3">
<xs:annotation>
<xs:documentation> Alpha3 ISO code of the country </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="3"/>
<xs:maxLength value="3"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="Alpha2">
<xs:annotation>
<xs:documentation> Alpha2 ISO code of the country </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="2"/>
<xs:maxLength value="2"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="DefaultCurrency">
<xs:annotation>
<xs:documentation> Default currency numeric ISO code used int eh country </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="3"/>
<xs:maxLength value="3"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="Description" type="ctxtypes:DescriptionList">
<xs:annotation>
<xs:documentation> Description of the country in the defined languages in cortex </xs:documentation>
</xs:annotation>
</xs:element>
</xs:sequence>
</xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ctrydet="http://ws.core.cortex.com/domain/types/ctrydet" xmlns:typns="http://ws.core.cortex.com/domain/types/addressdet" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://ws.core.cortex.com/domain/types/addressdet">
<xs:import namespace="http://ws.core.cortex.com/domain/types/ctrydet"/>
<xs:complexType name="AddressListType">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="Address" type="typns:AddressType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="AddressType">
<xs:annotation>
<xs:documentation> Address Entry for a card or customer in Cortex </xs:documentation>
</xs:annotation>
<xs:all>
<xs:element minOccurs="0" name="AddressLine1">
<xs:annotation>
<xs:documentation>Address Line 1</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="64">
<xs:annotation>
<xs:documentation>The maximum length is 64 when using the master address module. For the contact mechanism address, the maximum length is 40 </xs:documentation>
</xs:annotation>
</xs:maxLength>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="AddressLine2">
<xs:annotation>
<xs:documentation>Address Line 2</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="64">
<xs:annotation>
<xs:documentation>The maximum length is 64 when using the master address module. For the contact mechanism address, the maximum length is 40 </xs:documentation>
</xs:annotation>
</xs:maxLength>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="AddressLine3">
<xs:annotation>
<xs:documentation>Address Line 3</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="64">
<xs:annotation>
<xs:documentation>The maximum length is 64 when using the master address module. For the contact mechanism address, the maximum length is 40 </xs:documentation>
</xs:annotation>
</xs:maxLength>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="AddressLine4">
<xs:annotation>
<xs:documentation>Address Line 4</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="64">
<xs:annotation>
<xs:documentation>The maximum length is 64 when using the master address module. For the contact mechanism address, the maximum length is 40 </xs:documentation>
</xs:annotation>
</xs:maxLength>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="AddressLine5">
<xs:annotation>
<xs:documentation>Address Line 5. Only applicable for contact mechanism module, ignored in case the master address module is used </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="40"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="Directions">
<xs:annotation>
<xs:documentation>Address directions. Only applicable for contact mechanism module, ignored in case the master address module is used </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="255"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="City">
<xs:annotation>
<xs:documentation>Address City. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="40">
<xs:annotation>
<xs:documentation>The maximum length of this field is 32 if the master address module is used, 40 in case of contact mechanism module is used </xs:documentation>
</xs:annotation>
</xs:maxLength>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="PostalCode">
<xs:annotation>
<xs:documentation>Address postal code </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="24">
<xs:annotation>
<xs:documentation>The maximum length of this field is 24 if the master address module is used, 10 in case of contact mechanism module is used </xs:documentation>
</xs:annotation>
</xs:maxLength>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="Province">
<xs:annotation>
<xs:documentation>Address province. Only applicable for the contact mechanism address </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="40"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="Territory">
<xs:annotation>
<xs:documentation>Address territory. Only applicable for the contact mechanism address </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="40"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="State">
<xs:annotation>
<xs:documentation>Address State. Only applicable for the contact mechanism address </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="40"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="Region">
<xs:annotation>
<xs:documentation>Address region. Only applicable for the contact mechanism address </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="40"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="County">
<xs:annotation>
<xs:documentation>Address county. Only applicable for the contact mechanism address </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="40"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="Country">
<xs:annotation>
<xs:documentation>Country numeric ISO Code. To get the list of supported country code values, use the GetCountryList service. To get the list of defined ISO currency codes, use the GetCountryList service </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="3"/>
<xs:maxLength value="3"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="CountryDetails" type="ctrydet:CountryType">
<xs:annotation>
<xs:documentation> Country Details </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="Phone1">
<xs:annotation>
<xs:documentation>Phone number 1 (usually used for the mobile number). Only applicable for the "master address" module </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="Phone2">
<xs:annotation>
<xs:documentation>Phone number 2. Only applicable for the "master address" module </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="Extension">
<xs:annotation>
<xs:documentation>Phone number extension. Only applicable for the "master address" module </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="8"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="Email">
<xs:annotation>
<xs:documentation>Email. Only applicable for the "master address" module </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="100"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="Fax">
<xs:annotation>
<xs:documentation>Fax. Only applicable for the "master address" module </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="District">
<xs:annotation>
<xs:documentation>Address district. Only applicable for the "master address" module. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="PoBox">
<xs:annotation>
<xs:documentation>P.O. Box. Only applicable for the "master address" module. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="24"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="OwnershipType">
<xs:annotation>
<xs:documentation>Address ownership. Only applicable for the "master address" module. To get the list of supported values, use the GetStringDescription service with description type addown </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="1"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="UserData1">
<xs:annotation>
<xs:documentation>Customer specific data 2. Used for customer specific purposes. Only applicable for the "master address" module </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="UserData2">
<xs:annotation>
<xs:documentation>Customer specific data 2. Used for customer specific purposes. Only applicable for the "master address" module </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="64"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="AddressRole">
<xs:annotation>
<xs:documentation> Address role. As each customer or card can have multiple addresses, this field will identify if the address is the main address or other logging purpose address. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:short">
<xs:enumeration value="0">
<xs:annotation>
<xs:documentation> Main address. This address is actually used for any communication </xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="1">
<xs:annotation>
<xs:documentation> Other address. This address is only used for logging purposes </xs:documentation>
</xs:annotation>
</xs:enumeration>
</xs:restriction>
</xs:simpleType>
</xs:element>
</xs:all>
</xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:applId="http://ws.core.cortex.com/domain/id/applId" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://ws.core.cortex.com/domain/id/applId">
<xs:element name="ApplicationIdentifier" type="applId:ApplicationIdentifierType"/>
<xs:complexType name="ApplicationIdentifierType">
<xs:annotation>
<xs:documentation> Identifier of an card application in Cortex. Only one of the following combinations is enough - Application number and Institution Code - External application number and Institution Code If both application number and external application number are specified, they are validated to make sure they are linked </xs:documentation>
</xs:annotation>
<xs:sequence>
<xs:element name="InstitutionCode">
<xs:simpleType>
<xs:annotation>
<xs:documentation> Institution Code the application belongs to </xs:documentation>
</xs:annotation>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="4"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ApplicationNumber">
<xs:annotation>
<xs:documentation> Unique application number under a specific institution </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="5"/>
<xs:maxLength value="24"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ExternalApplicationNumber">
<xs:annotation>
<xs:documentation> External Application number under a specific institution. This is the application number generated by an external system if any. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="5"/>
<xs:maxLength value="64"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
</xs:sequence>
</xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ctrydet="http://ws.core.cortex.com/domain/types/ctrydet" xmlns:typns="http://ws.core.cortex.com/domain/types/branchdet" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://ws.core.cortex.com/domain/types/branchdet">
<xs:import namespace="http://ws.core.cortex.com/domain/types/ctrydet"/>
<xs:complexType name="BranchType">
<xs:sequence>
<xs:element name="InstitutionCode">
<xs:annotation>
<xs:documentation> Institution Code under which the branch is defined </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="4"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="BranchCode">
<xs:annotation>
<xs:documentation> Unique Branch code identifying a branch under the specified institution </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="8"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="Description">
<xs:annotation>
<xs:documentation> Description of the branch </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="20"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="AddressLine1">
<xs:annotation>
<xs:documentation> Address line 1 of the branch. Returned if defined and not empty </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="35"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="AddressLine2">
<xs:annotation>
<xs:documentation> Address line 1 of the branch. Returned if defined and not empty </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="35"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="City">
<xs:annotation>
<xs:documentation> City the branch is located in. Returned if defined and not empty </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="40"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ContactName">
<xs:annotation>
<xs:documentation> Name of the main contact of the branch. Returned if defined and not empty </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="20"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ContactNumber">
<xs:annotation>
<xs:documentation> Number of the main contact of the branch. Returned if defined and not empty </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="20"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="Region">
<xs:annotation>
<xs:documentation> Region the branch is located in. Returned if defined and not empty </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="3"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="PostalCode">
<xs:annotation>
<xs:documentation> Postal code of the branch. Returned if defined and not empty </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="10"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="CountryCode">
<xs:annotation>
<xs:documentation> ISO numeric country code of the branch. To get the list of supported country codes, use the GetCountryList service </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="3"/>
<xs:maxLength value="3"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="CountryDetails" type="ctrydet:CountryType">
<xs:annotation>
<xs:documentation> Country Details </xs:documentation>
</xs:annotation>
</xs:element>
</xs:sequence>
</xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:typns="http://ws.core.cortex.com/domain/types/apptype" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://ws.core.cortex.com/domain/types/apptype">
<xs:complexType name="ApplicationTypeDetailsType">
<xs:sequence>
<xs:element name="TypeCode">
<xs:annotation>
<xs:documentation>Unique code identifying the application type. To get the list of supported values, use the GetApplicationTypeList service </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="2"/>
<xs:maxLength value="2"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="Description">
<xs:annotation>
<xs:documentation>Description of the application type </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="64"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="Additional">
<xs:annotation>
<xs:documentation>Specifies if the application type is for additional cards or primary ones </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:boolean"/>
</xs:simpleType>
</xs:element>
<xs:element name="Corporate">
<xs:annotation>
<xs:documentation>Specifies if the application type is for corporate cards or individual ones </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:boolean"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="UserData">
<xs:annotation>
<xs:documentation>Customer specific user data </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
</xs:sequence>
</xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ctxtypes="http://ws.core.cortex.com/domain/types" xmlns:typns="http://ws.core.cortex.com/domain/types/apphist" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://ws.core.cortex.com/domain/types/apphist">
<xs:import namespace="http://ws.core.cortex.com/domain/types"/>
<xs:complexType name="ApplicationHistoryDetailsListType">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="ApplicationHistoryDetails" type="typns:ApplicationHistoryDetailsType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="ApplicationHistoryDetailsType">
<xs:sequence>
<xs:element name="HistoryType">
<xs:annotation>
<xs:documentation>Code identifying the history type. Core supported values are - 1 - Application Created - 2 - Process stage change - 3 - Details updated - 4 - Approve - 5 - Declined - 6 - Referred </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:short"/>
</xs:simpleType>
</xs:element>
<xs:element name="HistoryDateTime" type="ctxtypes:CortexTimeStamp">
<xs:annotation>
<xs:documentation>Date and time of the history record </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="OldApplicationStatus" type="ctxtypes:StatusType">
<xs:annotation>
<xs:documentation>Status of the application before the action that generated this history record was done </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="NewApplicationStatus" type="ctxtypes:StatusType">
<xs:annotation>
<xs:documentation>Status of the application after the action that generated this history record was done </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="OldProcessingStage">
<xs:annotation>
<xs:documentation>Processing stage of the application before the action that generated this history record was executed. To get the list of supported process stages, use the GetProcessControlList service with ReturnProcessStages set to true </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="2"/>
<xs:maxLength value="2"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="NewProcessingStage">
<xs:annotation>
<xs:documentation>Processing stage of the application after the action that generated this history record was executed. To get the list of supported process stages, use the GetProcessControlList service with ReturnProcessStages set to true </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="2"/>
<xs:maxLength value="2"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="ProcessStageStatus">
<xs:annotation>
<xs:documentation>Processing stage status </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="S">
<xs:annotation>
<xs:documentation>Process stage successful. Specifies that the process stage was completed successfully and cortex needs to continue processing from the next processing stage in case defined in the process control </xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="F">
<xs:annotation>
<xs:documentation>Process stage failed. Specifies that the process stage was completed with failure and cortex only needs to log the application </xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="R">
<xs:annotation>
<xs:documentation>Process stage needs to be repeated. Cortex will attempt to repeat the specified process stage and continue the flow in case defined </xs:documentation>
</xs:annotation>
</xs:enumeration>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="Maker">
<xs:annotation>
<xs:documentation>User that initiated the action that resulted in this history record being created </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="Checker">
<xs:annotation>
<xs:documentation>User that approved the action that resulted in this history record being created </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="Description">
<xs:annotation>
<xs:documentation>Description of the history record </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="256"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="UserData1">
<xs:annotation>
<xs:documentation>Customer specific data 1 for the history record </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="UserData2">
<xs:annotation>
<xs:documentation>Customer specific data 2 for the history record </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ExternalReference">
<xs:annotation>
<xs:documentation>External reference code in case an external system was involved in this stage (i.e. rule engine unique id for the request) </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="64"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
</xs:sequence>
</xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ctxtypes="http://ws.core.cortex.com/domain/types" xmlns:typns="http://ws.core.cortex.com/domain/types/appdetadd" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://ws.core.cortex.com/domain/types/appdetadd">
<xs:import namespace="http://ws.core.cortex.com/domain/types"/>
<xs:complexType name="ApplicationAdditionalDetailsType">
<xs:sequence>
<xs:element minOccurs="0" name="SupplementaryFullName">
<xs:annotation>
<xs:documentation>Customer full name English</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="160"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="SupplementaryFullNameArabic">
<xs:annotation>
<xs:documentation>Customer full name Arabic</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="160"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="SupplementaryEmbossingName">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="51"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="SupplementaryPlaceOfBirth">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="20"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="SupplementaryDateOfBrith" type="ctxtypes:CortexDate"/>
<xs:element name="SupplementaryIDNumber">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="22"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="SupplementaryLimit">
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="Kinship">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="10"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="CustomerType">
<xs:annotation>
<xs:documentation>Customer Type (userdata1)</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="CifNumber">
<xs:annotation>
<xs:documentation>CIF Number (userdata2)</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="CountryOfBirth">
<xs:annotation>
<xs:documentation>Country of Birth (userdata3)</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="Nationality">
<xs:annotation>
<xs:documentation>Nationality (userdata4)</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="MobileNumber">
<xs:annotation>
<xs:documentation>Mobile Number (userdata5)</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
</xs:sequence>
</xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ctxtypes="http://ws.core.cortex.com/domain/types" xmlns:typns="http://ws.core.cortex.com/domain/types/appdetdoc" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://ws.core.cortex.com/domain/types/appdetdoc">
<xs:import namespace="http://ws.core.cortex.com/domain/types"/>
<xs:complexType name="ApplicationDocumentsDetailsType">
<xs:sequence>
<xs:element minOccurs="0" name="DocumentType">
<xs:annotation>
<xs:documentation>Document type</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="DocumentId">
<xs:annotation>
<xs:documentation>Document id</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="160"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="DocumentLink">
<xs:annotation>
<xs:documentation>Document link</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="255"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
</xs:sequence>
</xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:appdetadd="http://ws.core.cortex.com/domain/types/appdetadd" xmlns:appdetdoc="http://ws.core.cortex.com/domain/types/appdetdoc" xmlns:ctxtypes="http://ws.core.cortex.com/domain/types" xmlns:currId="http://ws.core.cortex.com/domain/id/currId" xmlns:typns="http://ws.core.cortex.com/domain/types/appdet" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://ws.core.cortex.com/domain/types/appdet">
<xs:import namespace="http://ws.core.cortex.com/domain/types"/>
<xs:import namespace="http://ws.core.cortex.com/domain/id/currId"/>
<xs:import namespace="http://ws.core.cortex.com/domain/types/appdetadd"/>
<xs:import namespace="http://ws.core.cortex.com/domain/types/appdetdoc"/>
<xs:complexType name="ApplicationDetailsType">
<xs:sequence>
<xs:element name="ApplicationNumber">
<xs:annotation>
<xs:documentation>Application number generated or echoed back from the request in case originally specified </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="24"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="ExternalApplicationNumber">
<xs:annotation>
<xs:documentation>External application number echoed back from the request in case sent, otherwise, the number generated by cortex </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="64"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="ApplicationStatus">
<xs:annotation>
<xs:documentation>Current application status. To get the list of applicable values, please use the GetApplicationStatusList service. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="2"/>
<xs:maxLength value="2"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="Organization">
<xs:annotation>
<xs:documentation>Organization the application belongs to. These values are bank specific. Cortex does not do any validation on this value. It is used for logging purposes and might be used in bank specific implementations </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:short"/>
</xs:simpleType>
</xs:element>
<xs:element name="Product">
<xs:annotation>
<xs:documentation>Card product requested for the application </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="4"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="ApplicatonDate" type="ctxtypes:CortexDate">
<xs:annotation>
<xs:documentation>Application Date </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="ApplicationSource">
<xs:annotation>
<xs:documentation>Code identifying the source of the application. To get the list of supported values, use the GetStringDescription service with description type "aplsrc" </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="1"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="SalesSource">
<xs:annotation>
<xs:documentation>Sales sources for the credit card/application. This fields is used for customer specific purposes. Cortex does not validate this field. It is used for logging purposes only </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="DeliveryMethod">
<xs:annotation>
<xs:documentation>Delivery method for the card in case the application is approved. To get the list of supported value, use the GetStringDescription service with description type as "dlvmtd" </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="1"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ProgramCode">
<xs:annotation>
<xs:documentation>Program code for the credit card/application. This fields is used for customer specific purposes. Cortex does not validate this field. It is used for logging purposes only </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="12"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="Campaign">
<xs:annotation>
<xs:documentation>Campaign for the credit card/application. This fields is used for customer specific purposes. Cortex does not validate this field. It is used for logging purposes only </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="12"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="Plastic">
<xs:annotation>
<xs:documentation>Plastic to use for the credit card. This fields is used for customer specific purposes. Cortex does not validate this field. It is used for logging purposes only </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="12"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="Design">
<xs:annotation>
<xs:documentation>Design to use for the credit card. This fields is used for customer specific purposes. Cortex does not validate this field. It is used for logging purposes only </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="12"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="ProcessStage">
<xs:annotation>
<xs:documentation>Last processing stage of the application. To get the list of supported process stages, use the GetProcessControlList service with ReturnProcessStages set to true </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="2"/>
<xs:maxLength value="2"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="ProcessStageStatus">
<xs:annotation>
<xs:documentation>Last processing stage status </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="S">
<xs:annotation>
<xs:documentation>Process stage successful. Specifies that the process stage was completed successfully and cortex needs to continue processing from the next processing stage in case defined in the process control </xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="F">
<xs:annotation>
<xs:documentation>Process stage failed. Specifies that the process stage was completed with failure and cortex only needs to log the application </xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="R">
<xs:annotation>
<xs:documentation>Process stage needs to be repeated. Cortex will attempt to repeat the specified process stage and continue the flow in case defined </xs:documentation>
</xs:annotation>
</xs:enumeration>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="Score">
<xs:annotation>
<xs:documentation>Score calculated for the application in case available (sent in the request or calculated by cortex) </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="12"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ExternalScore">
<xs:annotation>
<xs:documentation>External score received in the request or calculated by an external system </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="12"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="RequestedLimit">
<xs:annotation>
<xs:documentation>Credit limit requested by the customer in case originally specified </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="SuggestedLimit">
<xs:annotation>
<xs:documentation>Limit suggested by the bank for the customer in case any </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="AssignedLimit">
<xs:annotation>
<xs:documentation>Actual assigned limit for the card in case any and the limit calculated by Cortex </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="AllowedLimitList" type="typns:AllowedLimitListType">
<xs:annotation>
<xs:documentation>Allowed limit list of the application in case multiple ones exist and the customer has the option to select one </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="EligibilityCheckResult">
<xs:annotation>
<xs:documentation>Eligibility check result either sent in the request or generated by cortex </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="6"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="EligibilityCheckDescription">
<xs:annotation>
<xs:documentation>Description of the eligibility check result either received in the request or generated by cortex </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="64"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="Title">
<xs:annotation>
<xs:documentation>Customer title </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="15"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="FirstName">
<xs:annotation>
<xs:documentation>Customer First Name </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="50"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="SecondName">
<xs:annotation>
<xs:documentation>Customer Second Name </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="50"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ThirdName">
<xs:annotation>
<xs:documentation>Customer third name </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="50"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="LastName">
<xs:annotation>
<xs:documentation>Customer last name </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="50"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="FullName">
<xs:annotation>
<xs:documentation>Customer Full name </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="160"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="EmbossName">
<xs:annotation>
<xs:documentation>Embossing name to use for the card in case the application is approved and a card created </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="50"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="PlaceOfBirth">
<xs:annotation>
<xs:documentation>Customer place of birth in case available </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="50"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="DateOfBirth" type="ctxtypes:CortexDate">
<xs:annotation>
<xs:documentation>Gregorian customer date of birth </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="LocalizedDateOfBirth" type="ctxtypes:CortexDate">
<xs:annotation>
<xs:documentation>Date of birth in alternative/localized date of birth. </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="Age">
<xs:annotation>
<xs:documentation>Customer age </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:short"/>
</xs:simpleType>
</xs:element>
<xs:element name="Gender">
<xs:annotation>
<xs:documentation>Customer Gender </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="M">
<xs:annotation>
<xs:documentation>Male</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="F">
<xs:annotation>
<xs:documentation>Female</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="U">
<xs:annotation>
<xs:documentation>Unknown</xs:documentation>
</xs:annotation>
</xs:enumeration>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="Married">
<xs:annotation>
<xs:documentation>Customer marital status. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="S">
<xs:annotation>
<xs:documentation>Single</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="M">
<xs:annotation>
<xs:documentation>Married</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="D">
<xs:annotation>
<xs:documentation>Divorced</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="W">
<xs:annotation>
<xs:documentation>Widowed</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="U">
<xs:annotation>
<xs:documentation>Unknown</xs:documentation>
</xs:annotation>
</xs:enumeration>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="Nationality">
<xs:annotation>
<xs:documentation>Customer nationality in numeric ISO country code. To get the list of supported ISO country codes, use the GetCountryList service </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="3"/>
<xs:maxLength value="3"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="IdType">
<xs:annotation>
<xs:documentation>ID type presented by the customer. To get the list of supported values, use the GetStringDescription service with description type as "idtype" </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="2"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="IdNumber">
<xs:annotation>
<xs:documentation>Id Number of the customer</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="22"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="IdExpiryDate" type="ctxtypes:CortexDate">
<xs:annotation>
<xs:documentation>ID expiry date. </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="EducationLevel">
<xs:annotation>
<xs:documentation>Education level of the customer. The usage of this field is customer specific. Cortex does not validate the value of this field. It's saved for logging purposes and can be used in the rule engine </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="4"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="ProfessionCode">
<xs:annotation>
<xs:documentation>Profession code of the customer. To get the list of supported values for this field, use the GetNumericDescription service with description type as "pr" </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:short"/>
</xs:simpleType>
</xs:element>
<xs:element name="NumberOfDependents">
<xs:annotation>
<xs:documentation>Number of dependents for the customer. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:short"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="EmployerName">
<xs:annotation>
<xs:documentation>Name of the customer employer. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="50"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="EmploymentYears">
<xs:annotation>
<xs:documentation>Number of years the customer has been employed. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:short"/>
</xs:simpleType>
</xs:element>
<xs:element name="EmploymentMonths">
<xs:annotation>
<xs:documentation>Number of months the customer has been employed. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:short"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="EmployerPhoneArea">
<xs:annotation>
<xs:documentation>Employer phone area. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="6"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="EmployerPhoneNumber">
<xs:annotation>
<xs:documentation>Phone number of the employer. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="EmployerPhoneExtension">
<xs:annotation>
<xs:documentation>Employer phone extension. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="6"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="EmployerMobile">
<xs:annotation>
<xs:documentation>Employer mobile number. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="EmployerFaxArea">
<xs:annotation>
<xs:documentation>Employer fax area code </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="6"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="EmployerFax">
<xs:annotation>
<xs:documentation>Employer fax number. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="EmployerCity">
<xs:annotation>
<xs:documentation>Employer City. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="EmployerAddress">
<xs:annotation>
<xs:documentation>Employer address. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="64"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="EmploymentActivity">
<xs:annotation>
<xs:documentation>Employment activity. This field is for customer specific usage. Cortex does not validate this field and it can be used in the rule engine </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="12"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="EmploymentStatus">
<xs:annotation>
<xs:documentation>Employment status. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="3"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="CIF">
<xs:annotation>
<xs:documentation>Customer identifier in the bank in case available </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="BankAccountNumber">
<xs:annotation>
<xs:documentation>Bank account number used for auto-debit </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="28"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element ref="currId:Currency">
<xs:annotation>
<xs:documentation>Currency Code of the account/card requested for this application </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="RequestedCurrencyList" type="typns:RequestedCurrencyListType">
<xs:annotation>
<xs:documentation>List of requested currencies to be created for the card. Only allowed in case the product supports multi-currency. If not specified, depending on the configuration of the product, either all currencies will be created or only the default one for the account type </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="CreditAccountNumber">
<xs:annotation>
<xs:documentation>Credit account number generated by cortex or echoed back from the request in case received </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="28"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="AccountType">
<xs:annotation>
<xs:documentation>Account type of the application being created. Depending on the implementation, the usage of this field might vary. Please validate the usage with an FIS officer. In case the field is used to refer to the credit account type, you can get the list of allowed values using the GetAccountTypeList service </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="2"/>
<xs:maxLength value="2"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="OpenDate" type="ctxtypes:CortexDate">
<xs:annotation>
<xs:documentation>Account open date. </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="Income">
<xs:annotation>
<xs:documentation>Income of the customer. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element name="AdditionalIncome">
<xs:annotation>
<xs:documentation>Additional income for the customer. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element name="TotalIncome">
<xs:annotation>
<xs:documentation>Total income of the customer. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element name="CurrentBalance">
<xs:annotation>
<xs:documentation>Current balance of the customer. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element name="AverageBalance">
<xs:annotation>
<xs:documentation>Average balance of the customer for a bank specific period. It's up to the bank to determine the period used. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element name="AssetsBalance">
<xs:annotation>
<xs:documentation>Assets equivalent balance. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element name="InsuranceBalance">
<xs:annotation>
<xs:documentation>Insurance balance of the customer. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element name="DepositAmount">
<xs:annotation>
<xs:documentation>Deposit amount placed/reserved by the customer in case any. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="GuarenteeAccountNumber">
<xs:annotation>
<xs:documentation>Account number used for guarantee in case. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="GuarenteeAmount">
<xs:annotation>
<xs:documentation>Amount specified by the customer as guarantee. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element name="InstalmentAmount">
<xs:annotation>
<xs:documentation>Installment amount specified by the customer. Used for logging purposes only and can be used in the rule engine. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element name="AutoDebit" type="ctxtypes:YesNoFlag">
<xs:annotation>
<xs:documentation>Specifies if auto-debit should be applied for the payments for the due amount. </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="PaymentMethod">
<xs:annotation>
<xs:documentation>Specifies the payment method for the customer (full or minimum due). To get the list of supported values, use the GetNumericDescription service with description type as "paym" </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string"/>
</xs:simpleType>
</xs:element>
<xs:element name="BillingCycle">
<xs:annotation>
<xs:documentation>Billing cycle to link the new credit account to. To get the list of supported values, use the GetBillingCycleList service </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="10"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="OldIssueDate" type="ctxtypes:CortexDate">
<xs:annotation>
<xs:documentation>Old card issue date in case available. </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="OtherPaymentsDate" type="ctxtypes:CortexDate">
<xs:annotation>
<xs:documentation>Other payment date in case the customer has other payments elsewhere. </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="MaximumDelinquency">
<xs:annotation>
<xs:documentation>Maximum delinquency reported by the credit bureau for the customer. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="4"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="CreditBureauDecision">
<xs:annotation>
<xs:documentation>Credit bureau decision indicating if the application is approved or not by the credit bureau </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="12"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="CreditBureauUserData">
<xs:annotation>
<xs:documentation>Customer specific data for the credit bureau checks for customer specific usage </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="ECommerce" type="ctxtypes:YesNoFlag">
<xs:annotation>
<xs:documentation>Specifies if the card can be used for e-commerce. </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="NumberOfCards">
<xs:annotation>
<xs:documentation>Number of cards the customer has in the bank. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:short"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="OtherBank">
<xs:annotation>
<xs:documentation>Specifies if the customer has cards in another bank. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="6"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="OtherBankDescription">
<xs:annotation>
<xs:documentation>Description of the other bank the customer has cards in. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="64"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="OldCardNumber">
<xs:annotation>
<xs:documentation>Old credit card number in case the customer already had one. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="19"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="InsuranceProduct">
<xs:annotation>
<xs:documentation>Insurance product in case requested by the customer. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="8"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="SocialCode">
<xs:annotation>
<xs:documentation>Social code categorizing the customer. To get the list of supported values, use the GetStringDescription service with description type "socio" </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="8"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="JobGrade">
<xs:annotation>
<xs:documentation>Job grade of the customer. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:short"/>
</xs:simpleType>
</xs:element>
<xs:element name="Flags" type="typns:FlagListType">
<xs:annotation>
<xs:documentation>Various flags used by the bank. Each flag position has a purpose and is customer specific. To get the description of the flags for a specific implementation, please refer to an FIS officer </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="CheckFlags" type="typns:CheckFlagListType">
<xs:annotation>
<xs:documentation>Various check flags used by the bank. Each check flag position has a purpose and is customer specified. The value of each flag can be either 1 or 0. example of usage: Customer Verified. To get the description of the flags for a specific implementation, please refer to an FIS officer </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="Maker">
<xs:annotation>
<xs:documentation>User that initiated the application creation. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="Checker">
<xs:annotation>
<xs:documentation>User that approved the application creation. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ReferredTo">
<xs:annotation>
<xs:documentation>Specifies if the application has been referred to another department. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="1 "/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ReferralReason">
<xs:annotation>
<xs:documentation>Reason the application was referred to another department </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="64 "/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="UserData1">
<xs:annotation>
<xs:documentation>Customer specific data 1. Used for customer specific purposes. To get the usage of this field, please validate with an FIS officer </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="UserData2">
<xs:annotation>
<xs:documentation>Customer specific data 2. Used for customer specific purposes. To get the usage of this field, please validate with an FIS officer </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="UserData3">
<xs:annotation>
<xs:documentation>Customer specific data 3. Used for customer specific purposes. To get the usage of this field, please validate with an FIS officer </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="UserData4">
<xs:annotation>
<xs:documentation>Customer specific data 4. Used for customer specific purposes. To get the usage of this field, please validate with an FIS officer </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="64"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="UserData5">
<xs:annotation>
<xs:documentation>Customer specific data 5. Used for customer specific purposes. To get the usage of this field, please validate with an FIS officer </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="64"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="AdditionalFields" type="ctxtypes:AdditionalFieldsType"/>
<xs:element minOccurs="0" name="ApplicationAdditionalDetailsList" type="typns:ApplicationAdditionalDetailsListType">
<xs:annotation>
<xs:documentation>List of additional supplementary card details added under the same application if exist </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="ApplicationDocumentsDetailsList" type="typns:ApplicationDocumentsDetailsListType"/>
<xs:element minOccurs="0" name="ApplicationAdditonalObjects" type="typns:ApplicationAdditonalObjectsType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="ApplicationAdditonalObjectsType">
<xs:annotation>
<xs:documentation> Application Additional Details List </xs:documentation>
</xs:annotation>
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="ApplicationNcbLoanObjects" type="typns:ApplicationNcbLoanObjectsType">
<xs:annotation>
<xs:documentation>Details of Ncb loan application </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element maxOccurs="unbounded" minOccurs="0" name="ApplicationNonNcbLoanObjects" type="typns:ApplicationNonNcbLoanObjectsType">
<xs:annotation>
<xs:documentation>Details of non ncb loan applications </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element maxOccurs="unbounded" minOccurs="0" name="PendingLosApplicationObjects" type="typns:PendingLosApplicationObjectsType">
<xs:annotation>
<xs:documentation>Details of los pending applications </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element maxOccurs="unbounded" minOccurs="0" name="PendingCCApplicationObjects" type="typns:PendingCCApplicationObjectsType">
<xs:annotation>
<xs:documentation>Details of CC pending applications </xs:documentation>
</xs:annotation>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="ApplicationNcbLoanObjectsType">
<xs:sequence>
<xs:element minOccurs="0" name="ncbLoanIdNumber">
<xs:annotation>
<xs:documentation>NCB Loan Id Number</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ncbExistingEmi">
<xs:annotation>
<xs:documentation>NCB Existing EMI</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ncbExistingMaxEmi">
<xs:annotation>
<xs:documentation>NCB Existing Max EMI</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ncbEmiConsidered">
<xs:annotation>
<xs:documentation>NCB Existing Considered EMI</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ncbIntAccountNumber">
<xs:annotation>
<xs:documentation>NCB Loan Account Number</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ncbLoanType">
<xs:annotation>
<xs:documentation>NCB Loan Type</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ncbLoanStatus">
<xs:annotation>
<xs:documentation>NCB Loan Account Status</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ncbAccountType">
<xs:annotation>
<xs:documentation>NCB Account Type</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ncbSubType">
<xs:annotation>
<xs:documentation>NCB Sub Type</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ncbEmi1">
<xs:annotation>
<xs:documentation>NCB EMI 1</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ncbTenor1">
<xs:annotation>
<xs:documentation>NCB TENOR 1</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ncbEmi2">
<xs:annotation>
<xs:documentation>NCB EMI 1</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ncbTenor2">
<xs:annotation>
<xs:documentation>NCB TENOR 2</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ncbEmi3">
<xs:annotation>
<xs:documentation>NCB EMI 1</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ncbTenor3">
<xs:annotation>
<xs:documentation>NCB TENOR 1</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ncbEmi4">
<xs:annotation>
<xs:documentation>NCB EMI 1</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ncbTenor4">
<xs:annotation>
<xs:documentation>NCB TENOR 1</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ncbLinkedPfAccount">
<xs:annotation>
<xs:documentation>NCB Linked PFA Account</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ncbMaturityDateForLinkedPf">
<xs:annotation>
<xs:documentation>NCB Maturity Date For Linked PF</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ncbCurrentEmi">
<xs:annotation>
<xs:documentation>NCB Current Emi</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ncbGlobalDbrFlag">
<xs:annotation>
<xs:documentation>NCB Global Dbr Flag</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ncbProductDbrFlag">
<xs:annotation>
<xs:documentation>NCB Product Dbr Flag</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ncbCcLimit">
<xs:annotation>
<xs:documentation>NCB CC Limit</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ncbCcLoanStatus">
<xs:annotation>
<xs:documentation>NCB CC Loan Status</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="ApplicationNonNcbLoanObjectsType">
<xs:sequence>
<xs:element minOccurs="0" name="nonNcbLoanIdNumber">
<xs:annotation>
<xs:documentation>Non NCB Loan Id Number</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="simahCreditor">
<xs:annotation>
<xs:documentation>Non NCB Creditor</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="50"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="simahProductType">
<xs:annotation>
<xs:documentation>Non NCB Product Type</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="simahAccountNumber">
<xs:annotation>
<xs:documentation>Non NCB Account Number</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="simahCreditLimit">
<xs:annotation>
<xs:documentation>Non NCB Loan Credit Limit</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="simahExpiryDate">
<xs:annotation>
<xs:documentation>Non NCB Loan Expiry Date</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="simahStatus">
<xs:annotation>
<xs:documentation>Non NCB Loan Account Status</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="simahFrequencyOfPayments">
<xs:annotation>
<xs:documentation>Non NCB Frequency of payments</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="simahInstalmentAmount">
<xs:annotation>
<xs:documentation>Non NCB Installment Amount</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="simahSalaryFlag">
<xs:annotation>
<xs:documentation>Non NCB Salary Flag</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="simahSummary">
<xs:annotation>
<xs:documentation>Non NCB Loan Summary</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="simahGlobalDbrFlag">
<xs:annotation>
<xs:documentation>Non NCB Global Dbr flag</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="simahProductDbrFlag">
<xs:annotation>
<xs:documentation>Non NCB Product Dbr flag</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="PendingLosApplicationObjectsType">
<xs:sequence>
<xs:element minOccurs="0" name="losPendingApplicatioNumber">
<xs:annotation>
<xs:documentation>Pending Los Application Number</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="losPendingApplicationLoanAmount">
<xs:annotation>
<xs:documentation>Los Pending Application Loan Amount</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="losPendingApplicationInstalmentAmount">
<xs:annotation>
<xs:documentation>Los Pending Application Installment Amount</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="losPendingApplicationProductType">
<xs:annotation>
<xs:documentation>Los Pending Application Product Type</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="losPendingIdNumber">
<xs:annotation>
<xs:documentation>Los Pending Application Id Number</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="losPendingGlobalDbryn">
<xs:annotation>
<xs:documentation>Los Pending Global DBR YN</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="losPendingProductDbryn">
<xs:annotation>
<xs:documentation>Los Pending Product DBR YN</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="PendingCCApplicationObjectsType">
<xs:sequence>
<xs:element minOccurs="0" name="ccPendingApplicatioNumber">
<xs:annotation>
<xs:documentation>CC Pending Application Number</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ccPendingApplicationCreditLimit">
<xs:annotation>
<xs:documentation>CC Pending Application Credit limit</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ccPendingApplicationInstalmentAmount">
<xs:annotation>
<xs:documentation>CC Pending Application Installment Amount</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ccPendingApplicationProductType">
<xs:annotation>
<xs:documentation>CC Pending Application Product Type</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ccPendingApplicationPaymentFrequency">
<xs:annotation>
<xs:documentation>CC Pending Application Payment Frequency</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ccPendingCCIdNumber">
<xs:annotation>
<xs:documentation>CC Pending Application Id Number</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ccPendingGlobalDbryn">
<xs:annotation>
<xs:documentation>CC Pending Global DBR YN</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ccPendingProductDbryn">
<xs:annotation>
<xs:documentation>CC Pending Product DBR YN</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="25"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="ApplicationDocumentsDetailsListType">
<xs:annotation>
<xs:documentation> Application Documents details </xs:documentation>
</xs:annotation>
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="ApplicationDocumentsDetails" type="appdetdoc:ApplicationDocumentsDetailsType">
<xs:annotation>
<xs:documentation>Details of the documents uploaded for the application </xs:documentation>
</xs:annotation>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="AllowedLimitListType">
<xs:sequence>
<xs:element maxOccurs="unbounded" name="AllowedLimit" type="typns:AllowedLimitType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="AllowedLimitType">
<xs:sequence>
<xs:element name="CreditLimit">
<xs:annotation>
<xs:documentation>Single credit limit allowed for the application </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element name="EvaluationCode">
<xs:annotation>
<xs:documentation>Evaluation code used to calculate this limit. Can be used to do custom processing by limit from the calling channel </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="6"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="RequestedCurrencyListType">
<xs:annotation>
<xs:documentation>List of currencies requested for the application </xs:documentation>
</xs:annotation>
<xs:sequence>
<xs:element maxOccurs="unbounded" ref="currId:Currency">
<xs:annotation>
<xs:documentation>Individual requested currency</xs:documentation>
</xs:annotation>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="FlagListType">
<xs:sequence>
<xs:element maxOccurs="unbounded" name="Flag" type="typns:FlagType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="FlagType">
<xs:all>
<xs:element name="Position">
<xs:annotation>
<xs:documentation>Position of the flag</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:short">
<xs:minExclusive value="0"/>
<xs:maxInclusive value="64"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="Value">
<xs:annotation>
<xs:documentation>Value to be set for the flag</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="1"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
</xs:all>
</xs:complexType>
<xs:complexType name="CheckFlagListType">
<xs:sequence>
<xs:element maxOccurs="unbounded" name="CheckFlag" type="typns:CheckFlagType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="CheckFlagType">
<xs:all>
<xs:element name="Position">
<xs:annotation>
<xs:documentation>Position of the check flag</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:short">
<xs:minExclusive value="0"/>
<xs:maxInclusive value="64"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="Value">
<xs:annotation>
<xs:documentation>Value to be set for the flag</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="0">
<xs:annotation>
<xs:documentation>Flag Not Set</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="1">
<xs:annotation>
<xs:documentation>Flag Set</xs:documentation>
</xs:annotation>
</xs:enumeration>
</xs:restriction>
</xs:simpleType>
</xs:element>
</xs:all>
</xs:complexType>
<xs:complexType name="ApplicationAdditionalDetailsListType">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="ApplicationAdditionalDetails" type="appdetadd:ApplicationAdditionalDetailsType">
<xs:annotation>
<xs:documentation>Details of the application additional </xs:documentation>
</xs:annotation>
</xs:element>
</xs:sequence>
</xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:typns="http://ws.core.cortex.com/domain/types/appstatus" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://ws.core.cortex.com/domain/types/appstatus">
<xs:complexType name="ApplicationStatusDetailsType">
<xs:sequence>
<xs:element name="StatusCode">
<xs:annotation>
<xs:documentation>Unique code identifying the application status. To get the list of supported values, use the GetApplicationStatusList service </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="2"/>
<xs:maxLength value="2"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="Description">
<xs:annotation>
<xs:documentation>Description of the application status </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="64"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="Canceled">
<xs:annotation>
<xs:documentation>Specifies the application having this status is considered as canceled </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:boolean"/>
</xs:simpleType>
</xs:element>
</xs:sequence>
</xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ctxtypes="http://ws.core.cortex.com/domain/types" xmlns:typns="http://ws.core.cortex.com/domain/types/custdet" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://ws.core.cortex.com/domain/types/custdet">
<xs:import namespace="http://ws.core.cortex.com/domain/types"/>
<xs:complexType name="CustomerDetailsType">
<xs:sequence>
<xs:element name="CustomerCode">
<xs:annotation>
<xs:documentation>Unique code identifying a customer in cortex under a specific institution. This field can be used to do operations on a customer </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="12"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="IdNumber">
<xs:annotation>
<xs:documentation>Customer ID number in case available </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="12"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ExternalCustomerCode">
<xs:annotation>
<xs:documentation>External customer code (usually holding the bank's CIF) </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="20"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="Title">
<xs:annotation>
<xs:documentation>Customer title</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="15"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="FirstName">
<xs:annotation>
<xs:documentation>Customer first name</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="50"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="LastName">
<xs:annotation>
<xs:documentation>Customer last name</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="50"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="DateOfBirth" type="ctxtypes:CortexDate">
<xs:annotation>
<xs:documentation> Customer date of birth in case available </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="UserData1">
<xs:annotation>
<xs:documentation>Customer user data 1 for customer specific purposes </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="12"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="UserData2">
<xs:annotation>
<xs:documentation>Customer user data 2 for customer specific purposes </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="12"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="UserData3">
<xs:annotation>
<xs:documentation>Customer user data 3 for customer specific purposes </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="12"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="UserData4">
<xs:annotation>
<xs:documentation>Customer user data 4 for customer specific purposes </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="AdditionalFields" type="ctxtypes:AdditionalFieldsType"/>
</xs:sequence>
</xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ctxtypes="http://ws.core.cortex.com/domain/types" xmlns:typns="http://ws.core.cortex.com/domain/types/cardidrsp" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://ws.core.cortex.com/domain/types/cardidrsp">
<xs:import namespace="http://ws.core.cortex.com/domain/types"/>
<xs:element name="ResponseCardIdentifier" type="typns:ResponseCardIdentifierType"/>
<xs:complexType name="ResponseCardIdentifierType">
<xs:sequence>
<xs:element name="Pan">
<xs:annotation>
<xs:documentation>Encrypted card number (can be either using cortex encryption algorithm or an external encryption algorithm implementation specific) </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="512"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="MaskedPan">
<xs:annotation>
<xs:documentation>Masked Card Number </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="19"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="VPan">
<xs:annotation>
<xs:documentation>Virtual card number generated by cortex for the card in case configured so. In case configured, it will be encrypted using an external encryption algorithm </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="512"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="Seqno">
<xs:annotation>
<xs:documentation>Card sequence number </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:short"/>
</xs:simpleType>
</xs:element>
</xs:sequence>
</xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:cardIdRsp="http://ws.core.cortex.com/domain/types/cardidrsp" xmlns:ctxtypes="http://ws.core.cortex.com/domain/types" xmlns:typns="http://ws.core.cortex.com/domain/types/crddet" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://ws.core.cortex.com/domain/types/crddet">
<xs:import namespace="http://ws.core.cortex.com/domain/types"/>
<xs:import namespace="http://ws.core.cortex.com/domain/types/cardidrsp"/>
<xs:complexType name="CardDetailsType">
<xs:sequence>
<xs:element ref="cardIdRsp:ResponseCardIdentifier"/>
<xs:element name="ExpiryDate" type="ctxtypes:CortexDate">
<xs:annotation>
<xs:documentation>Card expiry date </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="EffectiveDate" type="ctxtypes:CortexDate">
<xs:annotation>
<xs:documentation>Effective date of the card </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="CardStatus">
<xs:annotation>
<xs:documentation>Status of the card. To get the list of supported values, use the GetCardStatusList service </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="2"/>
<xs:maxLength value="2"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="OldPlasticExpiryDate" type="ctxtypes:CortexDate">
<xs:annotation>
<xs:documentation>Old plastic card expiry in case an old plastic exists (in case of renewal) </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="OldPlasticCardStatus">
<xs:annotation>
<xs:documentation>Old plastic card status in case an old plastic exists (in case of renewal). To get the list of supported values, use the GetCardStatusList service </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="2"/>
<xs:maxLength value="2"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="EmbossingName">
<xs:annotation>
<xs:documentation>Embossing name used for the card </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="50"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="Title">
<xs:annotation>
<xs:documentation>Card holder title</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="15"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="FirstName">
<xs:annotation>
<xs:documentation>Card holder first name</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="50"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="LastName">
<xs:annotation>
<xs:documentation>Card holder last name</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="50"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="Additional">
<xs:annotation>
<xs:documentation>Specifies if this is a primary or additional card </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:boolean"/>
</xs:simpleType>
</xs:element>
<xs:element name="BatchNumber">
<xs:annotation>
<xs:documentation>Batch number the card is added to </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:long"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="ServiceCode">
<xs:annotation>
<xs:documentation>Service code of the card </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="3"/>
<xs:maxLength value="3"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="Kinship">
<xs:annotation>
<xs:documentation>Relationship to the primary card in case this is an additional card </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="10"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="DateOfBirth" type="ctxtypes:CortexDate">
<xs:annotation>
<xs:documentation>Card holder date of birth if available </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="LastActivity" type="ctxtypes:CortexTimeStamp">
<xs:annotation>
<xs:documentation>Date and time of the last activity on the card in case available </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="LastStatusChangeDate" type="ctxtypes:CortexDate">
<xs:annotation>
<xs:documentation>Date the card status was changed last. </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="ActivationDate" type="ctxtypes:CortexDate">
<xs:annotation>
<xs:documentation>Date the card was activated. Only returned when the extended card details are being returned and the card is activated </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="DateLastIssued" type="ctxtypes:CortexDate">
<xs:annotation>
<xs:documentation>Date the card was last issued/printed. Only returned when the extended card details are being returned and the card was actually printed </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="UserData">
<xs:annotation>
<xs:documentation>Customer specific data. Used for customer specific purposes </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="30"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="UserData1">
<xs:annotation>
<xs:documentation>Customer specific data 1. Used for customer specific purposes </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="UserData2">
<xs:annotation>
<xs:documentation>Customer specific data 2. Used for customer specific purposes </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="UserData3">
<xs:annotation>
<xs:documentation>Customer specific data 3. Used for customer specific purposes </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="UserData4">
<xs:annotation>
<xs:documentation>Customer specific data 4. Used for customer specific purposes </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="UserData5">
<xs:annotation>
<xs:documentation>Customer specific data 5. Used for customer specific purposes </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="255"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="Memo">
<xs:annotation>
<xs:documentation>Memo set for the card in case any. Only returned if the extended card details are being returned </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="255"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="CardAuthorizationParameters" type="ctxtypes:CardAuthorizationParametersType">
<xs:annotation>
<xs:documentation>Card authorization parameters. Each position will have a specific usage. The usage is customer specific and used in the rules for rejections based on flags </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="FullName">
<xs:annotation>
<xs:documentation>Customer full name English</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="160"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="FullNameArabic">
<xs:annotation>
<xs:documentation>Customer full name Arabic</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="160"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="PlaceOfBirth">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="20"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="SupplementaryLimit">
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="IdNumber">
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="22"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="CustomerType">
<xs:annotation>
<xs:documentation>Customer Type</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="CifNumber">
<xs:annotation>
<xs:documentation>CIF Number</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="CountryOfBirth">
<xs:annotation>
<xs:documentation>Country of Birth</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="Nationality">
<xs:annotation>
<xs:documentation>Nationality</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="MobileNumber">
<xs:annotation>
<xs:documentation>Mobile Number</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
</xs:sequence>
</xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ctxtypes="http://ws.core.cortex.com/domain/types" xmlns:currId="http://ws.core.cortex.com/domain/id/currId" xmlns:typns="http://ws.core.cortex.com/domain/types/accdet" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://ws.core.cortex.com/domain/types/accdet">
<xs:import namespace="http://ws.core.cortex.com/domain/types"/>
<xs:import namespace="http://ws.core.cortex.com/domain/id/currId"/>
<xs:complexType name="AccountDetailsType">
<xs:sequence>
<xs:element name="InstitutionCode">
<xs:annotation>
<xs:documentation>Institution code the account belongs to </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="4"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="AccountNumber">
<xs:annotation>
<xs:documentation>Account number identifying an account under a specific institution </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="28"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element ref="currId:Currency">
<xs:annotation>
<xs:documentation>Reference to the Common Currency Identifier Object holding the details of the account currency </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="AccountTypeCode">
<xs:annotation>
<xs:documentation>Code identifying the account type of the account. To get the list of supported values, please use the GetAccountTypeList service </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="2"/>
<xs:maxLength value="2"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="ClassId">
<xs:annotation>
<xs:documentation>Card class identifying the type of the account (debit, credit or charge account) </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:short">
<xs:enumeration value="1">
<xs:annotation>
<xs:documentation>Debit Account</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="2">
<xs:annotation>
<xs:documentation>Credit Account</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="3">
<xs:annotation>
<xs:documentation>Charge Account</xs:documentation>
</xs:annotation>
</xs:enumeration>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="AccountStatus">
<xs:annotation>
<xs:documentation>Status of the account. To get the list of supported value, use the GetAccountStatusList service </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="2"/>
<xs:maxLength value="2"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="VipFlag">
<xs:annotation>
<xs:documentation>Flag indicating if the account belongs to a VIP customer or not </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:enumeration value="0">
<xs:annotation>
<xs:documentation>Not a VIP customer</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="1">
<xs:annotation>
<xs:documentation>VIP customer</xs:documentation>
</xs:annotation>
</xs:enumeration>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="BlockedAmount">
<xs:annotation>
<xs:documentation>Blocked amount on the account (authorized amount that is not yet cleared and not yet debited from the account) </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="UnclearCredit">
<xs:annotation>
<xs:documentation>Unclear credit - similar to blocked amount but for credit authorization. This field is only returned if the web-services are configured to return it </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="AvailableBalance">
<xs:annotation>
<xs:documentation>Available Balance on the account. This is not the value allowed to be spent by the account, the actual value allowed to be spent is the available balance - the blocked amount </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="AvailableBalanceToSpend">
<xs:annotation>
<xs:documentation>Available Balance that can be spent by the account. This value is calculated by subtracting the blocked amount from the available balance </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="CreditLimit">
<xs:annotation>
<xs:documentation>The credit limit of the account </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="RemainingCashLimit">
<xs:annotation>
<xs:documentation> The remaining cash limit of the account that customer can use </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="UserData1">
<xs:annotation>
<xs:documentation>Customer specific data 1. Used for customer specific purposes </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="UserData2">
<xs:annotation>
<xs:documentation>Customer specific data 2. Used for customer specific purposes </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="UserData3">
<xs:annotation>
<xs:documentation>Customer specific data 3. Used for customer specific purposes </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="UserData4">
<xs:annotation>
<xs:documentation>Customer specific data 4. Used for customer specific purposes </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="UserData5">
<xs:annotation>
<xs:documentation>Customer specific data 5. Used for customer specific purposes </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
</xs:sequence>
</xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ctxtypes="http://ws.core.cortex.com/domain/types" xmlns:typns="http://ws.core.cortex.com/domain/types/corpdet" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://ws.core.cortex.com/domain/types/corpdet">
<xs:import namespace="http://ws.core.cortex.com/domain/types"/>
<xs:complexType name="CorporateDetailsType">
<xs:sequence>
<xs:element name="CorporateCode">
<xs:annotation>
<xs:documentation>Unique code identifying the corporate entity in Cortex </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="30"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="Description">
<xs:annotation>
<xs:documentation>Description of the entity </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="50"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="AlternativeDescription">
<xs:annotation>
<xs:documentation>Alternative description of the entity </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="50"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="EntityBusinessDescription">
<xs:annotation>
<xs:documentation>Description of the business of the entity </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="50"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="AlternativeEntityBusinessDescription">
<xs:annotation>
<xs:documentation>Alternative description of the business of the entity </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="50"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="RegistrationNumber">
<xs:annotation>
<xs:documentation>Registration number for the corporate entity </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="30"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="ContractStartDate" type="ctxtypes:CortexDate">
<xs:annotation>
<xs:documentation>Date the contract with the corporate entity started </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="ContractEndDate" type="ctxtypes:CortexDate">
<xs:annotation>
<xs:documentation>Date the contract with the corporate entity ends </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="UnifiedNationalNumber">
<xs:annotation>
<xs:documentation>Unified National Number of the entity </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="30"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
</xs:sequence>
</xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ctxtypes="http://ws.core.cortex.com/domain/types" xmlns:currId="http://ws.core.cortex.com/domain/id/currId" xmlns:typns="http://ws.core.cortex.com/domain/types/cccycledet" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://ws.core.cortex.com/domain/types/cccycledet">
<xs:import namespace="http://ws.core.cortex.com/domain/types"/>
<xs:complexType name="CreditCycleDetailsType">
<xs:all>
<xs:element name="InstitutionCode">
<xs:annotation>
<xs:documentation>Institution code the account belongs to </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="4"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="CycleCode">
<xs:annotation>
<xs:documentation>Unique code identifying the cycle under the institution </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="10"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="CycleDay">
<xs:annotation>
<xs:documentation>Day of the month cycle starts </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:short"/>
</xs:simpleType>
</xs:element>
<xs:element name="DateCycleStart" type="ctxtypes:CortexDate">
<xs:annotation>
<xs:documentation>Date the cycle start </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="DateCycleEnd" type="ctxtypes:CortexDate">
<xs:annotation>
<xs:documentation>Date the cycle ends </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="StatementDate" type="ctxtypes:CortexDate">
<xs:annotation>
<xs:documentation>Date the statement will be generated for accounts under this cycle </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="GraceDaysOffset">
<xs:annotation>
<xs:documentation>Grace days after the end of days before considering an account delinquent. This is never and should never be communicated to the customer </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:short"/>
</xs:simpleType>
</xs:element>
<xs:element name="DueDate" type="ctxtypes:CortexDate">
<xs:annotation>
<xs:documentation>Due date for accounts under this cycle </xs:documentation>
</xs:annotation>
</xs:element>
</xs:all>
</xs:complexType>
</xs:schema>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ccscycledet="http://ws.core.cortex.com/domain/types/cccycledet" xmlns:ctxtypes="http://ws.core.cortex.com/domain/types" xmlns:currId="http://ws.core.cortex.com/domain/id/currId" xmlns:typns="http://ws.core.cortex.com/domain/types/ccaccdet" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://ws.core.cortex.com/domain/types/ccaccdet">
<xs:import namespace="http://ws.core.cortex.com/domain/types"/>
<xs:import namespace="http://ws.core.cortex.com/domain/id/currId"/>
<xs:import namespace="http://ws.core.cortex.com/domain/types/cccycledet"/>
<xs:complexType name="CreditAccountDetailsListType">
<xs:sequence>
<xs:element maxOccurs="unbounded" minOccurs="0" name="CreditAccountDetails" type="typns:CreditAccountDetailsType"/>
</xs:sequence>
</xs:complexType>
<xs:complexType name="CreditAccountDetailsType">
<xs:all>
<xs:element name="InstitutionCode">
<xs:annotation>
<xs:documentation>Institution code the account belongs to </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="4"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="AccountNumber">
<xs:annotation>
<xs:documentation>Account number identifying an account under a specific institution </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="28"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element ref="currId:Currency">
<xs:annotation>
<xs:documentation>Reference to the Common Currency Identifier Object holding the details of the account currency. All amounts under the credit account are expressed in this currency </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="ChargeProfileCode">
<xs:annotation>
<xs:documentation>Charge profile the account belongs to. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="10"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="CcsScheme">
<xs:annotation>
<xs:documentation>Credit Scheme the account belongs to. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="4"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="UserData1">
<xs:annotation>
<xs:documentation>Customer specific user data. Used for custom data </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="UserData2">
<xs:annotation>
<xs:documentation>Customer specific user data 2. Used for custom data </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="32"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="AllowedCashPercentage">
<xs:annotation>
<xs:documentation>Percentage of the credit limit allowed to be used for cash transactions. If not specified, it means there is no restriction on cash transactions. </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:decimal"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="CreditLimit" type="ctxtypes:Amount">
<xs:annotation>
<xs:documentation>Credit Limit assigned for the account. </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="Balance" type="ctxtypes:Amount">
<xs:annotation>
<xs:documentation>Current balance used by the account. This balance DOES NOT include any pending authorization amount (or blocked amount) </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="TotalAmountUsed" type="ctxtypes:Amount">
<xs:annotation>
<xs:documentation>Current balance used by the account including the authorized/blocked amount </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="CurrentCycleBalance" type="ctxtypes:Amount">
<xs:annotation>
<xs:documentation>Balance used in the current cycle. This balance is updated as payments are made </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="PreviousCycleBalance" type="ctxtypes:Amount">
<xs:annotation>
<xs:documentation>Balance used in the previous cycle. This balance is updated as payments are made </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="OldCyclesBalance" type="ctxtypes:Amount">
<xs:annotation>
<xs:documentation>Balances used in old cycles (2 cycles and above). This balance is updated as payments are made </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="StatementBalance" type="ctxtypes:Amount">
<xs:annotation>
<xs:documentation>Balance used in the previous and old cycles (effectively the previous cycle balance + old cycle balance) </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="OTB" type="ctxtypes:Amount">
<xs:annotation>
<xs:documentation>Open to buy for the account. This is mainly calculated using the formula (credit limit) - (balance) + (surplus). The amount does not take into consideration the authorization amount </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="EffectiveOTB" type="ctxtypes:Amount">
<xs:annotation>
<xs:documentation>Effective open to buy for the account including the authorization/blocked amount. This is mainly calculated using the formula (credit limit) - (balance) + (surplus) - (authorized amount) </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="Surplus" type="ctxtypes:Amount">
<xs:annotation>
<xs:documentation>Surplus amount - amount paid above the credit limit. This amount DOES NOT include any pending authorization amount (or blocked amount). Any debit on the account will use the amount from the surplus if available otherwise the balance is updated </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="EffectiveSurplus" type="ctxtypes:Amount">
<xs:annotation>
<xs:documentation>Effective surplus amount excluding the authorization amount in case any </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="Payments" type="ctxtypes:Amount">
<xs:annotation>
<xs:documentation>Amount of payments done so far in the current cycle </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="DelinquencyLevel">
<xs:annotation>
<xs:documentation>Delinquency level of the account which identifies if the account has any pending payments. The delinquency calculation is implementation specific as there are multiple methods available (configured by charge profile). Cortex supports up to delinquency level 6 </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:short">
<xs:minInclusive value="0"/>
<xs:maxInclusive value="6"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="MinimumPayment" type="ctxtypes:Amount">
<xs:annotation>
<xs:documentation>Minimum payment requested from the customer for the current cycle. This field is for information only. Even if the customer does a payment, it is not updated. The DueBalance field will hold the remaining due balance on the account for the current cycle </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="PreviousBalance" type="ctxtypes:Amount">
<xs:annotation>
<xs:documentation>Balance of the account at the end of the previous cycle. This field is for information purpose and is not updated until the next cycle </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="PreviousMinimumPayment" type="ctxtypes:Amount">
<xs:annotation>
<xs:documentation>Minimum payment requested from the customer for the previous cycle. This field is for information purpose only. </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="PreviousSurplus" type="ctxtypes:Amount">
<xs:annotation>
<xs:documentation>Surplus of the account at the end of the previous cycle. For information purposes only </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="ConsecutiveLatePayments">
<xs:annotation>
<xs:documentation>Number of consecutive late payments on the accounts (consecutive number of cycles where the due amount was not paid) </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:short"/>
</xs:simpleType>
</xs:element>
<xs:element name="CycleCode">
<xs:annotation>
<xs:documentation>Code identifying the cycle the account belongs to </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="10"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="CyclePhase">
<xs:annotation>
<xs:documentation>Indicates in which phase the account is currently in. Also can indicate if the account is canceled or in collection. To get the full list of allowed values, use the GetNumericDescription service with tag 'ccscyc'. Main supported values are the following: - -1: Account No Yet Activated - 0: None - 1: After Cycle End, Before Pay By Date (due date) - 2: After Pay By Date (due date) - 3: After End of Cycle - 100: Pre-Collection - to be moved to collection on next end of cycle - 101: In collection - 102: Pre-canceled - to be moved to canceled on next end of cycle - 103: Account canceled (Statements will no longer be generated and no processing done on the account) </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:short"/>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="LastCashMovementDate" type="ctxtypes:CortexDate">
<xs:annotation>
<xs:documentation>Last date there was a cash movement (any cash operation - payment or usage) on the account </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="Debits" type="ctxtypes:Amount">
<xs:annotation>
<xs:documentation>Total amount of debits done during this cycle </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="Credits" type="ctxtypes:Amount">
<xs:annotation>
<xs:documentation>Total amount of credits done during this cycle </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="DueBalance" type="ctxtypes:Amount">
<xs:annotation>
<xs:documentation>Balance due for this cycle. This is the actual amount due to be paid by the customer before the due date. This amount actually changes when a payment is done </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="NotDueBalance" type="ctxtypes:Amount">
<xs:annotation>
<xs:documentation>Total not due balance of the account. In case a payment is done and the account doesn't have a due balance, this field will be updated </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="LastPaymentDate" type="ctxtypes:CortexDate">
<xs:annotation>
<xs:documentation>Date the last payment was received on. Not available if the account does not have any payment done yet </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="InstallmentBalance" type="ctxtypes:Amount">
<xs:annotation>
<xs:documentation>Balance converted to payment plans. This field is for information only and only updated each end of cycle when a new installment is due. </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="PreviousInstallmentBalance" type="ctxtypes:Amount">
<xs:annotation>
<xs:documentation>Installment balance of the account at the end of the previous cycle. For information purpose only </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="LastSatisfiedPayByDate" type="ctxtypes:CortexDate">
<xs:annotation>
<xs:documentation>Last date the pay by date was satisfied (dues were paid on or before the pay by date) </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="ComponentBalanceDetailsList" type="typns:ComponentBalanceDetailsListType">
<xs:annotation>
<xs:documentation>Balance breakdown by component. Each component identifies a type of amount (i.e. cash, fees, purchase) </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="CreditCycleDetails" type="ccscycledet:CreditCycleDetailsType">
<xs:annotation>
<xs:documentation>Cycle details the account belongs to. Only returned in case requested </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="DueAgeDetails" type="typns:DueAgeDetailsType">
<xs:annotation>
<xs:documentation>Due age details in case requested </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="DirectDebitDetails" type="typns:DirectDebitDetailsType">
<xs:annotation>
<xs:documentation>Direct debit details in case requested </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="LastStatementDate" type="ctxtypes:CortexDate">
<xs:annotation>
<xs:documentation>Last statement date</xs:documentation>
</xs:annotation>
</xs:element>
</xs:all>
</xs:complexType>
<xs:complexType name="ComponentBalanceDetailsListType">
<xs:sequence>
<xs:element maxOccurs="unbounded" name="ComponentBalanceDetails" type="typns:ComponentBalanceDetailsType">
<xs:annotation>
<xs:documentation>Details of the balance for a single component </xs:documentation>
</xs:annotation>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="ComponentBalanceDetailsType">
<xs:sequence>
<xs:element name="ComponentCode">
<xs:annotation>
<xs:documentation>Component code identifying the type of balance </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:short">
<xs:minInclusive value="0"/>
<xs:maxInclusive value="9"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="ComponentBalance" type="typns:CycleComponentBalanceType">
<xs:annotation>
<xs:documentation>Breakdown of the component balance per cycles (current, previous and old) </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="DueComponentBalance" type="typns:CycleComponentBalanceType">
<xs:annotation>
<xs:documentation>Breakdown of the due balance of the component per cycle (current, previous, old). Only available for specific requests where returning the due component details can be specified </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element minOccurs="0" name="NotDueComponentBalance" type="typns:CycleComponentBalanceType">
<xs:annotation>
<xs:documentation>Breakdown of the not due balance of the component per cycle (current, previous, old). Only available for specific requests where returning the not due component details can be specified </xs:documentation>
</xs:annotation>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="CycleComponentBalanceType">
<xs:sequence>
<xs:element name="FullBalance" type="ctxtypes:Amount">
<xs:annotation>
<xs:documentation>Full balance of the component for all cycles </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="CurrentCycleBalance" type="ctxtypes:Amount">
<xs:annotation>
<xs:documentation>Balance of the component used in the current cycle </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="PreviousCycleBalance" type="ctxtypes:Amount">
<xs:annotation>
<xs:documentation>Balance of the component used in the previous cycle </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="OldCycleBalance" type="ctxtypes:Amount">
<xs:annotation>
<xs:documentation>Balance of the component used in older cycles </xs:documentation>
</xs:annotation>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="DueAgeDetailsType">
<xs:sequence>
<xs:element maxOccurs="unbounded" name="DueAgeCycleEntry" type="typns:DueAgeCycleEntryType">
<xs:annotation>
<xs:documentation>Individual cycle due age details </xs:documentation>
</xs:annotation>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="DueAgeCycleEntryType">
<xs:sequence>
<xs:element name="Cycle">
<xs:annotation>
<xs:documentation>Cycle for which the details are specified. These are 0 to 6 where 0 is the current cycle due and 6 is the latest cycle due equivalent to delinquency level 6 </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:short">
<xs:maxInclusive value="6"/>
<xs:minInclusive value="0"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element name="DateCycleStarted" type="ctxtypes:CortexDate">
<xs:annotation>
<xs:documentation>Date the cycle started</xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="DueDate" type="ctxtypes:CortexDate">
<xs:annotation>
<xs:documentation>Due date for the cycle payment</xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="AmountDue" type="ctxtypes:Amount">
<xs:annotation>
<xs:documentation>Amount due for this cycle including the over-limit </xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="OverlimitAmount" type="ctxtypes:Amount">
<xs:annotation>
<xs:documentation>Over-limit amount for this cycle (also included in the due amount) </xs:documentation>
</xs:annotation>
</xs:element>
</xs:sequence>
</xs:complexType>
<xs:complexType name="DirectDebitDetailsType">
<xs:sequence>
<xs:element name="PaymentMethod">
<xs:annotation>
<xs:documentation>Specifies the direct debit payment type </xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:short">
<xs:enumeration value="0">
<xs:annotation>
<xs:documentation>None</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="1">
<xs:annotation>
<xs:documentation>Minimum Payment</xs:documentation>
</xs:annotation>
</xs:enumeration>
<xs:enumeration value="2">
<xs:annotation>
<xs:documentation>Full Payment</xs:documentation>
</xs:annotation>
</xs:enumeration>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element minOccurs="0" name="DirectDebitAccountNumber">
<xs:annotation>
<xs:documentation>Direct debit account number</xs:documentation>
</xs:annotation>
<xs:simpleType>
<xs:restriction base="xs:string">
<xs:minLength value="1"/>
<xs:maxLength value="28"/>
</xs:restriction>
</xs:simpleType>
</xs:element>
<xs:element ref="currId:Currency">
<xs:annotation>
<xs:documentation>Direct Debit Account Currency</xs:documentation>
</xs:annotation>
</xs:element>
<xs:element name="DirectDebitPurgeDate" type="ctxtypes:CortexDate">
<xs:annotation>
<xs:documentation>Date after which the direct debit will no longer active. This field will determine if the direct debit is active or not </xs:documentation>
</xs:annotation>
</xs:element>
</xs:sequence>
</xs:complexType>
</xs:schema>
</wsdl:types>
<wsdl:message name="InquireApplicationRequest">
<wsdl:part element="sch0:InquireApplicationRequest" name="InquireApplicationRequest"> </wsdl:part>
</wsdl:message>
<wsdl:message name="InquireApplicationResponse">
<wsdl:part element="sch0:InquireApplicationResponse" name="InquireApplicationResponse"> </wsdl:part>
</wsdl:message>
<wsdl:portType name="InquireApplicationPort">
<wsdl:operation name="InquireApplication">
<wsdl:input message="sch0:InquireApplicationRequest" name="InquireApplicationRequest"> </wsdl:input>
<wsdl:output message="sch0:InquireApplicationResponse" name="InquireApplicationResponse"> </wsdl:output>
</wsdl:operation>
</wsdl:portType>
<wsdl:binding name="InquireApplicationPortSoap11" type="sch0:InquireApplicationPort">
<soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
<wsdl:operation name="InquireApplication">
<soap:operation soapAction=""/>
<wsdl:input name="InquireApplicationRequest">
<soap:body use="literal"/>
</wsdl:input>
<wsdl:output name="InquireApplicationResponse">
<soap:body use="literal"/>
</wsdl:output>
</wsdl:operation>
</wsdl:binding>
<wsdl:service name="InquireApplicationPortService">
<wsdl:port binding="sch0:InquireApplicationPortSoap11" name="InquireApplicationPortSoap11">
<soap:address location="https://10.60.117.80:9443/ctxws/InquireApplication"/>
</wsdl:port>
</wsdl:service>
</wsdl:definitions>