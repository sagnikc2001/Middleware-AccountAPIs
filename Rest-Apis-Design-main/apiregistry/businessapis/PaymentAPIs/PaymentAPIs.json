{
  "openapi": "3.0.3",
  "info": {
    "title": "MW Payments APIs",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://mw-api-3scale-apicast-staging.apps.com:443/api/payments"
    }
  ],
  "paths": {
    "/TransferFund": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "TransferFund",
        "description": "This operation transfers fund between own or third party intra bank accounts for single currency and cross currency.",
        "operationId": "TransferFund",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FundTransferRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/FundTransferResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/PayAtBranch": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "PayAtBranch",
        "description": "This operation do payment by user from branch which will invoke 21016 BaNCS transaction.",
        "operationId": "PayAtBranch",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/BranchPaymentRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BranchPaymentResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/HoldAndRelease": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "HoldAndRelease",
        "description": "This operation will consolidate amount available in payroll file.",
        "operationId": "HoldAndRelease",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HoldAndReleaseRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/HoldAndReleaseResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/AccountTransfer": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "AccountTransfer",
        "description": "This operation Transfer money from one account to another except IBAS channel.",
        "operationId": "AccountTransfer",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AccountTransferRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AccountTransferResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/TransferFundGLToGL": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "TransferFundGLToGL",
        "description": "This operation will transfer amount from GL account to another GL account.",
        "operationId": "TransferFundGLToGL",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GLToGLTransferRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GLToGLTransferResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/TransferFundGLToDeposit": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "TransferFundGLToDeposit",
        "description": "This operation will transfer amount from GL account to deposit account.",
        "operationId": "TransferFundGLToDeposit",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GLToDepositTransferRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GLToDepositTransferResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/TransferFundDepositToGL": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "TransferFundDepositToGL",
        "description": "This operation will transfer amount from deposit account to GL account.",
        "operationId": "TransferFundDepositToGL",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DepositToGLTransferRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DepositToGLTransferResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/TransferFundSWIFT": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "TransferFundSWIFT",
        "description": "This operation will do out SWIFT transfer.",
        "operationId": "TransferFundSWIFT",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/OutgoingSWIFTTransferRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/OutgoingSWIFTTransferResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/TransferFundSARIE": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "TransferFundSARIE",
        "description": "This operation will do In SWIFT and Out SARIE transfer",
        "operationId": "TransferFundSARIE",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InSWIFTOutgoingSARIETransferRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InSWIFTOutgoingSARIETransferResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/IntraBankFundTransfer": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "IntraBankFundTransfer",
        "operationId": "IntraBankFundTransfer",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/IntraTransferRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/IntraTransferResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/InterBankFundTransfer": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "InterBankFundTransfer",
        "operationId": "InterBankFundTransfer",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InterTransferRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InterTransferResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/FundInTransfer": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "FundInTransfer",
        "operationId": "FundInTransfer",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FundInTransferRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/FundInTransferResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ScreenTransfer": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "ScreenTransfer",
        "operationId": "ScreenTransfer",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ScreenTransferRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ScreenTransferResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/MonitorForScreeningFeedback": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "MonitorForScreeningFeedback",
        "operationId": "MonitorForScreeningFeedback",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MonitorForScreeningFeedbackRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MonitorForScreeningFeedbackResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/FundOutRequestForwarder": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "FundOutRequestForwarder",
        "operationId": "FundOutRequestForwarder",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FundOutRequestForwarderRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/FundOutRequestForwarderResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/IntraBeneficiaryTransfer": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "IntraBeneficiaryTransfer",
        "operationId": "IntraBeneficiaryTransfer",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/IntraBeneficiaryTransferRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/IntraBeneficiaryTransferResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CreditDepositAccount": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "CreditDepositAccount",
        "operationId": "CreditDepositAccount",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DepositAccountCreditRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DepositAccountCreditResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/DebitDepositAccount": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "DebitDepositAccount",
        "operationId": "DebitDepositAccount",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DepositAccountDebitRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DepositAccountDebitResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CreditGLAccount": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "CreditGLAccount",
        "operationId": "CreditGLAccount",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GLAccountCreditRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GLAccountCreditResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/DebitGLAccount": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "DebitGLAccount",
        "operationId": "DebitGLAccount",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GLAccountDebitRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GLAccountDebitResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/WithdrawGold": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "WithdrawGold",
        "operationId": "WithdrawGold",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GoldWithdrawlRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GoldWithdrawlResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/TransferFundToBeneficiary": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "TransferFundToBeneficiary",
        "operationId": "TransferFundToBeneficiary",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TransferFundToBeneficiaryRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TransferFundToBeneficiaryResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/InquireInterBankTransaction": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "InquireInterBankTransaction",
        "description": "To fetch outward SARIE/SWIFT transaction details initiated from digital channels.",
        "operationId": "InquireInterBankTransaction",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InterBankTransactionInquiryRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InterBankTransactionInquiryResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/InquireInterBankCancelledTransactions": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "InquireInterBankCancelledTransactions",
        "description": "To fetch the list of payment transactions on which cancellation has been initiated over a period.",
        "operationId": "InquireInterBankCancelledTransactions",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InterBankCancelledTransactionsInquiryRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InterBankCancelledTransactionsInquiryResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CancelInterBankTransaction": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "CancelInterBankTransaction",
        "description": "To cancel outward future dated SARIE transfer initiated from digital channels.",
        "operationId": "CancelInterBankTransaction",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InterBankTransactionCancellationRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InterBankTransactionCancellationResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetValueDateAndCutOffTime": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "GetValueDateAndCutOffTime",
        "operationId": "GetValueDateAndCutOffTime",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ValueDateAndCutOffTimeRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ValueDateAndCutOffTimeResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/TrackSwiftGPIPayment": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "TrackSwiftGPIPayment",
        "description": "Track Swift payments by SWIFT gpi - Global Payment Initiative.\nSWIFT gpi refelcts below,\nWhen is the payment carried out.\nHow much does it cost to make the payment?\nWhere is the payment? \nPayment remains unchanged and homogeneous during the process?",
        "operationId": "TrackSwiftGPIPayment",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TrackSwiftGPIPaymentRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TrackSwiftGPIPaymentResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetMT103Message": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "GetMT103Message",
        "operationId": "GetMT103Message",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MT103MessageRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MT103MessageResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ManageRTPayments": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "ManageRTPayments",
        "description": "RTP - Real Time Payments.\n\t\t\t\t         Initiate and Validate  RTP Service .",
        "operationId": "ManageRTPayments",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ManageRTPaymentsRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ManageRTPaymentsResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetRTPaymentTransactions": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "GetRTPaymentTransactions",
        "description": "RTP - Real Time Payments.\n\t\t\t\t         Payment Enquiry Service.",
        "operationId": "GetRTPaymentTransactions",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetRTPaymentTransactionsRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GetRTPaymentTransactionsResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/InquireProxyDetail": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "InquireProxyDetail",
        "description": "RTP - Real Time Payments.\n\t\t\t\t         Fetch Proxy Detail service.",
        "operationId": "InquireProxyDetail",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InquireProxyDetailRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InquireProxyDetailResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/FetchRTParticipantBanks": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "FetchRTParticipantBanks",
        "description": "RTP - Real Time Payments.\n\t\t\t\t         Fetch IPS Participant bank list.",
        "operationId": "FetchRTParticipantBanks",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FetchRTParticipantBanksRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/FetchRTParticipantBanksResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ManageProxy": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "ManageProxy",
        "description": "Proxy management Service",
        "operationId": "ManageProxy",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ManageProxyRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ManageProxyResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ProxyLookup": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "ProxyLookup",
        "description": "Proxy Lookup Service",
        "operationId": "ProxyLookup",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ProxyLookupRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ProxyLookupResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/GetRTPPaymentType": {
      "post": {
        "tags": [
          "Payments APIs"
        ],
        "description": "RTP - Real Time Payments. Determine Payment Type",
        "operationId": "GetRTPPaymentType",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetRTPPaymentTypeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRTPPaymentTypeResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRTPPaymentTypeResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRTPPaymentTypeResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/FetchRTPLimit": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "FetchRTPLimit",
        "description": "RTP - Real Time Payments.\n\t\t\t\t         Fetch IPS Limits",
        "operationId": "FetchRTPLimit",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FetchRTPLimitRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/FetchRTPLimitResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/MaintainQTLLimit": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "MaintainQTLLimit",
        "operationId": "MaintainQTLLimit",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MaintainQTLLimitRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MaintainQTLLimitResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/MultiDebitMultiCredit": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "MultiDebitMultiCredit",
        "operationId": "MultiDebitMultiCredit",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MultiDebitMultiCreditRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MultiDebitMultiCreditResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ValidateBenAccountRTP": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "ValidateBenAccountRTP",
        "description": "Functionality : Account Verification .\n\t\t\t\tDescription : The service provides true or false response on validity and status of beneficiary account details sent in request .",
        "operationId": "ValidateBenAccountRTP",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ValidateBenAccountRTPRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ValidateBenAccountRTPResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ActOnRequestToPayRTP": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "ActOnRequestToPayRTP",
        "description": "Functionality : Request To Pay .\n\t\t\t\tDescription : This service allows participant to update and act on rtp request, whether incoming or outgoing .",
        "operationId": "ActOnRequestToPayRTP",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ActOnRequestToPayRTPRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ActOnRequestToPayRTPResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/InquireRequestToPayRTP": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "InquireRequestToPayRTP",
        "description": "Functionality : Request To Pay .\n\t\t\t\tDescription : It provides a way to retrieve incoming and outgoing request to pay requests by providing their reference, status, amount and debtor and creditor information among other details .",
        "operationId": "InquireRequestToPayRTP",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InquireRequestToPayRTPRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InquireRequestToPayRTPResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/InquireRTPProductTypes": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "InquireRTPProductTypes",
        "description": "Functionality : Request To Pay .\n\t\t\t\tDescription : This service provides a list of predefined product types to be used for Request to Pay exchanges.",
        "operationId": "InquireRTPProductTypes",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InquireRTPProductTypesRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InquireRTPProductTypesResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/RequestToPayRTP": {
      "post": {
        "tags": [
          "Payments APIs Stage"
        ],
        "summary": "RequestToPayRTP",
        "description": "Functionality : Request To Pay .\n\t\t\t\tDescription : It allows to create and send RequestToPay request to a local bank via IPS.",
        "operationId": "RequestToPayRTP",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestToPayRTPRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RequestToPayRTPResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "components": {
    "schemas": {
      "tns_TransferFundRequest": {
        "title": "tns_TransferFundRequest",
        "required": [
          "fromAccountId",
          "toAccountId",
          "fromAmount",
          "toAmount",
          "description",
          "description2",
          "override",
          "postDate",
          "journalId",
          "promoCode",
          "shortCIF",
          "baseCurrencyAmount",
          "commissionAmount",
          "chargeAmount",
          "treasuryRate",
          "atmTime",
          "atmDate",
          "atmReference",
          "atmTerminal",
          "atmCardId"
        ],
        "type": "object",
        "properties": {
          "fromAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "toAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "fromAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "toAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "description": {
            "type": "string"
          },
          "description2": {
            "type": "string"
          },
          "override": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_override"
              }
            ]
          },
          "postDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "journalId": {
            "type": "string"
          },
          "promoCode": {
            "type": "string"
          },
          "shortCIF": {
            "pattern": "([0-9]){8}|([0]){1}",
            "type": "string"
          },
          "baseCurrencyAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "commissionAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "chargeAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "treasuryRate": {
            "type": "number"
          },
          "atmTime": {
            "pattern": "[+'\\-'.'](([01][0'\\-'.'9])|(2[0'\\-'.'3]))(:[0'\\-'.'5][0'\\-'.'9]){2}(\\.[0'\\-'.'9]+)?",
            "type": "string"
          },
          "atmDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "atmReference": {
            "type": "string"
          },
          "atmTerminal": {
            "type": "string"
          },
          "atmCardId": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_TransferFundResponse": {
        "title": "tns_TransferFundResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_TransferFundResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_FundTransferRequest": {
        "title": "tns_FundTransferRequest",
        "required": [
          "fromAccountId",
          "toAccountId",
          "fromAmount",
          "toAmount",
          "override"
        ],
        "type": "object",
        "properties": {
          "fromAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "toAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "fromAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "toAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "description": {
            "type": "string"
          },
          "description2": {
            "type": "string"
          },
          "override": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_override"
              }
            ]
          },
          "treasuryRate": {
            "type": "number"
          },
          "postDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "journalId": {
            "type": "string"
          },
          "shortCIF": {
            "pattern": "([0-9]){8}|([0]){1}",
            "type": "string"
          },
          "promoCode": {
            "type": "string"
          },
          "baseCurrencyAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "commissionAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "chargeAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "atmTime": {
            "pattern": "[+'\\-'.'](([01][0'\\-'.'9])|(2[0'\\-'.'3]))(:[0'\\-'.'5][0'\\-'.'9]){2}(\\.[0'\\-'.'9]+)?",
            "type": "string"
          },
          "atmDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "atmReference": {
            "type": "string"
          },
          "atmTerminal": {
            "type": "string"
          },
          "atmCardId": {
            "type": "string"
          },
          "fxDeal": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_FXDealType"
              }
            ]
          },
          "AMLPurposeCode": {
            "type": "string"
          },
          "categoryOfTransaction": {
            "type": "string"
          },
          "secondLevelPurpose": {
            "type": "string"
          },
          "relationships": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_FundTransferResponse": {
        "title": "tns_FundTransferResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_TransferFundResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_FXDealType": {
        "title": "tns_FXDealType",
        "required": [
          "cif",
          "dealDate",
          "buyCurrency",
          "buyAmount",
          "sellCurrency",
          "contractBuyDate",
          "contractSellDate",
          "paymentComments",
          "contractRate",
          "treasuryRate",
          "channelReference",
          "description",
          "communicationFinprod",
          "communicationMode"
        ],
        "type": "object",
        "properties": {
          "cif": {
            "pattern": "([0-9]){14}|([0]){1}",
            "type": "string"
          },
          "dealDate": {
            "pattern": "([0-9]){8}",
            "type": "string"
          },
          "buyCurrency": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          },
          "buyAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "sellCurrency": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          },
          "contractBuyDate": {
            "pattern": "([0-9]){8}",
            "type": "string"
          },
          "contractSellDate": {
            "pattern": "([0-9]){8}",
            "type": "string"
          },
          "paymentComments": {
            "type": "string"
          },
          "contractRate": {
            "minimum": 0.0,
            "type": "number"
          },
          "treasuryRate": {
            "type": "number"
          },
          "channelReference": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "communicationFinprod": {
            "type": "string"
          },
          "communicationMode": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_TransferFundResponseType": {
        "title": "tns_TransferFundResponseType",
        "required": [
          "fromAccountId",
          "fromBalance",
          "toBalance",
          "journalId"
        ],
        "type": "object",
        "properties": {
          "fromAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "fromBalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "toBalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "journalId": {
            "type": "string"
          },
          "fxDealReference": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_PayToBeneficiaryRequestType": {
        "title": "tns_PayToBeneficiaryRequestType",
        "required": [
          "accountId",
          "uti",
          "debitAmount",
          "transferAmount",
          "isSariePayment"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "uti": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string"
          },
          "debitAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "debitCurrency": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          },
          "transferAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "transferCurrency": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          },
          "commission": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "beneficiaryName": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "beneficiaryAccountId": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "beneficiaryBranch": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "beneficiaryAddress1": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "beneficiaryAddress2": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "beneficiaryAddress3": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "swiftBIC": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "bankRouteCode": {
            "maxLength": 20,
            "type": "string"
          },
          "bankName": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "bankAddress1": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "bankAddress2": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "bankAddress3": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "bankIdBIC": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "instructions1": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "instructions2": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "instructions3": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "instructions4": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "remitterName": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "remitterAddress1": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "remitterAddress2": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "remitterAddress3": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "remitterPhone": {
            "type": "string"
          },
          "baseCurrencyAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "charges": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "chargeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_chargeType"
              }
            ]
          },
          "bankCharge": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_bankCharge"
              }
            ]
          },
          "accountWithOpt": {
            "type": "string"
          },
          "correspondingBankCharges": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "reasonCode": {
            "maxLength": 10,
            "type": "string"
          },
          "reasonDetail": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "isSariePayment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_isSariePayment"
              }
            ]
          },
          "paymentDate": {
            "pattern": "([0-9]){8}",
            "type": "string"
          },
          "treasuryRate": {
            "type": "number"
          },
          "fxDeal": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_FXDealType"
              }
            ]
          },
          "AMLPurposeCode": {
            "type": "string"
          },
          "instructions5": {
            "type": "string"
          },
          "instructions6": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_PayToBeneficiaryResponse": {
        "title": "tns_PayToBeneficiaryResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_PayToBeneficiaryResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_PayToBeneficiaryWithFXDealRequest": {
        "title": "tns_PayToBeneficiaryWithFXDealRequest",
        "required": [
          "accID",
          "UTI",
          "debitAmount",
          "transferAmount",
          "shortCIF",
          "isSariePayment"
        ],
        "type": "object",
        "properties": {
          "accID": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "UTI": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string"
          },
          "templateId": {
            "maxLength": 12,
            "type": "string"
          },
          "debitAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "debitCurrency": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          },
          "transferAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "transferCurrency": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          },
          "commission": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "shortCIF": {
            "pattern": "([0-9]){8}|([0]){1}",
            "type": "string"
          },
          "beneficiaryName": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "beneficiaryAccID": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "IBANAuthorisation": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "beneficiaryBranch": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "beneficiaryAddress1": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "beneficiaryAddress2": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "beneficiaryAddress3": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "bankID_BIC": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "acctWithOpt": {
            "type": "string"
          },
          "swiftBic": {
            "pattern": "[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}",
            "type": "string"
          },
          "bankRouteCode": {
            "maxLength": 20,
            "type": "string"
          },
          "bankName": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "bankAddress1": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "bankAddress2": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "bankAddress3": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "beneLocIdNo": {
            "pattern": "[A-Z]{2,2}",
            "type": "string"
          },
          "beneBnkLocIdNo": {
            "pattern": "[A-Z]{2,2}",
            "type": "string"
          },
          "instructions1": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "instructions2": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "instructions3": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "instructions4": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "remitterName": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "remitterAddress1": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "remitterAddress2": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "remitterAddress3": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "remitterPhone": {
            "type": "string"
          },
          "baseCurrencyAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "charges": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "chargeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_chargeType"
              }
            ]
          },
          "correspondantBankCharges": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "tFxRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "rateType": {
            "type": "integer",
            "format": "int32"
          },
          "reasonCode": {
            "maxLength": 10,
            "type": "string"
          },
          "reasonDetail": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "isSariePayment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_isSariePayment"
              }
            ]
          },
          "paymentDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "override": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string"
          },
          "value": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string"
          },
          "segmentLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "journal": {
            "type": "integer",
            "format": "int32"
          },
          "branch": {
            "type": "string"
          },
          "fxDeal": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_FXDealType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_PayToBeneficiaryWithFXDealResponse": {
        "title": "tns_PayToBeneficiaryWithFXDealResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_PayToBeneficiaryResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_PayToBeneficiaryResponseType": {
        "title": "tns_PayToBeneficiaryResponseType",
        "required": [
          "journalNumber",
          "transcationDate",
          "uti"
        ],
        "type": "object",
        "properties": {
          "journalNumber": {
            "type": "string"
          },
          "transcationDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "uti": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string"
          },
          "fxDealReference": {
            "type": "string"
          },
          "remitterLanguage": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_BranchPaymentRequest": {
        "title": "tns_BranchPaymentRequest",
        "required": [
          "fromAccountId",
          "fromAmount",
          "beneficiaryName",
          "generateSwiftMessage",
          "toAmount",
          "baseCurrencyAmount",
          "commision",
          "feeAmount",
          "swiftCharges",
          "RelationShip",
          "OrderDetails1",
          "OrderDetails2",
          "OrderDetails3",
          "OrderDetails4",
          "beneficiaryAccountId",
          "correspodentBankId"
        ],
        "type": "object",
        "properties": {
          "fromAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "fromAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "carrierType": {
            "maxLength": 1,
            "type": "string"
          },
          "promoCode": {
            "maxLength": 2,
            "type": "string"
          },
          "journal": {
            "type": "integer",
            "format": "int32"
          },
          "beneficiaryName": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "generateSwiftMessage": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_generateSwiftMessage"
              }
            ]
          },
          "toAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "toAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "baseCurrencyAmount": {
            "type": "number"
          },
          "commision": {
            "type": "number"
          },
          "feeAmount": {
            "type": "number"
          },
          "rateType": {
            "type": "integer",
            "format": "int32",
            "default": 4
          },
          "currencyVersion": {
            "maxLength": 4,
            "minLength": 4,
            "type": "string",
            "default": "ZZZZ"
          },
          "swiftCharges": {
            "type": "number"
          },
          "RelationShip": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "beneficiaryAddress2": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "beneficiaryAddress3": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "OrderDetails1": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "OrderDetails2": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "OrderDetails3": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "OrderDetails4": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "deferredIntDaysCredit": {
            "maximum": 2.0,
            "minimum": 0.0,
            "type": "number",
            "default": 0
          },
          "deferredIntDaysDebit": {
            "maximum": 2.0,
            "minimum": 0.0,
            "type": "number",
            "default": 0
          },
          "valueDate": {
            "pattern": "([0-9]){8}",
            "type": "string"
          },
          "applicationId": {
            "type": "integer",
            "format": "int32"
          },
          "beneficiaryAccountId": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "correspodentBankId": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string"
          },
          "orderCustomerAccountNumber": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "orderCustomerdetailsOpt": {
            "maxLength": 1,
            "type": "string"
          },
          "accountName": {
            "maxLength": 60,
            "type": "string"
          },
          "bookingNumber": {
            "maxLength": 7,
            "type": "string"
          },
          "idType": {
            "maxLength": 4,
            "type": "string"
          },
          "idNumber": {
            "maxLength": 24,
            "type": "string"
          },
          "contactNumber": {
            "maxLength": 12,
            "type": "string"
          },
          "expectedCommision": {
            "maxLength": 18,
            "type": "string"
          },
          "commisionFlag": {
            "maxLength": 1,
            "type": "string"
          },
          "previousTransReferanceNumber": {
            "maxLength": 22,
            "type": "string"
          },
          "transactionReferance": {
            "maxLength": 5,
            "type": "string"
          },
          "externalDetails": {
            "maxLength": 1,
            "type": "string"
          },
          "swiftReferanceNumber": {
            "maxLength": 10,
            "type": "string"
          },
          "BeneficiaryDetailsOpt": {
            "maxLength": 1,
            "type": "string"
          },
          "treasuryRate": {
            "type": "number"
          },
          "localReferanceNumber": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": ""
      },
      "tns_BranchPaymentResponse": {
        "title": "tns_BranchPaymentResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_BranchPaymentResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_BranchPaymentResponseType": {
        "title": "tns_BranchPaymentResponseType",
        "required": [
          "journalId",
          "uti",
          "balance"
        ],
        "type": "object",
        "properties": {
          "journalId": {
            "type": "string"
          },
          "uti": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string"
          },
          "balance": {
            "type": "number"
          }
        },
        "description": ""
      },
      "tns_HoldAndReleaseRequest": {
        "title": "tns_HoldAndReleaseRequest",
        "required": [
          "accountID",
          "amount"
        ],
        "type": "object",
        "properties": {
          "accountID": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "amount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "holdFlag": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_holdFlag"
              }
            ]
          },
          "reasonCode": {
            "maxLength": 14,
            "type": "string"
          },
          "referenceNumber": {
            "maxLength": 20,
            "type": "string"
          },
          "retry": {
            "maxLength": 1,
            "type": "string"
          },
          "override": {
            "maxLength": 1,
            "type": "string"
          },
          "description": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_HoldAndReleaseResponse": {
        "title": "tns_HoldAndReleaseResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_HoldAndReleaseResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_HoldAndReleaseResponseType": {
        "title": "tns_HoldAndReleaseResponseType",
        "required": [
          "accountId",
          "journalId",
          "referenceNumber"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "journalId": {
            "type": "string"
          },
          "referenceNumber": {
            "maxLength": 20,
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_AccountTransferRequest": {
        "title": "tns_AccountTransferRequest",
        "required": [
          "fromAccountId",
          "fromAmount",
          "toAccountId",
          "toAmount",
          "commissionAmount",
          "transactionFees",
          "baseCurrencyAmount"
        ],
        "type": "object",
        "properties": {
          "fromAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "fromAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "toAccountId": {
            "type": "string"
          },
          "toAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "postingDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "promoCode": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string"
          },
          "commissionAmount": {
            "allOf": [
              {
                "oneOf": [
                  {
                    "nullable": true
                  },
                  {
                    "$ref": "#/components/schemas/Q1_Money"
                  }
                ]
              }
            ]
          },
          "transactionFees": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "otherCharges": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "baseCurrencyAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "rateType": {
            "type": "integer",
            "format": "int32",
            "default": 3
          },
          "currencyVersion": {
            "maxLength": 4,
            "minLength": 4,
            "type": "string",
            "default": "ZZZZ"
          },
          "description1": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "description2": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "journalNumber": {
            "type": "string",
            "default": "0"
          },
          "bookingNumber": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "treasuryRate": {
            "type": "number"
          },
          "requestDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "mnemonicCode": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string",
            "default": "EF"
          },
          "deferredIntDaysCredit": {
            "maximum": 2.0,
            "minimum": 0.0,
            "type": "number",
            "default": 0
          },
          "deferredIntDaysDebit": {
            "maximum": 2.0,
            "minimum": 0.0,
            "type": "number",
            "default": 0
          },
          "valueDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "referenceNo": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "moneyReceiptNo": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "voucherNo": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "arabicName": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "englishName": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "purpose1": {
            "type": "string"
          },
          "purpose2": {
            "type": "string"
          },
          "override": {
            "type": "string"
          },
          "chargeAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "shortCIF": {
            "type": "string"
          },
          "segmentLimit": {
            "type": "string",
            "default": "0"
          },
          "narrative": {
            "type": "string"
          },
          "option": {
            "type": "string"
          },
          "subscriberId": {
            "type": "string"
          },
          "deleteIPORecord": {
            "type": "string"
          },
          "AMLPurposeCode": {
            "type": "string"
          },
          "Limit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_LimitType"
              }
            ]
          },
          "subscriberIdType": {
            "maxLength": 4,
            "type": "string",
            "description": "ID TYPE"
          },
          "amendReason": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_AccountTransferResponse": {
        "title": "tns_AccountTransferResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_TransferResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_PaymentTransferResponse": {
        "title": "tns_PaymentTransferResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_TransferResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_TransferResponseType": {
        "title": "tns_TransferResponseType",
        "required": [
          "fromAccountNumber",
          "toAccountNumber",
          "reference"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "transactionStatus": {
            "type": "string"
          },
          "transactionStatusCode": {
            "maxLength": 3,
            "type": "string"
          },
          "journalNumber": {
            "type": "string"
          },
          "transactionMessage": {
            "type": "string"
          },
          "transactionDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "fromAccountNumber": {
            "type": "string"
          },
          "toAccountNumber": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          },
          "balance": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_TransferResponseType1": {
        "title": "tns_TransferResponseType1",
        "type": "object",
        "properties": {
          "journalNumber": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_SendPaymentResponse": {
        "title": "tns_SendPaymentResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_SendPaymentResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_SendPaymentResponseType": {
        "title": "tns_SendPaymentResponseType",
        "type": "object",
        "properties": {
          "journalNumber": {
            "type": "string"
          },
          "UTI": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string"
          },
          "remitterName": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "remitterNameLanguage": {
            "type": "string"
          },
          "balance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "valueDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "FXDealImportRefNumber": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_GLToGLTransferRequest": {
        "title": "tns_GLToGLTransferRequest",
        "required": [
          "fromAccountId",
          "fromAmount",
          "toAccountId",
          "toAmount",
          "baseCurrencyAmount"
        ],
        "type": "object",
        "properties": {
          "fromAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "fromAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "transactionDesc": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "promoCode": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string"
          },
          "toAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "purposeOfTransfer1": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "purposeOfTransfer2": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "toAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "baseCurrencyAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "commissionAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "chargeAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "rateType": {
            "type": "integer",
            "format": "int32"
          },
          "currencyVersion": {
            "maxLength": 4,
            "minLength": 4,
            "type": "string",
            "default": "ZZZZ"
          },
          "deferredIntDay": {
            "maximum": 2.0,
            "minimum": 0.0,
            "type": "number"
          },
          "debtDeferredIntDays": {
            "maximum": 2.0,
            "minimum": 0.0,
            "type": "number"
          },
          "depNonValDays": {
            "maximum": 2.0,
            "minimum": 0.0,
            "type": "number"
          },
          "statementNarrative": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string"
          },
          "bookingNum": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "MRN": {
            "type": "integer",
            "format": "int32"
          },
          "MRN2": {
            "type": "integer",
            "format": "int32"
          },
          "treasuryRate": {
            "type": "number"
          },
          "AMLPurposeCode": {
            "type": "string"
          },
          "dealId": {
            "type": "string"
          },
          "pnlAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "action": {
            "type": "string"
          },
          "creditCardDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_creditCardDetailsType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_creditCardDetailsType": {
        "title": "tns_creditCardDetailsType",
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string"
          },
          "paymentReferenceCode": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "purpose": {
            "type": "string"
          },
          "relationship": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_GLToGLTransferResponse": {
        "title": "tns_GLToGLTransferResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_TransferResponseType1"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_DepositToGLTransferRequest": {
        "title": "tns_DepositToGLTransferRequest",
        "required": [
          "fromAccountId",
          "toAccountID",
          "amount"
        ],
        "type": "object",
        "properties": {
          "fromAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "dueAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "promoCode": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string"
          },
          "toAccountID": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "purposeOfTransfer1": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "purposeOfTransfer2": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "amount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "baseCurrencyAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "commissionAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "chargeAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "rateType": {
            "type": "integer",
            "format": "int32"
          },
          "statementNarrative": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string"
          },
          "bookingNumber": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "treasuryRate": {
            "type": "number"
          },
          "journalNumber": {
            "type": "string",
            "default": "0"
          },
          "override": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_override"
              }
            ]
          },
          "referenceNo": {
            "type": "integer",
            "format": "int32"
          },
          "isNCBC": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_YorNTypeOptional"
              }
            ]
          },
          "ncbcPromoCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_YorNTypeOptional"
              }
            ]
          },
          "postingDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "fxDeal": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_FXDealType_11"
              }
            ]
          },
          "toAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              }
            ]
          },
          "mtNumber": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_DepositToGLTransferResponse": {
        "title": "tns_DepositToGLTransferResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_DepositToGLTransferResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_DepositToGLTransferResponseType": {
        "title": "tns_DepositToGLTransferResponseType",
        "type": "object",
        "properties": {
          "journalNumber": {
            "type": "string"
          },
          "journalReversalNumber": {
            "type": "string"
          },
          "referenceNumber": {
            "type": "string"
          },
          "balanceAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GLToDepositTransferRequest": {
        "title": "tns_GLToDepositTransferRequest",
        "required": [
          "fromAccountId",
          "fromAmount",
          "toAccountId",
          "toAmount",
          "baseCurrencyAmount",
          "commissionAmount"
        ],
        "type": "object",
        "properties": {
          "fromAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "fromAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "promoCode": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string"
          },
          "referenceNo": {
            "type": "integer",
            "format": "int32"
          },
          "toAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "purposeOfTransfer1": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "purposeOfTransfer2": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "toAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "baseCurrencyAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "commissionAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "chargeAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "rateType": {
            "type": "integer",
            "format": "int32"
          },
          "currencyVersion": {
            "maxLength": 4,
            "minLength": 4,
            "type": "string",
            "default": "ZZZZ"
          },
          "subscriberNo": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string"
          },
          "deferredIntDay": {
            "maximum": 2.0,
            "minimum": 0.0,
            "type": "number"
          },
          "debtDeferredIntDays": {
            "maximum": 2.0,
            "minimum": 0.0,
            "type": "number"
          },
          "depNonValDays": {
            "maximum": 2.0,
            "minimum": 0.0,
            "type": "number"
          },
          "statementNarrative": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string"
          },
          "bookingNum": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "MRN": {
            "type": "integer",
            "format": "int32"
          },
          "voucherNumer": {
            "type": "integer",
            "format": "int32"
          },
          "subscriberIdType": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string"
          },
          "REDFContract": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "contractDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "arabicName": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "englishName": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "bankCode": {
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "isOmniAccount": {
            "type": "boolean",
            "default": false
          },
          "treasuryRate": {
            "type": "number"
          },
          "transCurrencyCode": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          },
          "fill": {
            "type": "string"
          },
          "deleteIPORecord": {
            "type": "string"
          },
          "changeAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "journalNumber": {
            "type": "string",
            "default": "0"
          },
          "override": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_override"
              }
            ]
          },
          "fxDeal": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_FXDealType_11"
              }
            ]
          },
          "amendReason": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_GLToDepositTransferResponse": {
        "title": "tns_GLToDepositTransferResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GLToDepositTransferResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GLToDepositTransferResponseType": {
        "title": "tns_GLToDepositTransferResponseType",
        "type": "object",
        "properties": {
          "journalNumber": {
            "type": "string"
          },
          "journalReversalNumber": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_OutgoingSWIFTTransferResponse": {
        "title": "tns_OutgoingSWIFTTransferResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_TransferResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_InSWIFTOutgoingSARIETransferResponse": {
        "title": "tns_InSWIFTOutgoingSARIETransferResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_TransferResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_FeesRequest": {
        "title": "tns_FeesRequest",
        "required": [
          "accountId",
          "type",
          "countryCode"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_type"
              }
            ]
          },
          "countryCode": {
            "pattern": "[A-Z]{2,2}",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_FeesResponse": {
        "title": "tns_FeesResponse",
        "required": [
          "sucess"
        ],
        "type": "object",
        "properties": {
          "sucess": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_FeeResponseType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_FeeResponseType": {
        "title": "tns_FeeResponseType",
        "required": [
          "fee"
        ],
        "type": "object",
        "properties": {
          "fee": {
            "type": "string"
          },
          "valueDate": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_IntraTransferRequest": {
        "title": "tns_IntraTransferRequest",
        "required": [
          "fromAccountId",
          "toAccountId",
          "fromAmount",
          "toAmount",
          "override"
        ],
        "type": "object",
        "properties": {
          "fromAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "toAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "fromAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "toAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "description": {
            "type": "string"
          },
          "description2": {
            "type": "string"
          },
          "override": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_override"
              }
            ]
          },
          "treasuryRate": {
            "type": "number"
          },
          "postDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "journalId": {
            "type": "string"
          },
          "shortCIF": {
            "pattern": "([0-9]){8}|([0]){1}",
            "type": "string"
          },
          "promoCode": {
            "type": "string"
          },
          "baseCurrencyAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "serviceFee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "atmTime": {
            "pattern": "[+'\\-'.'](([01][0'\\-'.'9])|(2[0'\\-'.'3]))(:[0'\\-'.'5][0'\\-'.'9]){2}(\\.[0'\\-'.'9]+)?",
            "type": "string"
          },
          "atmDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "atmReference": {
            "type": "string"
          },
          "atmTerminal": {
            "type": "string"
          },
          "atmCardId": {
            "type": "string"
          },
          "fxDeal": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_FXDealType1"
              }
            ]
          },
          "AMLPurposeCode": {
            "type": "string"
          },
          "overrideFlag": {
            "type": "string"
          },
          "categoryOfTransaction": {
            "type": "string"
          },
          "secondLevelPurpose": {
            "type": "string"
          },
          "relationships": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_IntraTransferResponse": {
        "title": "tns_IntraTransferResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_IntraTransferResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_IntraTransferResponseType": {
        "title": "tns_IntraTransferResponseType",
        "required": [
          "fromAccountId",
          "fromBalance",
          "toBalance",
          "journalId"
        ],
        "type": "object",
        "properties": {
          "fromAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "fromBalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "toBalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "journalId": {
            "type": "string"
          },
          "fxDealReference": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_IntraBeneficiaryTransferResponseType": {
        "title": "tns_IntraBeneficiaryTransferResponseType",
        "type": "object",
        "properties": {
          "benficiaryId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_BeneficiaryId"
              }
            ]
          },
          "fromAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "fromBalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "toBalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "journalId": {
            "type": "string"
          },
          "fxDealReference": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "customerIdType": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "customerName2": {
            "type": "string"
          },
          "record": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_BeneficiaryType"
            },
            "description": ""
          },
          "totalBeneficiaryRecords": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": ""
      },
      "tns_BeneficiaryType": {
        "title": "tns_BeneficiaryType",
        "type": "object",
        "properties": {
          "cif": {
            "pattern": "([0-9]){14}|([0]){1}|()",
            "type": "string"
          },
          "beneficiaryAccountCurrency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          },
          "beneficiaryAccountNumber": {
            "type": "string"
          },
          "beneficiaryBankCountry": {
            "pattern": "([A-Z]{2,2})|()",
            "type": "string"
          },
          "beneficiaryBankCity": {
            "type": "string"
          },
          "beneficiaryBankId": {
            "type": "string"
          },
          "beneficiaryCity": {
            "type": "string"
          },
          "beneficiaryId": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "beneficiaryName": {
            "type": "string"
          },
          "beneficiaryNickName": {
            "type": "string"
          },
          "beneficiaryRef": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "branchSortCode": {
            "type": "string"
          },
          "beneficiaryBankName": {
            "type": "string"
          },
          "corpId": {
            "type": "string"
          },
          "swiftbic": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "reasonCode": {
            "type": "string"
          },
          "postalAddress": {
            "type": "string"
          },
          "beneficiaryPhone": {
            "type": "string"
          },
          "remitterName": {
            "type": "string"
          },
          "remitterCity": {
            "type": "string"
          },
          "remitterCountry": {
            "type": "string"
          },
          "routeCode": {
            "type": "string"
          },
          "remitterAddress": {
            "type": "string"
          },
          "beneficiaryType": {
            "type": "string"
          },
          "beneficiaryZip": {
            "type": "string"
          },
          "beneficiaryState": {
            "type": "string"
          },
          "beneficiaryCountry": {
            "type": "string"
          },
          "iBanApprove": {
            "type": "string"
          },
          "beneficiaryFax": {
            "type": "string"
          },
          "beneficiaryBankBranchId": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_InterTransferRequestType": {
        "title": "tns_InterTransferRequestType",
        "required": [
          "accountId",
          "uti",
          "debitAmount",
          "transferAmount",
          "isSariePayment"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "uti": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string"
          },
          "debitAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "debitCurrency": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          },
          "transferAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "transferCurrency": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          },
          "commission": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "beneficiaryName": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "beneficiaryAccountId": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "beneficiaryBranch": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "beneficiaryAddress1": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "beneficiaryAddress2": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "beneficiaryAddress3": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "swiftBIC": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "bankRouteCode": {
            "maxLength": 20,
            "type": "string"
          },
          "bankName": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "bankAddress1": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "bankAddress2": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "bankAddress3": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "bankIdBIC": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "instructions1": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "instructions2": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "instructions3": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "instructions4": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "remitterName": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "remitterAddress1": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "remitterAddress2": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "remitterAddress3": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "remitterPhone": {
            "type": "string"
          },
          "baseCurrencyAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "serviceFee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "chargeType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_chargeType"
              }
            ]
          },
          "bankCharge": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_bankCharge"
              }
            ]
          },
          "accountWithOpt": {
            "type": "string",
            "description": "Beneficiary bank ref type, default value 5 being\r\n\t\t\t\t\t\tused for MOF / GOVT payment."
          },
          "correspondingBankCharges": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "reasonCode": {
            "maxLength": 10,
            "type": "string"
          },
          "reasonDetail": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "isSariePayment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_isSariePayment"
              }
            ]
          },
          "paymentDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "treasuryRate": {
            "type": "number"
          },
          "fxDeal": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_FXDealType1"
              }
            ]
          },
          "AMLPurposeCode": {
            "type": "string"
          },
          "overrideFlag": {
            "type": "string"
          },
          "feeInRemAcctCurrency": {
            "type": "number",
            "description": "fee in remitter account currency"
          },
          "paymentType": {
            "type": "string",
            "description": "identifies if MOF/GOVT payment or private,\r\n\t\t\t\t\t\tdefault value 100 being used for MOF/GOVT\r\n\t\t\t\t\t\tpayment."
          },
          "depositorAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "When MOF is received, TCS Payment sends\r\n\t\t\t\t\t\tdepositor number in outgoing SWIFT rather than\r\n\t\t\t\t\t\tdebtor account . Depositor Account Number. This\r\n\t\t\t\t\t\twill be populated in tag50 of MOF payment\r\n\t\t\t\t\t\tmessage"
          },
          "instructions5": {
            "type": "string"
          },
          "instructions6": {
            "type": "string"
          },
          "instructions7": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_InterTransferResponse": {
        "title": "tns_InterTransferResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InterTransferResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_InterTransferResponseType": {
        "title": "tns_InterTransferResponseType",
        "required": [
          "journalId",
          "transcationDate",
          "uti"
        ],
        "type": "object",
        "properties": {
          "journalId": {
            "type": "string"
          },
          "transcationDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "uti": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string"
          },
          "fxDealReference": {
            "type": "string"
          },
          "remitterLanguage": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_FXDealType1": {
        "title": "tns_FXDealType1",
        "required": [
          "dealId",
          "provider",
          "bidRateAmount",
          "tradingEngineUser",
          "quoteTimeOut",
          "soapProcessorDn"
        ],
        "type": "object",
        "properties": {
          "dealId": {
            "type": "string"
          },
          "provider": {
            "type": "string"
          },
          "bidRateAmount": {
            "type": "number"
          },
          "tradingEngineUser": {
            "type": "string"
          },
          "quoteTimeOut": {
            "type": "string"
          },
          "soapProcessorDn": {
            "type": "string"
          },
          "pnlAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "clientRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_FundInTransferRequest": {
        "title": "tns_FundInTransferRequest",
        "required": [
          "fromAccountId",
          "toAccountId",
          "fromAmount",
          "toAmount",
          "description",
          "shortCIF",
          "transCurrencyCode",
          "transactionAmount",
          "transferPurpose1"
        ],
        "type": "object",
        "properties": {
          "fromAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "toAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "fromAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "toAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "description": {
            "type": "string"
          },
          "shortCIF": {
            "pattern": "([0-9]){8}|([0]){1}",
            "type": "string"
          },
          "transCurrencyCode": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          },
          "atmInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_atmInfoType"
              }
            ]
          },
          "transactionAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "transferPurpose1": {
            "type": "string"
          },
          "AMLPurposeCode": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "description": "Account type (BGL)"
          }
        },
        "description": ""
      },
      "tns_FundInTransferResponse": {
        "title": "tns_FundInTransferResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_FundInTransferResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_FundInTransferResponseType": {
        "title": "tns_FundInTransferResponseType",
        "required": [
          "journalId"
        ],
        "type": "object",
        "properties": {
          "fromAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "fromBalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              }
            ]
          },
          "toBalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              }
            ]
          },
          "journalId": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_ScreenTransferRequest": {
        "title": "tns_ScreenTransferRequest",
        "required": [
          "transactionId",
          "paymentType",
          "paymentSubType",
          "finData"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "maxLength": 64,
            "minLength": 1,
            "type": "string"
          },
          "paymentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_paymentType"
              }
            ]
          },
          "paymentSubType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_paymentSubType"
              }
            ]
          },
          "finData": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_ScreenTransferResponseType": {
        "title": "tns_ScreenTransferResponseType",
        "type": "object",
        "properties": {
          "screenTransfer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_screenTransfer"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_FundOutRequestForwarderResponse": {
        "title": "tns_FundOutRequestForwarderResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_FundOutRequestForwarderResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_FundOutRequestForwarderType": {
        "title": "tns_FundOutRequestForwarderType",
        "type": "object",
        "properties": {
          "investmentAccountNumber": {
            "type": "string"
          },
          "toAccountNumber": {
            "type": "string"
          },
          "fromAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              }
            ]
          },
          "toAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              }
            ]
          },
          "transactionTypeCode": {
            "type": "string"
          },
          "toIBAN": {
            "type": "string"
          },
          "text1": {
            "type": "string"
          },
          "text2": {
            "type": "string"
          },
          "text3": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_FundOutRequestForwarderResponseType": {
        "title": "tns_FundOutRequestForwarderResponseType",
        "type": "object",
        "properties": {
          "transactionStatus": {
            "type": "string"
          },
          "transactionJournalNumber": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_LimitType": {
        "title": "tns_LimitType",
        "type": "object",
        "properties": {
          "isApplied": {
            "type": "boolean"
          },
          "type": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_Message": {
        "title": "tns_Message",
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "correlationID": {
            "type": "string"
          },
          "messageID": {
            "type": "string"
          },
          "queue": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_response": {
        "title": "tns_response",
        "required": [
          "OK"
        ],
        "type": "object",
        "properties": {
          "OK": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_IntraBeneficiaryTransferRequest": {
        "title": "tns_IntraBeneficiaryTransferRequest",
        "required": [
          "isBeneficiaryExist",
          "type",
          "beneficiaryType",
          "fromAccount",
          "toAccount",
          "fromAmount",
          "toAmount"
        ],
        "type": "object",
        "properties": {
          "isBeneficiaryExist": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "description": "It allows List,Details and Transfer"
          },
          "beneficiaryType": {
            "type": "string",
            "description": "It allows EFT or SWF"
          },
          "fromAccount": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "toAccount": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "fromAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "toAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              },
              {
                "description": "if Type is Transfer then it is Mandatory."
              }
            ]
          },
          "atmTime": {
            "pattern": "([+'\\-'.'](([01][0'\\-'.'9])|(2[0'\\-'.'3]))(:[0'\\-'.'5][0'\\-'.'9]){2}(\\.[0'\\-'.'9]+)?)|()",
            "type": "string",
            "description": "if Type is Transfer then it is Mandatory."
          },
          "atmDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "if Type is Transfer then it is Mandatory."
          },
          "atmReference": {
            "type": "string",
            "description": "if Type is Transfer then it is Mandatory."
          },
          "atmTerminal": {
            "type": "string",
            "description": "if Type is Transfer then it is Mandatory."
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "nextRecordId": {
            "type": "integer",
            "format": "int32"
          },
          "amlPurposeCode": {
            "type": "string",
            "description": "if Type is Transfer then it is Mandatory."
          }
        },
        "description": ""
      },
      "tns_IntraBeneficiaryTransferResponse": {
        "title": "tns_IntraBeneficiaryTransferResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_IntraBeneficiaryTransferResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_DepositAccountCreditRequest": {
        "title": "tns_DepositAccountCreditRequest",
        "required": [
          "accountId",
          "amount",
          "baseCurrencyAmount"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "amount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "tranDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "promoCode": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string"
          },
          "deferredIntDays": {
            "maximum": 2.0,
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "baseCurrencyAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "commissionAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              }
            ]
          },
          "chargeAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              }
            ]
          },
          "rateType": {
            "maximum": 2.0,
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "currencyVersion": {
            "maxLength": 4,
            "minLength": 4,
            "type": "string",
            "default": "ZZZZ"
          },
          "description": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "narrative": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "voucherNumber": {
            "maxLength": 12,
            "type": "string"
          },
          "bookingNumber": {
            "maxLength": 7,
            "type": "string"
          },
          "treasuryRate": {
            "type": "number"
          },
          "batchPostingReferenceNumber": {
            "maxLength": 8,
            "type": "string"
          },
          "journalId": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_DepositAccountCreditResponse": {
        "title": "tns_DepositAccountCreditResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditDepositAccountType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditDepositAccountType": {
        "title": "tns_CreditDepositAccountType",
        "required": [
          "accountId",
          "journal"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "journal": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "newBalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_DepositAccountDebitRequest": {
        "title": "tns_DepositAccountDebitRequest",
        "required": [
          "accountId",
          "amount",
          "tranDate",
          "promoCode",
          "baseCurrencyAmount",
          "commissionAmount",
          "chargeAmount",
          "rateType",
          "currencyVersion",
          "journalId",
          "description",
          "deferredIntDay",
          "narrative",
          "voucherNo",
          "bookingNum",
          "batchId",
          "treasuryRate",
          "batchPostingRefNo",
          "benificiaryName"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "amount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "tranDate": {
            "type": "string"
          },
          "promoCode": {
            "type": "string"
          },
          "baseCurrencyAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "commissionAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "chargeAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "rateType": {
            "type": "string"
          },
          "currencyVersion": {
            "type": "string"
          },
          "journalId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "deferredIntDay": {
            "type": "string"
          },
          "narrative": {
            "type": "string"
          },
          "voucherNo": {
            "type": "string"
          },
          "bookingNum": {
            "type": "string"
          },
          "batchId": {
            "type": "string"
          },
          "treasuryRate": {
            "type": "number"
          },
          "batchPostingRefNo": {
            "type": "string"
          },
          "benificiaryName": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_DepositAccountDebitResponse": {
        "title": "tns_DepositAccountDebitResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_DepositAccountDebitType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_DepositAccountDebitType": {
        "title": "tns_DepositAccountDebitType",
        "required": [
          "journalId",
          "fromBalance",
          "fromAccountId",
          "accountName"
        ],
        "type": "object",
        "properties": {
          "journalId": {
            "type": "string"
          },
          "fromBalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "fromAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "accountName": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_GLAccountCreditRequest": {
        "title": "tns_GLAccountCreditRequest",
        "type": "object",
        "properties": {
          "fromAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Account Identification Number"
          },
          "amount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              },
              {
                "description": "Amount to be credit"
              }
            ]
          },
          "description": {
            "type": "string",
            "description": "Description of the transaction"
          },
          "voucherNo": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "baseCurrencyAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "rateType": {
            "type": "integer",
            "format": "int32"
          },
          "journalId": {
            "type": "string"
          },
          "retryFlag": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_retryFlag"
              }
            ]
          },
          "override": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_override"
              }
            ]
          },
          "batchPostingRefNo": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_GLAccountCreditResponse": {
        "title": "tns_GLAccountCreditResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AccountDebitType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_AccountDebitType": {
        "title": "tns_AccountDebitType",
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "journal": {
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "newBalance": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_GLAccountDebitRequest": {
        "title": "tns_GLAccountDebitRequest",
        "type": "object",
        "properties": {
          "fromAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Account Identification Number"
          },
          "amount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              },
              {
                "description": "Amount to be debit"
              }
            ]
          },
          "description": {
            "type": "string",
            "description": "Description of the transaction"
          },
          "voucherNo": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "baseCurrencyAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "rateType": {
            "type": "integer",
            "format": "int32"
          },
          "journalId": {
            "type": "string"
          },
          "retryFlag": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_retryFlag"
              }
            ]
          },
          "override": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_override"
              }
            ]
          },
          "batchPostingRefNo": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_GLAccountDebitResponse": {
        "title": "tns_GLAccountDebitResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AccountDebitType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GoldWithdrawlRequest": {
        "title": "tns_GoldWithdrawlRequest",
        "type": "object",
        "properties": {
          "accountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Gold Account number"
          },
          "goldQuantity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              },
              {
                "description": "Gold quantity"
              }
            ]
          },
          "totalFee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              },
              {
                "description": "Total fee Amount applied(It will be fetched by GetFee Operation.Bancs14 will calculate the total fee amount)"
              }
            ]
          },
          "requestDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Gold request date"
          },
          "deliveryBranch": {
            "type": "string",
            "description": "Branch selected for delivery(It will be dynamic dropdown and fetched by operation RetrieveGoldDeliveryBranches)"
          },
          "feeBearingAccount": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Fee bearing account (It will be fetched by operation GetFee)"
          },
          "taxRate": {
            "type": "string",
            "description": "Tax Rate  (It will be fetched by operation GetFee response)"
          },
          "vat": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "vat (It will be fetched by operation GetFee response)"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GoldWithdrawlResponse": {
        "title": "tns_GoldWithdrawlResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GoldWithdrawlResponseSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_ValueDateAndCutOffTimeRequest": {
        "title": "tns_ValueDateAndCutOffTimeRequest",
        "required": [
          "transactionType",
          "paymentCurrency"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string",
            "description": "Account Id"
          },
          "transactionType": {
            "maxLength": 1,
            "type": "string",
            "description": "Clearing Type\r\n\t\t\t\t\t\t\t\t8 - SWIFT\r\n\t\t\t\t\t\t\t\t1 - SARIE\r\n\t\t\t\t\t\t\t\t3 - BULK File"
          },
          "beneficiaryCountry": {
            "pattern": "([A-Z]{2,2})|()",
            "type": "string",
            "description": "Beneficiary Country"
          },
          "paymentCurrency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "Payment Currency"
          },
          "transactionAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "Transaction Amount of payment in SAR\r\n   \t\t\t\t\t\t\tcurrency, as the charges are maintained\r\n   \t\t\t\t\t\t\tin local currency."
              }
            ]
          },
          "bankCharge": {
            "maxLength": 1,
            "type": "string",
            "description": "Charge option 1 - BEN, 2 - OUR, 3 -SHA"
          }
        },
        "description": ""
      },
      "tns_ValueDateAndCutOffTimeResponse": {
        "title": "tns_ValueDateAndCutOffTimeResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ValueDateAndCutOffTimeResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_ValueDateAndCutOffTimeResponseType": {
        "title": "tns_ValueDateAndCutOffTimeResponseType",
        "type": "object",
        "properties": {
          "dateTimeCutOffList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_dateCutOffArrayType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_dateCutOffArrayType": {
        "title": "tns_dateCutOffArrayType",
        "type": "object",
        "properties": {
          "dateTimeCutOff": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_dateCutOffType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_dateCutOffType": {
        "title": "tns_dateCutOffType",
        "required": [
          "valueDate",
          "swiftFlag",
          "sarieFlag"
        ],
        "type": "object",
        "properties": {
          "valueDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Value Date"
          },
          "swiftFlag": {
            "type": "string",
            "description": "1 - SWIFT allowed for the given value\r\n   \t\t\t\t\t\t\tdate 2 - SWIFT NOT allowed for the given\r\n   \t\t\t\t\t\t\tvalue date"
          },
          "sarieFlag": {
            "type": "string",
            "description": "1 - SARIE Allowed for the given value\r\n   \t\t\t\t\t\t\tdate 2 - SARIE NOT allowed for the given\r\n   \t\t\t\t\t\t\tvalue date"
          },
          "cutOffTime": {
            "type": "string",
            "description": "Cut off time"
          },
          "cutOffTimeWithinBank": {
            "type": "string",
            "description": "This field will be populated for Within Bank Records"
          }
        },
        "description": ""
      },
      "tns_GoldWithdrawlResponseSuccessType": {
        "title": "tns_GoldWithdrawlResponseSuccessType",
        "type": "object",
        "properties": {
          "referenceNumber": {
            "type": "string",
            "description": "Reference number for customer"
          },
          "deliveryDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Delivery Date"
          },
          "deliveryExpiryDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Delivery Expiry Date"
          }
        },
        "description": ""
      },
      "tns_atmInfoType": {
        "title": "tns_atmInfoType",
        "type": "object",
        "properties": {
          "time": {
            "pattern": "([0-9]){4}|([0-9]){6}|()",
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "receipt": {
            "type": "string"
          },
          "terminal": {
            "type": "string"
          },
          "cardnumber": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_TransferFundToBeneficiaryRequestType": {
        "title": "tns_TransferFundToBeneficiaryRequestType",
        "required": [
          "accountId",
          "transferAmount",
          "beneficiaryAccountId",
          "paymentType",
          "paymentDate"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "debitCurrency": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          },
          "transferAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "beneficiaryAccountId": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "beneficiaryName": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "beneficiaryAddress1": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "beneficiaryAddress2": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "beneficiaryAddress3": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "bankRouteCode": {
            "maxLength": 20,
            "type": "string"
          },
          "bankName": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "bankAddress1": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "bankAddress2": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "bankAddress3": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "countryCode"
          },
          "bankIdBIC": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "remitterName": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "remitterAddress1": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "remitterAddress2": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "remitterAddress3": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "serviceFee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "bankCharge": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_bankCharge"
              }
            ]
          },
          "promoCode": {
            "type": "string"
          },
          "paymentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_paymentType"
              }
            ]
          },
          "reasonCode": {
            "maxLength": 10,
            "type": "string"
          },
          "reasonDetail": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "paymentDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string",
            "description": "value date or credit currency date"
          },
          "instructions1": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "instructions2": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "instructions3": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "instructions4": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "AMLPurposeCode": {
            "type": "string"
          },
          "overrideFlag": {
            "type": "string",
            "description": "It's override duplicate transaction notification and process transfer."
          },
          "treasuryTakerMemo": {
            "type": "string",
            "description": "Presently ecorp/b2bcorp prepares this string and sends in the InitiateFxDeal service input FXDealInitiateRequest/FXDeal/channel\r\n\t\t\t\t\tex. ecorp format - NCB Branch @CustomerRegion@@ref\r\n\t\t\t\t\tb2bcorp - remitter name@/ref\r\n\t\t\t\t\tWe're expecting this field here because this service will internally call InitiateFxDeal \r\n\t\t\t\t\tservice to convert fee in remitter account currency and calculate debit amount,baseCurrencyAmount in case of cross currency transaction."
          },
          "customerSegment": {
            "type": "string",
            "description": "Presently ecorp/b2bcorp maintains segment locally ex, ECORP_SME , B2B_DEFAULT etc.."
          },
          "categoryOfTransaction": {
            "type": "string"
          },
          "secondLevelPurpose": {
            "type": "string"
          },
          "relationships": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_TransferFundToBeneficiaryResponse": {
        "title": "tns_TransferFundToBeneficiaryResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_TransferFundToBeneficiaryResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_TransferFundToBeneficiaryResponseType": {
        "title": "tns_TransferFundToBeneficiaryResponseType",
        "required": [
          "journalId",
          "fromAccountId"
        ],
        "type": "object",
        "properties": {
          "journalId": {
            "type": "string"
          },
          "transcationDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string"
          },
          "uti": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string"
          },
          "fxDealReference": {
            "type": "string"
          },
          "fromAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "fromBalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              }
            ]
          },
          "toBalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              }
            ]
          },
          "treasuryRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "debitAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              }
            ]
          },
          "clientRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "feeInRemAcctCurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "feeClientRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "feeTreasuryRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_InterBankTransactionInquiryRequest": {
        "title": "tns_InterBankTransactionInquiryRequest",
        "required": [
          "accountId",
          "postingDate",
          "journalId"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Customer account number(Payment\r\n        \t\t\t\t\t\t\tordering customer)"
          },
          "postingDate": {
            "pattern": "([0-9]){8}",
            "type": "string",
            "description": "Transaction posting date in core\r\n        \t\t\t\t\t\t\tbanking system"
          },
          "journalId": {
            "type": "string",
            "description": "BaNCS Journal number"
          }
        },
        "description": ""
      },
      "tns_InterBankTransactionInquiryResponse": {
        "title": "tns_InterBankTransactionInquiryResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InterBankTransactionInquirySuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_InterBankCancelledTransactionsInquiryRequest": {
        "title": "tns_InterBankCancelledTransactionsInquiryRequest",
        "required": [
          "accountId",
          "fromDate",
          "toDate"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Customer account number(Payment\r\n        \t\t\t\t\t\t\tordering customer)"
          },
          "fromDate": {
            "pattern": "([0-9]){8}",
            "type": "string",
            "description": "Transaction posting date in core\r\n        \t\t\t\t\t\t\tbanking system"
          },
          "toDate": {
            "pattern": "([0-9]){8}",
            "type": "string",
            "description": "Transaction posting date in core\r\n        \t\t\t\t\t\t\tbanking system"
          },
          "paymentStatusFlag": {
            "type": "string",
            "description": "Status of trasaction being enquired"
          },
          "pageSize": {
            "type": "string",
            "description": "Number of records per page"
          },
          "pageNumber": {
            "type": "string",
            "description": "Page Number"
          }
        },
        "description": ""
      },
      "tns_InterBankCancelledTransactionsInquiryResponse": {
        "title": "tns_InterBankCancelledTransactionsInquiryResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InterBankCancelledTransactionsInquirySuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_InterBankTransactionCancellationRequest": {
        "title": "tns_InterBankTransactionCancellationRequest",
        "required": [
          "requestTypeIndicator",
          "uniqueReference"
        ],
        "type": "object",
        "properties": {
          "requestTypeIndicator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_requestTypeIndicator"
              },
              {
                "description": "Field to signify type of\r\n        \t\t\t\t\t\t\tCancellation"
              }
            ]
          },
          "uniqueReference": {
            "type": "string",
            "description": "Unique Reference Number for the\r\n        \t\t\t\t\t\t\trequest"
          },
          "reasonCode": {
            "type": "string",
            "description": "Contains reason code for cancellation"
          },
          "remarks": {
            "type": "string",
            "description": "Cancellation related remarks submitted by user"
          }
        },
        "description": ""
      },
      "tns_InterBankTransactionCancellationResponse": {
        "title": "tns_InterBankTransactionCancellationResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_success"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_InterBankTransactionInquirySuccessType": {
        "title": "tns_InterBankTransactionInquirySuccessType",
        "type": "object",
        "properties": {
          "operationalUnitIdentifier": {
            "type": "string",
            "description": "Operational Unit Identifier"
          },
          "accoundID": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Customer account number(Payment ordering customer)"
          },
          "postingDate": {
            "pattern": "([0-9]){8}",
            "type": "string",
            "description": "Operational Unit Identifier"
          },
          "journalId": {
            "type": "string",
            "description": "BaNCS Journal number"
          },
          "paymentCancellationFlag": {
            "type": "string",
            "description": "Transaction(SWIFT/SARIE) being enquired may be cancelled or not.Would be populated only if transaction is already cancelled"
          },
          "paymenentStatus": {
            "type": "string",
            "description": "Current status of transaction being enquired  in BaNCS Payments"
          },
          "paymenentEventStatus": {
            "type": "string",
            "description": "Current event status of transaction being enquired  in BaNCS Payments"
          },
          "cancellationDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Transaction cancellation date; if transaction being enquired already cancelled"
          },
          "orderDate": {
            "pattern": "([0-9]){8}",
            "type": "string",
            "description": "Order date for transaction being enquired"
          },
          "valueDate": {
            "pattern": "([0-9]){8}",
            "type": "string",
            "description": "Value date for transaction being enquired"
          },
          "channelId": {
            "type": "string",
            "description": "Initiating channel for transaction being enquired"
          },
          "cancellationFeeAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "Transaction cancellation Fee amount in SAR"
              }
            ]
          },
          "uti": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string",
            "description": "UTI for transaction being enquired"
          },
          "sourceReferenceNumber": {
            "type": "string",
            "description": "Source Reference Number (as received in the payment initiation request). It will be mapped from Message Reference"
          },
          "internalReferenceNumber": {
            "type": "string",
            "description": "Unique Transaction Reference as generated by payments"
          },
          "transactionType": {
            "type": "string",
            "description": "Type of transaction SWIFT or SARIE"
          }
        },
        "description": ""
      },
      "tns_InterBankCancelledTransactionsInquirySuccessType": {
        "title": "tns_InterBankCancelledTransactionsInquirySuccessType",
        "type": "object",
        "properties": {
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_InterBankCancelledTransactionsInquiryTransactionType"
            },
            "description": ""
          },
          "totalNumberOfRecords": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_InterBankCancelledTransactionsInquiryTransactionType": {
        "title": "tns_InterBankCancelledTransactionsInquiryTransactionType",
        "type": "object",
        "properties": {
          "operationalUnitIdentifier": {
            "type": "string",
            "description": "Operational Unit Identifier"
          },
          "accoundID": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Customer account number(Payment ordering\r\n        \t\t\t\t\t\tcustomer)"
          },
          "paymentStatusFlag": {
            "type": "string",
            "description": "Status of transaction being enquired"
          },
          "paymenentStatus": {
            "type": "string",
            "description": "Current status of transaction being\r\n        \t\t\t\t\t\tenquired in BaNCS Payments"
          },
          "paymenentEventStatus": {
            "type": "string",
            "description": "Current event status of transaction\r\n        \t\t\t\t\t\tbeing enquired in BaNCS Payments"
          },
          "cancellationDate": {
            "pattern": "([0-9]){8}",
            "type": "string",
            "description": "Transaction cancellation date; if\r\n        \t\t\t\t\t\ttransaction being enquired already\r\n        \t\t\t\t\t\tcancelled"
          },
          "orderDate": {
            "pattern": "([0-9]){8}",
            "type": "string",
            "description": "Order date for transaction being\r\n        \t\t\t\t\t\tenquired"
          },
          "valueDate": {
            "pattern": "([0-9]){8}",
            "type": "string",
            "description": "Value date for transaction being\r\n        \t\t\t\t\t\tenquired"
          },
          "channelId": {
            "type": "string",
            "description": "Initiating channel for transaction being\r\n        \t\t\t\t\t\tenquired"
          },
          "uti": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string",
            "description": "UTI for transaction being enquired"
          },
          "sourceReferenceNumber": {
            "type": "string",
            "description": "Source Reference Number (as received in\r\n        \t\t\t\t\t\tthe payment initiation request). It will\r\n        \t\t\t\t\t\tbe mapped from Message Reference"
          },
          "internalReferenceNumber": {
            "type": "string",
            "description": "Unique Transaction Reference as\r\n        \t\t\t\t\t\tgenerated by payments"
          },
          "currency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "Transfer currency of transaction"
          },
          "transactionAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "Transfer amount of transaction"
              }
            ]
          },
          "transactionType": {
            "type": "string",
            "description": "Type of transaction SWIFT or SARIE"
          },
          "bankName": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "Beneficiary bank name of transaction"
          },
          "bankCountry": {
            "type": "string",
            "description": "Beneficiary bank country for transaction"
          },
          "bankIdBIC": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "Beneficiary Bank Reference"
          },
          "bankRouteCode": {
            "type": "string",
            "description": "Routing code for SWIFT clearing"
          },
          "beneficiaryAccountId": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "Beneficiary account number of\r\n        \t\t\t\t\t\ttransaction"
          }
        },
        "description": ""
      },
      "tns_FXDealType_11": {
        "title": "tns_FXDealType_11",
        "type": "object",
        "properties": {
          "dealId": {
            "type": "string",
            "description": "Deal ID"
          },
          "pnlAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "profit and loss amount"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_TrackSwiftGPIPaymentRequest": {
        "title": "tns_TrackSwiftGPIPaymentRequest",
        "type": "object",
        "properties": {
          "GPIReference": {
            "type": "string",
            "description": "SWIFT GPI Uniqueue end to end reference"
          },
          "transUTIReference": {
            "type": "string",
            "description": "Transaction UTI reference"
          },
          "accountId": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string",
            "description": "Customer account number"
          },
          "transInitDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Transaction initiation Date"
          }
        },
        "description": "SWIFT GPI Uniqueue end to end reference"
      },
      "tns_TrackSwiftGPIPaymentResponse": {
        "title": "tns_TrackSwiftGPIPaymentResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_success1"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": "Associated Charges deducted during the transaction cycle"
      },
      "tns_trackerDetailsListType": {
        "title": "tns_trackerDetailsListType",
        "type": "object",
        "properties": {
          "partyDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_trackerDetailsType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_trackerDetailsType": {
        "title": "tns_trackerDetailsType",
        "type": "object",
        "properties": {
          "bankCode": {
            "type": "string"
          },
          "bankName": {
            "type": "string",
            "description": "GPI Sender Bank Name"
          },
          "senderReference": {
            "type": "string"
          },
          "relatedReference": {
            "type": "string",
            "description": "Related Reference"
          },
          "senderDeduction": {
            "type": "string",
            "description": "Deduction from other senders."
          },
          "exchangeRate": {
            "type": "string",
            "description": "exchange rate applied by other parties"
          },
          "sendDateTime": {
            "type": "string",
            "description": "tracker update Send Date time by sender"
          },
          "GPIStatus": {
            "type": "string",
            "description": "SWIFT GPI Status"
          },
          "paymentStatusDescEN": {
            "type": "string",
            "description": "SWIFT GPI Status description - English"
          },
          "paymentStatusDescAR": {
            "type": "string",
            "description": "SWIFT GPI Status description - Arabic"
          },
          "settlementAmount": {
            "type": "string",
            "description": "GPI Settlement Amount"
          }
        },
        "description": ""
      },
      "tns_MT103MessageRequest": {
        "title": "tns_MT103MessageRequest",
        "required": [
          "senderBankBIC",
          "transUTIReferenceNumber"
        ],
        "type": "object",
        "properties": {
          "senderBankBIC": {
            "maxLength": 11,
            "type": "string",
            "description": "Beneficairy Bank BIC"
          },
          "transUTIReferenceNumber": {
            "maxLength": 16,
            "type": "string",
            "description": "Outgoing SWIFT Payment UTI reference"
          },
          "valueDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Current System Date"
          }
        },
        "description": ""
      },
      "tns_MT103MessageResponse": {
        "title": "tns_MT103MessageResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_MT103MessageResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_MT103MessageResponseType": {
        "title": "tns_MT103MessageResponseType",
        "type": "object",
        "properties": {
          "foundFlag": {
            "maxLength": 1,
            "type": "string",
            "description": "foundFlag can have below values\r\n        \t\t\t\t\t  Values      :  Description\r\n        \t\t\t\t\t\r\n        \t\t\t\t\t  \"1\"         : Found in Backend Sytem(Payment Engine)\r\n        \t\t\t\t\t  \"2\"         : Not found in Backend System(Payment Engine)"
          },
          "transactionNumber": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string",
            "description": "Payments Engine internal transaction\r\n        \t\t\t\t\t\treference number."
          },
          "orderDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Date on which this transaction message was received in TCS Payment"
          },
          "valueDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Value date currently marked in TCS PE for this transaction"
          },
          "transUTIReferenceNumber": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string",
            "description": "UTI reference number generated by NCB\tbank."
          },
          "transUTIReferenceNumber2": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string",
            "description": "Reference number generated by NCB bank\tand only applicable when NCB generate\tCover message"
          },
          "correspondentBankCode": {
            "maxLength": 11,
            "type": "string",
            "description": "For out SWIFT--> it will be\tcorrespondent bank to which message this\tis further forwarded.\r\n\r\n        \t\t\t\t\t\tFor out SARIE--> it will be receiver\tlocal bank."
          },
          "transactionCurrency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "Transaction Currency"
          },
          "transactionAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "Transaction Amount"
              }
            ]
          },
          "beneficiaryAccountNumber": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string",
            "description": "Beneficiary Account Number"
          },
          "beneficiaryName": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string",
            "description": "Beneficiary Name"
          },
          "beneficiaryAddress": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string",
            "description": "Beneficiary Address"
          },
          "beneficiaryBankCode": {
            "maxLength": 15,
            "type": "string",
            "description": "For outward payments, this will be\tpopulated as beneficiary bank code."
          },
          "beneficiaryBankName": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string",
            "description": "Bank Name corresponding to the Bank Code (for Beneficiary Bank Code)"
          },
          "remitterAccountNumber": {
            "maxLength": 40,
            "type": "string",
            "description": "Remitter Account Number"
          },
          "remitterName": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string",
            "description": "Remitter Name"
          },
          "remitterCIF": {
            "maxLength": 20,
            "type": "string",
            "description": "CIF of debtor account. Not applicable for Inward."
          },
          "originalTransactionalMessage": {
            "type": "string",
            "description": "Will contain complete original SWIFTmessage send to correspondent bank."
          },
          "counterAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "Counter Amount"
              }
            ]
          },
          "exchangeRate": {
            "type": "string",
            "description": "Exchange Rate"
          },
          "remitterAddress": {
            "type": "string",
            "description": "Remitter Address"
          },
          "chargeOption": {
            "type": "string",
            "description": "Charge Option"
          }
        },
        "description": ""
      },
      "tns_ManageRTPaymentsRequest": {
        "title": "tns_ManageRTPaymentsRequest",
        "type": "object",
        "properties": {
          "messageHeader": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_MessageHeaderType"
              }
            ]
          },
          "actionFlag": {
            "type": "string",
            "description": "action Flag"
          },
          "remitterDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RemitterDetailsType"
              }
            ]
          },
          "paymentDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_PaymentDetailsType"
              }
            ]
          },
          "transactionChargeDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_TransactionChargeDetailsType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_MessageHeaderType": {
        "title": "tns_MessageHeaderType",
        "type": "object",
        "properties": {
          "messageType": {
            "type": "string",
            "description": "Message Type"
          },
          "initiatingBranchId": {
            "type": "string",
            "description": "Initiating Branch Id"
          },
          "schemeId": {
            "type": "string",
            "description": "Scheme Id"
          },
          "requestType": {
            "type": "string",
            "description": "Request Type   (  1 – Validate , 3 – Payment initiate )"
          },
          "serviceName": {
            "type": "string",
            "description": "Service Name"
          },
          "location": {
            "type": "string",
            "description": "Location"
          },
          "acceptOrReject": {
            "type": "string",
            "description": "Accept Or Reject"
          }
        },
        "description": ""
      },
      "tns_TransactionChargeDetailsType": {
        "title": "tns_TransactionChargeDetailsType",
        "type": "object",
        "properties": {
          "transactionChargeDetail": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_ManageRTPaymentsResponse": {
        "title": "tns_ManageRTPaymentsResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ManageRTPaymentsSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_RemitterDetailsType": {
        "title": "tns_RemitterDetailsType",
        "type": "object",
        "properties": {
          "orderingCustomerAccount": {
            "type": "string",
            "description": "ordering Customer Account"
          },
          "orderingCustomerName": {
            "type": "string",
            "description": "ordering Customer Name"
          },
          "orderingCustomerAddressLine1": {
            "type": "string",
            "description": "ordering Customer Address Line1"
          },
          "orderingCustomerAddressLine2": {
            "type": "string",
            "description": "ordering Customer Address Line2"
          },
          "orderingCustomerAddressLine3": {
            "type": "string",
            "description": "ordering Customer Address Line3"
          },
          "customerIdentificationId": {
            "type": "string",
            "description": "customer Identification Id"
          },
          "executionDate": {
            "type": "string"
          },
          "productType": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_PaymentDetailsType": {
        "title": "tns_PaymentDetailsType",
        "type": "object",
        "properties": {
          "transactionReference": {
            "type": "string",
            "description": "transaction Reference"
          },
          "beneficiaryAccount": {
            "type": "string",
            "description": "beneficiary Account"
          },
          "beneficiaryName": {
            "type": "string",
            "description": "beneficiary Name"
          },
          "beneficiaryReference": {
            "type": "string",
            "description": "beneficiary Reference"
          },
          "beneficiaryAddressLine1": {
            "type": "string",
            "description": "beneficiary Address Line1"
          },
          "beneficiaryAddressLine2": {
            "type": "string",
            "description": "beneficiary Address Line2"
          },
          "beneficiaryAddressLine3": {
            "type": "string",
            "description": "beneficiary Address Line3"
          },
          "beneficiaryAddressLine4": {
            "type": "string",
            "description": "beneficiary Address Line4"
          },
          "transactionAmount": {
            "type": "string",
            "description": "Transaction Amount"
          },
          "transactionCurrency": {
            "type": "string",
            "description": "Transaction Currency"
          },
          "transactionType": {
            "type": "string",
            "description": "Transaction Type"
          },
          "beneficiaryBankReferenceType": {
            "type": "string",
            "description": "beneficiary Bank Reference Type"
          },
          "beneficiaryBankReference": {
            "type": "string",
            "description": "beneficiary Bank Reference"
          },
          "settlementRemarksLine1": {
            "type": "string",
            "description": "settlement Remarks Line1"
          },
          "settlementRemarksLine2": {
            "type": "string",
            "description": "settlement Remarks Line2"
          },
          "beneficiaryReferenceType": {
            "type": "string",
            "description": "beneficiary Reference Type"
          },
          "endToEndReference": {
            "type": "string",
            "description": "End To End Reference"
          },
          "chargeCurrency": {
            "type": "string",
            "description": "Charge Currency"
          },
          "chargeAmount": {
            "type": "string",
            "description": "Charge Amount"
          },
          "requestToPayReference": {
            "type": "string",
            "description": "Request To Pay Reference"
          }
        },
        "description": ""
      },
      "tns_ManageRTPaymentsSuccessType": {
        "title": "tns_ManageRTPaymentsSuccessType",
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_DataType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_DataType": {
        "title": "tns_DataType",
        "type": "object",
        "properties": {
          "messageResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_MessageResponseType"
              },
              {
                "description": "Message Response"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_MessageResponseType": {
        "title": "tns_MessageResponseType",
        "type": "object",
        "properties": {
          "transactionPosType": {
            "type": "string",
            "description": "transaction Pos Type"
          },
          "transactionPosNumber": {
            "type": "string",
            "description": "transaction Pos Number"
          },
          "endToEndReference": {
            "type": "string",
            "description": "end To End Reference"
          },
          "successFlag": {
            "type": "string",
            "description": "success Flag"
          },
          "instructionId": {
            "type": "string",
            "description": "instrid"
          },
          "messageId": {
            "type": "string",
            "description": "msgid"
          },
          "balance": {
            "type": "number",
            "description": "Balance",
            "default": 0
          }
        },
        "description": ""
      },
      "tns_GetRTPaymentTransactionsRequest": {
        "title": "tns_GetRTPaymentTransactionsRequest",
        "type": "object",
        "properties": {
          "arg0": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_arg0Type"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_arg0Type": {
        "title": "tns_arg0Type",
        "type": "object",
        "properties": {
          "schemaId": {
            "type": "string",
            "description": "schemaId"
          },
          "ouId": {
            "type": "string",
            "description": "ouId"
          },
          "sequenceNumber": {
            "type": "string",
            "description": "sequenceNumber"
          },
          "transactionPOSNumber": {
            "type": "string",
            "description": "transactionPOSNumber"
          },
          "transactionPOSType": {
            "type": "string",
            "description": "transactionPOSType"
          },
          "prtnGrp": {
            "type": "string",
            "description": "prtn_Grp"
          },
          "prtnDate": {
            "type": "string",
            "description": "prtn_Date"
          },
          "channelId": {
            "type": "string",
            "description": "channelId"
          },
          "instrumentId": {
            "type": "string",
            "description": "instrumentId"
          },
          "clrType": {
            "type": "string",
            "description": "clrType"
          },
          "stat": {
            "type": "string",
            "description": "stat"
          },
          "eventStat": {
            "type": "string",
            "description": "eventStat"
          },
          "inpQueueType": {
            "type": "string",
            "description": "inp_Queue_Typ"
          },
          "transactionDetail": {
            "type": "string",
            "description": "transactionDtl"
          },
          "orderDate": {
            "type": "string",
            "description": "orderDate"
          },
          "orderTime": {
            "type": "string",
            "description": "orderTime"
          },
          "valueDate": {
            "type": "string",
            "description": "valueDate"
          },
          "executionDate": {
            "type": "string",
            "description": "executionDate"
          },
          "messageId": {
            "type": "string",
            "description": "msg_Id"
          },
          "e2EReferenceId": {
            "type": "string",
            "description": "e2E_Ref_Id"
          },
          "instructionId": {
            "type": "string",
            "description": "instr_Id"
          },
          "uniqueSequenceNumber": {
            "type": "string",
            "description": "unq_Seq_Num"
          },
          "referenceNumber": {
            "type": "string",
            "description": "ref_Num"
          },
          "currency": {
            "type": "string",
            "description": "crncy"
          },
          "amount": {
            "type": "string",
            "description": "amt"
          },
          "exchangeRate": {
            "type": "string",
            "description": "exchng_Rt"
          },
          "cntrCurrency": {
            "type": "string",
            "description": "cntr_Crncy"
          },
          "cntrAmount": {
            "type": "string",
            "description": "cntr_Amt"
          },
          "preAgrdFlg": {
            "type": "string",
            "description": "pre_Agrd_Flg"
          },
          "chrgOption": {
            "type": "string",
            "description": "chrg_Optn"
          },
          "wavChrg": {
            "type": "string",
            "description": "wav_Chrg"
          },
          "paymentType": {
            "type": "string",
            "description": "pymnt_Typ"
          },
          "mktCode": {
            "type": "string",
            "description": "mkt_Code"
          },
          "transactionType": {
            "type": "string",
            "description": "txn_Typ"
          },
          "instructionType": {
            "type": "string",
            "description": "instr_Type"
          },
          "customerType": {
            "type": "string",
            "description": "cust_Type"
          },
          "initMUId": {
            "type": "string",
            "description": "INIT_MU_ID"
          },
          "originalAgentType": {
            "type": "string",
            "description": "orig_Agnt_Typ"
          },
          "originalAgentReference": {
            "type": "string",
            "description": "orig_Agnt_Ref"
          },
          "originalAgentName": {
            "type": "string",
            "description": "orig_Agnt_Nm"
          },
          "originalAgentAddressLine1": {
            "type": "string",
            "description": "orig_Agnt_Adrs_LN1"
          },
          "originalAgentAddressLine2": {
            "type": "string",
            "description": "orig_Agnt_Adrs_LN2"
          },
          "originalAgentAddressLine3": {
            "type": "string",
            "description": "orig_Agnt_Adrs_LN3"
          },
          "originalPartyName": {
            "type": "string",
            "description": "orig_Prty_Nm"
          },
          "originalPartyCIFId": {
            "type": "string",
            "description": "orig_Prty_Cif_Id"
          },
          "originalPartyCustomerReference": {
            "type": "string",
            "description": "orig_Prty_Cust_Ref"
          },
          "originalPartyAccountMUId": {
            "type": "string",
            "description": "ORIG_PRTY_ACNT_MU_ID"
          },
          "originalPartyAccountCurrency": {
            "type": "string",
            "description": "orig_Prty_Acnt_Crncy"
          },
          "originalPartyAccountPOSId": {
            "type": "string",
            "description": "orig_Prty_Acnt_Pos_Id"
          },
          "originalPartyAccountPOSType": {
            "type": "string",
            "description": "orig_Prty_Acnt_Pos_Typ"
          },
          "originalPartyIntReference": {
            "type": "string",
            "description": "orig_Prty_Int_Ref"
          },
          "originalPartyExtReferenceType1": {
            "type": "string",
            "description": "orig_Prty_Ext_Ref_Typ_1"
          },
          "originalPartyExtReference1": {
            "type": "string",
            "description": "orig_Prty_Ext_Ref_1"
          },
          "originalPartyExtReferenceType2": {
            "type": "string",
            "description": "orig_Prty_Ext_Ref_Typ_2"
          },
          "originalPartyExtReferenc2": {
            "type": "string",
            "description": "orig_Prty_Ext_Ref_2"
          },
          "originalPartyExtReferenceType3": {
            "type": "string",
            "description": "orig_Prty_Ext_Ref_Typ_3"
          },
          "originalPartyExtReference3": {
            "type": "string",
            "description": "orig_Prty_Ext_Ref_3"
          },
          "originalPartyAddressLine1": {
            "type": "string",
            "description": "orig_Prty_Adrs_LN1"
          },
          "originalPartyAddressLine2": {
            "type": "string",
            "description": "orig_Prty_Adrs_LN2"
          },
          "originalPartyAddressLine3": {
            "type": "string",
            "description": "orig_Prty_Adrs_LN3"
          },
          "originalPartyAdditionalDetails": {
            "type": "string",
            "description": "originalPartyAdditionaDetails"
          },
          "beneficiaryAgentType": {
            "type": "string",
            "description": "beneficiaryAgentType"
          },
          "beneficiaryAgentReference": {
            "type": "string",
            "description": "beneficiaryAgentReference"
          },
          "beneficiaryAgentName": {
            "type": "string",
            "description": "beneficiaryAgentName"
          },
          "beneficiaryAgentAddressLine1": {
            "type": "string",
            "description": "ben_Agnt_Adrs_LN1"
          },
          "beneficiaryAgentAddressLine2": {
            "type": "string",
            "description": "ben_Agnt_Adrs_LN2"
          },
          "beneficiaryAgentAddressLine3": {
            "type": "string",
            "description": "ben_Agnt_Adrs_LN3"
          },
          "beneficiaryPartyName": {
            "type": "string",
            "description": "beneficiaryPartyName"
          },
          "beneficiaryPartyCIFId": {
            "type": "string",
            "description": "beneficiaryPartyCIFId"
          },
          "beneficiaryPartyCustomerRef": {
            "type": "string",
            "description": "beneficiaryPartyCustomerRef"
          },
          "beneficiaryPartyAccountMUId": {
            "type": "string",
            "description": "BEN_PRTY_ACNT_MU_ID"
          },
          "beneficiaryPartyAccountCurrency": {
            "type": "string",
            "description": "beneficiaryPartyAccountCurrency"
          },
          "beneficiaryPartyAccountPOSId": {
            "type": "string",
            "description": "beneficiaryPartyAccountPOSId"
          },
          "beneficiaryPartyAccountPOSType": {
            "type": "string",
            "description": "beneficiaryPartyAccountPOSType"
          },
          "beneficiaryPartyIntReference": {
            "type": "string",
            "description": "beneficiaryPartyIntReference"
          },
          "beneficiaryPartyExtReferenceType1": {
            "type": "string",
            "description": "ben_Prty_Ext_Ref_Typ_1"
          },
          "beneficiaryPartyExtReference1": {
            "type": "string",
            "description": "ben_Prty_Ext_Ref_1"
          },
          "beneficiaryPartyExtReferenceType2": {
            "type": "string",
            "description": "ben_Prty_Ext_Ref_Typ_2"
          },
          "beneficiaryPartyExtReference2": {
            "type": "string",
            "description": "ben_Prty_Ext_Ref_2"
          },
          "beneficiaryPartyExtReferenceType3": {
            "type": "string",
            "description": "ben_Prty_Ext_Ref_Typ_3"
          },
          "beneficiaryPartyExtReference3": {
            "type": "string",
            "description": "ben_Prty_Ext_Ref_3"
          },
          "beneficiaryPartyAddressLine1": {
            "type": "string",
            "description": "ben_Prty_Adrs_LN1"
          },
          "beneficiaryPartyAddressLine2": {
            "type": "string",
            "description": "ben_Prty_Adrs_LN2"
          },
          "beneficiaryPartyAddressLine3": {
            "type": "string",
            "description": "ben_Prty_Adrs_LN3"
          },
          "beneficiaryPartyAdditionalDetails": {
            "type": "string",
            "description": "beneficiaryPartyAdditionalDetails"
          },
          "intermediaryAgentType": {
            "type": "string",
            "description": "intermediaryAgentType"
          },
          "intermediaryAgentReference": {
            "type": "string",
            "description": "intermediaryAgentReference"
          },
          "intermediaryAgentName": {
            "type": "string",
            "description": "intermediaryAgentName"
          },
          "intermediaryAgentAddressLine1": {
            "type": "string",
            "description": "INTRMDRY_AGNT_ADRS_LN1"
          },
          "intermediaryAgentAddressLine2": {
            "type": "string",
            "description": "INTRMDRY_AGNT_ADRS_LN2"
          },
          "intermediaryAgentAddressLine3": {
            "type": "string",
            "description": "INTRMDRY_AGNT_ADRS_LN3"
          },
          "ordrngInstnType": {
            "type": "string",
            "description": "ordrng_InstnType"
          },
          "ordngInstnReference": {
            "type": "string",
            "description": "ordng_InstnReference"
          },
          "ordngInstnName": {
            "type": "string",
            "description": "ordng_InstnName"
          },
          "ordngInstnAddressLine1": {
            "type": "string",
            "description": "ordng_InstnAddressLine1"
          },
          "ordngInstnAddressLine2": {
            "type": "string",
            "description": "ordng_InstnAddressLine2"
          },
          "ordngInstnAddressLine3": {
            "type": "string",
            "description": "ordng_InstnAddressLine3"
          },
          "mirrAccountCode": {
            "type": "string",
            "description": "mirrAccountCode"
          },
          "cntrPartyIntAccountTyp": {
            "type": "string",
            "description": "cntr_PartyIntAccountTyp"
          },
          "cntrPartyIntAccountRef": {
            "type": "string",
            "description": "cntr_PartyIntAccountRef"
          },
          "lastPrcsdSequenceId": {
            "type": "string",
            "description": "lastPrcsd_SeqId"
          },
          "lastPrcsdChannelId": {
            "type": "string",
            "description": "lastPrcsdChannelId"
          },
          "lastPrcsdMessageId": {
            "type": "string",
            "description": "lastPrcsd_MsgId"
          },
          "cashBlckReference": {
            "type": "string",
            "description": "cash_BlckReference"
          },
          "purposeCode": {
            "type": "string",
            "description": "purposeCode"
          },
          "remitterInformation": {
            "type": "string",
            "description": "remitterInformation"
          },
          "rtrnReferenceNumber": {
            "type": "string",
            "description": "rtrnReferenceNumber"
          },
          "rltdRemitterEventStat": {
            "type": "string",
            "description": "rltdRemitterEventStat"
          },
          "rltdRemitterExecutionDate": {
            "type": "string",
            "description": "rltdRemitterExecutionDate"
          },
          "rltdRemitterPOSNumber": {
            "type": "string",
            "description": "rltdRemitterPOSNumber"
          },
          "rltdRemitterStat": {
            "type": "string",
            "description": "rltdRemitterStat"
          },
          "alias": {
            "type": "string",
            "description": "alias"
          },
          "aliasId": {
            "type": "string",
            "description": "aliasId"
          },
          "aliasCategory": {
            "type": "string",
            "description": "aliasCategory"
          },
          "messageOriginalParty": {
            "type": "string",
            "description": "messageOriginalParty"
          },
          "messageType": {
            "type": "string",
            "description": "messageType"
          },
          "returnFlg": {
            "type": "string",
            "description": "returnFlg"
          },
          "netAmountAvailable": {
            "type": "string",
            "description": "netAmountAvailable"
          },
          "refundedAmount": {
            "type": "string",
            "description": "refundedAmount"
          },
          "refundAmount": {
            "type": "string",
            "description": "refundAmount"
          },
          "cnsldtnBkng": {
            "type": "string",
            "description": "CNSLDTN_BKNG"
          },
          "lotReference": {
            "type": "string",
            "description": "lot_Ref"
          },
          "bkngReference": {
            "type": "string",
            "description": "bkngReference"
          },
          "settlementCycleId": {
            "type": "string",
            "description": "settlementCycleId"
          },
          "mbrSequenceNumber": {
            "type": "string",
            "description": "mbrseqno"
          },
          "mnlIntervention": {
            "type": "string",
            "description": "MNL_INTRVNTN"
          },
          "chrgType": {
            "type": "string",
            "description": "chrgType"
          },
          "chrgEventType": {
            "type": "string",
            "description": "CHRG_EVNT_TYP"
          },
          "chrgAmount": {
            "type": "string",
            "description": "CHRG_AMT"
          },
          "dupHash": {
            "type": "string",
            "description": "dup_Hash"
          },
          "remarks": {
            "type": "string",
            "description": "rmrks"
          },
          "rtpPayOrderVer": {
            "type": "string",
            "description": "rtp_pay_order_ver"
          }
        },
        "description": ""
      },
      "tns_GetRTPaymentTransactionsResponse": {
        "title": "tns_GetRTPaymentTransactionsResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetRTPaymentTransactionsSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GetRTPaymentTransactionsSuccessType": {
        "title": "tns_GetRTPaymentTransactionsSuccessType",
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_arg0Type"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_InquireProxyDetailRequest": {
        "title": "tns_InquireProxyDetailRequest",
        "type": "object",
        "properties": {
          "accountReference": {
            "type": "string",
            "description": "accountReference"
          },
          "aliasReference1": {
            "type": "string",
            "description": "aliasReference1"
          }
        },
        "description": ""
      },
      "tns_InquireProxyDetailResponse": {
        "title": "tns_InquireProxyDetailResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InquireProxyDetailSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_InquireProxyDetailSuccessType": {
        "title": "tns_InquireProxyDetailSuccessType",
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_ResponseType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_ResponseType": {
        "title": "tns_ResponseType",
        "type": "object",
        "properties": {
          "creationDate": {
            "type": "string",
            "description": "creationDate"
          },
          "activationDate": {
            "type": "string",
            "description": "activationDate"
          },
          "aliasId": {
            "type": "integer",
            "description": "aliasId",
            "format": "int32"
          },
          "aliasType1": {
            "type": "string",
            "description": "aliasType1"
          },
          "aliasReference1": {
            "type": "string",
            "description": "aliasReference1"
          },
          "displayName": {
            "type": "string",
            "description": "displayName"
          },
          "aliasType2": {
            "type": "string",
            "description": "aliasType2"
          },
          "aliasReference2": {
            "type": "string",
            "description": "aliasReference2"
          },
          "accountType": {
            "type": "string",
            "description": "accountType"
          },
          "accountReference": {
            "type": "string",
            "description": "accountReference"
          },
          "accountName": {
            "type": "string",
            "description": "accountName"
          },
          "accountCurrency": {
            "type": "string",
            "description": "accountCurrency"
          },
          "status": {
            "type": "string",
            "description": "status"
          },
          "eventStatus": {
            "type": "string",
            "description": "eventStatus"
          },
          "registrationId": {
            "type": "string",
            "description": "registrationId"
          },
          "isBlocked": {
            "type": "string",
            "description": "isBlocked"
          },
          "firstName": {
            "type": "string",
            "description": "firstName"
          },
          "secondName": {
            "type": "string",
            "description": "secondName"
          },
          "lastName": {
            "type": "string",
            "description": "lastName"
          },
          "businessName": {
            "type": "string",
            "description": "businessName"
          }
        },
        "description": ""
      },
      "tns_FetchRTParticipantBanksRequest": {
        "title": "tns_FetchRTParticipantBanksRequest",
        "type": "object",
        "properties": {
          "moInpPpLocalDirectory": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InpPPLocalDirectoryType"
              },
              {
                "description": "MO_INP_PP_LCLDir"
              }
            ]
          },
          "ppLocalDirectory": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_PPLocalDirectoryType"
              },
              {
                "description": "PP_LCL_DIRECTORY"
              }
            ]
          },
          "pageSize": {
            "type": "string",
            "description": "Page_Size"
          },
          "pageNumber": {
            "type": "string",
            "description": "Page_Num"
          },
          "pagesToExport": {
            "type": "string",
            "description": "Pages_To_Export"
          },
          "userId": {
            "type": "string",
            "description": "User_ID"
          },
          "exceptionArray": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ExceptionArrayType"
              },
              {
                "description": "EXCEPTION_ARRAY"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_InpPPLocalDirectoryType": {
        "title": "tns_InpPPLocalDirectoryType",
        "type": "object",
        "properties": {
          "bcNumber": {
            "type": "string",
            "description": "BC_NUMBER"
          },
          "codeType": {
            "type": "string",
            "description": "CODE_TYP"
          },
          "shortName": {
            "type": "string",
            "description": "SHORT_NAME"
          },
          "attribute1": {
            "type": "string",
            "description": "ATTR1"
          },
          "attribute2": {
            "type": "string",
            "description": "ATTR2"
          },
          "branchCode": {
            "type": "string",
            "description": "BRANCH_CODE"
          },
          "repMain": {
            "type": "string",
            "description": "REP_MAIN"
          },
          "repMainAddressType": {
            "type": "string",
            "description": "REP_MAIN_ADDR_TYP"
          },
          "repBankUnit": {
            "type": "string",
            "description": "REP_BNK_UNIT"
          },
          "repBankUnitBranch": {
            "type": "string",
            "description": "REP_BNK_UNIT_BRANCH"
          },
          "repBankUnitCountry": {
            "type": "string",
            "description": "REP_BNK_UNIT_CNTRY"
          },
          "repBranch": {
            "type": "string",
            "description": "REP_BRANCH"
          },
          "repBankAddressType": {
            "type": "string",
            "description": "REP_BNK_ADDRTYP"
          },
          "countryCode": {
            "type": "string",
            "description": "CNTRY_CODE"
          },
          "bankCode": {
            "type": "string",
            "description": "BANK_CODE"
          },
          "landCode": {
            "type": "string",
            "description": "LAND_CODE"
          },
          "bicCode": {
            "type": "string",
            "description": "BIC_CODE"
          },
          "prtcptnFlag": {
            "type": "string",
            "description": "PRTCPTN_FLG"
          },
          "location": {
            "type": "string",
            "description": "LOCATION"
          },
          "stat": {
            "type": "string",
            "description": "STAT"
          },
          "flag": {
            "type": "string",
            "description": "FLAG"
          },
          "repMainCountry": {
            "type": "string",
            "description": "REP_MAIN_CNTRY"
          },
          "state": {
            "type": "string",
            "description": "State"
          },
          "city": {
            "type": "string",
            "description": "City"
          },
          "altBCNumber": {
            "type": "string",
            "description": "Alt_BCNumber>"
          },
          "isBlocked": {
            "type": "string",
            "description": "IS_BLOCKED"
          },
          "bcNumberRangeValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RangeValueType"
              },
              {
                "description": "BC_NUMBER_RNGVAL"
              }
            ]
          },
          "branchCodeRangeValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RangeValueType"
              },
              {
                "description": "BRANCH_CODE_RNGVAL"
              }
            ]
          },
          "codeTypeRangeValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RangeValueType"
              },
              {
                "description": "CODE_TYP_RNGVAL"
              }
            ]
          },
          "shortNameRangeValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RangeValueType"
              },
              {
                "description": "SHORT_NAME_RNGVAL"
              }
            ]
          },
          "bankCodeRangeValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RangeValueType"
              },
              {
                "description": "BANK_CODE_RNGVAL"
              }
            ]
          },
          "statRangeValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RangeValueType"
              },
              {
                "description": "STAT_RNGVAL"
              }
            ]
          },
          "isBlockedRangeValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RangeValueType"
              },
              {
                "description": "IS_BLOCKED_RNGVAL"
              }
            ]
          },
          "altBCNumberRangeValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RangeValueType"
              },
              {
                "description": "Alt_BCNumber_RNGVAL"
              }
            ]
          },
          "cityRangeValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RangeValueType"
              },
              {
                "description": "City_RNGVAL"
              }
            ]
          },
          "stateRangeValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RangeValueType"
              },
              {
                "description": "State_RNGVAL"
              }
            ]
          },
          "locationRangeValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RangeValueType"
              },
              {
                "description": "LOCATION_RNGVAL"
              }
            ]
          },
          "bicCodeRangeValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RangeValueType"
              },
              {
                "description": "BIC_CODE_RNGVAL"
              }
            ]
          },
          "countryCodeRangeValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RangeValueType"
              },
              {
                "description": "CNTRY_CODE_RNGVAL"
              }
            ]
          },
          "landCodeRangeValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RangeValueType"
              },
              {
                "description": "LAND_CODE_RNGVAL"
              }
            ]
          },
          "repBankUnitRangeValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RangeValueType"
              },
              {
                "description": "REP_BNK_UNIT_RNGVAL"
              }
            ]
          },
          "prtcptnFlagRangeValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RangeValueType"
              },
              {
                "description": "PRTCPTN_FLG_RNGVAL"
              }
            ]
          },
          "repBranchRangeValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RangeValueType"
              },
              {
                "description": "REP_BRANCH_RNGVAL"
              }
            ]
          },
          "repBankAddrTypeRangeValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RangeValueType"
              },
              {
                "description": "REP_BNK_ADDRTYP_RNGVAL"
              }
            ]
          },
          "repBankUnitBranchRangeValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RangeValueType"
              },
              {
                "description": "REP_BNK_UNIT_BRANCH_RNGVAL"
              }
            ]
          },
          "repBankUnitCountryRangeValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RangeValueType"
              },
              {
                "description": "REP_BNK_UNIT_CNTRY_RNGVAL"
              }
            ]
          },
          "repMainRangeValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RangeValueType"
              },
              {
                "description": "REP_MAIN_RNGVAL"
              }
            ]
          },
          "repMainCountryRangeValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RangeValueType"
              },
              {
                "description": "REP_MAIN_CNTRY_RNGVAL"
              }
            ]
          },
          "repMainAddrTypeRangeValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RangeValueType"
              },
              {
                "description": "REP_MAIN_ADDR_TYP_RNGVAL"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_RangeValueType": {
        "title": "tns_RangeValueType",
        "type": "object",
        "properties": {
          "dFromValue": {
            "type": "string",
            "description": "d_FromValue"
          },
          "dToValue": {
            "type": "string",
            "description": "d_ToValue"
          },
          "dRangeOpr": {
            "type": "string",
            "description": "d_RangeOpr"
          },
          "dRangeFlag": {
            "type": "string",
            "description": "d_RangeFlag"
          }
        },
        "description": ""
      },
      "tns_PPLocalDirectoryType": {
        "title": "tns_PPLocalDirectoryType",
        "type": "object",
        "properties": {
          "bankCode": {
            "type": "string",
            "description": "BANK_CODE"
          },
          "bcNumber": {
            "type": "string",
            "description": "BC_NUMBER"
          },
          "bicCode": {
            "type": "string",
            "description": "BIC_CODE"
          },
          "codeType": {
            "type": "string",
            "description": "CODE_TYP"
          },
          "instAddressLine1": {
            "type": "string",
            "description": "INST_ADRS_LN1"
          },
          "instAddressLine2": {
            "type": "string",
            "description": "INST_ADRS_LN2"
          },
          "instAddressLine3": {
            "type": "string",
            "description": "INST_ADRS_LN3"
          },
          "landCode": {
            "type": "string",
            "description": "LAND_CODE"
          },
          "location": {
            "type": "string",
            "description": "LOCATION"
          },
          "shortName": {
            "type": "string",
            "description": "SHORT_NAME"
          },
          "codeTypeCd": {
            "type": "string",
            "description": "CODE_TYP_CD"
          },
          "branchCode": {
            "type": "string",
            "description": "BRANCH_CODE"
          },
          "repBankUnit": {
            "type": "string",
            "description": "REP_BNK_UNIT"
          },
          "repBranch": {
            "type": "string",
            "description": "REP_BRANCH"
          },
          "repBankAddressType": {
            "type": "string",
            "description": "REP_BNK_ADDRTYP"
          },
          "locationCode": {
            "type": "string",
            "description": "LCTN_CODE"
          },
          "origin": {
            "type": "string",
            "description": "ORIGIN"
          },
          "updateDate": {
            "type": "string",
            "description": "UPDATE_DT"
          },
          "activationDate": {
            "type": "string",
            "description": "ACTVTN_DT"
          },
          "deactivationDate": {
            "type": "string",
            "description": "DACTVTN_DT"
          },
          "prtcptnFlag": {
            "type": "string",
            "description": "PRTCPTN_FLG"
          },
          "attribute1": {
            "type": "string",
            "description": "ATTR_1"
          },
          "attribute2": {
            "type": "string",
            "description": "ATTR_2"
          },
          "attribute3": {
            "type": "string",
            "description": "ATTR_3"
          },
          "attribute4": {
            "type": "string",
            "description": "ATTR_4"
          },
          "repBankUnitBranch": {
            "type": "string",
            "description": "REP_BNK_UNIT_BRANCH"
          },
          "repBankUnitCountry": {
            "type": "string",
            "description": "REP_BNK_UNIT_CNTRY"
          },
          "repMain": {
            "type": "string",
            "description": "REP_MAIN"
          },
          "repMainCountry": {
            "type": "string",
            "description": "REP_MAIN_CNTRY"
          },
          "repMainAddressType": {
            "type": "string",
            "description": "REP_MAIN_ADDR_TYP"
          },
          "countryCode": {
            "type": "string",
            "description": "CNTRY_CODE"
          },
          "physicalAddress": {
            "type": "string",
            "description": "PHYSICAL_ADRS"
          },
          "physicalAdrsAddrType": {
            "type": "string",
            "description": "PHYSICAL_ADRS_ADDR_TYP"
          },
          "newBICKey": {
            "type": "string",
            "description": "NEW_BIC_KEY"
          },
          "localBranchCode": {
            "type": "string",
            "description": "LCL_BRNCH_CODE"
          },
          "localClrngCode": {
            "type": "string",
            "description": "LCL_CLRNG_CODE"
          },
          "ppLocalSequenceId": {
            "type": "string",
            "description": "PP_LCL_SEQ_ID"
          },
          "stat": {
            "type": "string",
            "description": "STAT"
          },
          "transactionDetail": {
            "type": "string",
            "description": "TXN_DTL"
          },
          "isBlocked": {
            "type": "string",
            "description": "IS_BLOCKED"
          },
          "contact1": {
            "type": "string",
            "description": "Contact1"
          },
          "contact2": {
            "type": "string",
            "description": "Contact2"
          },
          "contact3": {
            "type": "string",
            "description": "Contact3"
          },
          "branchNumber": {
            "type": "string",
            "description": "BRNCH_NM"
          },
          "city": {
            "type": "string",
            "description": "City"
          },
          "area": {
            "type": "string",
            "description": "Area"
          },
          "transactionType": {
            "type": "string",
            "description": "TxnTyp"
          },
          "clrType": {
            "type": "string",
            "description": "ClrTyp"
          },
          "altBCNumber": {
            "type": "string",
            "description": "Alt_BCNumber"
          },
          "clrCntrName": {
            "type": "string",
            "description": "CLR_CNTR_NM"
          },
          "state": {
            "type": "string",
            "description": "State"
          },
          "altBCNumber2": {
            "type": "string",
            "description": "ALT_BC_NUMBER"
          },
          "issId": {
            "type": "string",
            "description": "ISS_ID"
          },
          "cityCode": {
            "type": "string",
            "description": "CITY_CODE"
          },
          "stateCode": {
            "type": "string",
            "description": "STATE_CODE"
          },
          "altBCReference": {
            "type": "string",
            "description": "ALT_BC_REF"
          },
          "ppLocalDirectoryVer": {
            "type": "string",
            "description": "Pp_lcl_directory_ver"
          }
        },
        "description": ""
      },
      "tns_ExceptionArrayType": {
        "title": "tns_ExceptionArrayType",
        "type": "object",
        "properties": {
          "exception": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_ExceptionType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_ExceptionType": {
        "title": "tns_ExceptionType",
        "type": "object",
        "properties": {
          "boId": {
            "type": "string",
            "description": "BOId"
          },
          "boNumber": {
            "type": "string",
            "description": "BONum"
          },
          "attributeId": {
            "type": "string",
            "description": "AttrId"
          },
          "instanceId": {
            "type": "string",
            "description": "InstanceId"
          },
          "dAttributeValue": {
            "type": "string",
            "description": "DAttrVal"
          },
          "mid": {
            "type": "string",
            "description": "Mid"
          }
        },
        "description": ""
      },
      "tns_FetchRTParticipantBanksResponse": {
        "title": "tns_FetchRTParticipantBanksResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_FetchRTParticipantBanksSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_FetchRTParticipantBanksSuccessType": {
        "title": "tns_FetchRTParticipantBanksSuccessType",
        "type": "object",
        "properties": {
          "ppLocalDirectoryArray": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_PPLocalDirectoryArrayType"
              },
              {
                "description": "PP_LCL_DIRECTORY"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_PPLocalDirectoryArrayType": {
        "title": "tns_PPLocalDirectoryArrayType",
        "type": "object",
        "properties": {
          "ppLocalDirectory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_PPLocalDirectoryType"
            },
            "description": "ppLCLDirectory"
          }
        },
        "description": ""
      },
      "tns_ManageProxyRequest": {
        "title": "tns_ManageProxyRequest",
        "type": "object",
        "properties": {
          "alias": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AliasType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_AliasType": {
        "title": "tns_AliasType",
        "type": "object",
        "properties": {
          "schemeId": {
            "type": "string",
            "description": "schemeId"
          },
          "creationDate": {
            "type": "string",
            "description": "creationDate"
          },
          "aliasId": {
            "type": "string",
            "description": "Alias Id"
          },
          "aliasType1": {
            "type": "string",
            "description": "aliasType1"
          },
          "aliasReference1": {
            "type": "string",
            "description": "aliasReference1"
          },
          "displayName": {
            "type": "string",
            "description": "displayName ( ALIAS_SHRT_NM_1 )"
          },
          "aliasType2": {
            "type": "string",
            "description": "aliasType2"
          },
          "aliasReference2": {
            "type": "string",
            "description": "aliasReference2"
          },
          "accountType": {
            "type": "string",
            "description": "accountType"
          },
          "accountReference": {
            "type": "string",
            "description": "accountReference"
          },
          "accountName": {
            "type": "string",
            "description": "accountName"
          },
          "accountCurrency": {
            "type": "string",
            "description": "accountCurrency"
          },
          "status": {
            "type": "string",
            "description": "status"
          },
          "channelId": {
            "type": "string",
            "description": "channelId"
          },
          "registrationId": {
            "type": "string",
            "description": "registrationId"
          },
          "firstName": {
            "type": "string",
            "description": "firstName ( RSRV_STR_1 )"
          },
          "secondName": {
            "type": "string",
            "description": "secondName ( RSRV_STR_2 )"
          },
          "lastName": {
            "type": "string",
            "description": "lastName ( RSRV_STR_3 )"
          },
          "businessName": {
            "type": "string",
            "description": "businessName ( CUST_NM )"
          },
          "actionFlag": {
            "type": "string",
            "description": "actionFlag"
          },
          "reasonCode": {
            "type": "string"
          },
          "reasonDescription": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_ManageProxyResponse": {
        "title": "tns_ManageProxyResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ManageProxySuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_ManageProxySuccessType": {
        "title": "tns_ManageProxySuccessType",
        "type": "object",
        "properties": {
          "response": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ManageProxyResponseType"
              },
              {
                "description": "response"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_ManageProxyResponseType": {
        "title": "tns_ManageProxyResponseType",
        "type": "object",
        "properties": {
          "creationDate": {
            "type": "string",
            "description": "creationDate"
          },
          "activationDate": {
            "type": "string",
            "description": "activationDate"
          },
          "aliasId": {
            "type": "string",
            "description": "aliasId"
          },
          "aliasType1": {
            "type": "string",
            "description": "aliasType1"
          },
          "aliasReference1": {
            "type": "string",
            "description": "aliasReference1"
          },
          "aliasType2": {
            "type": "string",
            "description": "aliasType2"
          },
          "aliasReference2": {
            "type": "string",
            "description": "aliasReference2"
          },
          "accountReference": {
            "type": "string",
            "description": "accountReference"
          },
          "accountCurrency": {
            "type": "string",
            "description": "accountCurrency"
          },
          "status": {
            "type": "string",
            "description": "status"
          },
          "eventStatus": {
            "type": "string",
            "description": "eventStatus"
          },
          "registrationId": {
            "type": "string",
            "description": "registrationId"
          },
          "isBlocked": {
            "type": "string",
            "description": "isBlocked"
          }
        },
        "description": ""
      },
      "tns_ProxyLookupRequest": {
        "title": "tns_ProxyLookupRequest",
        "type": "object",
        "properties": {
          "payload": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_PayloadType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_PayloadType": {
        "title": "tns_PayloadType",
        "type": "object",
        "properties": {
          "channelId": {
            "type": "string",
            "description": "SCHM_ID"
          },
          "proxyType": {
            "type": "string",
            "description": "ALIAS_REF_TYP_1"
          },
          "proxyValue": {
            "type": "string",
            "description": "ALIAS_REF_NUM_1"
          }
        },
        "description": ""
      },
      "tns_ProxyLookupResponse": {
        "title": "tns_ProxyLookupResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ProxyLookupSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_ProxyLookupSuccessType": {
        "title": "tns_ProxyLookupSuccessType",
        "type": "object",
        "properties": {
          "registrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_RegistrationsType"
            },
            "description": "registrations"
          }
        },
        "description": ""
      },
      "tns_RegistrationsType": {
        "title": "tns_RegistrationsType",
        "type": "object",
        "properties": {
          "registrationId": {
            "type": "string",
            "description": "REG_ID"
          },
          "participantCode": {
            "type": "string",
            "description": "RSRV_STR_1"
          },
          "displayName": {
            "type": "string",
            "description": "ALIAS_SHRT_NM_1"
          },
          "proxy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ProxyType"
              },
              {
                "description": "proxy"
              }
            ]
          },
          "account": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AccountType"
              },
              {
                "description": "account"
              }
            ]
          },
          "accountUsg": {
            "type": "string",
            "description": "acnt_Usg"
          },
          "requestId": {
            "type": "string",
            "description": "requestId"
          }
        },
        "description": ""
      },
      "tns_ProxyType": {
        "title": "tns_ProxyType",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "ALIAS_REF_TYP_1"
          },
          "value": {
            "type": "string",
            "description": "ALIAS_REF_NUM_1"
          }
        },
        "description": ""
      },
      "tns_AccountType": {
        "title": "tns_AccountType",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "ACNT_TYP"
          },
          "value": {
            "type": "string",
            "description": "ACNT_REF"
          },
          "name": {
            "type": "string",
            "description": "ACNT_NM"
          }
        },
        "description": ""
      },
      "GetRTPPaymentTypeRequestType": {
        "title": "GetRTPPaymentTypeRequestType",
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "channelId": {
            "type": "string",
            "description": "Channel id"
          },
          "entity": {
            "type": "string",
            "description": "Entity Name"
          },
          "accountReference": {
            "type": "string",
            "description": "Account Reference"
          }
        },
        "description": ""
      },
      "GetRTPPaymentTypeResponseType": {
        "title": "GetRTPPaymentTypeResponseType",
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/components/schemas/GetRTPPaymentTypeSuccessType"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "GetRTPPaymentTypeSuccessType": {
        "title": "GetRTPPaymentTypeSuccessType",
        "type": "object",
        "properties": {
          "response": {
            "$ref": "#/components/schemas/RTPPaymentTypeResponseType"
          }
        },
        "description": ""
      },
      "RTPPaymentTypeResponseType": {
        "title": "RTPPaymentTypeResponseType",
        "type": "object",
        "properties": {
          "paymentTypeRules": {
            "type": "string",
            "description": "This is Payment type rules evaluated based on amount and limit available(QL,PTL,STL)"
          }
        },
        "description": ""
      },
      "tns_FetchRTPLimitResponse": {
        "title": "tns_FetchRTPLimitResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_FetchRTPLimitSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_FetchRTPLimitSuccessType": {
        "title": "tns_FetchRTPLimitSuccessType",
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_FetchRTPLimitDataType"
              },
              {
                "description": "data"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_FetchRTPLimitDataType": {
        "title": "tns_FetchRTPLimitDataType",
        "type": "object",
        "properties": {
          "quickTransferLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "AMT_THRSHLD   ( Amount Threshold )"
              }
            ]
          },
          "systemTransferLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "AVAIL_AMT  (Available Amount)"
              }
            ]
          },
          "proxyTransferLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "TXN_LMT_AMT   ( Transaction Limit Amount )"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_MaintainQTLLimitRequest": {
        "title": "tns_MaintainQTLLimitRequest",
        "type": "object",
        "properties": {
          "function": {
            "maxLength": 1,
            "type": "string",
            "description": "Function value will be \"E\". E:Enquiry\r\n        \t\t\t\t\t\t\tFunction value will be \"U\". U:Update\r\n        \t\t\t\t\t\t\tFunction value will be \"C\". C:Set"
          },
          "customerNumber": {
            "pattern": "([0-9]){14}|([0]){1}|()",
            "type": "string",
            "description": "Customer Number"
          },
          "customerIPSQTLLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "Customer IPS QTL Limit"
              }
            ]
          },
          "dailyQTLLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "Daily QTL Limit"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_MaintainQTLLimitResponse": {
        "title": "tns_MaintainQTLLimitResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_MaintainQTLLimitSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_MaintainQTLLimitSuccessType": {
        "title": "tns_MaintainQTLLimitSuccessType",
        "type": "object",
        "properties": {
          "customerNumber": {
            "pattern": "([0-9]){14}|([0]){1}|()",
            "type": "string",
            "description": "Customer Number"
          },
          "customerIPSQTLLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "Customer IPS QTL Limit"
              }
            ]
          },
          "dailyQTLLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "Daily QTL Limit"
              }
            ]
          },
          "lastUpdateDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Last Update Date"
          }
        },
        "description": ""
      },
      "tns_MultiDebitMultiCreditRequest": {
        "title": "tns_MultiDebitMultiCreditRequest",
        "type": "object",
        "properties": {
          "batchAmount": {
            "type": "string"
          },
          "accountCurrencyCode": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          },
          "promoNumber": {
            "type": "string"
          },
          "statementNarrative": {
            "type": "string"
          },
          "paymentReference": {
            "type": "string"
          },
          "traceNumber": {
            "type": "string"
          },
          "paymentInformation": {
            "type": "string"
          },
          "drCr1": {
            "type": "string"
          },
          "accountNumber1": {
            "type": "string"
          },
          "amount1": {
            "type": "string"
          },
          "valueDate1": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "iban1": {
            "type": "string"
          },
          "transactionCurrency1": {
            "type": "string"
          },
          "exRate1": {
            "type": "string"
          },
          "transactionAmount1": {
            "type": "string"
          },
          "baseAmount1": {
            "type": "string"
          },
          "paymentReference1": {
            "type": "string"
          },
          "senderToReceiver1": {
            "type": "string"
          },
          "statementNarrative1": {
            "type": "string"
          },
          "name1": {
            "type": "string"
          },
          "rebateAmount1": {
            "type": "string"
          },
          "drCr2": {
            "type": "string"
          },
          "accountNumber2": {
            "type": "string"
          },
          "amount2": {
            "type": "string"
          },
          "valueDate2": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "iban2": {
            "type": "string"
          },
          "transactionCurrency2": {
            "type": "string"
          },
          "exRate2": {
            "type": "string"
          },
          "transactionAmount2": {
            "type": "string"
          },
          "baseAmount2": {
            "type": "string"
          },
          "paymentReference2": {
            "type": "string"
          },
          "senderToReceiver2": {
            "type": "string"
          },
          "statementNarrative2": {
            "type": "string"
          },
          "name2": {
            "type": "string"
          },
          "rebateAmount2": {
            "type": "string"
          },
          "drCr3": {
            "type": "string"
          },
          "accountNumber3": {
            "type": "string"
          },
          "amount3": {
            "type": "string"
          },
          "valueDate3": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "iban3": {
            "type": "string"
          },
          "transactionCurrency3": {
            "type": "string"
          },
          "exRate3": {
            "type": "string"
          },
          "transactionAmount3": {
            "type": "string"
          },
          "baseAmount3": {
            "type": "string"
          },
          "paymentReference3": {
            "type": "string"
          },
          "senderToReceiver3": {
            "type": "string"
          },
          "statementNarrative3": {
            "type": "string"
          },
          "name3": {
            "type": "string"
          },
          "rebateAmount3": {
            "type": "string"
          },
          "drCr4": {
            "type": "string"
          },
          "accountNumber4": {
            "type": "string"
          },
          "amount4": {
            "type": "string"
          },
          "valueDate4": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "iban4": {
            "type": "string"
          },
          "transactionCurrency4": {
            "type": "string"
          },
          "exRate4": {
            "type": "string"
          },
          "transactionAmount4": {
            "type": "string"
          },
          "baseAmount4": {
            "type": "string"
          },
          "paymentReference4": {
            "type": "string"
          },
          "senderToReceiver4": {
            "type": "string"
          },
          "statementNarrative4": {
            "type": "string"
          },
          "name4": {
            "type": "string"
          },
          "rebateAmount4": {
            "type": "string"
          },
          "drCr5": {
            "type": "string"
          },
          "accountNumber5": {
            "type": "string"
          },
          "amount5": {
            "type": "string"
          },
          "valueDate5": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "iban5": {
            "type": "string"
          },
          "transactionCurrency5": {
            "type": "string"
          },
          "exRate5": {
            "type": "string"
          },
          "transactionAmount5": {
            "type": "string"
          },
          "baseAmount5": {
            "type": "string"
          },
          "paymentReference5": {
            "type": "string"
          },
          "senderToReceiver5": {
            "type": "string"
          },
          "statementNarrative5": {
            "type": "string"
          },
          "name5": {
            "type": "string"
          },
          "rebateAmount5": {
            "type": "string"
          },
          "drCr6": {
            "type": "string"
          },
          "accountNumber6": {
            "type": "string"
          },
          "amount6": {
            "type": "string"
          },
          "valueDate6": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "iban6": {
            "type": "string"
          },
          "transactionCurrency6": {
            "type": "string"
          },
          "exRate6": {
            "type": "string"
          },
          "transactionAmount6": {
            "type": "string"
          },
          "baseAmount6": {
            "type": "string"
          },
          "paymentReference6": {
            "type": "string"
          },
          "senderToReceiver6": {
            "type": "string"
          },
          "statementNarrative6": {
            "type": "string"
          },
          "name6": {
            "type": "string"
          },
          "rebateAmount6": {
            "type": "string"
          },
          "drCr7": {
            "type": "string"
          },
          "accountNumber7": {
            "type": "string"
          },
          "amount7": {
            "type": "string"
          },
          "valueDate7": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "iban7": {
            "type": "string"
          },
          "transactionCurrency7": {
            "type": "string"
          },
          "exRate7": {
            "type": "string"
          },
          "transactionAmount7": {
            "type": "string"
          },
          "baseAmount7": {
            "type": "string"
          },
          "paymentReference7": {
            "type": "string"
          },
          "senderToReceiver7": {
            "type": "string"
          },
          "statementNarrative7": {
            "type": "string"
          },
          "name7": {
            "type": "string"
          },
          "rebateAmount7": {
            "type": "string"
          },
          "drCr8": {
            "type": "string"
          },
          "accountNumber8": {
            "type": "string"
          },
          "amount8": {
            "type": "string"
          },
          "valueDate8": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "iban8": {
            "type": "string"
          },
          "transactionCurrency8": {
            "type": "string"
          },
          "exRate8": {
            "type": "string"
          },
          "transactionAmount8": {
            "type": "string"
          },
          "baseAmount8": {
            "type": "string"
          },
          "paymentReference8": {
            "type": "string"
          },
          "senderToReceiver8": {
            "type": "string"
          },
          "statementNarrative8": {
            "type": "string"
          },
          "name8": {
            "type": "string"
          },
          "rebateAmount8": {
            "type": "string"
          },
          "drCr9": {
            "type": "string"
          },
          "accountNumber9": {
            "type": "string"
          },
          "amount9": {
            "type": "string"
          },
          "valueDate9": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "iban9": {
            "type": "string"
          },
          "transactionCurrency9": {
            "type": "string"
          },
          "exRate9": {
            "type": "string"
          },
          "transactionAmount9": {
            "type": "string"
          },
          "baseAmount9": {
            "type": "string"
          },
          "paymentReference9": {
            "type": "string"
          },
          "senderToReceiver9": {
            "type": "string"
          },
          "statementNarrative9": {
            "type": "string"
          },
          "name9": {
            "type": "string"
          },
          "rebateAmount9": {
            "type": "string"
          },
          "drCr10": {
            "type": "string"
          },
          "accountNumber10": {
            "type": "string"
          },
          "amount10": {
            "type": "string"
          },
          "valueDate10": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "iban10": {
            "type": "string"
          },
          "transactionCurrency10": {
            "type": "string"
          },
          "exRate10": {
            "type": "string"
          },
          "transactionAmount10": {
            "type": "string"
          },
          "baseAmount10": {
            "type": "string"
          },
          "paymentReference10": {
            "type": "string"
          },
          "senderToReceiver10": {
            "type": "string"
          },
          "statementNarrative10": {
            "type": "string"
          },
          "name10": {
            "type": "string"
          },
          "rebateAmount10": {
            "type": "string"
          },
          "typeOfIncomeFee1": {
            "type": "string"
          },
          "typeOfIncomeReb1": {
            "type": "string"
          },
          "typeOfIncomeFee2": {
            "type": "string"
          },
          "typeOfIncomeReb2": {
            "type": "string"
          },
          "typeOfIncomeFee3": {
            "type": "string"
          },
          "typeOfIncomeReb3": {
            "type": "string"
          },
          "typeOfIncomeFee4": {
            "type": "string"
          },
          "typeOfIncomeReb4": {
            "type": "string"
          },
          "typeOfIncomeFee5": {
            "type": "string"
          },
          "typeOfIncomeReb5": {
            "type": "string"
          },
          "typeOfIncomeFee6": {
            "type": "string"
          },
          "typeOfIncomeReb6": {
            "type": "string"
          },
          "typeOfIncomeFee7": {
            "type": "string"
          },
          "typeOfIncomeReb7": {
            "type": "string"
          },
          "typeOfIncomeFee8": {
            "type": "string"
          },
          "typeOfIncomeReb8": {
            "type": "string"
          },
          "typeOfIncomeFee9": {
            "type": "string"
          },
          "typeOfIncomeReb9": {
            "type": "string"
          },
          "typeOfIncomeFee10": {
            "type": "string"
          },
          "typeOfIncomeReb10": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_MultiDebitMultiCreditResponse": {
        "title": "tns_MultiDebitMultiCreditResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_MultiDebitMultiCreditSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_MultiDebitMultiCreditSuccessType": {
        "title": "tns_MultiDebitMultiCreditSuccessType",
        "type": "object",
        "properties": {
          "journalNumber": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_ValidateBenAccountRTPRequest": {
        "title": "tns_ValidateBenAccountRTPRequest",
        "type": "object",
        "properties": {
          "requestHeader": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RequestHeaderType"
              }
            ]
          },
          "beneficiaryBank": {
            "type": "string",
            "description": "Beneficiary Bank"
          },
          "beneficiaryIban": {
            "type": "string",
            "description": "Beneficiary IBAN"
          },
          "currency": {
            "type": "string",
            "description": "Currency"
          },
          "proxyType": {
            "type": "string",
            "description": "eneficiary Proxy Type"
          },
          "proxyValue": {
            "type": "string",
            "description": "eneficiary Proxy"
          },
          "customerIdentification": {
            "type": "string",
            "description": "identification of customer."
          },
          "customerIdentificationType": {
            "type": "string",
            "description": "this is used for identify the type of identification being used.\r\n\t\t\t\t\t\t\t                     Note that Iqama is populated in the Proprietary data element."
          },
          "schemeProprietaryDetails": {
            "type": "string",
            "description": "Name of the identification scheme"
          },
          "beneficiaryName": {
            "type": "string",
            "description": "Beneficiary Customer Name"
          },
          "beneficiaryAddress1": {
            "type": "string",
            "description": "Beneficiary Customer Address"
          },
          "beneficiaryAddress2": {
            "type": "string",
            "description": "Beneficiary Customer Address"
          },
          "beneficiaryAddress3": {
            "type": "string",
            "description": "Beneficiary Customer Address"
          },
          "beneficiaryAddress4": {
            "type": "string",
            "description": "Beneficiary Customer Address"
          },
          "beneficiaryAddress5": {
            "type": "string",
            "description": "Beneficiary Customer Address"
          },
          "beneficiaryAddress6": {
            "type": "string",
            "description": "Beneficiary Customer Address"
          },
          "beneficiaryAddress7": {
            "type": "string",
            "description": "Beneficiary Customer Address"
          },
          "beneficiaryIdentification": {
            "type": "string",
            "description": "Identification assigned by an institution"
          },
          "beneficiaryPrivateIdentification": {
            "type": "string",
            "description": "eneficiary customer Unique and unambiguous identification, e.gpassport number,cif"
          },
          "beneficiaryOtherDetails": {
            "type": "string",
            "description": "Unique identification of a person, as assigned by an institution, using an identification scheme"
          },
          "beneficiaryPhoneNumber": {
            "type": "string",
            "description": "Beneficiary Phone Number"
          },
          "beneficiaryMobileNumber": {
            "type": "string",
            "description": "Beneficiary Mobile Number"
          },
          "relationshipCode": {
            "type": "string",
            "description": "relationship to beneficiary Code"
          },
          "relationshipDescription": {
            "type": "string",
            "description": "relationship to beneficiary Description"
          },
          "customData1": {
            "type": "string",
            "description": "customData1"
          },
          "customData2": {
            "type": "string",
            "description": "customData2"
          },
          "customData3": {
            "type": "string",
            "description": "customData3"
          },
          "customData4": {
            "type": "string",
            "description": "customData4"
          },
          "customData5": {
            "type": "string",
            "description": "customData5"
          },
          "customData6": {
            "type": "string",
            "description": "customData6"
          },
          "verificationUseCase": {
            "type": "string",
            "description": "- ID_MATCH\r\n\t\t\t\t\t\t\t\t- ADD_BENEFICIARY\r\n\t\t\t\t\t\t\t\t- VERIFY_ACC_QUICK_TRANSFER\r\n\t\t\t\t\t\t\t\t- PROXY_ONLY_SP\r\n\t\t\t\t\t\t\t\t- PROXY_ONLY_BENEF_IBAN"
          }
        },
        "description": ""
      },
      "tns_RequestHeaderType": {
        "title": "tns_RequestHeaderType",
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string"
          },
          "channelId": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "timeStamp": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "customerSegment": {
            "type": "string",
            "description": "customer segment"
          }
        },
        "description": ""
      },
      "tns_ValidateBenAccountRTPResponse": {
        "title": "tns_ValidateBenAccountRTPResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ValidateBenAccountRTPResponseSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_ValidateBenAccountRTPResponseSuccessType": {
        "title": "tns_ValidateBenAccountRTPResponseSuccessType",
        "type": "object",
        "properties": {
          "responseHeader": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ResponseHeaderType"
              }
            ]
          },
          "valid": {
            "type": "string",
            "description": "valid"
          },
          "reasonCode": {
            "type": "string",
            "description": "Reason Code"
          },
          "reasonDescription": {
            "type": "string",
            "description": "Reason Description"
          },
          "beneficiaryName": {
            "type": "string",
            "description": "Beneficiary Name"
          },
          "beneficiaryNameMasked": {
            "type": "string",
            "description": "Beneficiary Name Masked"
          }
        },
        "description": ""
      },
      "tns_ResponseHeaderType": {
        "title": "tns_ResponseHeaderType",
        "type": "object",
        "properties": {
          "responseId": {
            "type": "string"
          },
          "channelId": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "customerId": {
            "type": "string"
          },
          "timeStamp": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_ActOnRequestToPayRTPRequest": {
        "title": "tns_ActOnRequestToPayRTPRequest",
        "type": "object",
        "properties": {
          "requestHeader": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RequestHeaderType"
              }
            ]
          },
          "reference": {
            "type": "string",
            "description": "unique reference number of request provided by ips for the rtp exchange"
          },
          "action": {
            "type": "string",
            "description": "Status of the rtp exchange"
          },
          "reasonCode": {
            "type": "string",
            "description": "Reason Code behind invalidity of account"
          },
          "reasonDescription": {
            "type": "string",
            "description": "Reason Description"
          },
          "reminderDate": {
            "type": "string",
            "description": "Reminder Date"
          },
          "reminderPeriod": {
            "type": "string",
            "description": "Reminder Period"
          }
        },
        "description": ""
      },
      "tns_ActOnRequestToPayRTPResponse": {
        "title": "tns_ActOnRequestToPayRTPResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ActOnRequestToPayRTPSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_ActOnRequestToPayRTPSuccessType": {
        "title": "tns_ActOnRequestToPayRTPSuccessType",
        "type": "object",
        "properties": {
          "responseHeader": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ResponseHeaderType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_InquireRequestToPayRTPRequest": {
        "title": "tns_InquireRequestToPayRTPRequest",
        "type": "object",
        "properties": {
          "requestHeader": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RequestHeaderType"
              }
            ]
          },
          "reference": {
            "type": "string",
            "description": "reference number of request to pay exchange"
          },
          "fromDate": {
            "type": "string",
            "description": "From Date"
          },
          "toDate": {
            "type": "string",
            "description": "Create Date of rtp exchange"
          },
          "status": {
            "type": "string",
            "description": "Status of the rtp exchange"
          },
          "direction": {
            "type": "string",
            "description": "Direction of RTP exchange, if incoming or outgoing"
          },
          "startIndex": {
            "type": "string",
            "description": "Start index of result set"
          },
          "resultsize": {
            "type": "string",
            "description": "size of result set"
          }
        },
        "description": ""
      },
      "tns_InquireRequestToPayRTPResponse": {
        "title": "tns_InquireRequestToPayRTPResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InquireRequestToPayRTPSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_InquireRequestToPayRTPSuccessType": {
        "title": "tns_InquireRequestToPayRTPSuccessType",
        "type": "object",
        "properties": {
          "responseHeader": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ResponseHeaderType"
              }
            ]
          },
          "numberOfRecords": {
            "type": "string",
            "description": "Number Of Records"
          },
          "rtpRecords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_RTPRecordsType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_RTPRecordsType": {
        "title": "tns_RTPRecordsType",
        "type": "object",
        "properties": {
          "reference": {
            "type": "string",
            "description": "unique reference number of request provided by ips for the rtp exchange"
          },
          "direction": {
            "type": "string",
            "description": "Direction of RTP exchange, if incoming or outgoing"
          },
          "productCode": {
            "type": "string",
            "description": "The product type code of the request to pay exchange"
          },
          "productDescription": {
            "type": "string",
            "description": "The product type description of the request to pay exchange"
          },
          "createDate": {
            "type": "string",
            "description": "Create Date of rtp exchange"
          },
          "modifiedDate": {
            "type": "string",
            "description": "Modified Date of rtp exchange"
          },
          "status": {
            "type": "string",
            "description": "Status of the rtp exchange"
          },
          "debtorIban": {
            "type": "string",
            "description": "debtor iban"
          },
          "debtorName": {
            "type": "string",
            "description": "debtor name"
          },
          "debtorNameMasked": {
            "type": "string",
            "description": "debtor name Masked"
          },
          "amount": {
            "type": "string",
            "description": "requested amount to be payed"
          },
          "currency": {
            "type": "string",
            "description": "currency"
          },
          "expiryDate": {
            "type": "string",
            "description": "Expiry Date of rtp exchange"
          },
          "debtorBankBIC": {
            "type": "string",
            "description": "debtor Bank BIC"
          },
          "debtorBankName": {
            "type": "string",
            "description": "debtor Bank Name"
          },
          "creditorBankBIC": {
            "type": "string",
            "description": "Creditor Bank BIC"
          },
          "creditorBankName": {
            "type": "string",
            "description": "Creditor Bank Name"
          },
          "creditorIBAN": {
            "type": "string",
            "description": "Creditor IBAN"
          },
          "creditorName": {
            "type": "string",
            "description": "Creditor Name"
          },
          "creditorNameMasked": {
            "type": "string",
            "description": "Creditor Name Masked"
          },
          "requestDetailsCode": {
            "type": "string",
            "description": "Creditor Bank Name"
          },
          "requestDetailsDescription": {
            "type": "string",
            "description": "request details description"
          },
          "rejectionCode": {
            "type": "string",
            "description": "Rejection Code"
          },
          "rejectionDescription": {
            "type": "string",
            "description": "request  description"
          },
          "proxyReference": {
            "type": "string",
            "description": "proxy Reference"
          },
          "proxyType": {
            "type": "string",
            "description": "proxy Type"
          },
          "proxyValue": {
            "type": "string",
            "description": "proxy Value"
          },
          "instructionForDebtorCustomer": {
            "type": "string",
            "description": "instruction For Debtor Customer"
          },
          "rtpReminderEnabled": {
            "type": "string",
            "description": "rtp Reminder Enabled"
          }
        },
        "description": ""
      },
      "tns_InquireRTPProductTypesRequest": {
        "title": "tns_InquireRTPProductTypesRequest",
        "type": "object",
        "properties": {
          "requestHeader": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RequestHeaderType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_InquireRTPProductTypesResponse": {
        "title": "tns_InquireRTPProductTypesResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InquireRTPProductTypesSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_InquireRTPProductTypesSuccessType": {
        "title": "tns_InquireRTPProductTypesSuccessType",
        "type": "object",
        "properties": {
          "responseHeader": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ResponseHeaderType"
              }
            ]
          },
          "productTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_ProductTypesType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_ProductTypesType": {
        "title": "tns_ProductTypesType",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Product Type Code"
          },
          "description": {
            "type": "string",
            "description": "Product Type Value"
          }
        },
        "description": ""
      },
      "tns_RequestToPayRTPRequest": {
        "title": "tns_RequestToPayRTPRequest",
        "type": "object",
        "properties": {
          "requestHeader": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RequestHeaderType"
              }
            ]
          },
          "productType": {
            "type": "string",
            "description": "Product Type Value"
          },
          "paymentMethod": {
            "type": "string",
            "description": "Payment Method, for time being should be set as TRF (credit transfer)"
          },
          "creditorCustomerType": {
            "type": "string",
            "description": "Customer Type"
          },
          "expiryDate": {
            "type": "string",
            "description": "Expiry Date of rtp exchange yyyy-MM-dd"
          },
          "amount": {
            "type": "string",
            "description": "amount requested in SAR"
          },
          "debtorCustomerIban": {
            "type": "string",
            "description": "debtor customer iban"
          },
          "creditorCustomerIban": {
            "type": "string",
            "description": "creditor customer iban"
          },
          "creditorCustomerAccountCurrency": {
            "type": "string",
            "description": "creditor customer account currency"
          },
          "creditorCustomerAccountName": {
            "type": "string",
            "description": "Creditor customer account name"
          },
          "debtorCustomerType": {
            "type": "string",
            "description": "Customer Type"
          },
          "proxyType": {
            "type": "string",
            "description": "Proxy Type"
          },
          "proxyValue": {
            "type": "string",
            "description": "Proxy Value"
          },
          "debtorBank": {
            "type": "string",
            "description": "Debtor Bank"
          },
          "debtorCustomerDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_DebtorCustomerDetailsType"
              }
            ]
          },
          "creditorCustomerDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditorCustomerDetailsType"
              }
            ]
          },
          "remittanceMethod": {
            "type": "string",
            "description": "Method used to deliver the remittance advice"
          },
          "remittanceInformation1": {
            "type": "string",
            "description": "Information supplied to enable the matching of an entry with \r\n\t\t\t\t\t\t\t                     the items that the transfer is intended to settle,\r\n\t\t\t\t\t\t\t                     such as commercial invoices in an accounts' receivable system."
          },
          "remittanceDescription1": {
            "type": "string",
            "description": "remittance Description1"
          },
          "remittanceInformation2": {
            "type": "string",
            "description": "remittance Information2"
          },
          "remittanceDescription2": {
            "type": "string",
            "description": "remittance Description2"
          },
          "remittanceInformation3": {
            "type": "string",
            "description": "remittance Information3"
          },
          "remittanceDescription3": {
            "type": "string",
            "description": "remittance Description3"
          },
          "remittanceGoal": {
            "type": "string",
            "description": "remittance Goal"
          },
          "referredDocInfo": {
            "type": "string",
            "description": "referred Doc Info"
          },
          "referredDocDate": {
            "type": "string",
            "description": "referred Doc Date"
          },
          "purpose": {
            "type": "string",
            "description": "Purpose of RTP Request"
          },
          "purposeDescription": {
            "type": "string",
            "description": "Purpose Description of RTP Request"
          },
          "instructionForDebtorCustomer": {
            "type": "string",
            "description": "coded instruction or instruction to the creditor's agent that is bilaterally agreed or specific to a user community"
          },
          "chargeBearer": {
            "type": "string",
            "description": "Specifies which party/parties will \r\n\t\t\t\t\t\t\t bear the charges associated with the processing of the payment transaction"
          },
          "customerMobile": {
            "type": "string",
            "description": "Customer Contact Mobile to be used when sending notification"
          },
          "customerEmail": {
            "type": "string",
            "description": "Customer Contact E-mail to be used when sending notification"
          },
          "customData1": {
            "type": "string",
            "description": "custom Data1"
          },
          "customData2": {
            "type": "string",
            "description": "custom Data2"
          },
          "customData3": {
            "type": "string",
            "description": "custom Data3"
          },
          "customData4": {
            "type": "string",
            "description": "custom Data4"
          },
          "customData5": {
            "type": "string",
            "description": "custom Data5"
          }
        },
        "description": ""
      },
      "tns_DebtorCustomerDetailsType": {
        "title": "tns_DebtorCustomerDetailsType",
        "type": "object",
        "properties": {
          "debtorCustomerName": {
            "type": "string",
            "description": "Debtor Customer Name"
          },
          "debtorCustomerAddressLine1": {
            "type": "string",
            "description": "Debtor Customer Address"
          },
          "debtorCustomerAddressLine2": {
            "type": "string",
            "description": "Debtor Customer Address"
          },
          "debtorCustomerAddressLine3": {
            "type": "string",
            "description": "Debtor Customer Address"
          },
          "debtorCustomerAddressLine4": {
            "type": "string",
            "description": "Debtor Customer Address"
          },
          "debtorCustomerAddressLine5": {
            "type": "string",
            "description": "Debtor Customer Address"
          },
          "debtorCustomerBirthday": {
            "type": "string",
            "description": "Debtor Customer Birthday"
          },
          "debtorCustomerProvinceOfBirth": {
            "type": "string",
            "description": "Debtor Customer Province of Birth"
          },
          "debtorCustomerCityOfBirth": {
            "type": "string",
            "description": "Debtor Customer City of Birth"
          },
          "debtorCustomerCountryOfBirth": {
            "type": "string",
            "description": "Debtor Customer Country of Birth"
          },
          "debtorCustomerNamePrefix": {
            "type": "string",
            "description": "Specifies the terms used to formally address a person"
          },
          "debtorCustomerPhoneNumber": {
            "type": "string",
            "description": "Debtor Customer Phone Number"
          },
          "debtorCustomerMobileNumber": {
            "type": "string",
            "description": "Debtor Customer Mobile Number"
          },
          "debtorCustomerFaxNumber": {
            "type": "string",
            "description": "Debtor Customer Fax Number"
          },
          "debtorCustomerEmailAddress": {
            "type": "string",
            "description": "Debtor Customer Email Address"
          },
          "debtorCustomerOtherDetails": {
            "type": "string",
            "description": "Debtor Customer Other Details"
          },
          "debtorCustomerAddressType": {
            "type": "string",
            "description": "Identifies the nature of the postal address"
          },
          "debtorCustomerStreetName": {
            "type": "string",
            "description": "Debtor Customer Street Name"
          },
          "debtorCustomerBuildingNumber": {
            "type": "string",
            "description": "Debtor Building Number"
          },
          "debtorCustomerPostalCode": {
            "type": "string",
            "description": "Debtor Customer Postal Code"
          },
          "debtorCustomerTownName": {
            "type": "string",
            "description": "Debtor Customer Town Name"
          },
          "debtorCustomerCountrySubDivision": {
            "type": "string",
            "description": "Identifies a subdivision of a country such as state, region, county"
          },
          "debtorCustomerCountry": {
            "type": "string",
            "description": "Debtor Customer Country"
          },
          "debtorCustomerIdentification": {
            "type": "string",
            "description": "Debtor Customer Identification"
          }
        },
        "description": ""
      },
      "tns_CreditorCustomerDetailsType": {
        "title": "tns_CreditorCustomerDetailsType",
        "type": "object",
        "properties": {
          "creditorCustomerName": {
            "type": "string",
            "description": "creditor Customer Name"
          },
          "creditorCustomerAddressLine1": {
            "type": "string",
            "description": "creditor Customer Address"
          },
          "creditorCustomerAddressLine2": {
            "type": "string",
            "description": "creditor Customer Address"
          },
          "creditorCustomerAddressLine3": {
            "type": "string",
            "description": "creditor Customer Address"
          },
          "creditorCustomerAddressLine4": {
            "type": "string",
            "description": "creditor Customer Address"
          },
          "creditorCustomerAddressLine5": {
            "type": "string",
            "description": "creditor Customer Address"
          },
          "creditorCustomerBirthday": {
            "type": "string",
            "description": "creditor Customer Birthday"
          },
          "creditorCustomerProvinceOfBirth": {
            "type": "string",
            "description": "creditor Customer Province of Birth"
          },
          "creditorCustomerCityOfBirth": {
            "type": "string",
            "description": "creditor Customer City of Birth"
          },
          "creditorCustomerCountryOfBirth": {
            "type": "string",
            "description": "creditor Customer Country of Birth"
          },
          "creditorCustomerNamePrefix": {
            "type": "string",
            "description": "Specifies the terms used to formally address a person"
          },
          "creditorCustomerPhoneNumber": {
            "type": "string",
            "description": "creditor Customer Phone Number"
          },
          "creditorCustomerMobileNumber": {
            "type": "string",
            "description": "creditor Customer Mobile Number"
          },
          "creditorCustomerFaxNumber": {
            "type": "string",
            "description": "creditor Customer Fax Number"
          },
          "creditorCustomerEmailAddress": {
            "type": "string",
            "description": "creditor Customer Email Address"
          },
          "creditorCustomerOtherDetails": {
            "type": "string",
            "description": "creditor Customer Other Details"
          },
          "creditorCustomerAddressType": {
            "type": "string",
            "description": "Identifies the nature of the postal address"
          },
          "creditorCustomerStreetName": {
            "type": "string",
            "description": "creditor Customer Street Name"
          },
          "creditorCustomerBuildingNumber": {
            "type": "string",
            "description": "creditor Building Number"
          },
          "creditorCustomerPostalCode": {
            "type": "string",
            "description": "creditor Customer Postal Code"
          },
          "creditorCustomerTownName": {
            "type": "string",
            "description": "creditor Customer Town Name"
          },
          "creditorCustomerCountrySubDivision": {
            "type": "string",
            "description": "Identifies a subdivision of a country such as state, region, county"
          },
          "creditorCustomerCountry": {
            "type": "string",
            "description": "creditor Customer Country"
          }
        },
        "description": ""
      },
      "tns_RequestToPayRTPResponse": {
        "title": "tns_RequestToPayRTPResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RequestToPayRTPSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_RequestToPayRTPSuccessType": {
        "title": "tns_RequestToPayRTPSuccessType",
        "type": "object",
        "properties": {
          "responseHeader": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ResponseHeaderType"
              }
            ]
          },
          "reference": {
            "type": "string"
          }
        },
        "description": ""
      },
      "wsse_Security": {
        "title": "wsse_Security",
        "required": [
          "UsernameToken"
        ],
        "type": "object",
        "properties": {
          "UsernameToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/wsse_UsernameToken"
              }
            ]
          }
        },
        "description": ""
      },
      "header_ServiceHeader": {
        "title": "header_ServiceHeader",
        "required": [
          "loggerContext",
          "transactionCode",
          "retryTransaction",
          "tellerId",
          "terminalId",
          "workstationId",
          "override",
          "correction",
          "supervisor",
          "supervisorId",
          "overrideCode",
          "employeeId",
          "branchId",
          "functionId",
          "channelId",
          "bancsPwd",
          "languageCode"
        ],
        "type": "object",
        "properties": {
          "loggerContext": {
            "type": "string"
          },
          "transactionCode": {
            "type": "string"
          },
          "retryTransaction": {
            "type": "boolean"
          },
          "tellerId": {
            "type": "string"
          },
          "terminalId": {
            "type": "string"
          },
          "workstationId": {
            "type": "string"
          },
          "override": {
            "type": "boolean"
          },
          "correction": {
            "type": "string"
          },
          "supervisor": {
            "type": "string"
          },
          "supervisorId": {
            "type": "string"
          },
          "overrideCode": {
            "type": "string"
          },
          "employeeId": {
            "type": "string"
          },
          "branchId": {
            "type": "string"
          },
          "functionId": {
            "type": "string"
          },
          "channelId": {
            "type": "string"
          },
          "bancsPwd": {
            "type": "string"
          },
          "languageCode": {
            "type": "string"
          },
          "authenticationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/header_authenticationType"
              },
              {
                "description": "Can be: NONE, OTP, TOKEN"
              }
            ]
          },
          "IvrTransactionID": {
            "type": "string"
          }
        },
        "description": ""
      },
      "fault_FaultType": {
        "title": "fault_FaultType",
        "required": [
          "number",
          "description"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "retryAfter": {
            "type": "string"
          },
          "system": {
            "type": "string"
          },
          "nativeError": {
            "type": "string"
          },
          "nativeDescription": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_PostalAddress": {
        "title": "Q1_PostalAddress",
        "type": "object",
        "properties": {
          "addressLine1": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string"
          },
          "city": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "region": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string"
          },
          "country": {
            "pattern": "([A-Z]{2,2})|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_Money": {
        "title": "Q1_Money",
        "required": [
          "isoCurrencyCode"
        ],
        "type": "object",
        "properties": {
          "isoCurrencyCode": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_MoneyOptional": {
        "title": "Q1_MoneyOptional",
        "required": [
          "isoCurrencyCode"
        ],
        "type": "object",
        "properties": {
          "isoCurrencyCode": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_Cursor": {
        "title": "Q1_Cursor",
        "required": [
          "position",
          "noOfRows"
        ],
        "type": "object",
        "properties": {
          "position": {
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "noOfRows": {
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          }
        },
        "description": ""
      },
      "Q1_Biller": {
        "title": "Q1_Biller",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "Q1_DocumentType": {
        "title": "Q1_DocumentType",
        "required": [
          "documentId",
          "documentSubId",
          "totalPages",
          "documentType",
          "archivedDate",
          "page"
        ],
        "type": "object",
        "properties": {
          "documentId": {
            "maxLength": 7,
            "type": "string"
          },
          "documentSubId": {
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "documentType": {
            "type": "string"
          },
          "archivedDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "page": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Q1_PageType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "Q1_PageType": {
        "title": "Q1_PageType",
        "required": [
          "pageNo",
          "pageExt",
          "pageContent"
        ],
        "type": "object",
        "properties": {
          "pageNo": {
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "pageExt": {
            "type": "string"
          },
          "pageContent": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_BillCycle": {
        "title": "Q1_BillCycle",
        "enum": [
          "New",
          "XXX",
          "YYY"
        ],
        "type": "string",
        "description": "Valid Values : New, XXX, YYY"
      },
      "Q1_PaymentType": {
        "title": "Q1_PaymentType",
        "enum": [
          "POST",
          "RCHG",
          "RNEW"
        ],
        "type": "string",
        "description": "Valid Values : POST, RCHG, RNEW"
      },
      "Q1_Flag": {
        "title": "Q1_Flag",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Valid Values : Y or N"
      },
      "Q1_ServiceType": {
        "title": "Q1_ServiceType",
        "enum": [
          "AUTL",
          "CCRD",
          "CIP",
          "ENTR",
          "GOVT",
          "GSM",
          "LLIN",
          "LLHT",
          "SMDI",
          "UTIL",
          "ISPS",
          "GOFT",
          "Private",
          "MDIA",
          "TRAN",
          "EDUC",
          "BKSV",
          "LOAN",
          "ELCT",
          "PCIN",
          "EXAM",
          "WATR",
          "CDUR",
          "PHON",
          "INSR",
          "MED",
          "TUIT"
        ],
        "type": "string",
        "description": "Valid Values :\n\t\t\t\tAUTL,CCRD,CIP,ENTR,GOVT,GSM,LLIN,LLHT,SMDI,UTIL,ISPS,GOFT,\n\t\t\t\tPrivate,MDIA,TRAN,EDUC,BKSV,LOAN,ELCT,PCIN,EXAM,WATR,CDUR,PHON,INSR,MED,TUIT"
      },
      "Q1_OfferToTag": {
        "title": "Q1_OfferToTag",
        "enum": [
          "Yes",
          "No"
        ],
        "type": "string",
        "description": ""
      },
      "Q1_CustomerId": {
        "title": "Q1_CustomerId",
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_CustomerId2": {
        "title": "Q1_CustomerId2",
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_Parameter": {
        "title": "Q1_Parameter",
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_TransactionType": {
        "title": "Q1_TransactionType",
        "enum": [
          "BIANNUALCYCLE",
          "TODAY",
          "CYCLETODATE",
          "CTD"
        ],
        "type": "string",
        "description": "Valid values are BIANNUALCYCLE, TODAY,\n\t\t\t\tCYCLETODATE, CTD etc"
      },
      "Q1_BeneficiaryId": {
        "title": "Q1_BeneficiaryId",
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_DeviceDetails": {
        "title": "Q1_DeviceDetails",
        "required": [
          "machineNonce",
          "sequenceNonce",
          "machineLabel",
          "machineProperties",
          "createDate",
          "lastUsedDate",
          "expiryDate"
        ],
        "type": "object",
        "properties": {
          "machineNonce": {
            "minLength": 1,
            "type": "string"
          },
          "sequenceNonce": {
            "minLength": 1,
            "type": "string"
          },
          "machineLabel": {
            "type": "string"
          },
          "machineProperties": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MachineProperties"
              }
            ]
          },
          "createDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "lastUsedDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "expiryDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_AuthenticationDeviceDetails": {
        "title": "Q1_AuthenticationDeviceDetails",
        "required": [
          "machineNonce",
          "sequenceNonce",
          "machineLabel",
          "machineProperties"
        ],
        "type": "object",
        "properties": {
          "machineNonce": {
            "minLength": 1,
            "type": "string"
          },
          "sequenceNonce": {
            "minLength": 1,
            "type": "string"
          },
          "machineLabel": {
            "type": "string"
          },
          "machineProperties": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MachineProperties"
              }
            ]
          }
        },
        "description": ""
      },
      "Q1_MachineProperties": {
        "title": "Q1_MachineProperties",
        "required": [
          "applicationData"
        ],
        "type": "object",
        "properties": {
          "applicationData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Q1_ApplicationData"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "Q1_ApplicationData": {
        "title": "Q1_ApplicationData",
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "value": {
            "minLength": 1,
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_AuthenticationInfo": {
        "title": "Q1_AuthenticationInfo",
        "required": [
          "methods"
        ],
        "type": "object",
        "properties": {
          "methods": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Methods"
              }
            ]
          }
        },
        "description": ""
      },
      "Q1_Methods": {
        "title": "Q1_Methods",
        "required": [
          "hardToken",
          "softToken",
          "siteImage",
          "trustedPC",
          "callerId",
          "oneTimePass"
        ],
        "type": "object",
        "properties": {
          "hardToken": {
            "type": "boolean"
          },
          "softToken": {
            "type": "boolean"
          },
          "siteImage": {
            "type": "boolean"
          },
          "trustedPC": {
            "type": "boolean"
          },
          "callerId": {
            "type": "boolean"
          },
          "oneTimePass": {
            "type": "boolean"
          }
        },
        "description": ""
      },
      "Q1_TokenDetails": {
        "title": "Q1_TokenDetails",
        "required": [
          "userId",
          "userName",
          "userGroup",
          "vendorId",
          "serialNumber",
          "tokenType",
          "signatureSupported",
          "loadDate",
          "lastUsedDate"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "minLength": 1,
            "type": "string"
          },
          "userName": {
            "minLength": 1,
            "type": "string"
          },
          "userGroup": {
            "minLength": 1,
            "type": "string"
          },
          "vendorId": {
            "type": "string"
          },
          "serialNumber": {
            "type": "string"
          },
          "tokenType": {
            "type": "string"
          },
          "signatureSupported": {
            "type": "boolean"
          },
          "loadDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "lastUsedDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_AccountDetails": {
        "title": "Q1_AccountDetails",
        "required": [
          "accountId",
          "balance",
          "overdraft",
          "balanceSAR",
          "availableSAR",
          "averageLastSixMonths",
          "isoCurrencyCode",
          "division",
          "statusCode",
          "accountType",
          "glClassificationCode"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "balance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "overdraft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "balanceSAR": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "availableSAR": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "averageLastSixMonths": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "isoCurrencyCode": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          },
          "division": {
            "type": "string"
          },
          "statusCode": {
            "maxLength": 3,
            "type": "string"
          },
          "accountType": {
            "maxLength": 4,
            "type": "string"
          },
          "glClassificationCode": {
            "maxLength": 40,
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_Gender": {
        "title": "Q1_Gender",
        "enum": [
          "M",
          "F"
        ],
        "type": "string",
        "description": "Valid values are : M , F etc"
      },
      "Q1_trueOrFalseType": {
        "title": "Q1_trueOrFalseType",
        "enum": [
          "true",
          "false",
          "True",
          "False"
        ],
        "type": "string",
        "description": "Valid values are : true, false, True, False"
      },
      "Q1_trueOrFalseTypeOptional": {
        "title": "Q1_trueOrFalseTypeOptional",
        "enum": [
          "true",
          "false",
          "True",
          "False"
        ],
        "type": "string",
        "description": "Optional.\n\t\t\t\tValid values are : true, false, True,\n\t\t\t\tFalse etc"
      },
      "Q1_YorNType": {
        "title": "Q1_YorNType",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Valid values are : Y, N"
      },
      "Q1_YorNTypeOptional": {
        "title": "Q1_YorNTypeOptional",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Optional.\n\t\t\t\tValid values are : Y, N"
      },
      "Q1_CustomerChannelType": {
        "title": "Q1_CustomerChannelType",
        "enum": [
          "BOTH",
          "MOBILE",
          "AOL"
        ],
        "type": "string",
        "description": ""
      },
      "Q1_ErrorCategoryType": {
        "title": "Q1_ErrorCategoryType",
        "enum": [
          "BUSINESS",
          "SYSTEM"
        ],
        "type": "string",
        "description": ""
      },
      "Q1_CommonServiceFaultType": {
        "title": "Q1_CommonServiceFaultType",
        "required": [
          "category",
          "code",
          "message",
          "detail"
        ],
        "type": "object",
        "properties": {
          "category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_ErrorCategoryType"
              }
            ]
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_ServicesStatusType": {
        "title": "Q1_ServicesStatusType",
        "enum": [
          "ACTIVE",
          "DISABLE_USER",
          "DISABLE_ADMIN",
          "DELETED"
        ],
        "type": "string",
        "description": ""
      },
      "Q1_ServiceLevelType": {
        "title": "Q1_ServiceLevelType",
        "enum": [
          "INQUIRY",
          "FULL"
        ],
        "type": "string",
        "description": ""
      },
      "Q1_CustomerStatusType": {
        "title": "Q1_CustomerStatusType",
        "required": [
          "userId",
          "aol",
          "mobile",
          "emergencyCash"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "aol": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_AolStatusType"
              }
            ]
          },
          "mobile": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MobileStatusType"
              }
            ]
          },
          "emergencyCash": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_EmergencyCashStatus"
              }
            ]
          }
        },
        "description": ""
      },
      "Q1_AolStatusType": {
        "title": "Q1_AolStatusType",
        "required": [
          "createdBy",
          "createdDate",
          "lastLoginDate",
          "serviceLevel",
          "serviceStatus",
          "passwordRevoked"
        ],
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].[0-9])|()|(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9])",
            "type": "string"
          },
          "lastLoginDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].[0-9])|()|(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9])",
            "type": "string"
          },
          "serviceLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_ServiceLevelType"
              }
            ]
          },
          "serviceStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_ServicesStatusType"
              }
            ]
          },
          "passwordRevoked": {
            "type": "boolean"
          }
        },
        "description": ""
      },
      "Q1_MobileStatusType": {
        "title": "Q1_MobileStatusType",
        "required": [
          "registeredBy",
          "registeredDate",
          "lastLoginDate",
          "serviceLevel",
          "serviceStatus"
        ],
        "type": "object",
        "properties": {
          "registeredBy": {
            "type": "string"
          },
          "registeredDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].[0-9])|()|(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9])",
            "type": "string"
          },
          "lastLoginDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].[0-9])|()|(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9])",
            "type": "string"
          },
          "serviceLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_ServiceLevelType"
              }
            ]
          },
          "serviceStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_ServicesStatusType"
              }
            ]
          }
        },
        "description": ""
      },
      "Q1_EmergencyCashStatus": {
        "title": "Q1_EmergencyCashStatus",
        "required": [
          "registrationDate",
          "status"
        ],
        "type": "object",
        "properties": {
          "registrationDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].[0-9])|()|(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9])",
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_TransactionInfo": {
        "title": "Q1_TransactionInfo",
        "required": [
          "transactionType"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "relatedTransactionId": {
            "type": "string"
          },
          "transactionType": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_ClientInfo": {
        "title": "Q1_ClientInfo",
        "required": [
          "clientId"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_SecurityInfo": {
        "title": "Q1_SecurityInfo",
        "required": [
          "username",
          "password"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_CreationInfo": {
        "title": "Q1_CreationInfo",
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          },
          "branch": {
            "maxLength": 5,
            "type": "string"
          },
          "institution": {
            "maxLength": 3,
            "type": "string"
          },
          "teller": {
            "maxLength": 8,
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_RequestHeader": {
        "title": "Q1_RequestHeader",
        "type": "object",
        "properties": {
          "transactionInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_TransactionInfo"
              }
            ]
          },
          "clientInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_ClientInfo"
              }
            ]
          },
          "securityInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_SecurityInfo"
              }
            ]
          },
          "creationInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_CreationInfo"
              }
            ]
          }
        },
        "description": ""
      },
      "Q1_ErrorInfo": {
        "title": "Q1_ErrorInfo",
        "required": [
          "level"
        ],
        "type": "object",
        "properties": {
          "level": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_level"
              }
            ]
          },
          "code": {
            "type": "string"
          },
          "context": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_ReplyHeader": {
        "title": "Q1_ReplyHeader",
        "type": "object",
        "properties": {
          "transactionInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_TransactionInfo"
              }
            ]
          },
          "clientInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_ClientInfo"
              }
            ]
          },
          "errorInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_ErrorInfo"
              }
            ]
          }
        },
        "description": ""
      },
      "AccountTransferRequest": {
        "title": "AccountTransferRequest",
        "required": [
          "AccountTransferRequest"
        ],
        "type": "object",
        "properties": {
          "AccountTransferRequest": {
            "$ref": "#/components/schemas/tns_AccountTransferRequest"
          }
        }
      },
      "AccountTransferResponse": {
        "title": "AccountTransferResponse",
        "required": [
          "AccountTransferResponse"
        ],
        "type": "object",
        "properties": {
          "AccountTransferResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AccountTransferResponse"
              }
            ]
          }
        }
      },
      "ActOnRequestToPayRTPRequest": {
        "title": "ActOnRequestToPayRTPRequest",
        "required": [
          "ActOnRequestToPayRTPRequest"
        ],
        "type": "object",
        "properties": {
          "ActOnRequestToPayRTPRequest": {
            "$ref": "#/components/schemas/tns_ActOnRequestToPayRTPRequest"
          }
        }
      },
      "ActOnRequestToPayRTPResponse": {
        "title": "ActOnRequestToPayRTPResponse",
        "required": [
          "ActOnRequestToPayRTPResponse"
        ],
        "type": "object",
        "properties": {
          "ActOnRequestToPayRTPResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ActOnRequestToPayRTPResponse"
              }
            ]
          }
        }
      },
      "BranchPaymentRequest": {
        "title": "BranchPaymentRequest",
        "required": [
          "BranchPaymentRequest"
        ],
        "type": "object",
        "properties": {
          "BranchPaymentRequest": {
            "$ref": "#/components/schemas/tns_BranchPaymentRequest"
          }
        }
      },
      "BranchPaymentResponse": {
        "title": "BranchPaymentResponse",
        "required": [
          "BranchPaymentResponse"
        ],
        "type": "object",
        "properties": {
          "BranchPaymentResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_BranchPaymentResponse"
              }
            ]
          }
        }
      },
      "DepositAccountCreditRequest": {
        "title": "DepositAccountCreditRequest",
        "required": [
          "DepositAccountCreditRequest"
        ],
        "type": "object",
        "properties": {
          "DepositAccountCreditRequest": {
            "$ref": "#/components/schemas/tns_DepositAccountCreditRequest"
          }
        }
      },
      "DepositAccountCreditResponse": {
        "title": "DepositAccountCreditResponse",
        "required": [
          "DepositAccountCreditResponse"
        ],
        "type": "object",
        "properties": {
          "DepositAccountCreditResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_DepositAccountCreditResponse"
              }
            ]
          }
        }
      },
      "DepositAccountDebitRequest": {
        "title": "DepositAccountDebitRequest",
        "required": [
          "DepositAccountDebitRequest"
        ],
        "type": "object",
        "properties": {
          "DepositAccountDebitRequest": {
            "$ref": "#/components/schemas/tns_DepositAccountDebitRequest"
          }
        }
      },
      "DepositAccountDebitResponse": {
        "title": "DepositAccountDebitResponse",
        "required": [
          "DepositAccountDebitResponse"
        ],
        "type": "object",
        "properties": {
          "DepositAccountDebitResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_DepositAccountDebitResponse"
              }
            ]
          }
        }
      },
      "DepositToGLTransferRequest": {
        "title": "DepositToGLTransferRequest",
        "required": [
          "DepositToGLTransferRequest"
        ],
        "type": "object",
        "properties": {
          "DepositToGLTransferRequest": {
            "$ref": "#/components/schemas/tns_DepositToGLTransferRequest"
          }
        }
      },
      "DepositToGLTransferResponse": {
        "title": "DepositToGLTransferResponse",
        "required": [
          "DepositToGLTransferResponse"
        ],
        "type": "object",
        "properties": {
          "DepositToGLTransferResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_DepositToGLTransferResponse"
              }
            ]
          }
        }
      },
      "FetchRTParticipantBanksRequest": {
        "title": "FetchRTParticipantBanksRequest",
        "required": [
          "FetchRTParticipantBanksRequest"
        ],
        "type": "object",
        "properties": {
          "FetchRTParticipantBanksRequest": {
            "$ref": "#/components/schemas/tns_FetchRTParticipantBanksRequest"
          }
        }
      },
      "FetchRTParticipantBanksResponse": {
        "title": "FetchRTParticipantBanksResponse",
        "required": [
          "FetchRTParticipantBanksResponse"
        ],
        "type": "object",
        "properties": {
          "FetchRTParticipantBanksResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_FetchRTParticipantBanksResponse"
              }
            ]
          }
        }
      },
      "FetchRTPLimitRequest": {
        "title": "FetchRTPLimitRequest",
        "required": [
          "body"
        ],
        "type": "object",
        "properties": {
          "body": {
            "type": "string"
          }
        }
      },
      "FetchRTPLimitResponse": {
        "title": "FetchRTPLimitResponse",
        "required": [
          "FetchRTPLimitResponse"
        ],
        "type": "object",
        "properties": {
          "FetchRTPLimitResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_FetchRTPLimitResponse"
              }
            ]
          }
        }
      },
      "FundInTransferRequest": {
        "title": "FundInTransferRequest",
        "required": [
          "FundInTransferRequest"
        ],
        "type": "object",
        "properties": {
          "FundInTransferRequest": {
            "$ref": "#/components/schemas/tns_FundInTransferRequest"
          }
        }
      },
      "FundInTransferResponse": {
        "title": "FundInTransferResponse",
        "required": [
          "FundInTransferResponse"
        ],
        "type": "object",
        "properties": {
          "FundInTransferResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_FundInTransferResponse"
              }
            ]
          }
        }
      },
      "FundOutRequestForwarderRequest": {
        "title": "FundOutRequestForwarderRequest",
        "required": [
          "FundOutRequestForwarderRequest"
        ],
        "type": "object",
        "properties": {
          "FundOutRequestForwarderRequest": {
            "$ref": "#/components/schemas/tns_FundOutRequestForwarderType"
          }
        }
      },
      "FundOutRequestForwarderResponse": {
        "title": "FundOutRequestForwarderResponse",
        "required": [
          "FundOutRequestForwarderResponse"
        ],
        "type": "object",
        "properties": {
          "FundOutRequestForwarderResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_FundOutRequestForwarderResponse"
              }
            ]
          }
        }
      },
      "FundTransferRequest": {
        "title": "FundTransferRequest",
        "required": [
          "FundTransferRequest"
        ],
        "type": "object",
        "properties": {
          "FundTransferRequest": {
            "$ref": "#/components/schemas/tns_FundTransferRequest"
          }
        }
      },
      "FundTransferResponse": {
        "title": "FundTransferResponse",
        "required": [
          "FundTransferResponse"
        ],
        "type": "object",
        "properties": {
          "FundTransferResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_FundTransferResponse"
              }
            ]
          }
        }
      },
      "GetRTPaymentTransactionsRequest": {
        "title": "GetRTPaymentTransactionsRequest",
        "required": [
          "GetRTPaymentTransactionsRequest"
        ],
        "type": "object",
        "properties": {
          "GetRTPaymentTransactionsRequest": {
            "$ref": "#/components/schemas/tns_GetRTPaymentTransactionsRequest"
          }
        }
      },
      "GetRTPaymentTransactionsResponse": {
        "title": "GetRTPaymentTransactionsResponse",
        "required": [
          "GetRTPaymentTransactionsResponse"
        ],
        "type": "object",
        "properties": {
          "GetRTPaymentTransactionsResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetRTPaymentTransactionsResponse"
              }
            ]
          }
        }
      },
      "GetRTPPaymentTypeRequest": {
        "title": "GetRTPPaymentTypeRequest",
        "required": [
          "GetRTPPaymentTypeRequest"
        ],
        "type": "object",
        "properties": {
          "GetRTPPaymentTypeRequest": {
            "$ref": "#/components/schemas/GetRTPPaymentTypeRequestType"
          }
        }
      },
      "GetRTPPaymentTypeResponse": {
        "title": "GetRTPPaymentTypeResponse",
        "required": [
          "GetRTPPaymentTypeResponse"
        ],
        "type": "object",
        "properties": {
          "GetRTPPaymentTypeResponse": {
            "$ref": "#/components/schemas/GetRTPPaymentTypeResponseType"
          }
        }
      },
      "GLAccountCreditRequest": {
        "title": "GLAccountCreditRequest",
        "required": [
          "GLAccountCreditRequest"
        ],
        "type": "object",
        "properties": {
          "GLAccountCreditRequest": {
            "$ref": "#/components/schemas/tns_GLAccountCreditRequest"
          }
        }
      },
      "GLAccountCreditResponse": {
        "title": "GLAccountCreditResponse",
        "required": [
          "GLAccountCreditResponse"
        ],
        "type": "object",
        "properties": {
          "GLAccountCreditResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GLAccountCreditResponse"
              }
            ]
          }
        }
      },
      "GLAccountDebitRequest": {
        "title": "GLAccountDebitRequest",
        "required": [
          "GLAccountDebitRequest"
        ],
        "type": "object",
        "properties": {
          "GLAccountDebitRequest": {
            "$ref": "#/components/schemas/tns_GLAccountDebitRequest"
          }
        }
      },
      "GLAccountDebitResponse": {
        "title": "GLAccountDebitResponse",
        "required": [
          "GLAccountDebitResponse"
        ],
        "type": "object",
        "properties": {
          "GLAccountDebitResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GLAccountDebitResponse"
              }
            ]
          }
        }
      },
      "GLToDepositTransferRequest": {
        "title": "GLToDepositTransferRequest",
        "required": [
          "GLToDepositTransferRequest"
        ],
        "type": "object",
        "properties": {
          "GLToDepositTransferRequest": {
            "$ref": "#/components/schemas/tns_GLToDepositTransferRequest"
          }
        }
      },
      "GLToDepositTransferResponse": {
        "title": "GLToDepositTransferResponse",
        "required": [
          "GLToDepositTransferResponse"
        ],
        "type": "object",
        "properties": {
          "GLToDepositTransferResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GLToDepositTransferResponse"
              }
            ]
          }
        }
      },
      "GLToGLTransferRequest": {
        "title": "GLToGLTransferRequest",
        "required": [
          "GLToGLTransferRequest"
        ],
        "type": "object",
        "properties": {
          "GLToGLTransferRequest": {
            "$ref": "#/components/schemas/tns_GLToGLTransferRequest"
          }
        }
      },
      "GLToGLTransferResponse": {
        "title": "GLToGLTransferResponse",
        "required": [
          "GLToGLTransferResponse"
        ],
        "type": "object",
        "properties": {
          "GLToGLTransferResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GLToGLTransferResponse"
              }
            ]
          }
        }
      },
      "GoldWithdrawlRequest": {
        "title": "GoldWithdrawlRequest",
        "required": [
          "GoldWithdrawlRequest"
        ],
        "type": "object",
        "properties": {
          "GoldWithdrawlRequest": {
            "$ref": "#/components/schemas/tns_GoldWithdrawlRequest"
          }
        }
      },
      "GoldWithdrawlResponse": {
        "title": "GoldWithdrawlResponse",
        "required": [
          "GoldWithdrawlResponse"
        ],
        "type": "object",
        "properties": {
          "GoldWithdrawlResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GoldWithdrawlResponse"
              }
            ]
          }
        }
      },
      "header_authenticationType": {
        "title": "header_authenticationType",
        "enum": [
          "NONE",
          "OTP",
          "TOKEN"
        ],
        "type": "string",
        "description": ""
      },
      "HoldAndReleaseRequest": {
        "title": "HoldAndReleaseRequest",
        "required": [
          "HoldAndReleaseRequest"
        ],
        "type": "object",
        "properties": {
          "HoldAndReleaseRequest": {
            "$ref": "#/components/schemas/tns_HoldAndReleaseRequest"
          }
        }
      },
      "HoldAndReleaseResponse": {
        "title": "HoldAndReleaseResponse",
        "required": [
          "HoldAndReleaseResponse"
        ],
        "type": "object",
        "properties": {
          "HoldAndReleaseResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_HoldAndReleaseResponse"
              }
            ]
          }
        }
      },
      "InquireProxyDetailRequest": {
        "title": "InquireProxyDetailRequest",
        "required": [
          "InquireProxyDetailRequest"
        ],
        "type": "object",
        "properties": {
          "InquireProxyDetailRequest": {
            "$ref": "#/components/schemas/tns_InquireProxyDetailRequest"
          }
        }
      },
      "InquireProxyDetailResponse": {
        "title": "InquireProxyDetailResponse",
        "required": [
          "InquireProxyDetailResponse"
        ],
        "type": "object",
        "properties": {
          "InquireProxyDetailResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InquireProxyDetailResponse"
              }
            ]
          }
        }
      },
      "InquireRequestToPayRTPRequest": {
        "title": "InquireRequestToPayRTPRequest",
        "required": [
          "InquireRequestToPayRTPRequest"
        ],
        "type": "object",
        "properties": {
          "InquireRequestToPayRTPRequest": {
            "$ref": "#/components/schemas/tns_InquireRequestToPayRTPRequest"
          }
        }
      },
      "InquireRequestToPayRTPResponse": {
        "title": "InquireRequestToPayRTPResponse",
        "required": [
          "InquireRequestToPayRTPResponse"
        ],
        "type": "object",
        "properties": {
          "InquireRequestToPayRTPResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InquireRequestToPayRTPResponse"
              }
            ]
          }
        }
      },
      "InquireRTPProductTypesRequest": {
        "title": "InquireRTPProductTypesRequest",
        "required": [
          "InquireRTPProductTypesRequest"
        ],
        "type": "object",
        "properties": {
          "InquireRTPProductTypesRequest": {
            "$ref": "#/components/schemas/tns_InquireRTPProductTypesRequest"
          }
        }
      },
      "InquireRTPProductTypesResponse": {
        "title": "InquireRTPProductTypesResponse",
        "required": [
          "InquireRTPProductTypesResponse"
        ],
        "type": "object",
        "properties": {
          "InquireRTPProductTypesResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InquireRTPProductTypesResponse"
              }
            ]
          }
        }
      },
      "InSWIFTOutgoingSARIETransferRequest": {
        "title": "InSWIFTOutgoingSARIETransferRequest",
        "required": [
          "InSWIFTOutgoingSARIETransferRequest"
        ],
        "type": "object",
        "properties": {
          "InSWIFTOutgoingSARIETransferRequest": {
            "$ref": "#/components/schemas/tns_PayToBeneficiaryRequestType"
          }
        }
      },
      "InSWIFTOutgoingSARIETransferResponse": {
        "title": "InSWIFTOutgoingSARIETransferResponse",
        "required": [
          "InSWIFTOutgoingSARIETransferResponse"
        ],
        "type": "object",
        "properties": {
          "InSWIFTOutgoingSARIETransferResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InSWIFTOutgoingSARIETransferResponse"
              }
            ]
          }
        }
      },
      "InterBankCancelledTransactionsInquiryRequest": {
        "title": "InterBankCancelledTransactionsInquiryRequest",
        "required": [
          "InterBankCancelledTransactionsInquiryRequest"
        ],
        "type": "object",
        "properties": {
          "InterBankCancelledTransactionsInquiryRequest": {
            "$ref": "#/components/schemas/tns_InterBankCancelledTransactionsInquiryRequest"
          }
        }
      },
      "InterBankCancelledTransactionsInquiryResponse": {
        "title": "InterBankCancelledTransactionsInquiryResponse",
        "required": [
          "InterBankCancelledTransactionsInquiryResponse"
        ],
        "type": "object",
        "properties": {
          "InterBankCancelledTransactionsInquiryResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InterBankCancelledTransactionsInquiryResponse"
              }
            ]
          }
        }
      },
      "InterBankTransactionCancellationRequest": {
        "title": "InterBankTransactionCancellationRequest",
        "required": [
          "InterBankTransactionCancellationRequest"
        ],
        "type": "object",
        "properties": {
          "InterBankTransactionCancellationRequest": {
            "$ref": "#/components/schemas/tns_InterBankTransactionCancellationRequest"
          }
        }
      },
      "InterBankTransactionCancellationResponse": {
        "title": "InterBankTransactionCancellationResponse",
        "required": [
          "InterBankTransactionCancellationResponse"
        ],
        "type": "object",
        "properties": {
          "InterBankTransactionCancellationResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InterBankTransactionCancellationResponse"
              }
            ]
          }
        }
      },
      "InterBankTransactionInquiryRequest": {
        "title": "InterBankTransactionInquiryRequest",
        "required": [
          "InterBankTransactionInquiryRequest"
        ],
        "type": "object",
        "properties": {
          "InterBankTransactionInquiryRequest": {
            "$ref": "#/components/schemas/tns_InterBankTransactionInquiryRequest"
          }
        }
      },
      "InterBankTransactionInquiryResponse": {
        "title": "InterBankTransactionInquiryResponse",
        "required": [
          "InterBankTransactionInquiryResponse"
        ],
        "type": "object",
        "properties": {
          "InterBankTransactionInquiryResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InterBankTransactionInquiryResponse"
              }
            ]
          }
        }
      },
      "InterTransferRequest": {
        "title": "InterTransferRequest",
        "required": [
          "InterTransferRequest"
        ],
        "type": "object",
        "properties": {
          "InterTransferRequest": {
            "$ref": "#/components/schemas/tns_InterTransferRequestType"
          }
        }
      },
      "InterTransferResponse": {
        "title": "InterTransferResponse",
        "required": [
          "InterTransferResponse"
        ],
        "type": "object",
        "properties": {
          "InterTransferResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InterTransferResponse"
              }
            ]
          }
        }
      },
      "IntraBeneficiaryTransferRequest": {
        "title": "IntraBeneficiaryTransferRequest",
        "required": [
          "IntraBeneficiaryTransferRequest"
        ],
        "type": "object",
        "properties": {
          "IntraBeneficiaryTransferRequest": {
            "$ref": "#/components/schemas/tns_IntraBeneficiaryTransferRequest"
          }
        }
      },
      "IntraBeneficiaryTransferResponse": {
        "title": "IntraBeneficiaryTransferResponse",
        "required": [
          "IntraBeneficiaryTransferResponse"
        ],
        "type": "object",
        "properties": {
          "IntraBeneficiaryTransferResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_IntraBeneficiaryTransferResponse"
              }
            ]
          }
        }
      },
      "IntraTransferRequest": {
        "title": "IntraTransferRequest",
        "required": [
          "IntraTransferRequest"
        ],
        "type": "object",
        "properties": {
          "IntraTransferRequest": {
            "$ref": "#/components/schemas/tns_IntraTransferRequest"
          }
        }
      },
      "IntraTransferResponse": {
        "title": "IntraTransferResponse",
        "required": [
          "IntraTransferResponse"
        ],
        "type": "object",
        "properties": {
          "IntraTransferResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_IntraTransferResponse"
              }
            ]
          }
        }
      },
      "MaintainQTLLimitRequest": {
        "title": "MaintainQTLLimitRequest",
        "required": [
          "MaintainQTLLimitRequest"
        ],
        "type": "object",
        "properties": {
          "MaintainQTLLimitRequest": {
            "$ref": "#/components/schemas/tns_MaintainQTLLimitRequest"
          }
        }
      },
      "MaintainQTLLimitResponse": {
        "title": "MaintainQTLLimitResponse",
        "required": [
          "MaintainQTLLimitResponse"
        ],
        "type": "object",
        "properties": {
          "MaintainQTLLimitResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_MaintainQTLLimitResponse"
              }
            ]
          }
        }
      },
      "ManageProxyRequest": {
        "title": "ManageProxyRequest",
        "required": [
          "ManageProxyRequest"
        ],
        "type": "object",
        "properties": {
          "ManageProxyRequest": {
            "$ref": "#/components/schemas/tns_ManageProxyRequest"
          }
        }
      },
      "ManageProxyResponse": {
        "title": "ManageProxyResponse",
        "required": [
          "ManageProxyResponse"
        ],
        "type": "object",
        "properties": {
          "ManageProxyResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ManageProxyResponse"
              }
            ]
          }
        }
      },
      "ManageRTPaymentsRequest": {
        "title": "ManageRTPaymentsRequest",
        "required": [
          "ManageRTPaymentsRequest"
        ],
        "type": "object",
        "properties": {
          "ManageRTPaymentsRequest": {
            "$ref": "#/components/schemas/tns_ManageRTPaymentsRequest"
          }
        }
      },
      "ManageRTPaymentsResponse": {
        "title": "ManageRTPaymentsResponse",
        "required": [
          "ManageRTPaymentsResponse"
        ],
        "type": "object",
        "properties": {
          "ManageRTPaymentsResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ManageRTPaymentsResponse"
              }
            ]
          }
        }
      },
      "MonitorForScreeningFeedbackRequest": {
        "title": "MonitorForScreeningFeedbackRequest",
        "required": [
          "MonitorForScreeningRequest"
        ],
        "type": "object",
        "properties": {
          "MonitorForScreeningRequest": {
            "$ref": "#/components/schemas/tns_Message"
          }
        }
      },
      "MonitorForScreeningFeedbackResponse": {
        "title": "MonitorForScreeningFeedbackResponse",
        "required": [
          "MonitorForScreeningResponse"
        ],
        "type": "object",
        "properties": {
          "MonitorForScreeningResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_response"
              }
            ]
          }
        }
      },
      "MT103MessageRequest": {
        "title": "MT103MessageRequest",
        "required": [
          "MT103MessageRequest"
        ],
        "type": "object",
        "properties": {
          "MT103MessageRequest": {
            "$ref": "#/components/schemas/tns_MT103MessageRequest"
          }
        }
      },
      "MT103MessageResponse": {
        "title": "MT103MessageResponse",
        "required": [
          "MT103MessageResponse"
        ],
        "type": "object",
        "properties": {
          "MT103MessageResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_MT103MessageResponse"
              }
            ]
          }
        }
      },
      "MultiDebitMultiCreditRequest": {
        "title": "MultiDebitMultiCreditRequest",
        "required": [
          "MultiDebitMultiCreditRequest"
        ],
        "type": "object",
        "properties": {
          "MultiDebitMultiCreditRequest": {
            "$ref": "#/components/schemas/tns_MultiDebitMultiCreditRequest"
          }
        }
      },
      "MultiDebitMultiCreditResponse": {
        "title": "MultiDebitMultiCreditResponse",
        "required": [
          "MultiDebitMultiCreditResponse"
        ],
        "type": "object",
        "properties": {
          "MultiDebitMultiCreditResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_MultiDebitMultiCreditResponse"
              }
            ]
          }
        }
      },
      "OutgoingSWIFTTransferRequest": {
        "title": "OutgoingSWIFTTransferRequest",
        "required": [
          "OutgoingSWIFTTransferRequest"
        ],
        "type": "object",
        "properties": {
          "OutgoingSWIFTTransferRequest": {
            "$ref": "#/components/schemas/tns_PayToBeneficiaryRequestType"
          }
        }
      },
      "OutgoingSWIFTTransferResponse": {
        "title": "OutgoingSWIFTTransferResponse",
        "required": [
          "OutgoingSWIFTTransferResponse"
        ],
        "type": "object",
        "properties": {
          "OutgoingSWIFTTransferResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_OutgoingSWIFTTransferResponse"
              }
            ]
          }
        }
      },
      "ProxyLookupRequest": {
        "title": "ProxyLookupRequest",
        "required": [
          "ProxyLookupRequest"
        ],
        "type": "object",
        "properties": {
          "ProxyLookupRequest": {
            "$ref": "#/components/schemas/tns_ProxyLookupRequest"
          }
        }
      },
      "ProxyLookupResponse": {
        "title": "ProxyLookupResponse",
        "required": [
          "ProxyLookupResponse"
        ],
        "type": "object",
        "properties": {
          "ProxyLookupResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ProxyLookupResponse"
              }
            ]
          }
        }
      },
      "Q1_level": {
        "title": "Q1_level",
        "enum": [
          "SUCCESS",
          "WARNING",
          "FAILURE"
        ],
        "type": "string",
        "description": ""
      },
      "RequestToPayRTPRequest": {
        "title": "RequestToPayRTPRequest",
        "required": [
          "RequestToPayRTPRequest"
        ],
        "type": "object",
        "properties": {
          "RequestToPayRTPRequest": {
            "$ref": "#/components/schemas/tns_RequestToPayRTPRequest"
          }
        }
      },
      "RequestToPayRTPResponse": {
        "title": "RequestToPayRTPResponse",
        "required": [
          "RequestToPayRTPResponse"
        ],
        "type": "object",
        "properties": {
          "RequestToPayRTPResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RequestToPayRTPResponse"
              }
            ]
          }
        }
      },
      "ScreenTransferRequest": {
        "title": "ScreenTransferRequest",
        "required": [
          "ScreenTransferRequest"
        ],
        "type": "object",
        "properties": {
          "ScreenTransferRequest": {
            "$ref": "#/components/schemas/tns_ScreenTransferRequest"
          }
        }
      },
      "ScreenTransferResponse": {
        "title": "ScreenTransferResponse",
        "required": [
          "ScreenTransferResponse"
        ],
        "type": "object",
        "properties": {
          "ScreenTransferResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ScreenTransferResponseType"
              }
            ]
          }
        }
      },
      "tns_bankCharge": {
        "title": "tns_bankCharge",
        "enum": [
          "SHA",
          "BEN",
          "REM"
        ],
        "type": "string",
        "description": ""
      },
      "tns_chargeType": {
        "title": "tns_chargeType",
        "enum": [
          "PAY",
          "URG",
          "WORLD_REG"
        ],
        "type": "string",
        "description": ""
      },
      "tns_generateSwiftMessage": {
        "title": "tns_generateSwiftMessage",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": ""
      },
      "tns_holdFlag": {
        "title": "tns_holdFlag",
        "enum": [
          "T",
          "F"
        ],
        "type": "string",
        "description": ""
      },
      "tns_isSariePayment": {
        "title": "tns_isSariePayment",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": ""
      },
      "tns_override": {
        "title": "tns_override",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": ""
      },
      "tns_paymentSubType": {
        "title": "tns_paymentSubType",
        "enum": [
          "SARIE",
          "SWIFT",
          "KONDOR",
          "BANKTRADE"
        ],
        "type": "string",
        "description": ""
      },
      "tns_paymentType": {
        "title": "tns_paymentType",
        "enum": [
          "SINGLE",
          "MULTIPLE"
        ],
        "type": "string",
        "description": ""
      },
      "tns_requestTypeIndicator": {
        "title": "tns_requestTypeIndicator",
        "enum": [
          "BANCSREFERENCE",
          "UTI",
          "JOURNALID"
        ],
        "type": "string",
        "description": ""
      },
      "tns_result": {
        "title": "tns_result",
        "enum": [
          "HIT",
          "NOHIT"
        ],
        "type": "string",
        "description": ""
      },
      "tns_retryFlag": {
        "title": "tns_retryFlag",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": ""
      },
      "tns_screenTransfer": {
        "title": "tns_screenTransfer",
        "required": [
          "transactionId",
          "result"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "maxLength": 64,
            "minLength": 1,
            "type": "string"
          },
          "result": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_result"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_success": {
        "title": "tns_success",
        "type": "object",
        "description": ""
      },
      "tns_success1": {
        "title": "tns_success1",
        "type": "object",
        "properties": {
          "transUTIReference": {
            "type": "string",
            "description": "Transaction UTI\r\n        \t\t\t\t\t\t\t\t\t\treference"
          },
          "paymentStatus": {
            "type": "string",
            "description": "Payment Status"
          },
          "GPIStatus": {
            "type": "string",
            "description": "SWIFT GPI Status"
          },
          "accountId": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string",
            "description": "Customer account number"
          },
          "channel": {
            "type": "string",
            "description": "Channel from which\r\n        \t\t\t\t\t\t\t\t\t\tpayment was initiated"
          },
          "channelDescEN": {
            "type": "string",
            "description": "Channel Description in English"
          },
          "channelDescAR": {
            "type": "string",
            "description": "Channel Description in Arabic"
          },
          "transactionAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "exchangeRate": {
            "type": "string",
            "description": "exchange rate applied by NCB"
          },
          "chargeAmount": {
            "type": "string",
            "description": "NCB deducts"
          },
          "creditValueDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Credit Value Date of\r\n        \t\t\t\t\t\t\t\t\t\tSWIFT payment"
          },
          "orderDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Order Date (date when\r\n        \t\t\t\t\t\t\t\t\t\tpayment was initiated)"
          },
          "beneficiaryAccountId": {
            "type": "string"
          },
          "beneficiaryName": {
            "type": "string"
          },
          "beneficiaryAddress": {
            "type": "string"
          },
          "beneficiaryBankBIC": {
            "type": "string"
          },
          "beneficiaryBankName": {
            "type": "string"
          },
          "paymentPendBankBIC": {
            "type": "string",
            "description": "Payment Pending With\r\n        \t\t\t\t\t\t\t\t\t\tBank"
          },
          "clearingType": {
            "type": "string"
          },
          "correspondBankBIC": {
            "type": "string"
          },
          "correspondBankName": {
            "type": "string"
          },
          "lastActionDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "lastActionTime": {
            "type": "string"
          },
          "associatedCharges": {
            "type": "number",
            "description": "Associated Charges\r\n        \t\t\t\t\t\t\t\t\t\tdeducted during the\r\n        \t\t\t\t\t\t\t\t\t\ttransaction cycle"
          },
          "paymentStatusDescEN": {
            "type": "string"
          },
          "paymentStatusDescAR": {
            "type": "string"
          },
          "partyTracker": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_trackerDetailsListType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_type": {
        "title": "tns_type",
        "enum": [
          "SWIFT"
        ],
        "type": "string",
        "description": ""
      },
      "TrackSwiftGPIPaymentRequest": {
        "title": "TrackSwiftGPIPaymentRequest",
        "required": [
          "TrackSwiftGPIPaymentRequest"
        ],
        "type": "object",
        "properties": {
          "TrackSwiftGPIPaymentRequest": {
            "$ref": "#/components/schemas/tns_TrackSwiftGPIPaymentRequest"
          }
        }
      },
      "TrackSwiftGPIPaymentResponse": {
        "title": "TrackSwiftGPIPaymentResponse",
        "required": [
          "TrackSwiftGPIPaymentResponse"
        ],
        "type": "object",
        "properties": {
          "TrackSwiftGPIPaymentResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_TrackSwiftGPIPaymentResponse"
              }
            ]
          }
        }
      },
      "TransferFundToBeneficiaryRequest": {
        "title": "TransferFundToBeneficiaryRequest",
        "required": [
          "TransferFundToBeneficiaryRequest"
        ],
        "type": "object",
        "properties": {
          "TransferFundToBeneficiaryRequest": {
            "$ref": "#/components/schemas/tns_TransferFundToBeneficiaryRequestType"
          }
        }
      },
      "TransferFundToBeneficiaryResponse": {
        "title": "TransferFundToBeneficiaryResponse",
        "required": [
          "TransferFundToBeneficiaryResponse"
        ],
        "type": "object",
        "properties": {
          "TransferFundToBeneficiaryResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_TransferFundToBeneficiaryResponse"
              }
            ]
          }
        }
      },
      "ValidateBenAccountRTPRequest": {
        "title": "ValidateBenAccountRTPRequest",
        "required": [
          "ValidateBenAccountRTPRequest"
        ],
        "type": "object",
        "properties": {
          "ValidateBenAccountRTPRequest": {
            "$ref": "#/components/schemas/tns_ValidateBenAccountRTPRequest"
          }
        }
      },
      "ValidateBenAccountRTPResponse": {
        "title": "ValidateBenAccountRTPResponse",
        "required": [
          "ValidateBenAccountRTPResponse"
        ],
        "type": "object",
        "properties": {
          "ValidateBenAccountRTPResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ValidateBenAccountRTPResponse"
              }
            ]
          }
        }
      },
      "ValueDateAndCutOffTimeRequest": {
        "title": "ValueDateAndCutOffTimeRequest",
        "required": [
          "ValueDateAndCutOffTimeRequest"
        ],
        "type": "object",
        "properties": {
          "ValueDateAndCutOffTimeRequest": {
            "$ref": "#/components/schemas/tns_ValueDateAndCutOffTimeRequest"
          }
        }
      },
      "ValueDateAndCutOffTimeResponse": {
        "title": "ValueDateAndCutOffTimeResponse",
        "required": [
          "ValueDateAndCutOffTimeResponse"
        ],
        "type": "object",
        "properties": {
          "ValueDateAndCutOffTimeResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ValueDateAndCutOffTimeResponse"
              }
            ]
          }
        }
      },
      "wsse_UsernameToken": {
        "title": "wsse_UsernameToken",
        "required": [
          "Username",
          "Password"
        ],
        "type": "object",
        "properties": {
          "Username": {
            "type": "string"
          },
          "Password": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_AmountOptional": {
        "oneOf": [
          {
            "type": "number"
          },
          {
            "type": "string"
          }
        ]
      },
      "Q1_AmountOptional": {
        "$ref": "#/components/schemas/tns_AmountOptional"
      }
    },
    "securitySchemes": {
      "mwsecurity": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "mwsecurity": []
    }
  ],
  "tags": [
    {
      "name": "Payments APIs",
      "description": ""
    }
  ]
}