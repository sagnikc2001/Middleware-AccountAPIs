{
  "openapi": "3.0.3",
  "info": {
    "title": "MW QuickPay APIs",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://mw-api-3scale-apicast-staging.apps.com:443/api/quickpay"
    }
  ],
  "paths": {
    "/v1/AddSender": {
      "post": {
        "tags": [
          "QuickPay APIs"
        ],
        "description": "Adds sender information in middleware remittance system by\n Sending addSender message to PayQuik Storing sender\n information in bancs table (PQRM)\n Sender is identified using SenderID\n generated by PayQuik.\n\n Channels must retrieve customer profile to\n capture customer name either in\n Arabic or English and customer must\n fill the missing name (either in\n Arabic or in English). Customer also\n must provide other information\n in English.",
        "operationId": "AddSender",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddSenderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddSenderResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddSenderResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddSenderResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/ActivateSender": {
      "post": {
        "tags": [
          "QuickPay APIs"
        ],
        "description": "ActivateSender",
        "operationId": "ActivateSender",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivateSenderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivateSenderResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivateSenderResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivateSenderResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/RetrieveSender": {
      "post": {
        "tags": [
          "QuickPay APIs"
        ],
        "description": "RetrieveSender",
        "operationId": "RetrieveSender",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetrieveSenderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveSenderResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveSenderResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveSenderResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/ModifySender": {
      "post": {
        "tags": [
          "QuickPay APIs Stage"
        ],
        "summary": "ModifySender",
        "operationId": "ModifySender",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ModifySenderRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ModifySenderResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/AddRecipient": {
      "post": {
        "tags": [
          "QuickPay APIs"
        ],
        "description": "AddRecipient",
        "operationId": "AddRecipient",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddRecipientRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddRecipientResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddRecipientResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddRecipientResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/ActivateRecipient": {
      "post": {
        "tags": [
          "QuickPay APIs Stage"
        ],
        "description": "ActivateRecipient",
        "operationId": "ActivateRecipient",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ActivateRecipientRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ActivateRecipientResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/RetrieveRecipient": {
      "post": {
        "tags": [
          "QuickPay APIs"
        ],
        "description": "RetrieveRecipient",
        "operationId": "RetrieveRecipient",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetrieveRecipientRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveRecipientResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveRecipientResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveRecipientResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/ModifyRecipient": {
      "post": {
        "tags": [
          "QuickPay APIs"
        ],
        "description": "ModifyRecipient",
        "operationId": "ModifyRecipient",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyRecipientRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModifyRecipientResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModifyRecipientResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModifyRecipientResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/DeleteRecipient": {
      "post": {
        "tags": [
          "QuickPay APIs"
        ],
        "description": "DeleteRecipient",
        "operationId": "DeleteRecipient",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRecipientRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteRecipientResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteRecipientResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteRecipientResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/ValidateTransfer": {
      "post": {
        "tags": [
          "QuickPay APIs"
        ],
        "description": "ValidateTransfer",
        "operationId": "ValidateTransfer",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateTransferRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateTransferResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateTransferResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateTransferResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/Transfer": {
      "post": {
        "tags": [
          "QuickPay APIs"
        ],
        "description": "Transfer",
        "operationId": "Transfer",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/CancelTransfer": {
      "post": {
        "tags": [
          "QuickPay APIs"
        ],
        "description": "CancelTransfer",
        "operationId": "CancelTransfer",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelTransferRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelTransferResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelTransferResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelTransferResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/TransferStatus": {
      "post": {
        "tags": [
          "QuickPay APIs"
        ],
        "description": "TransferStatus",
        "operationId": "TransferStatus",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferStatusRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferStatusResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferStatusResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/TransactionInquiry": {
      "post": {
        "tags": [
          "QuickPay APIs"
        ],
        "description": "TransactionInquiry",
        "operationId": "TransactionInquiry",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionInquiryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionInquiryResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionInquiryResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionInquiryResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/AddFee": {
      "post": {
        "tags": [
          "QuickPay APIs Stage"
        ],
        "summary": "AddFee",
        "operationId": "AddFee",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AddFeeRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AddFeeResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ListCurrency": {
      "post": {
        "tags": [
          "QuickPay APIs Stage"
        ],
        "summary": "ListCurrency",
        "operationId": "ListCurrency",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ListCurrencyRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ListCurrencyResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ModifyCurrency": {
      "post": {
        "tags": [
          "QuickPay APIs Stage"
        ],
        "summary": "ModifyCurrency",
        "operationId": "ModifyCurrency",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ModifyCurrencyRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ModifyCurrencyResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/RetrieveStates/{country}": {
      "get": {
        "tags": [
          "QuickPay APIs"
        ],
        "description": "RetrieveStates",
        "operationId": "RetrieveStates",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          },
          {
            "name": "country",
            "in": "path",
            "description": "Country code",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/schemas.json#/MWISOCountryCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveStatesResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveStatesResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveStatesResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/RetrieveMGAgents": {
      "post": {
        "tags": [
          "QuickPay APIs"
        ],
        "description": "RetrieveMGAgents",
        "operationId": "RetrieveMGAgents",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetrieveMGAgentsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveMGAgentsResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveMGAgentsResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveMGAgentsResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/RetrieveAgents": {
      "get": {
        "tags": [
          "QuickPay APIs"
        ],
        "description": "RetrieveAgents",
        "operationId": "RetrieveAgents",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "Country code (short name)",
            "required": true,
            "schema": {
              "$ref": "../../commonschemas/schemas.json#/MWISOCountryCode"
            }
          },
          {
            "name": "city",
            "in": "query",
            "description": "city name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location",
            "in": "query",
            "description": "Location identifier in delivery network",
            "schema": {
              "$ref": "../../commonschemas/schemas.json#/Location"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "currency code",
            "schema": {
              "$ref": "../../commonschemas/schemas.json#/ISOCurrencyCode"
            }
          },
          {
            "name": "deliveryType",
            "in": "query",
            "description": "Remittance delivery type for which this rule apply",
            "schema": {
              "$ref": "#/components/schemas/deliveryTypesType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveAgentsResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveAgentsResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveAgentsResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/RetrieveBanks": {
      "get": {
        "tags": [
          "QuickPay APIs"
        ],
        "description": "RetrieveBanks",
        "operationId": "RetrieveBanks",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "Country code (short name)",
            "required": true,
            "schema": {
              "$ref": "../../commonschemas/schemas.json#/MWISOCountryCode"
            }
          },
          {
            "name": "bankId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deliveryType",
            "in": "query",
            "description": "Remittance delivery type for which this rule apply",
            "schema": {
              "$ref": "#/components/schemas/deliveryTypesType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveBanksResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveBanksResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveBanksResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/RetrieveBranchCurrency": {
      "get": {
        "tags": [
          "QuickPay APIs"
        ],
        "description": "RetrieveBranchCurrency",
        "operationId": "RetrieveBranchCurrency",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "Country code (short name)",
            "required": true,
            "schema": {
              "$ref": "../../commonschemas/schemas.json#/MWISOCountryCode"
            }
          },
          {
            "name": "bankId",
            "in": "query",
            "description": "Bank Identifier in delivery network",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branchId",
            "in": "query",
            "description": "Branch Identifier in delivery network",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveBranchCurrencyResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveBranchCurrencyResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveBranchCurrencyResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/RetrieveBranches": {
      "get": {
        "tags": [
          "QuickPay APIs"
        ],
        "description": "RetrieveBranches",
        "operationId": "RetrieveBranches",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "Country code",
            "required": true,
            "schema": {
              "$ref": "../../commonschemas/schemas.json#/MWISOCountryCode"
            }
          },
          {
            "name": "bankId",
            "in": "query",
            "description": "Bank Identifier in delivery network",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "currency code",
            "schema": {
              "$ref": "../../commonschemas/schemas.json#/ISOCurrencyCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveBranchesResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveBranchesResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveBranchesResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/RetrieveCities": {
      "get": {
        "tags": [
          "QuickPay APIs"
        ],
        "description": "RetrieveCities",
        "operationId": "RetrieveCities",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "Country code (short name)",
            "required": true,
            "schema": {
              "$ref": "../../commonschemas/schemas.json#/MWISOCountryCode"
            }
          },
          {
            "name": "deliveryType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/deliveryTypesType"
            }
          },
          {
            "name": "state",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveCitiesResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveCitiesResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveCitiesResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/RetrieveCountries/{option}": {
      "get": {
        "tags": [
          "QuickPay APIs"
        ],
        "description": "RetrieveCountries",
        "operationId": "RetrieveCountries",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          },
          {
            "name": "option",
            "in": "path",
            "description": "Option to retrieve ALL countries for NBL",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/option"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveCountriesResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveCountriesResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveCountriesResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/RetrieveCourier/{country}": {
      "get": {
        "tags": [
          "QuickPay APIs"
        ],
        "description": "RetrieveCourier",
        "operationId": "RetrieveCourier",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          },
          {
            "name": "country",
            "in": "path",
            "description": "Country code (short name)",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/schemas.json#/MWISOCountryCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveCourierResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveCourierResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveCourierResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/RetrieveCourierCurrency": {
      "post": {
        "tags": [
          "QuickPay APIs Stage"
        ],
        "summary": "RetrieveCourierCurrency",
        "operationId": "RetrieveCourierCurrency",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RetrieveCourierCurrencyRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RetrieveCourierCurrencyResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/RetrieveDeliveryTypes": {
      "get": {
        "tags": [
          "QuickPay APIs"
        ],
        "description": "RetrieveDeliveryTypes",
        "operationId": "RetrieveDeliveryTypes",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "Country code (short name)",
            "required": true,
            "schema": {
              "$ref": "../../commonschemas/schemas.json#/MWISOCountryCode"
            }
          },
          {
            "name": "option",
            "in": "query",
            "description": "Option to retrieve ALL applicable delivery types for NBL",
            "schema": {
              "$ref": "#/components/schemas/option"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveDeliveryTypesResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveDeliveryTypesResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveDeliveryTypesResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/RetrieveDirCourier/{country}": {
      "get": {
        "tags": [
          "QuickPay APIs"
        ],
        "description": "RetrieveDirCourier",
        "operationId": "RetrieveDirCourier",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          },
          {
            "name": "country",
            "in": "path",
            "description": "Country code (short name)",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/schemas.json#/MWISOCountryCode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveDirCourierResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveDirCourierResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveDirCourierResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/RetrieveDirCourierCurrency": {
      "get": {
        "tags": [
          "QuickPay APIs"
        ],
        "description": "RetrieveDirCourierCurrency",
        "operationId": "RetrieveDirCourierCurrency",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "Country code (short name)",
            "required": true,
            "schema": {
              "$ref": "../../commonschemas/schemas.json#/MWISOCountryCode"
            }
          },
          {
            "name": "courierId",
            "in": "query",
            "description": "uniquely identifying the Courier service",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveDirCourierCurrencyResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveDirCourierCurrencyResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveDirCourierCurrencyResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/RetrieveLocationCurrency": {
      "get": {
        "tags": [
          "QuickPay APIs"
        ],
        "description": "RetrieveLocationCurrency",
        "operationId": "RetrieveLocationCurrency",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "Country code (short name)",
            "required": true,
            "schema": {
              "$ref": "../../commonschemas/schemas.json#/MWISOCountryCode"
            }
          },
          {
            "name": "city",
            "in": "query",
            "description": "city name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "agent",
            "in": "query",
            "description": "Agent identifier in delivery network",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location",
            "in": "query",
            "description": "Location identifier in delivery network",
            "schema": {
              "$ref": "../../commonschemas/schemas.json#/Location"
            }
          },
          {
            "name": "deliveryType",
            "in": "query",
            "description": "Remittance delivery type for which this rule apply",
            "schema": {
              "$ref": "#/components/schemas/deliveryTypesType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveLocationCurrencyResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveLocationCurrencyResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveLocationCurrencyResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/RetrieveLocations": {
      "get": {
        "tags": [
          "QuickPay APIs"
        ],
        "description": "RetrieveLocations",
        "operationId": "RetrieveLocations",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          },
          {
            "name": "country",
            "in": "query",
            "description": "Country code (short name)",
            "required": true,
            "schema": {
              "$ref": "../../commonschemas/schemas.json#/MWISOCountryCode"
            }
          },
          {
            "name": "city",
            "in": "query",
            "description": "city name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "description": "currency code",
            "schema": {
              "$ref": "../../commonschemas/schemas.json#/ISOCurrencyCode"
            }
          },
          {
            "name": "agent",
            "in": "query",
            "description": "Agent identifier in delivery network",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deliveryType",
            "in": "query",
            "description": "Remittance delivery type for which this rule apply",
            "schema": {
              "$ref": "#/components/schemas/deliveryTypesType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveLocationsResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveLocationsResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveLocationsResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/RetrieveMGCurrency": {
      "post": {
        "tags": [
          "QuickPay APIs"
        ],
        "description": "RetrieveMGCurrency",
        "operationId": "RetrieveMGCurrency",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetrieveMGCurrencyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveMGCurrencyResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveMGCurrencyResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveMGCurrencyResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/ScreenPayment": {
      "post": {
        "tags": [
          "QuickPay APIs Stage"
        ],
        "summary": "ScreenPayment",
        "operationId": "ScreenPayment",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ScreenPaymentRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ScreenPaymentResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/AmendTransfer": {
      "post": {
        "tags": [
          "QuickPay APIs Stage"
        ],
        "summary": "AmendTransfer",
        "operationId": "AmendTransfer",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AmendTransferRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AmendTransferResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CountriesList": {
      "post": {
        "tags": [
          "QuickPay APIs Stage"
        ],
        "summary": "CountriesList",
        "operationId": "CountriesList",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CountriesListRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CountriesListResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/AddCurrency": {
      "post": {
        "tags": [
          "QuickPay APIs Stage"
        ],
        "summary": "AddCurrency",
        "operationId": "AddCurrency",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AddCurrencyRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AddCurrencyResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetRemittanceCustomerRate": {
      "post": {
        "tags": [
          "QuickPay APIs Stage"
        ],
        "summary": "GetRemittanceCustomerRate",
        "operationId": "GetRemittanceCustomerRate",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RemittanceCustomerRateRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RemittanceCustomerRateResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/TransactionCancelInquiry/{bankReferenceNumber}": {
      "get": {
        "tags": [
          "QuickPay APIs"
        ],
        "description": "TransactionCancelInquiry",
        "operationId": "TransactionCancelInquiry",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          },
          {
            "name": "bankReferenceNumber",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionCancelInquiryResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionCancelInquiryResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionCancelInquiryResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/TransactionCancel": {
      "post": {
        "tags": [
          "QuickPay APIs"
        ],
        "description": "TransactionCancel",
        "operationId": "TransactionCancel",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionCancelRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionCancelResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionCancelResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionCancelResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/RetrieveMGDeliveryTypes": {
      "post": {
        "tags": [
          "QuickPay APIs Stage"
        ],
        "summary": "RetrieveMGDeliveryTypes",
        "operationId": "RetrieveMGDeliveryTypes",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RetrieveMGDeliveryTypesRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RetrieveMGDeliveryTypesResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/RetrieveMGDynamicFields": {
      "post": {
        "tags": [
          "QuickPay APIs Stage"
        ],
        "summary": "RetrieveMGDynamicFields",
        "operationId": "RetrieveMGDynamicFields",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RetrieveMGDynamicFieldsRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RetrieveMGDynamicFieldsResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/IsMGTransactionAmendable/{bankReferenceNumber}": {
      "get": {
        "tags": [
          "QuickPay APIs"
        ],
        "description": "IsMGTransactionAmendable",
        "operationId": "IsMGTransactionAmendable",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          },
          {
            "name": "bankReferenceNumber",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IsMGTransactionAmendableResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IsMGTransactionAmendableResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IsMGTransactionAmendableResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    }
  },
  "components": {
    "schemas": {
      "AddSenderRequestType": {
        "title": "AddSenderRequestType",
        "required": [
          "shortCif",
          "firstName",
          "lastName",
          "address1",
          "city",
          "country",
          "nationality",
          "language"
        ],
        "type": "object",
        "properties": {
          "shortCif": {
            "$ref": "../../commonschemas/schemas.json#/ShortCIF",
            "description": "Customer Number"
          },
          "firstName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "Customer first name as retrieved from\r\n customer\r\n profile"
          },
          "middleName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "Customer middle name as retrieved from\r\n customer\r\n profile"
          },
          "lastName": {
            "type": "string",
            "description": "Customer last name as retrieved from\r\n customer\r\n profile"
          },
          "firstNameArabic": {
            "type": "string",
            "description": "Customer Arabic first name as retrieved from\r\n customer profile"
          },
          "middleNameArabic": {
            "type": "string",
            "description": "Customer Arabic middle name as retrieved\r\n from\r\n customer profile"
          },
          "lastNameArabic": {
            "type": "string",
            "description": "Customer Arabic last name as retrieved from\r\n customer profile"
          },
          "address1": {
            "type": "string",
            "description": "Address in English"
          },
          "address2": {
            "type": "string",
            "description": "Address in English"
          },
          "city": {
            "type": "string",
            "description": "City in English"
          },
          "postalCode": {
            "type": "string"
          },
          "country": {
            "$ref": "../../commonschemas/schemas.json#/MWISOCountryCode",
            "description": "Customer country in English"
          },
          "nationality": {
            "type": "string",
            "description": "Nationality in English"
          },
          "email": {
            "$ref": "../../commonschemas/schemas.json#/EmailAddress",
            "type": "string"
          },
          "mobile": {
            "$ref": "../../commonschemas/schemas.json#/MobileNumber",
            "type": "string"
          },
          "language": {
            "$ref": "#/components/schemas/language"
          },
          "iban": {
            "type": "string"
          }
        },
        "description": ""
      },
      "AddSenderResponseType": {
        "title": "AddSenderResponseType",
        "type": "object",
        "properties": {
          "senderId": {
            "type": "string",
            "description": "Sender identifier"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "ActivateSenderRequestType": {
        "title": "ActivateSenderRequestType",
        "description": "Activate Sender Request Type",
        "required": [
          "shortCif"
        ],
        "type": "object",
        "properties": {
          "shortCif": {
            "$ref": "../../commonschemas/schemas.json#/ShortCIF",
            "description": "Customer Number"
          },
          "senderId": {
            "type": "string"
          },
          "history": {
            "$ref": "../../commonschemas/schemas.json#/YorNType"
          },
          "bankReferenceNumber": {
            "type": "string"
          }
        }
      },
      "ActivateSenderResponseType": {
        "title": "ActivateSenderResponseType",
        "description": "Activate Sender Response Type",
        "type": "object",
        "properties": {
          "success": {
            "$ref": "../../commonschemas/schemas.json#/TrueOrFalseType"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        }
      },
      "RetrieveSenderRequestType": {
        "title": "RetrieveSenderRequestType",
        "required": [
          "shortCif"
        ],
        "type": "object",
        "properties": {
          "shortCif": {
            "$ref": "../../commonschemas/schemas.json#/ShortCIF",
            "description": "Customer Number"
          },
          "senderId": {
            "type": "string"
          },
          "history": {
            "$ref": "../../commonschemas/schemas.json#/YorNType"
          },
          "bankReferenceNumber": {
            "type": "string"
          }
        },
        "description": ""
      },
      "RetrieveSenderResponseType": {
        "title": "RetrieveSenderResponseType",
        "type": "object",
        "properties": {
          "senderInfo": {
            "$ref": "#/components/schemas/senderInfoType"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "tns_remittanceModifySenderType": {
        "title": "tns_remittanceModifySenderType",
        "required": [
          "shortCif",
          "firstName",
          "address1",
          "country",
          "city",
          "postalCode",
          "nationality",
          "language"
        ],
        "type": "object",
        "properties": {
          "shortCif": {
            "pattern": "([0-9]){8}|([0]){1}",
            "type": "string"
          },
          "firstName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "Customer first name as retrieved from customer\r\n\t\t\t\t\t\tprofile"
          },
          "middleName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "Customer middle name as retrieved from customer\r\n\t\t\t\t\t\tprofile"
          },
          "lastName": {
            "type": "string",
            "description": "Customer last name as retrieved from customer\r\n\t\t\t\t\t\tprofile"
          },
          "firstNameArabic": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "Customer Arabic first name as retrieved from\r\n\t\t\t\t\t\tcustomer profile"
          },
          "middleNameArabic": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "Customer Arabic middle name as retrieved from\r\n\t\t\t\t\t\tcustomer profile"
          },
          "lastNameArabic": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "description": "Customer Arabic last name as retrieved from\r\n\t\t\t\t\t\tcustomer profile"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "country": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "Customer country code"
          },
          "city": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "nationality": {
            "type": "string",
            "description": "Nationality in English"
          },
          "email": {
            "pattern": "([a-zA-Z0-9_\\-])([a-zA-Z0-9_\\-\\.]*)@(\\[((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}|((([a-zA-Z0-9\\-]+)\\.)+))([a-zA-Z]{2,}|(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\])|()",
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "language": {
            "allOf": [
              {
                "$ref": "#/components/schemas/language"
              }
            ]
          },
          "update": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/YorNType"
              }
            ]
          },
          "idNumber": {
            "maxLength": 15,
            "minLength": 0,
            "type": "string",
            "description": "Sender’s ID"
          },
          "ccrIdType": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string",
            "description": "NCB’s ID Type"
          },
          "idExpiryDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "The expiry Date of the ID"
          },
          "dateofBirth": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Sender’s Date of Birth"
          },
          "occupation": {
            "type": "string",
            "description": "Sender’s occupation"
          },
          "placeOfBirth": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_ModifySenderResponse": {
        "title": "tns_ModifySenderResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/TrueOrFalseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "RetrieveRecipientRequestType": {
        "title": "RetrieveRecipientRequestType",
        "required": [
          "shortCif",
          "recipientId"
        ],
        "type": "object",
        "properties": {
          "shortCif": {
            "$ref": "../../commonschemas/schemas.json#/ShortCIF",
            "description": "Short CIF"
          },
          "recipientId": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "description": "Recipient identifier"
          },
          "bankReferenceNumber": {
            "type": "integer",
            "description": "Transaction reference number",
            "format": "int32"
          },
          "list": {
            "$ref": "../../commonschemas/schemas.json#/YorNType",
            "description": "Determine if all recipient details must be retrieved or summary of recipient information"
          },
          "history": {
            "$ref": "../../commonschemas/schemas.json#/YorNType",
            "description": "Determine if history of specific recipient information to be retrieved"
          },
          "dnetType": {
            "type": "string",
            "description": "Select recipient type"
          }
        },
        "description": ""
      },
      "RetrieveRecipientResponseType": {
        "title": "RetrieveRecipientResponseType",
        "type": "object",
        "properties": {
          "recipientInfo": {
            "$ref": "#/components/schemas/recipientInfoType"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "remittanceRecipientType": {
        "title": "remittanceRecipientType",
        "description": "remittance Recipient Type",
        "required": [
          "recipientId",
          "firstName",
          "middleName",
          "firstNameArabic",
          "middleNameArabic",
          "middleNameArabic2",
          "lastNameArabic",
          "address1",
          "city",
          "state",
          "postalCode",
          "country",
          "nationality",
          "mobile",
          "phone",
          "deliveryType",
          "deliveryTypeDescription",
          "deliveryCurrencyCode",
          "deliveryDetail0",
          "remitPurpose",
          "correctionCheck",
          "correspondentId",
          "dnetType",
          "dateOfBirth",
          "placeOfBirth",
          "occupation",
          "status"
        ],
        "type": "object",
        "properties": {
          "shortCif": {
            "$ref": "../../commonschemas/schemas.json#/ShortCIF"
          },
          "recipientId": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "description": "Recipient identifier"
          },
          "iban": {
            "type": "string"
          },
          "firstName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "recipient English first name"
          },
          "middleName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "recipient English middle name"
          },
          "lastName": {
            "type": "string",
            "description": "recipient English last name"
          },
          "fourthName": {
            "type": "string",
            "description": "Recipient fourth name which might be mandatory\r\n\t\t\t\t\t\tonly for country Egypt and hence the service parameter is optional"
          },
          "firstNameArabic": {
            "maxLength": 30,
            "type": "string",
            "description": "Recipient Arabic first name"
          },
          "middleNameArabic": {
            "maxLength": 30,
            "type": "string",
            "description": "Recipient Arabic middle name"
          },
          "middleNameArabic2": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "Recipient Arabic second middle name"
          },
          "lastNameArabic": {
            "maxLength": 40,
            "type": "string",
            "description": "Recipient Arabic last name"
          },
          "address1": {
            "type": "string",
            "description": "recipient address"
          },
          "address2": {
            "type": "string",
            "description": "recipient address 2"
          },
          "city": {
            "type": "string",
            "description": "recipient city"
          },
          "state": {
            "type": "string",
            "description": "recipient state"
          },
          "postalCode": {
            "type": "string",
            "description": "recipient postal code"
          },
          "country": {
            "$ref": "../../commonschemas/schemas.json#/MWISOCountryCodeOptional",
            "description": "recipient country"
          },
          "countryName": {
            "type": "string"
          },
          "nationality": {
            "type": "string",
            "description": "recipient nationality"
          },
          "email": {
            "type": "string",
            "description": "recipient email"
          },
          "mobile": {
            "type": "string",
            "description": "Recipient mobile"
          },
          "phone": {
            "$ref": "../../commonschemas/schemas.json#/PhoneNumberOptional",
            "description": "recipient phone"
          },
          "deliveryType": {
            "$ref": "#/components/schemas/deliveryTypesType"
          },
          "deliveryTypeDescription": {
            "type": "string"
          },
          "deliveryCurrencyCode": {
            "$ref": "../../commonschemas/schemas.json#/ISOCurrencyCodeOptional"
          },
          "deliveryDetail0": {
            "type": "string"
          },
          "deliveryDetail1": {
            "type": "string"
          },
          "deliveryDetail2": {
            "type": "string"
          },
          "deliveryDetail3": {
            "type": "string"
          },
          "deliveryDetail4": {
            "type": "string"
          },
          "deliveryDetail6": {
            "type": "string"
          },
          "deliveryDetail8": {
            "type": "string"
          },
          "deliveryDetail9": {
            "type": "string"
          },
          "language": {
            "$ref": "#/components/schemas/language"
          },
          "agent": {
            "type": "string"
          },
          "remitPurpose": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string"
          },
          "remiterRelation": {
            "maxLength": 120,
            "minLength": 0,
            "type": "string"
          },
          "correctionCheck": {
            "type": "string",
            "description": "Indicates if agent accepts transaction\r\n\t\t\t\t\t\tcorrections"
          },
          "correspondentId": {
            "type": "string",
            "description": "SWIFT BIC code for correspondent bank"
          },
          "dnetType": {
            "type": "string",
            "description": "Type of correspondent whether it is NCB or\r\n\t\t\t\t\t\tPayQuik"
          },
          "dateOfBirth": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "Recipient Date of birth"
          },
          "placeOfBirth": {
            "type": "string",
            "description": "Recipient Place Of Birth"
          },
          "occupation": {
            "maxLength": 50,
            "type": "string",
            "description": "Recipient Occupation"
          },
          "occupationOther": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/status"
          }
        }
      },
      "ModifyRecipientResponseType": {
        "title": "ModifyRecipientResponseType",
        "description": "Modify Recipient Response Type",
        "type": "object",
        "properties": {
          "recipientId": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        }
      },
      "newRemittanceRecipientType": {
        "title": "newRemittanceRecipientType",
        "required": [
          "shortCif",
          "iban",
          "firstName",
          "lastName",
          "address1",
          "city",
          "country",
          "mobile",
          "phone",
          "deliveryType",
          "deliveryCurrencyCode",
          "deliveryDetail0",
          "deliveryDetail1",
          "deliveryDetail3",
          "language",
          "remitPurpose",
          "remiterRelation",
          "correctionCheck",
          "correspondentId",
          "dnetType",
          "dateOfBirth",
          "placeOfBirth",
          "occupation"
        ],
        "type": "object",
        "properties": {
          "shortCif": {
            "$ref": "../../commonschemas/schemas.json#/ShortCIF"
          },
          "recipientId": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "description": "Recipient identifier"
          },
          "iban": {
            "type": "string"
          },
          "firstName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "recipient English first name"
          },
          "middleName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "recipient English middle name"
          },
          "lastName": {
            "type": "string",
            "description": "recipient English last name"
          },
          "fourthName": {
            "type": "string",
            "description": "Recipient fourth name which might be mandatory only for country Egypt and hence the service parameter is optional"
          },
          "firstNameArabic": {
            "maxLength": 30,
            "type": "string",
            "description": "Recipient Arabic first name"
          },
          "middleNameArabic": {
            "maxLength": 30,
            "type": "string",
            "description": "Recipient Arabic middle name"
          },
          "middleNameArabic2": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "Recipient Arabic second middle name"
          },
          "lastNameArabic": {
            "maxLength": 40,
            "type": "string",
            "description": "Recipient Arabic last name"
          },
          "address1": {
            "type": "string",
            "description": "recipient address"
          },
          "address2": {
            "type": "string",
            "description": "recipient address 2"
          },
          "city": {
            "type": "string",
            "description": "recipient city"
          },
          "state": {
            "type": "string",
            "description": "recipient state"
          },
          "postalCode": {
            "type": "string",
            "description": "recipient postal code"
          },
          "country": {
            "$ref": "../../commonschemas/schemas.json#/MWISOCountryCodeOptional",
            "description": "recipient country"
          },
          "countryName": {
            "type": "string"
          },
          "nationality": {
            "type": "string",
            "description": "recipient nationality"
          },
          "email": {
            "$ref": "../../commonschemas/schemas.json#/EmailAddressOptional",
            "description": "recipient email"
          },
          "mobile": {
            "$ref": "../../commonschemas/schemas.json#/MobileNumberOptional",
            "description": "Recipient mobile"
          },
          "phone": {
            "$ref": "../../commonschemas/schemas.json#/PhoneNumberOptional",
            "description": "recipient phone"
          },
          "deliveryType": {
            "$ref": "#/components/schemas/deliveryTypesType"
          },
          "deliveryTypeDescription": {
            "type": "string"
          },
          "deliveryCurrencyCode": {
            "$ref": "../../commonschemas/schemas.json#/ISOCurrencyCodeOptional"
          },
          "deliveryDetail0": {
            "type": "string"
          },
          "deliveryDetail1": {
            "type": "string"
          },
          "deliveryDetail2": {
            "type": "string"
          },
          "deliveryDetail3": {
            "type": "string"
          },
          "deliveryDetail4": {
            "type": "string"
          },
          "deliveryDetail6": {
            "type": "string"
          },
          "deliveryDetail8": {
            "type": "string"
          },
          "deliveryDetail9": {
            "type": "string"
          },
          "language": {
            "$ref": "#/components/schemas/language"
          },
          "agent": {
            "type": "string"
          },
          "remitPurpose": {
            "type": "string"
          },
          "remiterRelation": {
            "type": "string"
          },
          "correctionCheck": {
            "$ref": "../../commonschemas/schemas.json#/YorNType",
            "description": "Indicates if agent accepts transaction\r\n\t\t\t\t\t\tcorrections"
          },
          "correspondentId": {
            "type": "string",
            "description": "SWIFT BIC code for correspondent bank"
          },
          "dnetType": {
            "$ref": "#/components/schemas/dnetTypesType",
            "description": "Type of correspondent whether it is NCB or\r\n\t\t\t\t\t\tPayQuik"
          },
          "dateOfBirth": {
            "$ref": "../../commonschemas/schemas.json#/MWDate",
            "description": "Recipient Date of birth"
          },
          "placeOfBirth": {
            "type": "string",
            "description": "Recipient Place Of Birth"
          },
          "occupation": {
            "maxLength": 50,
            "type": "string",
            "description": "Recipient Occupation"
          },
          "occupationOther": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          }
        },
        "description": ""
      },
      "AddRecipientResponseType": {
        "title": "AddRecipientResponseType",
        "type": "object",
        "properties": {
          "recipientId": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "tns_ActivateRecipientRequest": {
        "title": "tns_ActivateRecipientRequest",
        "required": [
          "shortCif",
          "recipientId"
        ],
        "type": "object",
        "properties": {
          "shortCif": {
            "pattern": "([0-9]){8}|([0]){1}",
            "type": "string",
            "description": "Short CIF"
          },
          "recipientId": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "description": "Recipient identifier"
          }
        },
        "description": ""
      },
      "tns_ActivateRecipientResponse": {
        "title": "tns_ActivateRecipientResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ActivateRecipientResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "DeleteRecipientRequestType": {
        "title": "DeleteRecipientRequestType",
        "required": [
          "shortCif",
          "recipientId"
        ],
        "type": "object",
        "properties": {
          "shortCif": {
            "$ref": "../../commonschemas/schemas.json#/ShortCIF",
            "description": "Customer Number"
          },
          "recipientId": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "description": "Recipient identifier"
          }
        },
        "description": ""
      },
      "DeleteRecipientResponseType": {
        "title": "DeleteRecipientResponseType",
        "type": "object",
        "properties": {
          "success": {
            "$ref": "../../commonschemas/schemas.json#/TrueOrFalseType"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "ValidateTransferRequestType": {
        "title": "ValidateTransferRequestType",
        "required": [
          "shortCif",
          "accountId",
          "recipientId",
          "amount",
          "calculationMethod"
        ],
        "type": "object",
        "properties": {
          "shortCif": {
            "description": "Customer Number",
            "$ref": "../../commonschemas/schemas.json#/ShortCIF"
          },
          "accountId": {
            "$ref": "../../commonschemas/schemas.json#/AccountId",
            "description": "Account number to be used for deducting the transferred amount"
          },
          "recipientId": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "description": "Recipient identifier"
          },
          "amount": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "amount to be transferred"
          },
          "calculationMethod": {
            "type": "integer",
            "description": "Calculation method",
            "format": "int32"
          },
          "mgDeliveryType": {
            "type": "string",
            "description": "MoneyGram deliveryType"
          },
          "atmTerminalId": {
            "maxLength": 16,
            "type": "string",
            "description": "ATM Terminal ID"
          },
          "promoCode": {
            "type": "string",
            "description": "Promo Code"
          }
        },
        "description": ""
      },
      "ValidateTransferResponseType": {
        "title": "ValidateTransferResponseType",
        "description": "Validate Transfer Response Type",
        "type": "object",
        "properties": {
          "transferInfo": {
            "$ref": "#/components/schemas/transferInfoType"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        }
      },
      "TransferRequestType": {
        "title": "TransferRequestType",
        "required": [
          "shortCif",
          "accountNumber",
          "recipientId",
          "calculationMethod",
          "amount",
          "feeRuleId",
          "limitRuleId"
        ],
        "type": "object",
        "properties": {
          "shortCif": {
            "$ref": "../../commonschemas/schemas.json#/ShortCIF",
            "description": "Customer Number"
          },
          "accountNumber": {
            "$ref": "../../commonschemas/schemas.json#/AccountId",
            "description": "Account number to be used for deducting the transferred amount"
          },
          "recipientId": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "description": "Recipient identifier"
          },
          "calculationMethod": {
            "type": "integer",
            "description": "Calculation method",
            "format": "int32"
          },
          "amount": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "amount to be transferred"
          },
          "feeRuleId": {
            "type": "integer",
            "description": "Fee rule identifier",
            "format": "int32"
          },
          "limitRuleId": {
            "type": "integer",
            "description": "Limit rule identifier",
            "format": "int32"
          },
          "atmReceipt": {
            "type": "integer",
            "format": "int32"
          },
          "atmLocation": {
            "type": "string"
          },
          "AMLPurposeCode": {
            "type": "string"
          },
          "dealId": {
            "type": "string"
          },
          "posReferenceNumber": {
            "type": "string"
          },
          "additionalInfo": {
            "type": "string"
          },
          "mgSessionId": {
            "type": "string",
            "description": "MoneyGram Session Id"
          }
        },
        "description": ""
      },
      "TransferResponseType": {
        "title": "TransferResponseType",
        "type": "object",
        "properties": {
          "transferDetails": {
            "$ref": "#/components/schemas/transferDetailsType"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        }
      },
      "CancelTransferRequestType": {
        "title": "CancelTransferRequestType",
        "required": [
          "shortCif",
          "bankReferenceNumber"
        ],
        "type": "object",
        "properties": {
          "shortCif": {
            "$ref": "../../commonschemas/schemas.json#/ShortCIF",
            "description": "Customer Number"
          },
          "bankReferenceNumber": {
            "type": "string"
          },
          "recipientId": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "description": "Recipient identifier"
          },
          "accountNumber": {
            "$ref": "../../commonschemas/schemas.json#/AccountId",
            "description": "Account number to be used for deducting the\r\n transferred amount"
          },
          "amount": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "amount to be transferred"
          },
          "feeRuleId": {
            "type": "integer",
            "description": "Fee rule identifier",
            "format": "int32"
          },
          "limitRuleId": {
            "type": "integer",
            "description": "Limit rule identifier",
            "format": "int32"
          },
          "calculationMethod": {
            "type": "integer",
            "description": "Calculation method",
            "format": "int32"
          },
          "employeeId": {
            "type": "string",
            "description": "EmployeeId"
          }
        },
        "description": ""
      },
      "CancelTransferResponseType": {
        "title": "CancelTransferResponseType",
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/components/schemas/transferCancellationResultType"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "TransferStatusRequestType": {
        "title": "TransferStatusRequestType",
        "required": [
          "shortCif",
          "bankReferenceNumber"
        ],
        "type": "object",
        "properties": {
          "shortCif": {
            "$ref": "../../commonschemas/schemas.json#/ShortCIF",
            "description": "Customer Number"
          },
          "bankReferenceNumber": {
            "type": "string",
            "description": "unique number that identifies a money transfer transaction"
          }
        }
      },
      "TransferStatusResponseType": {
        "title": "TransferStatusResponseType",
        "type": "object",
        "properties": {
          "transferInfo": {
            "$ref": "#/components/schemas/transferStatusInfoType"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        }
      },
      "TransactionInquiryRequestType": {
        "title": "TransactionInquiryRequestType",
        "required": [
          "list"
        ],
        "type": "object",
        "properties": {
          "shortCif": {
            "$ref": "../../commonschemas/schemas.json#/ShortCIFOptional",
            "description": "Customer Number"
          },
          "list": {
            "$ref": "../../commonschemas/schemas.json#/YorNType",
            "description": "Determine if all transactions details must be retrieved or summary of transactions information"
          },
          "limit": {
            "type": "integer",
            "description": "required number of transactions to be returned",
            "format": "int32"
          },
          "senderID": {
            "type": "string"
          },
          "bankReferenceNumber": {
            "type": "string"
          },
          "fromDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional"
          },
          "toDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional"
          },
          "fromRange": {
            "type": "string"
          },
          "toRange": {
            "type": "string"
          }
        },
        "description": ""
      },
      "TransactionInquiryResponseType": {
        "title": "TransactionInquiryResponseType",
        "type": "object",
        "properties": {
          "record": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/record2"
            },
            "description": "Repetitive node that contains transaction details elements"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "tns_AddFeeRequest": {
        "title": "tns_AddFeeRequest",
        "required": [
          "country",
          "spreadToUSD",
          "spreadFromUSD",
          "feePercentage",
          "fee",
          "startDate",
          "channel",
          "channelName",
          "amountMoreThan",
          "amountLessThan"
        ],
        "type": "object",
        "properties": {
          "description": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Rule description"
          },
          "country": {
            "pattern": "[A-Z]{3,3}",
            "type": "string",
            "description": "Remittance country (short code) for which this\r\n rule apply"
          },
          "deliveryType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/deliveryTypesType"
              },
              {
                "description": "Remittance delivery type for which this rule\r\n apply"
              }
            ]
          },
          "bankID": {
            "type": "array",
            "items": {
              "maxLength": 120,
              "minLength": 0,
              "type": "string"
            },
            "description": "Bank identifier"
          },
          "bankName": {
            "type": "array",
            "items": {
              "maxLength": 120,
              "minLength": 0,
              "type": "string"
            },
            "description": "Bank name"
          },
          "agentID": {
            "type": "array",
            "items": {
              "maxLength": 120,
              "minLength": 0,
              "type": "string"
            },
            "description": "Agent identifier"
          },
          "agentName": {
            "type": "array",
            "items": {
              "maxLength": 120,
              "minLength": 0,
              "type": "string"
            },
            "description": "Agent name"
          },
          "sourceCurrency": {
            "pattern": "[A-Z]{3,3}",
            "type": "string",
            "description": "Source currency"
          },
          "destCurrency": {
            "pattern": "[A-Z]{3,3}",
            "type": "string",
            "description": "Destination currency"
          },
          "spreadToUSD": {
            "type": "integer",
            "description": "FX spread percentage from source currency to\r\n USD",
            "format": "int32"
          },
          "spreadFromUSD": {
            "type": "integer",
            "description": "FX spread percentage from USD to destination\r\n currency",
            "format": "int32"
          },
          "feePercentage": {
            "type": "integer",
            "description": "Fee Percentage applied",
            "format": "int32"
          },
          "fee": {
            "type": "integer",
            "description": "Fee value applied,",
            "format": "int32"
          },
          "startDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string",
            "description": "Date on which the rule is effective"
          },
          "endDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string",
            "description": "Date on which the rule expires."
          },
          "channel": {
            "type": "string",
            "description": "Channel Code"
          },
          "channelName": {
            "type": "string",
            "description": "Channel Name"
          },
          "amountMoreThan": {
            "type": "integer",
            "description": "Transfer amount is more than this amount",
            "format": "int32"
          },
          "amountLessThan": {
            "type": "integer",
            "description": "Transfer amount is less than this amount",
            "format": "int32"
          }
        },
        "description": ""
      },
      "tns_AddFeeResponse": {
        "title": "tns_AddFeeResponse",
        "required": [
          "ruleID"
        ],
        "type": "object",
        "properties": {
          "ruleID": {
            "type": "integer",
            "description": "Fee rule identifier",
            "format": "int32"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_ListCurrencyRequest": {
        "title": "tns_ListCurrencyRequest",
        "type": "object",
        "properties": {
          "destinationCurrency": {
            "pattern": "[A-Z]{3,3}",
            "type": "string",
            "description": "Currency Code Example SAR,USD"
          },
          "currencyId": {
            "type": "integer",
            "description": "Currency rule identifier",
            "format": "int32"
          },
          "history": {
            "maxLength": 1,
            "minLength": 0,
            "type": "string",
            "description": "Determine if track of specific rule information\r\n to be retrieved"
          }
        },
        "description": ""
      },
      "tns_ListCurrencyResponse": {
        "title": "tns_ListCurrencyResponse",
        "type": "object",
        "properties": {
          "currency": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_currency"
            },
            "description": "Repetitive node that contains fee rule’s\r\n details elements\r\n Repetitive node that contains fee rule’s\r\n details\r\n elements"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_ModifyCurrencyRequest": {
        "title": "tns_ModifyCurrencyRequest",
        "required": [
          "currencyID",
          "currencyCode",
          "description",
          "exchangeRate"
        ],
        "type": "object",
        "properties": {
          "currencyID": {
            "type": "string",
            "description": "Currency identifier"
          },
          "currencyCode": {
            "pattern": "[A-Z]{3,3}",
            "type": "string",
            "description": "Example USD, SAR"
          },
          "description": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Brief description of the currency"
          },
          "exchangeRate": {
            "type": "number",
            "description": "Currency exchange rate vs USD"
          }
        },
        "description": ""
      },
      "tns_ModifyCurrencyResponse": {
        "title": "tns_ModifyCurrencyResponse",
        "type": "object",
        "properties": {
          "currencyID": {
            "type": "string",
            "description": "Currency identifier"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_AddCurrencyRequest": {
        "title": "tns_AddCurrencyRequest",
        "required": [
          "currencyCode",
          "description",
          "exchangeRate"
        ],
        "type": "object",
        "properties": {
          "currencyCode": {
            "pattern": "[A-Z]{3,3}",
            "type": "string",
            "description": "Example USD, SAR"
          },
          "description": {
            "maxLength": 200,
            "minLength": 0,
            "type": "string",
            "description": "Brief description of the currency"
          },
          "exchangeRate": {
            "type": "number",
            "description": "Currency exchange rate vs USD"
          }
        },
        "description": ""
      },
      "tns_AddCurrencyResponse": {
        "title": "tns_AddCurrencyResponse",
        "type": "object",
        "properties": {
          "currencyID": {
            "type": "string",
            "description": "Currency identifier"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "RetrieveStatesResponseType": {
        "title": "RetrieveStatesResponseType",
        "description": "Retrieve States Response Type",
        "type": "object",
        "properties": {
          "state": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/state"
            },
            "description": ""
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        }
      },
      "RetrieveMGAgentsRequestType": {
        "title": "RetrieveMGAgentsRequestType",
        "required": [
          "country",
          "city"
        ],
        "type": "object",
        "properties": {
          "country": {
            "$ref": "../../commonschemas/schemas.json#/MWISOCountryCode",
            "description": "Country code"
          },
          "city": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "City name"
          },
          "state": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string",
            "description": "State code"
          },
          "deliveryType": {
            "$ref": "#/components/schemas/deliveryTypesType2",
            "description": "Remittance delivery type"
          }
        },
        "description": ""
      },
      "deliveryTypesType2": {
        "title": "deliveryTypesType2",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "delivery type name"
          }
        },
        "description": ""
      },
      "RetrieveMGAgentsResponseType": {
        "title": "RetrieveMGAgentsResponseType",
        "type": "object",
        "properties": {
          "agentInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/agentInfoType"
            },
            "description": "Repetitive node that contains Agent details"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "storeHoursType": {
        "title": "storeHoursType",
        "required": [
          "dayOfWeek",
          "openTime",
          "closeTime",
          "closed"
        ],
        "type": "object",
        "properties": {
          "dayOfWeek": {
            "maxLength": 3,
            "minLength": 0,
            "type": "string",
            "description": "3 letter day name"
          },
          "openTime": {
            "type": "string",
            "description": "Opening time"
          },
          "closeTime": {
            "type": "string",
            "description": "Closing Time"
          },
          "closed": {
            "type": "boolean",
            "description": "Indicates if the store is open or closed"
          }
        },
        "description": ""
      },
      "RetrieveAgentsResponseType": {
        "title": "RetrieveAgentsResponseType",
        "type": "object",
        "properties": {
          "agent": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/agentType"
            },
            "description": "This is repetitive element that contains agent elements"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        }
      },
      "agentType": {
        "title": "agentType",
        "description": "agent Type",
        "required": [
          "entryId",
          "id",
          "name",
          "pickupIndentificationNumber",
          "language",
          "dnetType",
          "correctionCheck",
          "correspondentId"
        ],
        "type": "object",
        "properties": {
          "entryId": {
            "type": "string",
            "description": "Internal agent identifier"
          },
          "id": {
            "type": "integer",
            "description": "Agent identifier in delivery network",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Agent name in delivery network"
          },
          "pickupIndentificationNumber": {
            "$ref": "../../commonschemas/schemas.json#/YorNType",
            "description": "Universal pickup indicator"
          },
          "language": {
            "$ref": "#/components/schemas/language"
          },
          "dnetType": {
            "type": "string",
            "description": "Type of correspondent whether it is NCB or  PayQuik"
          },
          "correctionCheck": {
            "$ref": "../../commonschemas/schemas.json#/YorNType",
            "description": "Indicates if agent accepts transaction corrections"
          },
          "correspondentId": {
            "type": "string",
            "description": "SWIFT BIC code for correspondent bank"
          }
        }
      },
      "RetrieveBanksResponseType": {
        "title": "RetrieveBanksResponseType",
        "type": "object",
        "properties": {
          "bank": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/bankType"
            },
            "description": "This is repetitive element that contains bank elements"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "bankType": {
        "title": "bankType",
        "required": [
          "entryId",
          "id",
          "name",
          "accountTypeCheck",
          "branchTypeCheck",
          "correctionCheck",
          "dnetType",
          "correspondentId",
          "accountTypes",
          "language"
        ],
        "type": "object",
        "properties": {
          "entryId": {
            "type": "integer",
            "description": "Internal bank identifier",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "description": "Bank Identifier in delivery network",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "accountTypeCheck": {
            "$ref": "../../commonschemas/schemas.json#/YorNType",
            "description": "Account type Indicator"
          },
          "branchTypeCheck": {
            "type": "string",
            "description": "Bank Branch"
          },
          "correctionCheck": {
            "$ref": "../../commonschemas/schemas.json#/YorNType",
            "description": "Indicates if bank accepts transaction corrections"
          },
          "dnetType": {
            "type": "string",
            "description": "Type of correspondent whether it is NCB or PayQuik"
          },
          "correspondentId": {
            "type": "string",
            "description": "SWIFT BIC code for correspondent bank"
          },
          "accountTypes": {
            "type": "string",
            "description": "List of account (comma seprated) types available for this bank"
          },
          "language": {
            "$ref": "#/components/schemas/language"
          }
        },
        "description": ""
      },
      "RetrieveBranchCurrencyResponseType": {
        "title": "RetrieveBranchCurrencyResponseType",
        "type": "object",
        "properties": {
          "currency": {
            "type": "array",
            "items": {
              "$ref": "../../commonschemas/schemas.json#/ISOCurrencyCode"
            },
            "description": "This is repetitive element that contains currency elements"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "RetrieveBranchesResponseType": {
        "title": "RetrieveBranchesResponseType",
        "type": "object",
        "properties": {
          "branch": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/branchType"
            },
            "description": "This is repetitive element that contains branch elements"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "branchType": {
        "title": "tns_branchType",
        "required": [
          "entryId",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "entryId": {
            "type": "integer",
            "description": "Internal branch identifier",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "description": "Branch identifier in delivery network",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Branch name in delivery network"
          },
          "region": {
            "type": "string",
            "description": "Branch region in delivery network"
          },
          "address": {
            "type": "string",
            "description": "Branch address in delivery network"
          },
          "city": {
            "type": "string",
            "description": "Branch city in delivery network"
          },
          "state": {
            "type": "string",
            "description": "Branch state in delivery network"
          }
        },
        "description": ""
      },
      "RetrieveCitiesResponseType": {
        "title": "RetrieveCitiesResponseType",
        "type": "object",
        "properties": {
          "city": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cityType1"
            },
            "description": "This is repetitive element that contains\r\n city\r\n element"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "tns_cityType": {
        "title": "tns_cityType",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "city name"
          }
        },
        "description": ""
      },
      "RetrieveCountriesResponseType": {
        "title": "RetrieveCountriesResponseType",
        "type": "object",
        "properties": {
          "country": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryType"
            },
            "description": "This is repetitive element that contains\r\n country name element"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "RetrieveCourierResponseType": {
        "title": "RetrieveCourierResponseType",
        "description": "Retrieve Courier Response Type",
        "type": "object",
        "properties": {
          "courier": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/courierType"
            },
            "description": "This is repetitive element that contains\r\n courier elements"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        }
      },
      "courierType": {
        "title": "courierType",
        "description": "courier Type",
        "required": [
          "entryId",
          "courierId",
          "name",
          "correctionCheck",
          "language",
          "dnetType",
          "correspondentId"
        ],
        "type": "object",
        "properties": {
          "entryId": {
            "type": "integer",
            "description": "Internal identifier",
            "format": "int32"
          },
          "courierId": {
            "type": "integer",
            "description": "uniquely identifying the Courier service",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Bank Name/Agent to be used as COURIER"
          },
          "correctionCheck": {
            "$ref": "../../commonschemas/schemas.json#/YorNType",
            "description": "Indicates if agent accepts transaction\r\n\t\t\t\t\t\tcorrections"
          },
          "language": {
            "type": "string",
            "description": "required language for sender and recipient names"
          },
          "dnetType": {
            "type": "string",
            "description": "Type of correspondent whether it is NCB or\r\n\t\t\t\t\t\tPayQuik"
          },
          "correspondentId": {
            "type": "string",
            "description": "SWIFT BIC code for correspondent bank"
          }
        }
      },
      "tns_RetrieveCourierCurrencyRequest": {
        "title": "tns_RetrieveCourierCurrencyRequest",
        "required": [
          "country"
        ],
        "type": "object",
        "properties": {
          "country": {
            "pattern": "[A-Z]{3,3}",
            "type": "string",
            "description": "Country code (short name)"
          },
          "courierId": {
            "type": "integer",
            "description": "uniquely identifying the Courier service",
            "format": "int32"
          }
        },
        "description": ""
      },
      "tns_RetrieveCourierCurrencyResponse": {
        "title": "tns_RetrieveCourierCurrencyResponse",
        "type": "object",
        "properties": {
          "currency": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/currencyType"
            },
            "description": "This is repetitive element that contains\r\n currency element"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "RetrieveDeliveryTypesResponseType": {
        "title": "RetrieveDeliveryTypesResponseType",
        "type": "object",
        "properties": {
          "deliveryType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/deliveryTypeType"
            },
            "description": "This is repetitive element that contains delivery type name element"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        }
      },
      "deliveryTypeType": {
        "title": "deliveryTypeType",
        "description": "delivery Type Type",
        "required": [
          "name",
          "description"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "delivery type name"
          },
          "description": {
            "type": "string",
            "description": "delivery type description"
          }
        }
      },
      "RetrieveDirCourierResponseType": {
        "title": "RetrieveDirCourierResponseType",
        "type": "object",
        "properties": {
          "courier": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/courierType1"
            },
            "description": "This is repetitive element that contains\r\n courier elements"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "courierType1": {
        "title": "courierType1",
        "required": [
          "entryId",
          "id",
          "name",
          "correctionCheck",
          "language",
          "dnetType",
          "correspondentId",
          "locationId"
        ],
        "type": "object",
        "properties": {
          "entryId": {
            "type": "string",
            "description": "Internal identifier"
          },
          "id": {
            "type": "integer",
            "description": "uniquely identifying the Courier service used",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Bank Name/Agent to be used as COURIER"
          },
          "correctionCheck": {
            "$ref": "../../commonschemas/schemas.json#/YorNType",
            "description": "Indicates if agent accepts transaction\r\n\t\t\t\t\t\tcorrections"
          },
          "language": {
            "type": "string",
            "description": "required language for sender and recipient names"
          },
          "dnetType": {
            "type": "string",
            "description": "Type of correspondent whether it is NCB or\r\n\t\t\t\t\t\tPayQuik"
          },
          "correspondentId": {
            "type": "string",
            "description": "SWIFT BIC code for correspondent bank"
          },
          "locationId": {
            "type": "string",
            "description": "Courier location identifier"
          },
          "region": {
            "type": "string",
            "description": "Courier region"
          },
          "city": {
            "type": "string",
            "description": "Courier city"
          },
          "state": {
            "type": "string",
            "description": "Courier state"
          }
        },
        "description": ""
      },
      "RetrieveDirCourierCurrencyResponseType": {
        "title": "RetrieveDirCourierCurrencyResponseType",
        "description": "Retrieve Dir Courier Currency Response Type",
        "type": "object",
        "properties": {
          "currency": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/currencyType"
            },
            "description": "This is repetitive element that contains\r\n currency element"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        }
      },
      "RetrieveLocationCurrencyResponseType": {
        "title": "RetrieveLocationCurrencyResponseType",
        "type": "object",
        "properties": {
          "currency": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/currencyType"
            },
            "description": "This is repetitive element that contains currency element"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "RetrieveLocationsResponseType": {
        "title": "RetrieveLocationsResponseType",
        "type": "object",
        "properties": {
          "location": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/locationType"
            },
            "description": "This is repetitive element that contains location element"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "locationType": {
        "title": "locationType",
        "required": [
          "entryID",
          "id",
          "name",
          "address",
          "state"
        ],
        "type": "object",
        "properties": {
          "entryID": {
            "type": "string",
            "description": "Internal location identifier"
          },
          "id": {
            "type": "integer",
            "description": "Location identifier in delivery network",
            "format": "int32",
            "default": 0
          },
          "name": {
            "type": "string",
            "description": "Location name in delivery network"
          },
          "address": {
            "type": "string",
            "description": "Location address in delivery network"
          },
          "state": {
            "type": "string",
            "description": "location state in delivery network"
          }
        },
        "description": ""
      },
      "RetrieveMGCurrencyRequestType": {
        "title": "RetrieveMGCurrencyRequestType",
        "required": [
          "country",
          "deliveryType"
        ],
        "type": "object",
        "properties": {
          "country": {
            "$ref": "../../commonschemas/schemas.json#/MWISOCountryCode",
            "description": "Country code (short name)"
          },
          "agentID": {
            "type": "string"
          },
          "deliveryType": {
            "$ref": "#/components/schemas/DeliveryTypes3",
            "description": "Remittance delivery type for which this rule\r\n\t\t\t\t\t\tapply"
          }
        },
        "description": "This is repetitive element that contains currency\r\n\t\t\t\telements"
      },
      "DeliveryTypes3": {
        "title": "DeliveryTypes3",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "delivery type name"
          }
        },
        "description": ""
      },
      "RetrieveMGCurrencyResponseType": {
        "title": "RetrieveMGCurrencyResponseType",
        "type": "object",
        "properties": {
          "currency": {
            "type": "array",
            "items": {
              "$ref": "../../commonschemas/schemas.json#/ISOCurrencyCode"
            },
            "description": "This is repetitive element that contains\r\n currency elements"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "notesType": {
        "title": "notesType",
        "description": "notes Type",
        "type": "object",
        "properties": {
          "note1": {
            "type": "string",
            "description": "transaction note"
          },
          "note2": {
            "type": "string",
            "description": "transaction note"
          },
          "note3": {
            "type": "string",
            "description": "transaction note"
          },
          "note4": {
            "type": "string",
            "description": "transaction note"
          },
          "note5": {
            "type": "string",
            "description": "transaction note"
          },
          "note6": {
            "type": "string",
            "description": "transaction note"
          },
          "note7": {
            "type": "string",
            "description": "transaction note"
          },
          "note8": {
            "type": "string",
            "description": "transaction note"
          },
          "note9": {
            "type": "string",
            "description": "transaction note"
          }
        }
      },
      "CountryType": {
        "title": "CountryType",
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "$ref": "../../commonschemas/schemas.json#/MWISOCountryCodeOptional"
          },
          "name": {
            "type": "string"
          },
          "state": {
            "$ref": "../../commonschemas/schemas.json#/YorNType"
          }
        },
        "description": ""
      },
      "recipientInfoType": {
        "title": "recipientInfoType",
        "required": [
          "shortCif",
          "senderId",
          "senderStatus",
          "recipient",
          "totalRecipients"
        ],
        "type": "object",
        "properties": {
          "shortCif": {
            "$ref": "../../commonschemas/schemas.json#/ShortCIF",
            "description": "Customer Number"
          },
          "senderId": {
            "type": "string",
            "description": "Sender identifier"
          },
          "senderStatus": {
            "type": "string",
            "description": "Sender status"
          },
          "recipient": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/remittanceRecipientType"
            },
            "description": "Repetitive Record contains recipient elements\r\n\t\t\t\t\t\tbelow"
          },
          "totalRecipients": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": ""
      },
      "remittanceSenderType": {
        "title": "remittanceSenderType",
        "required": [
          "firstName",
          "address1",
          "country",
          "city",
          "postalCode",
          "nationality",
          "language"
        ],
        "type": "object",
        "properties": {
          "iban": {
            "type": "string",
            "description": "Customer Number"
          },
          "firstName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "Customer first name as retrieved from customer profile"
          },
          "middleName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "Customer middle name as retrieved from customer profile"
          },
          "lastName": {
            "type": "string",
            "description": "Customer last name as retrieved from customer profile"
          },
          "firstNameArabic": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "Customer Arabic first name as retrieved from customer profile"
          },
          "middleNameArabic": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "Customer Arabic middle name as retrieved from customer profile"
          },
          "lastNameArabic": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "description": "Customer Arabic last name as retrieved from customer profile"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "country": {
            "$ref": "../../commonschemas/schemas.json#/MWISOCountryCodeOptional",
            "description": "Customer country code"
          },
          "countryName": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "postalCode": {
            "type": "string",
            "default": 0
          },
          "nationality": {
            "type": "string",
            "description": "Nationality in English"
          },
          "email": {
            "$ref": "../../commonschemas/schemas.json#/EmailAddressOptional",
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "language": {
            "$ref": "#/components/schemas/language"
          },
          "status": {
            "$ref": "#/components/schemas/status"
          },
          "bankReferenceNumber": {
            "type": "string"
          },
          "actionBy": {
            "type": "string"
          },
          "actionUsing": {
            "type": "string"
          },
          "actionDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "type": "string"
          },
          "actionTime": {
            "type": "string"
          },
          "actionType": {
            "type": "string"
          },
          "idNumber": {
            "maxLength": 15,
            "minLength": 0,
            "type": "string",
            "description": "Sender's ID"
          },
          "ccrIdType": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string",
            "description": "NCB's ID Type"
          },
          "idExpiryDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "The expiry Date of the ID"
          },
          "dateofBirth": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "Sender's Date of Birth"
          },
          "occupation": {
            "type": "string",
            "description": "Sender's occupation"
          },
          "mgFlag": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "mgIdType": {
            "type": "string"
          }
        },
        "description": ""
      },
      "senderInfoType": {
        "title": "senderInfoType",
        "required": [
          "senderId",
          "shortCif",
          "sender"
        ],
        "type": "object",
        "properties": {
          "senderId": {
            "type": "string",
            "description": "Sender identifier"
          },
          "shortCif": {
            "$ref": "../../commonschemas/schemas.json#/ShortCIF",
            "description": "Customer Number"
          },
          "sender": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/remittanceSenderType"
            },
            "description": "Repetitive Record contains sender elements\r\n\t\t\t\t\t\tbelow"
          }
        },
        "description": ""
      },
      "transferDetailsType": {
        "title": "transferDetailsType",
        "required": [
          "shortCif",
          "sourceAmount",
          "sourceCurrency",
          "sourceFeeAmount",
          "destinationAmount",
          "destinationCurrency",
          "exchangeRate",
          "feeAmountInSAR",
          "customerLimit",
          "dailyLimit",
          "monthlyLimit",
          "pickupCode",
          "quickPayReferenceNumber",
          "bankReferenceNumber",
          "journalId",
          "journalGL",
          "deliveryCharge",
          "deliveryChargeCurrency"
        ],
        "type": "object",
        "properties": {
          "shortCif": {
            "$ref": "../../commonschemas/schemas.json#/ShortCIF",
            "description": "Customer Number"
          },
          "sourceAmount": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "default": 0.0,
            "description": "Total amount in account currency to be deducted from the account"
          },
          "sourceCurrency": {
            "$ref": "../../commonschemas/schemas.json#/ISOCurrencyCode",
            "description": "Account currency"
          },
          "sourceFeeAmount": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "default": 0.0,
            "description": "fee amount in account currency"
          },
          "destinationAmount": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "default": 0.0,
            "description": "Net transfer amount in destination currency"
          },
          "destinationCurrency": {
            "$ref": "../../commonschemas/schemas.json#/ISOCurrencyCode",
            "description": "Destination currency"
          },
          "exchangeRate": {
            "type": "number",
            "format": "double",
            "description": "Exchange rate from source currency to destination currency"
          },
          "feeAmountInSAR": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "fee amount in SAR"
          },
          "customerLimit": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "customer balance in Remittance service (including this request money amount) in SAR"
          },
          "dailyLimit": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "Remittance service allowed daily limit"
          },
          "monthlyLimit": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "Remittance service allowed Monthly limit"
          },
          "pickupCode": {
            "maxLength": 16,
            "type": "string",
            "description": "Pickup Code needs to be presented by the recipient when picking up the money at the pickup location (only applies for deliveryType = PICKUP)"
          },
          "quickPayReferenceNumber": {
            "type": "string",
            "description": "Unique ID, assigned by PayQuik, that uniquely identifies in the PayQuik system a money transfer transaction"
          },
          "bankReferenceNumber": {
            "type": "string",
            "description": "unique number that identifies a money transfer transaction, must be presented to the customer"
          },
          "journalId": {
            "$ref": "../../commonschemas/schemas.json#/JournalId",
            "description": "BANCS journal number for the deduction transaction"
          },
          "journalGL": {
            "$ref": "../../commonschemas/schemas.json#/JournalId",
            "description": "BANCS journal number for the deduction transaction"
          },
          "deliveryCharge": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "deliveryChargeCurrency": {
            "$ref": "../../commonschemas/schemas.json#/ISOCurrencyCodeOptional"
          },
          "paExchangeRate": {
            "type": "number",
            "format": "double"
          },
          "correspondentGL": {
            "type": "string"
          },
          "reversalJournal": {
            "type": "integer",
            "format": "int32"
          },
          "reversal": {
            "type": "string"
          },
          "balance": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "vatAmountInSAR": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "feeExcludingVat": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "mgReferenceNumber": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "MG Reference for MoneyGRam DDEPOSIT and COURIER transaction"
          },
          "feeExcludingDiscount": {
            "type": "string"
          }
        },
        "description": ""
      },
      "transferCancellationResultType": {
        "title": "transferCancellationResultType",
        "required": [
          "bankReferenceNumber",
          "journalId1",
          "journalId2"
        ],
        "type": "object",
        "properties": {
          "bankReferenceNumber": {
            "type": "string"
          },
          "journalId1": {
            "$ref": "../../commonschemas/schemas.json#/JournalId"
          },
          "journalId2": {
            "$ref": "../../commonschemas/schemas.json#/JournalId"
          }
        },
        "description": ""
      },
      "transferStatusInfoType": {
        "title": "transferStatusInfoType",
        "description": "transfer Status Info Type",
        "required": [
          "payQuikRefNumber",
          "statusId",
          "statusMessage",
          "deliveryType",
          "recipientCountry",
          "sourceAmount",
          "sourceCurrency",
          "destionationAmount",
          "destinationCurrency",
          "pickupCode"
        ],
        "type": "object",
        "properties": {
          "payQuikRefNumber": {
            "type": "string",
            "description": "Unique ID, assigned by PayQuik, that uniquely identifies in the PayQuik system a money\r\n\t\t\t\t\t\ttransfer transaction"
          },
          "statusId": {
            "type": "string",
            "description": "Status Identifier as received from PayQuik"
          },
          "statusMessage": {
            "type": "string",
            "description": "Status message as retrieved from PayQuik"
          },
          "deliveryType": {
            "$ref": "#/components/schemas/deliveryTypesType"
          },
          "recipientCountry": {
            "$ref": "../../commonschemas/schemas.json#/MWISOCountryCodeOptional",
            "description": "Destination country"
          },
          "sourceAmount": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "Net transfer amount in account currency (fee is excluded)"
          },
          "sourceCurrency": {
            "$ref": "../../commonschemas/schemas.json#/ISOCurrencyCode",
            "description": "Account currency"
          },
          "destionationAmount": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "Net transfer amount in destination currency"
          },
          "destinationCurrency": {
            "$ref": "../../commonschemas/schemas.json#/ISOCurrencyCode",
            "description": "Destination currency"
          },
          "pickupCode": {
            "maxLength": 18,
            "type": "string",
            "description": "Bank reference number"
          },
          "notes": {
            "$ref": "#/components/schemas/notesType",
            "description": "node that contains notes elements"
          },
          "samaStatus": {
            "type": "string",
            "description": "SAMA Status can have below possible value     1. ACTIVE    2. DORMANT   3. UNCLAIMED   4. ABANDONED  5. CLOSED"
          }
        }
      },
      "transferInfoType": {
        "title": "transferInfoType",
        "required": [
          "cif",
          "recipientId",
          "sourceAmount",
          "sourceCurrency",
          "feeAmountInSAR",
          "sourceFeeAmount",
          "dnetType",
          "correspondentId",
          "recipientFirstName",
          "recipientMiddleName",
          "recipientLastName",
          "recipientCountry",
          "deliveryType",
          "deliveryDetail0",
          "deliveryDetail1",
          "deliveryDetail3",
          "destinationAmount",
          "destinationCurrency",
          "exchangeRate",
          "bancsSellRate",
          "srcUSDSpread",
          "bancsRateSellWSpread",
          "netAmount",
          "netTransferUSD",
          "sellRateGainSAR",
          "payQuikExchange",
          "bancsBuyRate",
          "usdDSTSpread",
          "bancsRateBuyWSpread",
          "buyRateGainSAR",
          "limitRuleId",
          "feeRuleId",
          "feeType",
          "feeValue",
          "feePercentage",
          "bancsRateMid",
          "costRate",
          "senderFirstName",
          "senderMiddleName",
          "senderLastName",
          "senderAddress1",
          "senderAddress2",
          "city",
          "country",
          "nationality",
          "senderEmail",
          "senderMobile",
          "senderId",
          "senderMGIDType",
          "senderIdExpiryDate",
          "senderDateofBirth",
          "senderOccupation",
          "senderPostalCode",
          "recipientAddress1",
          "recipientAddress2",
          "recipientCity",
          "recipientState",
          "recipientPostalCode",
          "recipientEmail",
          "recipientPhone",
          "recipientMobile",
          "remitPurpose",
          "remitterRelation",
          "ncbCommissionInSAR",
          "ncbCommissionInUSD",
          "mgCommissionInSAR",
          "mgCommissionInUSD",
          "mgFaceAmountInUSD",
          "qrInstance",
          "homeBranch",
          "promotionId",
          "fee",
          "discountPercentage",
          "discountAmount",
          "eligiblePromotions"
        ],
        "type": "object",
        "properties": {
          "cif": {
            "$ref": "../../commonschemas/schemas.json#/ShortCIF"
          },
          "recipientId": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "sourceAmount": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "default": 0.0
          },
          "sourceCurrency": {
            "$ref": "../../commonschemas/schemas.json#/ISOCurrencyCode"
          },
          "feeAmountInSAR": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "default": 0.0
          },
          "sourceFeeAmount": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "default": 0.0
          },
          "dnetType": {
            "type": "string"
          },
          "correspondentId": {
            "type": "string"
          },
          "recipientFirstName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "recipientMiddleName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "recipientLastName": {
            "type": "string"
          },
          "recipientCountry": {
            "$ref": "../../commonschemas/schemas.json#/MWISOCountryCodeOptional"
          },
          "deliveryType": {
            "$ref": "#/components/schemas/deliveryTypesType"
          },
          "deliveryDetail0": {
            "type": "string"
          },
          "deliveryDetail1": {
            "type": "string"
          },
          "deliveryDetail3": {
            "type": "string"
          },
          "destinationAmount": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "default": 0.0
          },
          "destinationCurrency": {
            "$ref": "../../commonschemas/schemas.json#/ISOCurrencyCode"
          },
          "exchangeRate": {
            "type": "number",
            "format": "double",
            "default": 0.0
          },
          "bancsSellRate": {
            "type": "number",
            "format": "double",
            "default": 0.0
          },
          "srcUSDSpread": {
            "type": "number",
            "format": "double",
            "default": 0.0
          },
          "bancsRateSellWSpread": {
            "type": "number",
            "format": "double",
            "default": 0.0
          },
          "netAmount": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "default": 0.0
          },
          "netTransferUSD": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "default": 0.0
          },
          "sellRateGainSAR": {
            "type": "number",
            "format": "double",
            "default": 0.0
          },
          "payQuikExchange": {
            "type": "number",
            "format": "double",
            "default": 0.0
          },
          "bancsBuyRate": {
            "type": "number",
            "format": "double",
            "default": 0.0
          },
          "usdDSTSpread": {
            "type": "number",
            "format": "double",
            "default": 0.0
          },
          "bancsRateBuyWSpread": {
            "type": "number",
            "format": "double",
            "default": 0.0
          },
          "buyRateGainSAR": {
            "type": "number",
            "format": "double",
            "default": 0.0
          },
          "limitRuleId": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "feeRuleId": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "feeType": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "feeValue": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "default": 0
          },
          "feePercentage": {
            "type": "number",
            "format": "double",
            "default": 0.0
          },
          "bancsRateMid": {
            "type": "number",
            "format": "double",
            "default": 0.0
          },
          "costRate": {
            "type": "number",
            "format": "double",
            "default": 0.0
          },
          "senderFirstName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "senderMiddleName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "senderLastName": {
            "type": "string"
          },
          "senderAddress1": {
            "type": "string"
          },
          "senderAddress2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "country": {
            "$ref": "../../commonschemas/schemas.json#/MWISOCountryCodeOptional"
          },
          "nationality": {
            "type": "string"
          },
          "senderEmail": {
            "$ref": "../../commonschemas/schemas.json#/EmailAddressOptional"
          },
          "senderMobile": {
            "type": "string"
          },
          "senderId": {
            "type": "string"
          },
          "senderMGIDType": {
            "type": "string"
          },
          "senderIdExpiryDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional"
          },
          "senderDateofBirth": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional"
          },
          "senderOccupation": {
            "type": "string"
          },
          "senderPostalCode": {
            "type": "string",
            "default": 0
          },
          "recipientAddress1": {
            "type": "string"
          },
          "recipientAddress2": {
            "type": "string"
          },
          "recipientCity": {
            "type": "string"
          },
          "recipientState": {
            "type": "string"
          },
          "recipientPostalCode": {
            "type": "string",
            "default": 0
          },
          "recipientEmail": {
            "type": "string"
          },
          "recipientPhone": {
            "$ref": "../../commonschemas/schemas.json#/PhoneNumberOptional"
          },
          "recipientMobile": {
            "$ref": "../../commonschemas/schemas.json#/PhoneNumberOptional"
          },
          "remitPurpose": {
            "type": "string"
          },
          "remitterRelation": {
            "type": "string"
          },
          "ncbCommissionInSAR": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "ncbCommissionInUSD": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "mgCommissionInSAR": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "mgCommissionInUSD": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "mgFaceAmountInUSD": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "qrInstance": {
            "type": "string"
          },
          "homeBranch": {
            "$ref": "../../commonschemas/schemas.json#/Branch"
          },
          "promotionId": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "fee": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "default": 0.0
          },
          "discountPercentage": {
            "type": "number",
            "format": "double"
          },
          "discountAmount": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "default": 0.0
          },
          "eligiblePromotions": {
            "type": "string"
          },
          "dealId": {
            "type": "string"
          },
          "vatAmountInSAR": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "feeExcludingVat": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "promoCodeDiscount": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "promoCodeDiscountAmount": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "promoErrorCode": {
            "type": "string"
          },
          "promoErrorMessage": {
            "type": "string"
          },
          "mgSessionId": {
            "type": "string"
          },
          "estimatedReceiveAmount": {
            "type": "string"
          },
          "estimatedExchangeRate": {
            "type": "string"
          },
          "estimatedCurrency": {
            "type": "string"
          },
          "totalReceiveFees": {
            "type": "string"
          },
          "totalReceiveTaxes": {
            "type": "string"
          },
          "feeExcludingDiscount": {
            "type": "string"
          }
        },
        "description": ""
      },
      "deliveryTypesType": {
        "title": "deliveryTypesType",
        "description": "delivery Types Type",
        "enum": [
          "DIRCOUR",
          "PICKUP",
          "DDEPOSIT",
          "MONEYGRAM PICKUP",
          "COURIER",
          "XMDDEPOSIT",
          "XMPICKUP",
          "MONEYGRAM DDEPOSIT",
          "MONEYGRAM COURIER"
        ],
        "type": "string"
      },
      "cityType1": {
        "title": "cityType1",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "description": ""
      },
      "currencyType": {
        "title": "currencyType",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "$ref": "../../commonschemas/schemas.json#/ISOCurrencyCodeOptional"
          }
        },
        "description": ""
      },
      "tns_ActivateRecipientResponseType": {
        "title": "tns_ActivateRecipientResponseType",
        "required": [
          "recipientId"
        ],
        "type": "object",
        "properties": {
          "recipientId": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_ScreenPaymentRequest": {
        "title": "tns_ScreenPaymentRequest",
        "required": [
          "transactionId",
          "transactionDate",
          "transactionTime",
          "transactionAmount",
          "originationAmount",
          "exchangeRate",
          "originationFeeAmount",
          "originationCountry",
          "destinationCountry",
          "claimCode",
          "senderFullName",
          "senderFirstName",
          "senderLastName",
          "senderAddress1",
          "senderNationality",
          "senderDOB",
          "senderIdType",
          "senderId",
          "senderIdExpDate",
          "senderOccupation",
          "purpose",
          "source",
          "recipientFullName",
          "recipientFirstName",
          "recipientLastName",
          "recipientAddress1",
          "recipientCity",
          "recipientIdType",
          "recipientId",
          "recipientIdExpDate",
          "deliverVia",
          "deliveryDetail1",
          "deliveryDetail2",
          "deliveryDetail3",
          "deliveryDetail4",
          "senderIban",
          "recipientPlaceOfBirth",
          "recipientDateOfBirth"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string"
          },
          "transactionDate": {
            "pattern": "((0[1-9])|([12][0-9])|(3[01]))/((0[1-9])|(1[012]))/((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))|()",
            "type": "string"
          },
          "transactionTime": {
            "pattern": "[0-2][0-9]:[0-5][0-9]:[0-5][0-9]",
            "type": "string"
          },
          "transactionAmount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/Money"
              }
            ]
          },
          "originationAmount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/Money"
              }
            ]
          },
          "exchangeRate": {
            "type": "number"
          },
          "originationFeeAmount": {
            "type": "number"
          },
          "originationCountry": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          },
          "destinationCountry": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          },
          "claimCode": {
            "maxLength": 20,
            "type": "string"
          },
          "userInfoId": {
            "maxLength": 20,
            "type": "string"
          },
          "senderFullName": {
            "maxLength": 120,
            "type": "string"
          },
          "senderFirstName": {
            "maxLength": 30,
            "type": "string"
          },
          "senderMiddleName": {
            "maxLength": 30,
            "type": "string"
          },
          "senderLastName": {
            "maxLength": 40,
            "type": "string"
          },
          "senderAddress1": {
            "maxLength": 100,
            "type": "string"
          },
          "senderAddress2": {
            "maxLength": 100,
            "type": "string"
          },
          "senderCity": {
            "maxLength": 30,
            "type": "string"
          },
          "senderState": {
            "maxLength": 30,
            "type": "string"
          },
          "senderPostalCode": {
            "maxLength": 11,
            "type": "string"
          },
          "senderCountry": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          },
          "senderNationality": {
            "maxLength": 30,
            "type": "string"
          },
          "senderDOB": {
            "pattern": "((0[1-9])|([12][0-9])|(3[01]))/((0[1-9])|(1[012]))/((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))|()",
            "type": "string"
          },
          "senderIdType": {
            "maxLength": 6,
            "type": "string"
          },
          "senderId": {
            "maxLength": 30,
            "type": "string"
          },
          "senderIdExpDate": {
            "pattern": "((0[1-9])|([12][0-9])|(3[01]))/((0[1-9])|(1[012]))/((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))|()",
            "type": "string"
          },
          "senderOccupation": {
            "maxLength": 50,
            "type": "string"
          },
          "purpose": {
            "maxLength": 120,
            "type": "string"
          },
          "source": {
            "maxLength": 120,
            "type": "string"
          },
          "recipientFullName": {
            "maxLength": 180,
            "type": "string"
          },
          "recipientFirstName": {
            "maxLength": 30,
            "type": "string"
          },
          "recipientMiddleName": {
            "maxLength": 30,
            "type": "string"
          },
          "recipientMiddleName2": {
            "maxLength": 30,
            "type": "string"
          },
          "recipientLastName": {
            "maxLength": 40,
            "type": "string"
          },
          "recipientMaidenName": {
            "maxLength": 40,
            "type": "string"
          },
          "recipientAddress1": {
            "maxLength": 100,
            "type": "string"
          },
          "recipientAddress2": {
            "maxLength": 100,
            "type": "string"
          },
          "recipientCity": {
            "maxLength": 30,
            "type": "string"
          },
          "recipientState": {
            "maxLength": 30,
            "type": "string"
          },
          "recipientPostalCode": {
            "maxLength": 11,
            "type": "string"
          },
          "recipientCountry": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          },
          "recipientPhone": {
            "type": "string"
          },
          "recipientMobile": {
            "type": "string"
          },
          "recipientEmail": {
            "pattern": "([a-zA-Z0-9_\\-])([a-zA-Z0-9_\\-\\.]*)@(\\[((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}|((([a-zA-Z0-9\\-]+)\\.)+))([a-zA-Z]{2,}|(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\])",
            "type": "string"
          },
          "messageToRecipient": {
            "maxLength": 500,
            "type": "string"
          },
          "recipientIdType": {
            "maxLength": 30,
            "type": "string"
          },
          "recipientId": {
            "maxLength": 30,
            "type": "string"
          },
          "recipientIdExpDate": {
            "pattern": "((0[1-9])|([12][0-9])|(3[01]))/((0[1-9])|(1[012]))/((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))|()",
            "type": "string"
          },
          "deliverVia": {
            "maxLength": 8,
            "type": "string"
          },
          "deliveryDetail1": {
            "maxLength": 120,
            "type": "string"
          },
          "deliveryDetail2": {
            "maxLength": 120,
            "type": "string"
          },
          "deliveryDetail3": {
            "maxLength": 120,
            "type": "string"
          },
          "deliveryDetail4": {
            "maxLength": 120,
            "type": "string"
          },
          "deliveryDetail5": {
            "maxLength": 120,
            "type": "string"
          },
          "deliveryDetail6": {
            "maxLength": 120,
            "type": "string"
          },
          "deliveryDetail7": {
            "maxLength": 120,
            "type": "string"
          },
          "deliveryDetail8": {
            "maxLength": 120,
            "type": "string"
          },
          "deliveryDetail9": {
            "maxLength": 120,
            "type": "string"
          },
          "deliveryDetail10": {
            "maxLength": 120,
            "type": "string"
          },
          "senderPlaceOfBirth": {
            "maxLength": 75,
            "type": "string"
          },
          "senderIban": {
            "maxLength": 24,
            "type": "string"
          },
          "recipientPlaceOfBirth": {
            "maxLength": 75,
            "type": "string"
          },
          "recipientIban": {
            "maxLength": 52,
            "type": "string"
          },
          "recipientDateOfBirth": {
            "pattern": "((0[1-9])|([12][0-9])|(3[01]))/((0[1-9])|(1[012]))/((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_ScreenPaymentResponseType": {
        "title": "tns_ScreenPaymentResponseType",
        "type": "object",
        "properties": {
          "screenPayment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_screenPayment"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_AmendTransferResponse": {
        "title": "tns_AmendTransferResponse",
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_AmendTransferRequestType": {
        "title": "tns_AmendTransferRequestType",
        "required": [
          "cifNo",
          "bankReferenceNumber",
          "firstName",
          "lastName",
          "recipientId"
        ],
        "type": "object",
        "properties": {
          "cifNo": {
            "type": "string"
          },
          "bankReferenceNumber": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "recipientId": {
            "type": "string"
          },
          "fourthName": {
            "type": "string",
            "description": "Beneficiary English fourth name"
          }
        },
        "description": ""
      },
      "tns_CountriesListResponse": {
        "title": "tns_CountriesListResponse",
        "type": "object",
        "properties": {
          "country": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_record"
            },
            "description": ""
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CountriesList": {
        "title": "tns_CountriesList",
        "type": "object",
        "properties": {
          "InquiryType": {
            "type": "string"
          },
          "Value": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_record": {
        "title": "tns_record",
        "type": "object",
        "properties": {
          "number": {
            "type": "string"
          },
          "nameEnglish": {
            "type": "string"
          },
          "nameArabic": {
            "type": "string"
          },
          "shortCode": {
            "type": "string"
          },
          "longCode": {
            "type": "string"
          },
          "citizenShipEnglish": {
            "type": "string"
          },
          "citizenShipArabic": {
            "type": "string"
          },
          "ISOCode": {
            "type": "string"
          },
          "currencyCode": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_mgFeeType": {
        "title": "tns_mgFeeType",
        "type": "object",
        "properties": {
          "deliveryOption": {
            "type": "string"
          },
          "deliveryOptionArabicDesc": {
            "type": "string"
          },
          "deliveryOptionEnglishDesc": {
            "type": "string"
          },
          "transferAmountSource": {
            "type": "string"
          },
          "transferCurrencySource": {
            "type": "string"
          },
          "feeAmountSAR": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/MoneyOptional"
              }
            ]
          },
          "feeAmountSource": {
            "type": "string"
          },
          "transferAmountDest": {
            "type": "string"
          },
          "exchangeRate": {
            "type": "number",
            "default": 0.0
          },
          "netAmount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "netTransferUSD": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "sellRateGainSAR": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/MoneyOptional"
              }
            ]
          },
          "bancsBuyRate": {
            "type": "number",
            "default": 0.0
          },
          "bancsRateBuyWSpread": {
            "type": "number",
            "default": 0.0
          },
          "buyRateGainSAR": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/MoneyOptional"
              }
            ]
          },
          "feeRuleID": {
            "type": "string"
          },
          "feeValue": {
            "type": "string"
          },
          "costRate": {
            "type": "number",
            "default": 0.0
          },
          "ncbCommissionSAR": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "ncbCommissionUSD": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "mgCommissionSAR": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "mgCommissionUSD": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "mgFaceAmountUSD": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_mgFeesType": {
        "title": "tns_mgFeesType",
        "type": "object",
        "properties": {
          "mgFee": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_mgFeeType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_RemittanceCustomerRateRequest": {
        "title": "tns_RemittanceCustomerRateRequest",
        "type": "object",
        "description": ""
      },
      "tns_RemittanceCustomerRateResponse": {
        "title": "tns_RemittanceCustomerRateResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RemittanceCustomerrateSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_RemittanceCustomerrateSuccessType": {
        "title": "tns_RemittanceCustomerrateSuccessType",
        "required": [
          "currency"
        ],
        "type": "object",
        "properties": {
          "currency": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_RemittanceCustomerRateCurrencyType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_RemittanceCustomerRateCurrencyType": {
        "title": "tns_RemittanceCustomerRateCurrencyType",
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "sourceCurrency": {
            "type": "string"
          },
          "destinationCurrency": {
            "type": "string"
          },
          "exchangeRate": {
            "type": "string"
          },
          "spreadToUSD": {
            "type": "string"
          },
          "spreadFromUSD": {
            "type": "string"
          },
          "customerRate": {
            "type": "string"
          }
        },
        "description": ""
      },
      "TransactionCancelInquiryResponseType": {
        "description": "Transaction Cancel Inquiry Response Type",
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/components/schemas/TransactionCancelInquirySuccessType"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        }
      },
      "TransactionCancelInquirySuccessType": {
        "description": "Transaction Cancel Inquiry Success Type",
        "type": "object",
        "properties": {
          "transactionCancelable": {
            "type": "string",
            "description": "YES  /  NO"
          }
        }
      },
      "TransactionCancelRequestType": {
        "description": "Transaction Cancel Request Type",
        "type": "object",
        "properties": {
          "bankReferenceNumber": {
            "type": "string"
          }
        }
      },
      "TransactionCancelResponseType": {
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/components/schemas/TransactionCancelSuccessType"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "TransactionCancelSuccessType": {
        "description": "Transaction Cancel Success Type",
        "type": "object",
        "properties": {
          "responseCode": {
            "type": "string",
            "description": "1 -->   (Cancelled Successfully)\r\n\t\t\t\r\n            2 -->  (Cancellation is in progress)"
          }
        }
      },
      "tns_RetrieveMGDeliveryTypesRequest": {
        "title": "tns_RetrieveMGDeliveryTypesRequest",
        "type": "object",
        "properties": {
          "countryCode": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          },
          "deliveryType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_deliveryType"
              },
              {
                "description": "DeliveryType as MONEYGRAM PICKUP, \r\n \tMONEYGRAM DDEPOSIT, MONEYGRAM COURIER"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_RetrieveMGDeliveryTypesResponse": {
        "title": "tns_RetrieveMGDeliveryTypesResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RetrieveMGDeliveryTypesSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_RetrieveMGDeliveryTypesSuccessType": {
        "title": "tns_RetrieveMGDeliveryTypesSuccessType",
        "type": "object",
        "properties": {
          "deliveryType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_DeliveryType2"
            },
            "description": "List Of Delivery Types"
          }
        },
        "description": ""
      },
      "tns_DeliveryType2": {
        "title": "tns_DeliveryType2",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "delivery type name"
          },
          "description": {
            "type": "string",
            "description": "delivery type description"
          }
        },
        "description": ""
      },
      "tns_RetrieveMGDynamicFieldsRequest": {
        "title": "tns_RetrieveMGDynamicFieldsRequest",
        "type": "object",
        "properties": {
          "countryCode": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "Country code"
          },
          "deliveryType": {
            "type": "string",
            "description": "DeliveryType as MONEYGRAM PICKUP,\r\n \t MONEYGRAM DDEPOSIT, MONEYGRAM COURIER"
          },
          "currencyCode": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "iso Currency code"
          },
          "bankName": {
            "type": "string",
            "description": "Bank name"
          }
        },
        "description": ""
      },
      "tns_RetrieveMGDynamicFieldsResponse": {
        "title": "tns_RetrieveMGDynamicFieldsResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RetrieveMGDynamicFieldsSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_RetrieveMGDynamicFieldsSuccessType": {
        "title": "tns_RetrieveMGDynamicFieldsSuccessType",
        "type": "object",
        "properties": {
          "dynamicFieldInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_DynamicFieldInfoType"
            },
            "description": "List Of Dynamic Field Info"
          }
        },
        "description": ""
      },
      "tns_DynamicFieldInfoType": {
        "title": "tns_DynamicFieldInfoType",
        "type": "object",
        "properties": {
          "fieldName": {
            "type": "string",
            "description": "Field Name"
          },
          "fieldLabel": {
            "type": "string",
            "description": "Field Label"
          },
          "dataType": {
            "type": "string",
            "description": "Data Type"
          },
          "fieldMinLength": {
            "type": "integer",
            "description": "Field Min Length",
            "format": "int32"
          },
          "fieldMaxLength": {
            "type": "integer",
            "description": "Field Max Length",
            "format": "int32"
          },
          "validationRegEx": {
            "type": "string",
            "description": "Validation RegEx"
          },
          "enumerated": {
            "type": "string",
            "description": "Valid values are : True, False"
          },
          "enumeratedValues": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_EnumeratedValuesType"
              },
              {
                "description": "Enumerated Values"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_EnumeratedValuesType": {
        "title": "tns_EnumeratedValuesType",
        "type": "object",
        "properties": {
          "enumeratedValueInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_EnumeratedValueInfoType"
            },
            "description": "List Of Enumerated Value Info"
          }
        },
        "description": ""
      },
      "tns_EnumeratedValueInfoType": {
        "title": "tns_EnumeratedValueInfoType",
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Enumerated Value"
          },
          "label": {
            "type": "string",
            "description": "Enumerated label"
          }
        },
        "description": ""
      },
      "IsMGTransactionAmendableResponseType": {
        "title": "IsMGTransactionAmendableResponseType",
        "description": "Is MGTransaction Amendable Response Type",
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        }
      },
      "wsse_Security": {
        "title": "wsse_Security",
        "required": [
          "UsernameToken"
        ],
        "type": "object",
        "properties": {
          "UsernameToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/wsse_UsernameToken"
              }
            ]
          }
        },
        "description": ""
      },
      "header_ServiceHeader": {
        "title": "header_ServiceHeader",
        "required": [
          "loggerContext",
          "transactionCode",
          "retryTransaction",
          "tellerId",
          "terminalId",
          "workstationId",
          "override",
          "correction",
          "supervisor",
          "supervisorId",
          "overrideCode",
          "employeeId",
          "branchId",
          "functionId",
          "channelId",
          "bancsPwd",
          "languageCode"
        ],
        "type": "object",
        "properties": {
          "loggerContext": {
            "type": "string"
          },
          "transactionCode": {
            "type": "string"
          },
          "retryTransaction": {
            "type": "boolean"
          },
          "tellerId": {
            "type": "string"
          },
          "terminalId": {
            "type": "string"
          },
          "workstationId": {
            "type": "string"
          },
          "override": {
            "type": "boolean"
          },
          "correction": {
            "type": "string"
          },
          "supervisor": {
            "type": "string"
          },
          "supervisorId": {
            "type": "string"
          },
          "overrideCode": {
            "type": "string"
          },
          "employeeId": {
            "type": "string"
          },
          "branchId": {
            "type": "string"
          },
          "functionId": {
            "type": "string"
          },
          "channelId": {
            "type": "string"
          },
          "bancsPwd": {
            "type": "string"
          },
          "languageCode": {
            "type": "string"
          },
          "authenticationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/header_authenticationType"
              },
              {
                "description": "Can be: NONE, OTP, TOKEN"
              }
            ]
          },
          "IvrTransactionID": {
            "type": "string"
          }
        },
        "description": ""
      },
      "fault_FaultType": {
        "title": "fault_FaultType",
        "required": [
          "number",
          "description"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "retryAfter": {
            "type": "string"
          },
          "system": {
            "type": "string"
          },
          "nativeError": {
            "type": "string"
          },
          "nativeDescription": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_PostalAddress": {
        "title": "Q1_PostalAddress",
        "type": "object",
        "properties": {
          "addressLine1": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string"
          },
          "city": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "region": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string"
          },
          "country": {
            "pattern": "([A-Z]{2,2})|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_Money": {
        "title": "Q1_Money",
        "required": [
          "isoCurrencyCode"
        ],
        "type": "object",
        "properties": {
          "isoCurrencyCode": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_MoneyOptional": {
        "title": "Q1_MoneyOptional",
        "required": [
          "isoCurrencyCode"
        ],
        "type": "object",
        "properties": {
          "isoCurrencyCode": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_Cursor": {
        "title": "Q1_Cursor",
        "required": [
          "position",
          "noOfRows"
        ],
        "type": "object",
        "properties": {
          "position": {
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "noOfRows": {
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          }
        },
        "description": ""
      },
      "Q1_Biller": {
        "title": "Q1_Biller",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "Q1_DocumentType": {
        "title": "Q1_DocumentType",
        "required": [
          "documentId",
          "documentSubId",
          "totalPages",
          "documentType",
          "archivedDate",
          "page"
        ],
        "type": "object",
        "properties": {
          "documentId": {
            "maxLength": 7,
            "type": "string"
          },
          "documentSubId": {
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "documentType": {
            "type": "string"
          },
          "archivedDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "page": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Q1_PageType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "Q1_PageType": {
        "title": "Q1_PageType",
        "required": [
          "pageNo",
          "pageExt",
          "pageContent"
        ],
        "type": "object",
        "properties": {
          "pageNo": {
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "pageExt": {
            "type": "string"
          },
          "pageContent": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_BillCycle": {
        "title": "Q1_BillCycle",
        "enum": [
          "New",
          "XXX",
          "YYY"
        ],
        "type": "string",
        "description": "Valid Values : New, XXX, YYY"
      },
      "Q1_PaymentType": {
        "title": "Q1_PaymentType",
        "enum": [
          "POST",
          "RCHG",
          "RNEW"
        ],
        "type": "string",
        "description": "Valid Values : POST, RCHG, RNEW"
      },
      "Q1_Flag": {
        "title": "Q1_Flag",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Valid Values : Y or N"
      },
      "Q1_ServiceType": {
        "title": "Q1_ServiceType",
        "enum": [
          "AUTL",
          "CCRD",
          "CIP",
          "ENTR",
          "GOVT",
          "GSM",
          "LLIN",
          "LLHT",
          "SMDI",
          "UTIL",
          "ISPS",
          "GOFT",
          "Private",
          "MDIA",
          "TRAN",
          "EDUC",
          "BKSV",
          "LOAN",
          "ELCT",
          "PCIN",
          "EXAM",
          "WATR",
          "CDUR",
          "PHON",
          "INSR",
          "MED",
          "TUIT"
        ],
        "type": "string",
        "description": "Valid Values :\n\t\t\t\tAUTL,CCRD,CIP,ENTR,GOVT,GSM,LLIN,LLHT,SMDI,UTIL,ISPS,GOFT,\n\t\t\t\tPrivate,MDIA,TRAN,EDUC,BKSV,LOAN,ELCT,PCIN,EXAM,WATR,CDUR,PHON,INSR,MED,TUIT"
      },
      "Q1_OfferToTag": {
        "title": "Q1_OfferToTag",
        "enum": [
          "Yes",
          "No"
        ],
        "type": "string",
        "description": ""
      },
      "Q1_CustomerId": {
        "title": "Q1_CustomerId",
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_CustomerId2": {
        "title": "Q1_CustomerId2",
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_Parameter": {
        "title": "Q1_Parameter",
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_TransactionType": {
        "title": "Q1_TransactionType",
        "enum": [
          "BIANNUALCYCLE",
          "TODAY",
          "CYCLETODATE",
          "CTD"
        ],
        "type": "string",
        "description": "Valid values are BIANNUALCYCLE, TODAY,\n\t\t\t\tCYCLETODATE, CTD etc"
      },
      "Q1_BeneficiaryId": {
        "title": "Q1_BeneficiaryId",
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_DeviceDetails": {
        "title": "Q1_DeviceDetails",
        "required": [
          "machineNonce",
          "sequenceNonce",
          "machineLabel",
          "machineProperties",
          "createDate",
          "lastUsedDate",
          "expiryDate"
        ],
        "type": "object",
        "properties": {
          "machineNonce": {
            "minLength": 1,
            "type": "string"
          },
          "sequenceNonce": {
            "minLength": 1,
            "type": "string"
          },
          "machineLabel": {
            "type": "string"
          },
          "machineProperties": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MachineProperties"
              }
            ]
          },
          "createDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "lastUsedDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "expiryDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_AuthenticationDeviceDetails": {
        "title": "Q1_AuthenticationDeviceDetails",
        "required": [
          "machineNonce",
          "sequenceNonce",
          "machineLabel",
          "machineProperties"
        ],
        "type": "object",
        "properties": {
          "machineNonce": {
            "minLength": 1,
            "type": "string"
          },
          "sequenceNonce": {
            "minLength": 1,
            "type": "string"
          },
          "machineLabel": {
            "type": "string"
          },
          "machineProperties": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MachineProperties"
              }
            ]
          }
        },
        "description": ""
      },
      "Q1_MachineProperties": {
        "title": "Q1_MachineProperties",
        "required": [
          "applicationData"
        ],
        "type": "object",
        "properties": {
          "applicationData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Q1_ApplicationData"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "Q1_ApplicationData": {
        "title": "Q1_ApplicationData",
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "value": {
            "minLength": 1,
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_AuthenticationInfo": {
        "title": "Q1_AuthenticationInfo",
        "required": [
          "methods"
        ],
        "type": "object",
        "properties": {
          "methods": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Methods"
              }
            ]
          }
        },
        "description": ""
      },
      "Q1_Methods": {
        "title": "Q1_Methods",
        "required": [
          "hardToken",
          "softToken",
          "siteImage",
          "trustedPC",
          "callerId",
          "oneTimePass"
        ],
        "type": "object",
        "properties": {
          "hardToken": {
            "type": "boolean"
          },
          "softToken": {
            "type": "boolean"
          },
          "siteImage": {
            "type": "boolean"
          },
          "trustedPC": {
            "type": "boolean"
          },
          "callerId": {
            "type": "boolean"
          },
          "oneTimePass": {
            "type": "boolean"
          }
        },
        "description": ""
      },
      "Q1_TokenDetails": {
        "title": "Q1_TokenDetails",
        "required": [
          "userId",
          "userName",
          "userGroup",
          "vendorId",
          "serialNumber",
          "tokenType",
          "signatureSupported",
          "loadDate",
          "lastUsedDate"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "minLength": 1,
            "type": "string"
          },
          "userName": {
            "minLength": 1,
            "type": "string"
          },
          "userGroup": {
            "minLength": 1,
            "type": "string"
          },
          "vendorId": {
            "type": "string"
          },
          "serialNumber": {
            "type": "string"
          },
          "tokenType": {
            "type": "string"
          },
          "signatureSupported": {
            "type": "boolean"
          },
          "loadDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "lastUsedDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_AccountDetails": {
        "title": "Q1_AccountDetails",
        "required": [
          "accountId",
          "balance",
          "overdraft",
          "balanceSAR",
          "availableSAR",
          "averageLastSixMonths",
          "isoCurrencyCode",
          "division",
          "statusCode",
          "accountType",
          "glClassificationCode"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "balance": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/Money"
              }
            ]
          },
          "overdraft": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/Money"
              }
            ]
          },
          "balanceSAR": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/Money"
              }
            ]
          },
          "availableSAR": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/Money"
              }
            ]
          },
          "averageLastSixMonths": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/Money"
              }
            ]
          },
          "isoCurrencyCode": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          },
          "division": {
            "type": "string"
          },
          "statusCode": {
            "maxLength": 3,
            "type": "string"
          },
          "accountType": {
            "maxLength": 4,
            "type": "string"
          },
          "glClassificationCode": {
            "maxLength": 40,
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_Gender": {
        "title": "Q1_Gender",
        "enum": [
          "M",
          "F"
        ],
        "type": "string",
        "description": "Valid values are : M , F etc"
      },
      "Q1_trueOrFalseTypeOptional": {
        "title": "Q1_trueOrFalseTypeOptional",
        "enum": [
          "true",
          "false",
          "True",
          "False"
        ],
        "type": "string",
        "description": "Optional.\n\t\t\t\tValid values are : true, false, True,\n\t\t\t\tFalse etc"
      },
      "Q1_YorNType": {
        "title": "Q1_YorNType",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Valid values are : Y, N"
      },
      "Q1_YorNTypeOptional": {
        "title": "Q1_YorNTypeOptional",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Optional.\n\t\t\t\tValid values are : Y, N"
      },
      "Q1_CustomerChannelType": {
        "title": "Q1_CustomerChannelType",
        "enum": [
          "BOTH",
          "MOBILE",
          "AOL"
        ],
        "type": "string",
        "description": ""
      },
      "Q1_ErrorCategoryType": {
        "title": "Q1_ErrorCategoryType",
        "enum": [
          "BUSINESS",
          "SYSTEM"
        ],
        "type": "string",
        "description": ""
      },
      "Q1_CommonServiceFaultType": {
        "title": "Q1_CommonServiceFaultType",
        "required": [
          "category",
          "code",
          "message",
          "detail"
        ],
        "type": "object",
        "properties": {
          "category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_ErrorCategoryType"
              }
            ]
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_ServicesStatusType": {
        "title": "Q1_ServicesStatusType",
        "enum": [
          "ACTIVE",
          "DISABLE_USER",
          "DISABLE_ADMIN",
          "DELETED"
        ],
        "type": "string",
        "description": ""
      },
      "Q1_ServiceLevelType": {
        "title": "Q1_ServiceLevelType",
        "enum": [
          "INQUIRY",
          "FULL"
        ],
        "type": "string",
        "description": ""
      },
      "Q1_CustomerStatusType": {
        "title": "Q1_CustomerStatusType",
        "required": [
          "userId",
          "aol",
          "mobile",
          "emergencyCash"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "aol": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_AolStatusType"
              }
            ]
          },
          "mobile": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MobileStatusType"
              }
            ]
          },
          "emergencyCash": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_EmergencyCashStatus"
              }
            ]
          }
        },
        "description": ""
      },
      "Q1_AolStatusType": {
        "title": "Q1_AolStatusType",
        "required": [
          "createdBy",
          "createdDate",
          "lastLoginDate",
          "serviceLevel",
          "serviceStatus",
          "passwordRevoked"
        ],
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].[0-9])|()|(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9])",
            "type": "string"
          },
          "lastLoginDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].[0-9])|()|(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9])",
            "type": "string"
          },
          "serviceLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_ServiceLevelType"
              }
            ]
          },
          "serviceStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_ServicesStatusType"
              }
            ]
          },
          "passwordRevoked": {
            "type": "boolean"
          }
        },
        "description": ""
      },
      "Q1_MobileStatusType": {
        "title": "Q1_MobileStatusType",
        "required": [
          "registeredBy",
          "registeredDate",
          "lastLoginDate",
          "serviceLevel",
          "serviceStatus"
        ],
        "type": "object",
        "properties": {
          "registeredBy": {
            "type": "string"
          },
          "registeredDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].[0-9])|()|(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9])",
            "type": "string"
          },
          "lastLoginDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].[0-9])|()|(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9])",
            "type": "string"
          },
          "serviceLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_ServiceLevelType"
              }
            ]
          },
          "serviceStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_ServicesStatusType"
              }
            ]
          }
        },
        "description": ""
      },
      "Q1_EmergencyCashStatus": {
        "title": "Q1_EmergencyCashStatus",
        "required": [
          "registrationDate",
          "status"
        ],
        "type": "object",
        "properties": {
          "registrationDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].[0-9])|()|(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9])",
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_TransactionInfo": {
        "title": "Q1_TransactionInfo",
        "required": [
          "transactionType"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "relatedTransactionId": {
            "type": "string"
          },
          "transactionType": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_ClientInfo": {
        "title": "Q1_ClientInfo",
        "required": [
          "clientId"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_SecurityInfo": {
        "title": "Q1_SecurityInfo",
        "required": [
          "username",
          "password"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_CreationInfo": {
        "title": "Q1_CreationInfo",
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          },
          "branch": {
            "maxLength": 5,
            "type": "string"
          },
          "institution": {
            "maxLength": 3,
            "type": "string"
          },
          "teller": {
            "maxLength": 8,
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_RequestHeader": {
        "title": "Q1_RequestHeader",
        "type": "object",
        "properties": {
          "transactionInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_TransactionInfo"
              }
            ]
          },
          "clientInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_ClientInfo"
              }
            ]
          },
          "securityInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_SecurityInfo"
              }
            ]
          },
          "creationInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_CreationInfo"
              }
            ]
          }
        },
        "description": ""
      },
      "Q1_ErrorInfo": {
        "title": "Q1_ErrorInfo",
        "required": [
          "level"
        ],
        "type": "object",
        "properties": {
          "level": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_level"
              }
            ]
          },
          "code": {
            "type": "string"
          },
          "context": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_ReplyHeader": {
        "title": "Q1_ReplyHeader",
        "type": "object",
        "properties": {
          "transactionInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_TransactionInfo"
              }
            ]
          },
          "clientInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_ClientInfo"
              }
            ]
          },
          "errorInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_ErrorInfo"
              }
            ]
          }
        },
        "description": ""
      },
      "ActivateRecipientRequest": {
        "title": "ActivateRecipientRequest",
        "required": [
          "ActivateRecipientRequest"
        ],
        "type": "object",
        "properties": {
          "ActivateRecipientRequest": {
            "$ref": "#/components/schemas/tns_ActivateRecipientRequest"
          }
        }
      },
      "ActivateRecipientResponse": {
        "title": "ActivateRecipientResponse",
        "required": [
          "ActivateRecipientResponse"
        ],
        "type": "object",
        "properties": {
          "ActivateRecipientResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ActivateRecipientResponse"
              }
            ]
          }
        }
      },
      "ActivateSenderRequest": {
        "title": "ActivateSenderRequest",
        "required": [
          "ActivateSenderRequest"
        ],
        "type": "object",
        "properties": {
          "ActivateSenderRequest": {
            "$ref": "#/components/schemas/ActivateSenderRequestType"
          }
        }
      },
      "ActivateSenderResponse": {
        "title": "ActivateSenderResponse",
        "required": [
          "ActivateSenderResponse"
        ],
        "type": "object",
        "properties": {
          "ActivateSenderResponse": {
            "$ref": "#/components/schemas/ActivateSenderResponseType"
          }
        }
      },
      "AddCurrencyRequest": {
        "title": "AddCurrencyRequest",
        "required": [
          "AddCurrencyRequest"
        ],
        "type": "object",
        "properties": {
          "AddCurrencyRequest": {
            "$ref": "#/components/schemas/tns_AddCurrencyRequest"
          }
        }
      },
      "AddCurrencyResponse": {
        "title": "AddCurrencyResponse",
        "required": [
          "AddCurrencyResponse"
        ],
        "type": "object",
        "properties": {
          "AddCurrencyResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AddCurrencyResponse"
              }
            ]
          }
        }
      },
      "AddFeeRequest": {
        "title": "AddFeeRequest",
        "required": [
          "AddFeeRequest"
        ],
        "type": "object",
        "properties": {
          "AddFeeRequest": {
            "$ref": "#/components/schemas/tns_AddFeeRequest"
          }
        }
      },
      "AddFeeResponse": {
        "title": "AddFeeResponse",
        "required": [
          "AddFeeResponse"
        ],
        "type": "object",
        "properties": {
          "AddFeeResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AddFeeResponse"
              }
            ]
          }
        }
      },
      "AddRecipientRequest": {
        "title": "AddRecipientRequest",
        "required": [
          "AddRecipientRequest"
        ],
        "type": "object",
        "properties": {
          "AddRecipientRequest": {
            "$ref": "#/components/schemas/newRemittanceRecipientType"
          }
        }
      },
      "AddRecipientResponse": {
        "title": "AddRecipientResponse",
        "required": [
          "AddRecipientResponse"
        ],
        "type": "object",
        "properties": {
          "AddRecipientResponse": {
            "$ref": "#/components/schemas/AddRecipientResponseType"
          }
        }
      },
      "AddSenderRequest": {
        "title": "AddSenderRequest",
        "required": [
          "AddSenderRequest"
        ],
        "type": "object",
        "properties": {
          "AddSenderRequest": {
            "$ref": "#/components/schemas/AddSenderRequestType"
          }
        }
      },
      "AddSenderResponse": {
        "title": "AddSenderResponse",
        "required": [
          "AddSenderResponse"
        ],
        "type": "object",
        "properties": {
          "AddSenderResponse": {
            "$ref": "#/components/schemas/AddSenderResponseType"
          }
        }
      },
      "AmendTransferRequest": {
        "title": "AmendTransferRequest",
        "required": [
          "AmendTransferRequest"
        ],
        "type": "object",
        "properties": {
          "AmendTransferRequest": {
            "$ref": "#/components/schemas/tns_AmendTransferRequestType"
          }
        }
      },
      "AmendTransferResponse": {
        "title": "AmendTransferResponse",
        "required": [
          "AmendTransferResponse"
        ],
        "type": "object",
        "properties": {
          "AmendTransferResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmendTransferResponse"
              }
            ]
          }
        }
      },
      "CancelTransferRequest": {
        "title": "CancelTransferRequest",
        "required": [
          "CancelTransferRequest"
        ],
        "type": "object",
        "properties": {
          "CancelTransferRequest": {
            "$ref": "#/components/schemas/CancelTransferRequestType"
          }
        }
      },
      "CancelTransferResponse": {
        "title": "CancelTransferResponse",
        "required": [
          "CancelTransferResponse"
        ],
        "type": "object",
        "properties": {
          "CancelTransferResponse": {
            "$ref": "#/components/schemas/CancelTransferResponseType"
          }
        }
      },
      "CountriesListRequest": {
        "title": "CountriesListRequest",
        "required": [
          "CountriesListRequest"
        ],
        "type": "object",
        "properties": {
          "CountriesListRequest": {
            "$ref": "#/components/schemas/tns_CountriesList"
          }
        }
      },
      "CountriesListResponse": {
        "title": "CountriesListResponse",
        "required": [
          "CountriesListResponse"
        ],
        "type": "object",
        "properties": {
          "CountriesListResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CountriesListResponse"
              }
            ]
          }
        }
      },
      "DeleteRecipientRequest": {
        "title": "DeleteRecipientRequest",
        "required": [
          "DeleteRecipientRequest"
        ],
        "type": "object",
        "properties": {
          "DeleteRecipientRequest": {
            "$ref": "#/components/schemas/DeleteRecipientRequestType"
          }
        }
      },
      "DeleteRecipientResponse": {
        "title": "DeleteRecipientResponse",
        "required": [
          "DeleteRecipientResponse"
        ],
        "type": "object",
        "properties": {
          "DeleteRecipientResponse": {
            "$ref": "#/components/schemas/DeleteRecipientResponseType"
          }
        }
      },
      "header_authenticationType": {
        "title": "header_authenticationType",
        "enum": [
          "NONE",
          "OTP",
          "TOKEN"
        ],
        "type": "string",
        "description": ""
      },
      "IsMGTransactionAmendableResponse": {
        "title": "IsMGTransactionAmendableResponse",
        "required": [
          "IsMGTransactionAmendableResponse"
        ],
        "type": "object",
        "properties": {
          "IsMGTransactionAmendableResponse": {
            "$ref": "#/components/schemas/IsMGTransactionAmendableResponseType"
          }
        }
      },
      "ListCurrencyRequest": {
        "title": "ListCurrencyRequest",
        "required": [
          "ListCurrencyRequest"
        ],
        "type": "object",
        "properties": {
          "ListCurrencyRequest": {
            "$ref": "#/components/schemas/tns_ListCurrencyRequest"
          }
        }
      },
      "ListCurrencyResponse": {
        "title": "ListCurrencyResponse",
        "required": [
          "ListCurrencyResponse"
        ],
        "type": "object",
        "properties": {
          "ListCurrencyResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ListCurrencyResponse"
              }
            ]
          }
        }
      },
      "ModifyCurrencyRequest": {
        "title": "ModifyCurrencyRequest",
        "required": [
          "ModifyCurrencyRequest"
        ],
        "type": "object",
        "properties": {
          "ModifyCurrencyRequest": {
            "$ref": "#/components/schemas/tns_ModifyCurrencyRequest"
          }
        }
      },
      "ModifyCurrencyResponse": {
        "title": "ModifyCurrencyResponse",
        "required": [
          "ModifyCurrencyResponse"
        ],
        "type": "object",
        "properties": {
          "ModifyCurrencyResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ModifyCurrencyResponse"
              }
            ]
          }
        }
      },
      "ModifyRecipientRequest": {
        "title": "ModifyRecipientRequest",
        "required": [
          "ModifyRecipientRequest"
        ],
        "type": "object",
        "properties": {
          "ModifyRecipientRequest": {
            "$ref": "#/components/schemas/remittanceRecipientType"
          }
        }
      },
      "ModifyRecipientResponse": {
        "title": "ModifyRecipientResponse",
        "required": [
          "ModifyRecipientResponse"
        ],
        "type": "object",
        "properties": {
          "ModifyRecipientResponse": {
            "$ref": "#/components/schemas/ModifyRecipientResponseType"
          }
        }
      },
      "ModifySenderRequest": {
        "title": "ModifySenderRequest",
        "required": [
          "ModifySenderRequest"
        ],
        "type": "object",
        "properties": {
          "ModifySenderRequest": {
            "$ref": "#/components/schemas/tns_remittanceModifySenderType"
          }
        }
      },
      "ModifySenderResponse": {
        "title": "ModifySenderResponse",
        "required": [
          "ModifySenderResponse"
        ],
        "type": "object",
        "properties": {
          "ModifySenderResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ModifySenderResponse"
              }
            ]
          }
        }
      },
      "Q1_level": {
        "title": "Q1_level",
        "enum": [
          "SUCCESS",
          "WARNING",
          "FAILURE"
        ],
        "type": "string",
        "description": ""
      },
      "RemittanceCustomerRateRequest": {
        "title": "RemittanceCustomerRateRequest",
        "required": [
          "RemittanceCustomerRateRequest"
        ],
        "type": "object",
        "properties": {
          "RemittanceCustomerRateRequest": {
            "$ref": "#/components/schemas/tns_RemittanceCustomerRateRequest"
          }
        }
      },
      "RemittanceCustomerRateResponse": {
        "title": "RemittanceCustomerRateResponse",
        "required": [
          "RemittanceCustomerRateResponse"
        ],
        "type": "object",
        "properties": {
          "RemittanceCustomerRateResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RemittanceCustomerRateResponse"
              }
            ]
          }
        }
      },
      "RetrieveAgentsResponse": {
        "title": "RetrieveAgentsResponse",
        "required": [
          "RetrieveAgentsResponse"
        ],
        "type": "object",
        "properties": {
          "RetrieveAgentsResponse": {
            "$ref": "#/components/schemas/RetrieveAgentsResponseType"
          }
        }
      },
      "RetrieveBanksResponse": {
        "title": "RetrieveBanksResponse",
        "required": [
          "RetrieveBanksResponse"
        ],
        "type": "object",
        "properties": {
          "RetrieveBanksResponse": {
            "$ref": "#/components/schemas/RetrieveBanksResponseType"
          }
        }
      },
      "RetrieveBranchCurrencyResponse": {
        "title": "RetrieveBranchCurrencyResponse",
        "required": [
          "RetrieveBranchCurrencyResponse"
        ],
        "type": "object",
        "properties": {
          "RetrieveBranchCurrencyResponse": {
            "$ref": "#/components/schemas/RetrieveBranchCurrencyResponseType"
          }
        }
      },
      "RetrieveBranchesResponse": {
        "title": "RetrieveBranchesResponse",
        "required": [
          "RetrieveBranchesResponse"
        ],
        "type": "object",
        "properties": {
          "RetrieveBranchesResponse": {
            "$ref": "#/components/schemas/RetrieveBranchesResponseType"
          }
        }
      },
      "RetrieveCitiesResponse": {
        "title": "RetrieveCitiesResponse",
        "required": [
          "RetrieveCitiesResponse"
        ],
        "type": "object",
        "properties": {
          "RetrieveCitiesResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RetrieveCitiesResponseType"
              }
            ]
          }
        }
      },
      "RetrieveCountriesResponse": {
        "title": "RetrieveCountriesResponse",
        "required": [
          "RetrieveCountriesResponse"
        ],
        "type": "object",
        "properties": {
          "RetrieveCountriesResponse": {
            "$ref": "#/components/schemas/RetrieveCountriesResponseType"
          }
        }
      },
      "RetrieveCourierCurrencyRequest": {
        "title": "RetrieveCourierCurrencyRequest",
        "required": [
          "RetrieveCourierCurrencyRequest"
        ],
        "type": "object",
        "properties": {
          "RetrieveCourierCurrencyRequest": {
            "$ref": "#/components/schemas/tns_RetrieveCourierCurrencyRequest"
          }
        }
      },
      "RetrieveCourierCurrencyResponse": {
        "title": "RetrieveCourierCurrencyResponse",
        "required": [
          "RetrieveCourierCurrencyResponse"
        ],
        "type": "object",
        "properties": {
          "RetrieveCourierCurrencyResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RetrieveCourierCurrencyResponse"
              }
            ]
          }
        }
      },
      "RetrieveCourierResponse": {
        "title": "RetrieveCourierResponse",
        "required": [
          "RetrieveCourierResponse"
        ],
        "type": "object",
        "properties": {
          "RetrieveCourierResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RetrieveCourierResponseType"
              }
            ]
          }
        }
      },
      "RetrieveDeliveryTypesResponse": {
        "title": "RetrieveDeliveryTypesResponse",
        "required": [
          "RetrieveDeliveryTypesResponse"
        ],
        "type": "object",
        "properties": {
          "RetrieveDeliveryTypesResponse": {
            "$ref": "#/components/schemas/RetrieveDeliveryTypesResponseType"
          }
        }
      },
      "RetrieveDirCourierCurrencyResponse": {
        "title": "RetrieveDirCourierCurrencyResponse",
        "required": [
          "RetrieveDirCourierCurrencyResponse"
        ],
        "type": "object",
        "properties": {
          "RetrieveDirCourierCurrencyResponse": {
            "$ref": "#/components/schemas/RetrieveDirCourierCurrencyResponseType"
          }
        }
      },
      "RetrieveDirCourierResponse": {
        "title": "RetrieveDirCourierResponse",
        "required": [
          "RetrieveDirCourierResponse"
        ],
        "type": "object",
        "properties": {
          "RetrieveDirCourierResponse": {
            "$ref": "#/components/schemas/RetrieveDirCourierResponseType"
          }
        }
      },
      "RetrieveLocationCurrencyResponse": {
        "title": "RetrieveLocationCurrencyResponse",
        "required": [
          "RetrieveLocationCurrencyResponse"
        ],
        "type": "object",
        "properties": {
          "RetrieveLocationCurrencyResponse": {
            "$ref": "#/components/schemas/RetrieveLocationCurrencyResponseType"
          }
        }
      },
      "RetrieveLocationsResponse": {
        "title": "RetrieveLocationsResponse",
        "required": [
          "RetrieveLocationsResponse"
        ],
        "type": "object",
        "properties": {
          "RetrieveLocationsResponse": {
            "$ref": "#/components/schemas/RetrieveLocationsResponseType"
          }
        }
      },
      "RetrieveMGAgentsRequest": {
        "title": "RetrieveMGAgentsRequest",
        "required": [
          "RetrieveMGAgentsRequest"
        ],
        "type": "object",
        "properties": {
          "RetrieveMGAgentsRequest": {
            "$ref": "#/components/schemas/RetrieveMGAgentsRequestType"
          }
        }
      },
      "RetrieveMGAgentsResponse": {
        "title": "RetrieveMGAgentsResponse",
        "required": [
          "RetrieveMGAgentsResponse"
        ],
        "type": "object",
        "properties": {
          "RetrieveMGAgentsResponse": {
            "$ref": "#/components/schemas/RetrieveMGAgentsResponseType"
          }
        }
      },
      "RetrieveMGCurrencyRequest": {
        "title": "RetrieveMGCurrencyRequest",
        "required": [
          "RetrieveMGCurrencyRequest"
        ],
        "type": "object",
        "properties": {
          "RetrieveMGCurrencyRequest": {
            "$ref": "#/components/schemas/RetrieveMGCurrencyRequestType"
          }
        }
      },
      "RetrieveMGCurrencyResponse": {
        "title": "RetrieveMGCurrencyResponse",
        "required": [
          "RetrieveMGCurrencyResponse"
        ],
        "type": "object",
        "properties": {
          "RetrieveMGCurrencyResponse": {
            "$ref": "#/components/schemas/RetrieveMGCurrencyResponseType"
          }
        }
      },
      "RetrieveMGDeliveryTypesRequest": {
        "title": "RetrieveMGDeliveryTypesRequest",
        "required": [
          "RetrieveMGDeliveryTypesRequest"
        ],
        "type": "object",
        "properties": {
          "RetrieveMGDeliveryTypesRequest": {
            "$ref": "#/components/schemas/tns_RetrieveMGDeliveryTypesRequest"
          }
        }
      },
      "RetrieveMGDeliveryTypesResponse": {
        "title": "RetrieveMGDeliveryTypesResponse",
        "required": [
          "RetrieveMGDeliveryTypesResponse"
        ],
        "type": "object",
        "properties": {
          "RetrieveMGDeliveryTypesResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RetrieveMGDeliveryTypesResponse"
              }
            ]
          }
        }
      },
      "RetrieveMGDynamicFieldsRequest": {
        "title": "RetrieveMGDynamicFieldsRequest",
        "required": [
          "RetrieveMGDynamicFieldsRequest"
        ],
        "type": "object",
        "properties": {
          "RetrieveMGDynamicFieldsRequest": {
            "$ref": "#/components/schemas/tns_RetrieveMGDynamicFieldsRequest"
          }
        }
      },
      "RetrieveMGDynamicFieldsResponse": {
        "title": "RetrieveMGDynamicFieldsResponse",
        "required": [
          "RetrieveMGDynamicFieldsResponse"
        ],
        "type": "object",
        "properties": {
          "RetrieveMGDynamicFieldsResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RetrieveMGDynamicFieldsResponse"
              }
            ]
          }
        }
      },
      "RetrieveRecipientRequest": {
        "title": "RetrieveRecipientRequest",
        "required": [
          "RetrieveRecipientRequest"
        ],
        "type": "object",
        "properties": {
          "RetrieveRecipientRequest": {
            "$ref": "#/components/schemas/RetrieveRecipientRequestType"
          }
        }
      },
      "RetrieveRecipientResponse": {
        "title": "RetrieveRecipientResponse",
        "required": [
          "RetrieveRecipientResponse"
        ],
        "type": "object",
        "properties": {
          "RetrieveRecipientResponse": {
            "$ref": "#/components/schemas/RetrieveRecipientResponseType"
          }
        }
      },
      "RetrieveSenderRequest": {
        "title": "RetrieveSenderRequest",
        "required": [
          "RetrieveSenderRequest"
        ],
        "type": "object",
        "properties": {
          "RetrieveSenderRequest": {
            "$ref": "#/components/schemas/RetrieveSenderRequestType"
          }
        }
      },
      "RetrieveSenderResponse": {
        "title": "RetrieveSenderResponse",
        "required": [
          "RetrieveSenderResponse"
        ],
        "type": "object",
        "properties": {
          "RetrieveSenderResponse": {
            "$ref": "#/components/schemas/RetrieveSenderResponseType"
          }
        }
      },
      "RetrieveStatesResponse": {
        "title": "RetrieveStatesResponse",
        "required": [
          "RetrieveStatesResponse"
        ],
        "type": "object",
        "properties": {
          "RetrieveStatesResponse": {
            "$ref": "#/components/schemas/RetrieveStatesResponseType"
          }
        }
      },
      "ScreenPaymentRequest": {
        "title": "ScreenPaymentRequest",
        "required": [
          "ScreenPaymentRequest"
        ],
        "type": "object",
        "properties": {
          "ScreenPaymentRequest": {
            "$ref": "#/components/schemas/tns_ScreenPaymentRequest"
          }
        }
      },
      "ScreenPaymentResponse": {
        "title": "ScreenPaymentResponse",
        "required": [
          "ScreenPaymentResponse"
        ],
        "type": "object",
        "properties": {
          "ScreenPaymentResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ScreenPaymentResponseType"
              }
            ]
          }
        }
      },
      "agentInfoType": {
        "title": "agentInfoType",
        "required": [
          "agentName",
          "agentAbbreviation"
        ],
        "type": "object",
        "properties": {
          "storeHours": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/storeHoursType"
            },
            "description": "Start element"
          },
          "agentID": {
            "type": "string",
            "description": "Agent ID"
          },
          "agentName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "Agent’s name"
          },
          "address": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "description": "Agent’s address"
          },
          "city": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "Agent’s city"
          },
          "receiveCapability": {
            "type": "boolean",
            "description": "Agent’s ability to receive transfers"
          },
          "sendCapability": {
            "type": "boolean",
            "description": "Agent’s ability to send transfers"
          },
          "agentPhone": {
            "type": "string",
            "description": "Agent’s phone number"
          },
          "pickupInd": {
            "maxLength": 1,
            "minLength": 0,
            "type": "string"
          },
          "correctionCheck": {
            "maxLength": 1,
            "minLength": 0,
            "type": "string"
          },
          "dnetType": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "correspondentID": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "agentAbbreviation": {
            "type": "string",
            "description": "Agent name Abbreviation"
          }
        },
        "description": "Repetitive node that contains Agent details"
      },
      "tns_currency": {
        "title": "tns_currency",
        "required": [
          "id",
          "sourceCurrency",
          "destinationCurrency",
          "exchangeRate",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "sourceCurrency": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          },
          "destinationCurrency": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          },
          "exchangeRate": {
            "type": "number"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/status"
              }
            ]
          },
          "updateCurrencyId": {
            "type": "integer",
            "format": "int32"
          },
          "updateBy": {
            "type": "string"
          },
          "updateDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string"
          },
          "updateTime": {
            "type": "string"
          }
        },
        "description": "Repetitive node that contains fee rule’s\r\n details elements\r\n Repetitive node that contains fee rule’s\r\n details\r\n elements"
      },
      "tns_deliveryType": {
        "title": "tns_deliveryType",
        "enum": [
          "ALL"
        ],
        "type": "string",
        "description": ""
      },
      "dnetTypesType": {
        "title": "dnetTypesType",
        "enum": [
          "NCB",
          "MG"
        ],
        "type": "string",
        "description": ""
      },
      "language": {
        "title": "language",
        "maxLength": 1,
        "enum": [
          "E",
          "A",
          ""
        ],
        "type": "string",
        "description": ""
      },
      "option": {
        "title": "option",
        "description": "option",
        "enum": [
          "ALL"
        ],
        "type": "string"
      },
      "record2": {
        "title": "record2",
        "required": [
          "recordNumber",
          "bankReferenceNumber",
          "shortCif",
          "recipientId",
          "recipientFirstName",
          "recipientMiddleName",
          "recipientLastName",
          "accountNumber",
          "createdDate",
          "sourceAmount",
          "sourceCurrency",
          "destinationAmount",
          "destinationCurrency",
          "feeAmountSAR",
          "statusMessage",
          "payQuikReferenceNumber",
          "senderId",
          "createdBy",
          "feeAmountSource",
          "state",
          "finalStatus",
          "netAmount",
          "usdAmount",
          "dnetType",
          "pqStatusId",
          "journalId1",
          "journalId2"
        ],
        "type": "object",
        "properties": {
          "recordNumber": {
            "type": "integer",
            "description": "record sequence",
            "format": "int32"
          },
          "bankReferenceNumber": {
            "type": "string",
            "description": "unique number that identifies a money transfer transaction"
          },
          "shortCif": {
            "$ref": "../../commonschemas/schemas.json#/ShortCIF",
            "description": "Customer number"
          },
          "recipientId": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string",
            "description": "Recipient identifier"
          },
          "recipientFirstName": {
            "type": "string",
            "description": "Recipient first name (English)"
          },
          "recipientMiddleName": {
            "type": "string",
            "description": "Recipient Middle Name (English)"
          },
          "recipientLastName": {
            "type": "string",
            "description": "Recipient Last Name (English)"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number"
          },
          "createdDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "transaction date"
          },
          "sourceAmount": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "Net transfer amount in account currency (fee is excluded)"
          },
          "sourceCurrency": {
            "$ref": "../../commonschemas/schemas.json#/ISOCurrencyCodeOptional",
            "description": "Account currency"
          },
          "destinationAmount": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "Net transfer amount in destination currency"
          },
          "destinationCurrency": {
            "$ref": "../../commonschemas/schemas.json#/ISOCurrencyCodeOptional",
            "description": "Destination currency"
          },
          "feeAmountSAR": {
            "$ref": "../../commonschemas/schemas.json#/MoneyOptional",
            "description": "fee amount in SAR"
          },
          "statusMessage": {
            "type": "string",
            "description": "Status message as retrieved from PayQuik"
          },
          "promotionId": {
            "type": "string"
          },
          "promotionTypeId": {
            "type": "string"
          },
          "pickUpCode": {
            "type": "string",
            "description": "Agent Pickup code"
          },
          "payQuikReferenceNumber": {
            "type": "string",
            "description": "Unique ID, assigned by PayQuik,that uniquely identifies in the PayQuik system a money transfer transaction"
          },
          "senderId": {
            "type": "string",
            "description": "Sender identifier"
          },
          "createdTime": {
            "type": "string",
            "description": "transaction time",
            "format": "time",
            "default": "00:00:00"
          },
          "createdBy": {
            "type": "string",
            "description": "Middleware channel indicator"
          },
          "feeAmountSource": {
            "$ref": "../../commonschemas/schemas.json#/MoneyOptional",
            "description": "fee amount in account currency"
          },
          "exchangeRate": {
            "type": "number",
            "description": "Exchange rate from source currency to destination currency",
            "format": "double",
            "default": 0.0
          },
          "state": {
            "type": "string",
            "description": "internal transaction state"
          },
          "finalStatus": {
            "type": "string",
            "description": "internal transaction status"
          },
          "netAmount": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "usdAmount": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "deliveryCharge": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "default": 0.0
          },
          "deliveryChargeCurrency": {
            "$ref": "../../commonschemas/schemas.json#/ISOCurrencyCodeOptional"
          },
          "deliveryChargeInUSD": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "default": 0.0
          },
          "deliveryChargeEX": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "default": 0.0
          },
          "pqExchangeRate": {
            "type": "number",
            "format": "double",
            "default": 0
          },
          "dnetType": {
            "type": "string"
          },
          "pqDNetType": {
            "type": "string"
          },
          "correspondentId": {
            "type": "string"
          },
          "pqCorrespondentId": {
            "type": "string"
          },
          "bancsSellRate": {
            "type": "number",
            "format": "double",
            "default": 0.0
          },
          "sourceUSDSpread": {
            "type": "string"
          },
          "bancsRateSellSp": {
            "type": "number",
            "format": "double",
            "default": 0.0
          },
          "sellRateGainSAR": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "default": 0.0
          },
          "bancsBuyRate": {
            "type": "number",
            "format": "double",
            "default": 0.0
          },
          "usdDstSpread": {
            "type": "string"
          },
          "bancsRateBuySp": {
            "type": "number",
            "format": "double",
            "default": 0.0
          },
          "buyRateGainSAR": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "default": 0.0
          },
          "bancsRateMid": {
            "type": "number",
            "format": "double",
            "default": 0.0
          },
          "limitRuleId": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "feeRuleId": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "createdUsing": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "cancelDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional"
          },
          "cancelTime": {
            "type": "string"
          },
          "cancelBy": {
            "type": "string"
          },
          "cancelUsing": {
            "type": "string"
          },
          "reconStatus": {
            "type": "string"
          },
          "reconDescription": {
            "type": "string"
          },
          "reconDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional"
          },
          "pqStatusId": {
            "type": "string"
          },
          "journalId1": {
            "$ref": "../../commonschemas/schemas.json#/JournalId"
          },
          "journalId2": {
            "$ref": "../../commonschemas/schemas.json#/JournalId"
          },
          "cancelJournalId1": {
            "$ref": "../../commonschemas/schemas.json#/JournalId"
          },
          "cancelJournalId2": {
            "$ref": "../../commonschemas/schemas.json#/JournalId"
          },
          "samaStatus": {
            "type": "string",
            "description": "SAMA Status can have below possible value 1. ACTIVE  2. DORMANT  3. UNCLAIMED  4. ABANDONED  5. CLOSED"
          }
        },
        "description": "Repetitive node that contains transaction details elements"
      },
      "tns_result": {
        "title": "tns_result",
        "enum": [
          "HIT",
          "NOHIT"
        ],
        "type": "string",
        "description": ""
      },
      "tns_screenPayment": {
        "title": "tns_screenPayment",
        "required": [
          "transactionId",
          "result"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "maxLength": 64,
            "minLength": 1,
            "type": "string"
          },
          "result": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_result"
              }
            ]
          }
        },
        "description": ""
      },
      "state": {
        "title": "state",
        "description": "state",
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "State code"
          },
          "name": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "description": "State name"
          }
        }
      },
      "status": {
        "title": "status",
        "description": "status",
        "enum": [
          "A",
          "I",
          "N",
          ""
        ],
        "type": "string"
      },
      "TransactionCancelInquiryResponse": {
        "title": "TransactionCancelInquiryResponse",
        "required": [
          "TransactionCancelInquiryResponse"
        ],
        "type": "object",
        "properties": {
          "TransactionCancelInquiryResponse": {
            "$ref": "#/components/schemas/TransactionCancelInquiryResponseType"
          }
        }
      },
      "TransactionCancelRequest": {
        "title": "TransactionCancelRequest",
        "required": [
          "TransactionCancelRequest"
        ],
        "type": "object",
        "properties": {
          "TransactionCancelRequest": {
            "$ref": "#/components/schemas/TransactionCancelRequestType"
          }
        }
      },
      "TransactionCancelResponse": {
        "title": "TransactionCancelResponse",
        "required": [
          "TransactionCancelResponse"
        ],
        "type": "object",
        "properties": {
          "TransactionCancelResponse": {
            "$ref": "#/components/schemas/TransactionCancelResponseType"
          }
        }
      },
      "TransactionInquiryRequest": {
        "title": "TransactionInquiryRequest",
        "required": [
          "TransactionInquiryRequest"
        ],
        "type": "object",
        "properties": {
          "TransactionInquiryRequest": {
            "$ref": "#/components/schemas/TransactionInquiryRequestType"
          }
        }
      },
      "TransactionInquiryResponse": {
        "title": "TransactionInquiryResponse",
        "required": [
          "TransactionInquiryResponse"
        ],
        "type": "object",
        "properties": {
          "TransactionInquiryResponse": {
            "$ref": "#/components/schemas/TransactionInquiryResponseType"
          }
        }
      },
      "TransferRequest": {
        "title": "TransferRequest",
        "required": [
          "TransferRequest"
        ],
        "type": "object",
        "properties": {
          "TransferRequest": {
            "$ref": "#/components/schemas/TransferRequestType"
          }
        }
      },
      "TransferResponse": {
        "title": "TransferResponse",
        "required": [
          "TransferResponse"
        ],
        "type": "object",
        "properties": {
          "TransferResponse": {
            "$ref": "#/components/schemas/TransferResponseType"
          }
        }
      },
      "TransferStatusRequest": {
        "title": "TransferStatusRequest",
        "required": [
          "TransferStatusRequest"
        ],
        "type": "object",
        "properties": {
          "TransferStatusRequest": {
            "$ref": "#/components/schemas/TransferStatusRequestType"
          }
        }
      },
      "TransferStatusResponse": {
        "title": "TransferStatusResponse",
        "required": [
          "TransferStatusResponse"
        ],
        "type": "object",
        "properties": {
          "TransferStatusResponse": {
            "$ref": "#/components/schemas/TransferStatusResponseType"
          }
        }
      },
      "ValidateTransferRequest": {
        "title": "ValidateTransferRequest",
        "required": [
          "ValidateTransferRequest"
        ],
        "type": "object",
        "properties": {
          "ValidateTransferRequest": {
            "$ref": "#/components/schemas/ValidateTransferRequestType"
          }
        }
      },
      "ValidateTransferResponse": {
        "title": "ValidateTransferResponse",
        "required": [
          "ValidateTransferResponse"
        ],
        "type": "object",
        "properties": {
          "ValidateTransferResponse": {
            "$ref": "#/components/schemas/ValidateTransferResponseType"
          }
        }
      },
      "wsse_UsernameToken": {
        "title": "wsse_UsernameToken",
        "required": [
          "Username",
          "Password"
        ],
        "type": "object",
        "properties": {
          "Username": {
            "type": "string"
          },
          "Password": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_AmountOptional": {
        "oneOf": [
          {
            "type": "number"
          },
          {
            "type": "string"
          }
        ]
      },
      "Q1_AmountOptional": {
        "$ref": "../../commonschemas/schemas.json#/AmountOptional"
      }
    },
    "securitySchemes": {
      "mwsecurity": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "mwsecurity": []
    }
  ],
  "tags": [
    {
      "name": "QuickPay APIs",
      "description": ""
    }
  ]
}