{
  "openapi": "3.0.3",
  "info": {
    "title": "MW Accounts APIs",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://mw-api-3scale-apicast-staging.apps.com:443/api/accounts"
    }
  ],
  "paths": {
    "/GetAccountBalance": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "GetAccountBalance",
        "description": "This operation returns account balance\n\t\t\t\tinformation.",
        "operationId": "GetAccountBalance",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AccountBalanceRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AccountBalanceResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/GetAccountDetails": {
      "post": {
        "tags": [
          "Accounts APIs"
        ],
        "description": "This operation retrieves account details information.",
        "operationId": "GetAccountDetails",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountDetailsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDetailsResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountDetailsResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/GetAccountTransactions": {
      "post": {
        "tags": [
          "Accounts APIs"
        ],
        "summary": "GetAccountTransactions",
        "description": "This operation returns account transactions.",
        "operationId": "GetAccountTransactions",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountTransactionsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountTransactionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountTransactionsResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountTransactionsResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/RegisterMT940Account": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "RegisterMT940Account",
        "description": "This operation enables Registration and\n\t\t\t\tDe-registration of a Custometer and Accounts for MT940 services",
        "operationId": "RegisterMT940Account",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MT940AccountRegistrationRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MT940AccountRegistrationResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetMT940Statement": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "GetMT940Statement",
        "description": "This operation provide an option to download the\n\t\t\t\tMT940 messages for the entitled accounts",
        "operationId": "GetMT940Statement",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MT940StatementRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MT940StatementResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetMT942Statement": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "GetMT942Statement",
        "description": "This operation provide an option to download the\n\t\t\t\tMT942 messages for the entitled accounts",
        "operationId": "GetMT942Statement",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MT942StatementRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MT942StatementResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/ValidateAccountNumber": {
      "post": {
        "tags": [
          "Accounts APIs"
        ],
        "description": "This operation provide an option to validate the BBAN and IBAN",
        "operationId": "ValidateAccountNumber",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountNumberValidationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountNumberValidationResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountNumberValidationResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountNumberValidationResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/CreateIBAN": {
      "post": {
        "tags": [
          "Accounts APIs"
        ],
        "description": "This operation is used to create the IBAN",
        "operationId": "CreateIBAN",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IBANCreationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IBANCreationResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IBANCreationResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IBANCreationResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/GenerateStatement": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "GenerateStatement",
        "operationId": "GenerateStatement",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StatementGenerationRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StatementGenerationResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ValidateCustomerAccount": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "ValidateCustomerAccount",
        "operationId": "ValidateCustomerAccount",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerAccountValidationRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CustomerAccountValidationResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/UpdateAccountTransactionDetail": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "UpdateAccountTransactionDetail",
        "operationId": "UpdateAccountTransactionDetail",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateAccountTransactionDetailRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UpdateAccountTransactionDetailResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/GetPromoCodes": {
      "post": {
        "tags": [
          "Accounts APIs"
        ],
        "description": "This operation is used to get the PromoCodes",
        "operationId": "GetPromoCodes",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PromoCodesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromoCodesResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromoCodesResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromoCodesResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/GetTransactionCodes": {
      "post": {
        "tags": [
          "Accounts APIs"
        ],
        "description": "This operation is used to get the TransactionCodes",
        "operationId": "GetTransactionCodes",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionCodesRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionCodesResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionCodesResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionCodesResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/GetFee": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "GetFee",
        "operationId": "GetFee",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/FeeRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/FeeResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ChargeFee": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "ChargeFee",
        "operationId": "ChargeFee",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ChargeFeeRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ChargeFeeResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CreateIntegratedAccount": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "CreateIntegratedAccount",
        "operationId": "CreateIntegratedAccount",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateIntegratedAccountRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateIntegratedAccountResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetAccountStatus": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "GetAccountStatus",
        "operationId": "GetAccountStatus",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AccountStatusRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AccountStatusResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CreateAccount": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "CreateAccount",
        "operationId": "CreateAccount",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateAccountRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateAccountResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetAccounts": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "GetAccounts",
        "operationId": "GetAccounts",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetAccountsRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GetAccountsResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/InquireSignature": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "InquireSignature",
        "operationId": "InquireSignature",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InquireSignatureRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InquireSignatureResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CreateSignature": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "CreateSignature",
        "operationId": "CreateSignature",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateSignatureRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateSignatureResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ConvertSignature": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "ConvertSignature",
        "operationId": "ConvertSignature",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConvertSignatureRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ConvertSignatureResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/AccountEnquiry": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "AccountEnquiry",
        "operationId": "AccountEnquiry",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AccountEnquiryRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AccountEnquiryResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/AccountStop": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "AccountStop",
        "operationId": "AccountStop",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AccountStopRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AccountStopResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ValidateIBAN": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "ValidateIBAN",
        "operationId": "ValidateIBAN",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ValidateIBANRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ValidateIBANResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ServiceAccountStatus": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "ServiceAccountStatus",
        "description": "This service provides XLS information (i.e. RFM\n\t\t\t\tVisit and Amount Counters as well as\n\t\t\t\tLast Visit Date, Pool, E-Coupon\n\t\t\t\tbalances and Definition Attributes) that\n\t\t\t\tare related to the\n\t\t\t\tMedia/Card level or Customer Account level.",
        "operationId": "ServiceAccountStatus",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetServiceAccountStatusRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GetServiceAccountStatusResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ServiceEntityRedeem": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "ServiceEntityRedeem",
        "description": "This service is used to redeem awards from an\n\t\t\t\tAccount or Media",
        "operationId": "ServiceEntityRedeem",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ServiceEntityRedeemRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ServiceEntityRedeemResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/DeleteSignature": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "DeleteSignature",
        "operationId": "DeleteSignature",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DeleteSignatureRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DeleteSignatureResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/UpdateSignature": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "UpdateSignature",
        "operationId": "UpdateSignature",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateSignatureRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UpdateSignatureResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetAccountTransactionDetails": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "GetAccountTransactionDetails",
        "operationId": "GetAccountTransactionDetails",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AccountTransactionDetailsRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AccountTransactionDetailsResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ViewAccountDetails": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "ViewAccountDetails",
        "operationId": "ViewAccountDetails",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ViewAccountDetailsRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ViewAccountDetailsResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetGLAccountBalance": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "GetGLAccountBalance",
        "operationId": "GetGLAccountBalance",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetGLAccountBalanceRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GetGLAccountBalanceResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetCorporateAccountTransactions": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "GetCorporateAccountTransactions",
        "operationId": "GetCorporateAccountTransactions",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CorporateAccountTransactionsRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CorporateAccountTransactionsResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetAccountMandates": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "GetAccountMandates",
        "operationId": "GetAccountMandates",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AccountMandatesRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AccountMandatesResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetAccountAddress": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "GetAccountAddress",
        "operationId": "GetAccountAddress",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AccountAddressRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AccountAddressResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/AccountTransferNotification": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "AccountTransferNotification",
        "operationId": "AccountTransferNotification",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AccountTransferNotificationRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AccountTransferNotificationResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CreateBulkCMSAccounts": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "CreateBulkCMSAccounts",
        "operationId": "CreateBulkCMSAccounts",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CMSBulkAccountCreationRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CMSBulkAccountCreationResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/MaintainCMSAccount": {
      "post": {
        "tags": [
          "Accounts APIs"
        ],
        "summary": "MaintainCMSAccount",
        "operationId": "MaintainCMSAccount",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CMSAccountMaintenanceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSAccountMaintenanceResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSAccountMaintenanceResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSAccountMaintenanceResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/UpdateBulkCMSAccounts": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "UpdateBulkCMSAccounts",
        "operationId": "UpdateBulkCMSAccounts",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CMSBulkAccountUpdationRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CMSBulkAccountUpdationResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/GetCMSAccounts": {
      "post": {
        "tags": [
          "Accounts APIs"
        ],
        "description": "This operation retrieves CMS Accounts details",
        "operationId": "GetCMSAccounts",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CMSAccountsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully Retrieved the Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSAccountsResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSAccountsResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSAccountsResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/GetCMSAccountTransactions": {
      "post": {
        "tags": [
          "Accounts APIs"
        ],
        "summary": "GetCMSAccountTransactions",
        "operationId": "GetCMSAccountTransactions",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CMSAccountTransactionsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSAccountTransactionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSAccountTransactionsResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CMSAccountTransactionsResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/GetAccountOwner": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "GetAccountOwner",
        "operationId": "GetAccountOwner",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AccountOwnerRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AccountOwnerResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/InquireMutualFundSignature": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "InquireMutualFundSignature",
        "operationId": "InquireMutualFundSignature",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MutualFundSignatureInquiryRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MutualFundSignatureInquiryResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CreateMutualFundSignature": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "CreateMutualFundSignature",
        "operationId": "CreateMutualFundSignature",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MutualFundSignatureCreationRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MutualFundSignatureCreationResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/UpdateMutualFundSignature": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "UpdateMutualFundSignature",
        "operationId": "UpdateMutualFundSignature",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MutualFundSignatureUpdationRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MutualFundSignatureUpdationResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/DeleteMutualFundSignature": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "DeleteMutualFundSignature",
        "operationId": "DeleteMutualFundSignature",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MutualFundSignatureDeletionRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MutualFundSignatureDeletionResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/InquireClosedAccounts": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "InquireClosedAccounts",
        "operationId": "InquireClosedAccounts",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InquireClosedAccountsRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InquireClosedAccountsResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/InquireSAMAStandingOrder": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "InquireSAMAStandingOrder",
        "description": "Inquiring SAMA Standing Orde",
        "operationId": "InquireSAMAStandingOrder",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SAMAStandingOrderInquiryRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SAMAStandingOrderInquiryResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/InquireCustomerStandingOrder": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "InquireCustomerStandingOrder",
        "description": "Inquiring Customer Standing Order",
        "operationId": "InquireCustomerStandingOrder",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CustomerStandingOrderInquiryRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CustomerStandingOrderInquiryResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/MaintainCMSOmniAccount": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "MaintainCMSOmniAccount",
        "operationId": "MaintainCMSOmniAccount",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CMSOmniAccountMaintenanceRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CMSOmniAccountMaintenanceResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetCMSOmniAccountDetails": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "GetCMSOmniAccountDetails",
        "operationId": "GetCMSOmniAccountDetails",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CMSOmniAccountDetailsRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CMSOmniAccountDetailsResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CreateDepositAccount": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "CreateDepositAccount",
        "operationId": "CreateDepositAccount",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DepositAccountCreationRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DepositAccountCreationResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetStandingOrderFee": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "GetStandingOrderFee",
        "operationId": "GetStandingOrderFee",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StandingOrderFeeRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StandingOrderFeeResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CreateStandingOrder": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "CreateStandingOrder",
        "operationId": "CreateStandingOrder",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StandingOrderCreationRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StandingOrderCreationResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CancelStandingOrder": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "CancelStandingOrder",
        "description": "this service is used to cancelthe standing order",
        "operationId": "CancelStandingOrder",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StandingOrderCancellationRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StandingOrderCancellationResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/UpdateStandingOrder": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "UpdateStandingOrder",
        "description": "this service is used to update the standing order",
        "operationId": "UpdateStandingOrder",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StandingOrderUpdationRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StandingOrderUpdationResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetSadadCollectionLinkedAccounts": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "GetSadadCollectionLinkedAccounts",
        "operationId": "GetSadadCollectionLinkedAccounts",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SadadInquiryCollectionLinkedAccountsRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SadadInquiryCollectionLinkedAccountsResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/InquireDepositAccount": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "InquireDepositAccount",
        "operationId": "InquireDepositAccount",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DepositAccountInquiryRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DepositAccountInquiryResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/AmendDepositAccount": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "AmendDepositAccount",
        "operationId": "AmendDepositAccount",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DepositAccountAmendmentRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DepositAccountAmendmentResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/InquireAccountRolloverHistory": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "InquireAccountRolloverHistory",
        "operationId": "InquireAccountRolloverHistory",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InquireAccountRolloverHistoryRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InquireAccountRolloverHistoryResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/InquireProductParameters": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "InquireProductParameters",
        "operationId": "InquireProductParameters",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InquireProductParametersRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InquireProductParametersResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetPayrollTransactions": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "GetPayrollTransactions",
        "operationId": "GetPayrollTransactions",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PayrollTransactionsRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PayrollTransactionsResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetAccountValidationEnquiry": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "GetAccountValidationEnquiry",
        "operationId": "GetAccountValidationEnquiry",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetAccountValidationEnquiryRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GetAccountValidationEnquiryResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetDonationAccounts": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "GetDonationAccounts",
        "operationId": "GetDonationAccounts",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetDonationAccountsRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GetDonationAccountsResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetStandingOrders": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "GetStandingOrders",
        "operationId": "GetStandingOrders",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetStandingOrdersRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GetStandingOrdersResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetStandingOrderTransactions": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "GetStandingOrderTransactions",
        "operationId": "GetStandingOrderTransactions",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetStandingOrderTransactionsRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GetStandingOrderTransactionsResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/InquireAccountSignatureStatus": {
      "post": {
        "tags": [
          "Accounts APIs"
        ],
        "description": "The function is used to request for the status information of an account in SigCap.",
        "operationId": "InquireAccountSignatureStatus",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InquireAccountSignatureStatusRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InquireAccountSignatureStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InquireAccountSignatureStatusResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InquireAccountSignatureStatusResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/GetTimeDepositAccounts": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "GetTimeDepositAccounts",
        "operationId": "GetTimeDepositAccounts",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TimeDepositAccountsRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TimeDepositAccountsResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetAuthorisedSignatories": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "GetAuthorisedSignatories",
        "operationId": "GetAuthorisedSignatories",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthorisedSignatoriesRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/AuthorisedSignatoriesResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/VerifyAuthorisedSignatories": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "VerifyAuthorisedSignatories",
        "operationId": "VerifyAuthorisedSignatories",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/VerifyAuthorisedSignatoriesRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/VerifyAuthorisedSignatoriesResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/AmendPayrollDetails": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "AmendPayrollDetails",
        "description": "To get the Payroll details(007088.xml) and To\n\t\t\t\tchange customer to NON Payroll (007089.xml)\n\t\t\t\tthat to be decided based\n\t\t\t\ton the operationMode(R=Retrieve, U=Update) in\n\t\t\t\tthe request.",
        "operationId": "AmendPayrollDetails",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PayrollDetailsAmendmentRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PayrollDetailsAmendmentResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/RegisterAccountNotification": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "RegisterAccountNotification",
        "operationId": "RegisterAccountNotification",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RegisterAccountNotificationRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RegisterAccountNotificationResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetVirtualAccounts": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "GetVirtualAccounts",
        "operationId": "GetVirtualAccounts",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/VirtualAccountsRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/VirtualAccountsResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/AmendAccountStatus": {
      "post": {
        "tags": [
          "Accounts APIs"
        ],
        "summary": "AmendAccountStatus",
        "operationId": "AmendAccountStatus",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountStatusAmendmentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountStatusAmendmentResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountStatusAmendmentResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/PaymentInquiry": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "PaymentInquiry",
        "operationId": "PaymentInquiry",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PaymentInquiryRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaymentInquiryResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/EnquirePayment": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "EnquirePayment",
        "operationId": "EnquirePayment",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EnquirePaymentRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EnquirePaymentResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ClaimRefund": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "ClaimRefund",
        "operationId": "ClaimRefund",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ClaimRefundRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ClaimRefundResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/InquireAccountTransaction": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "InquireAccountTransaction",
        "description": "This operation is used to Inquiry account\n\t\t\t\ttransactions.",
        "operationId": "InquireAccountTransaction",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InquireAccountTransactionRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InquireAccountTransactionResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetAccountTypeDetails": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "GetAccountTypeDetails",
        "operationId": "GetAccountTypeDetails",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetAccountTypeDetailsRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GetAccountTypeDetailsResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/DepositAccountActivation": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "DepositAccountActivation",
        "operationId": "DepositAccountActivation",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/DepositAccountActivationRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/DepositAccountActivationResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetSAMBATransactionHistory": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "GetSAMBATransactionHistory",
        "operationId": "GetSAMBATransactionHistory",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetSAMBATransactionHistoryRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GetSAMBATransactionHistoryResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/MaintainDepositor": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "MaintainDepositor",
        "operationId": "MaintainDepositor",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MaintainDepositorRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MaintainDepositorResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/RetrieveDepositorInfo": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "RetrieveDepositorInfo",
        "operationId": "RetrieveDepositorInfo",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RetrieveDepositorInfoRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RetrieveDepositorInfoResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/PledgeTimeDepositAccounts": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "PledgeTimeDepositAccounts",
        "description": "This operation is used to do real time pledging\n\t\t\t\tof\n\t\t\t\ttime deposit Collaterals.",
        "operationId": "PledgeTimeDepositAccounts",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PledgeTimeDepositAccountsRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PledgeTimeDepositAccountsResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetCMSAccountTransactionsList": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "GetCMSAccountTransactionsList",
        "description": "This operation is used for getting the CMS\n\t\t\t\taccount transaction using pagination",
        "operationId": "GetCMSAccountTransactionsList",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CMSAccountTransactionsListRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CMSAccountTransactionsListResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetCMSVirtualAccountCount": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "GetCMSVirtualAccountCount",
        "operationId": "GetCMSVirtualAccountCount",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CMSVirtualAccountCountRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CMSVirtualAccountCountResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/GetCustAcctsCumulativeBal": {
      "post": {
        "tags": [
          "Accounts APIs"
        ],
        "summary": "GetCustAcctsCumulativeBal",
        "description": "This Operation will fetch Cumulative Balance of\n\t\t\t\tall the active Omni Accounts and Current Accounts linked to a CIF",
        "operationId": "GetCustAcctsCumulativeBal",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustAcctsCumulativeBalRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustAcctsCumulativeBalResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustAcctsCumulativeBalResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustAcctsCumulativeBalResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/GetMT940OtherBankStatement": {
      "post": {
        "tags": [
          "Accounts APIs Stage"
        ],
        "summary": "GetMT940OtherBankStatement",
        "description": "This Operation will fetch Corporate\n\t\t\t\tMT940Statement from other banks through SWIFT Network",
        "operationId": "GetMT940OtherBankStatement",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetMT940OtherBankStatementRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GetMT940OtherBankStatementResponse"
                    },
                    {}
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "components": {
    "schemas": {
      "tns_ClaimRefundRequest": {
        "title": "tns_ClaimRefundRequest",
        "type": "object",
        "properties": {
          "requestType": {
            "type": "string"
          },
          "uniqueTransferReference": {
            "type": "string"
          },
          "requestDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "currency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          },
          "amount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "sourceSystem": {
            "type": "string",
            "description": "Source System"
          },
          "narration": {
            "type": "string",
            "description": "Narration"
          },
          "bicCode": {
            "type": "string",
            "description": "BIC Code"
          },
          "transactionReference": {
            "type": "string",
            "description": "Transaction Reference"
          }
        },
        "description": ""
      },
      "tns_ClaimRefundResponse": {
        "title": "tns_ClaimRefundResponse",
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_EnquirePaymentRequest": {
        "title": "tns_EnquirePaymentRequest",
        "type": "object",
        "properties": {
          "senderBankBICCode": {
            "type": "string"
          },
          "originalReferenceNumber": {
            "type": "string"
          },
          "paymentFlag": {
            "type": "string",
            "description": "Payment Flag: Inward Outward Flag\r\n\t\t\t\t\t\t\tits value will\r\n\t\t\t\t\t\t\tbe 1 or 2 for Inward and outward payments"
          },
          "originalValueDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "channelId": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_EnquirePaymentResponse": {
        "title": "tns_EnquirePaymentResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_successEnquirePaymentType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_AccountBalanceRequest": {
        "title": "tns_AccountBalanceRequest",
        "required": [
          "accountId"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "type": "array",
            "items": {
              "maxLength": 24,
              "minLength": 14,
              "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
              "type": "string"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_AccountBalanceResponse": {
        "title": "tns_AccountBalanceResponse",
        "type": "object",
        "properties": {
          "account": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_AccountBalanceType"
            },
            "description": ""
          },
          "fault": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fault_FaultType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "AccountNumberValidationRequestType": {
        "title": "AccountNumberValidationRequestType",
        "required": [
          "accountId"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "$ref": "../../commonschemas/schemas.json#/AccountId"
          }
        }
      },
      "AccountNumberValidationResponseType": {
        "title": "AccountNumberValidationResponseType",
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/components/schemas/AccountNumberValidationType"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "AccountNumberValidationType": {
        "title": "AccountNumberValidationType",
        "required": [
          "isAccountValid"
        ],
        "type": "object",
        "properties": {
          "isAccountValid": {
            "$ref": "#/components/schemas/isAccountValid"
          }
        }
      },
      "AccountDetailsRequestType": {
        "title": "AccountDetailsRequestType",
        "required": [
          "accountId"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/accountIdType"
            },
            "description": "Account Identification Number"
          }
        },
        "description": ""
      },
      "AccountDetailsResponseType": {
        "title": "AccountDetailsResponse",
        "type": "object",
        "properties": {
          "account": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountDetailsType"
            },
            "description": ""
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "tns_ViewAccountDetailsRequest": {
        "title": "tns_ViewAccountDetailsRequest",
        "required": [
          "accountId"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/accountIdType"
            },
            "description": "Account Identification Number"
          }
        },
        "description": ""
      },
      "tns_ViewAccountDetailsResponse": {
        "title": "tns_ViewAccountDetailsResponse",
        "type": "object",
        "properties": {
          "account": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountDetailsType"
            },
            "description": ""
          },
          "fault": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fault_FaultType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "AccountTransactionsRequestType": {
        "title": "AccountTransactionsRequestType",
        "required": [
          "accountId",
          "cursor"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "$ref": "../../commonschemas/schemas.json#/AccountId"
          },
          "quantity": {
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 20
          },
          "fromDate": {
            "$ref": "../../commonschemas/schemas.json#/Date"
          },
          "toDate": {
            "$ref": "../../commonschemas/schemas.json#/Date"
          },
          "fromTime": {
            "pattern": "(0[0-9]|1[0-9]|2[0-3])(\\:)(0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9])(\\:)(0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9])",
            "type": "string",
            "default": "00:00:00"
          },
          "toTime": {
            "pattern": "(0[0-9]|1[0-9]|2[0-3])(\\:)(0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9])(\\:)(0[0-9]|1[0-9]|2[0-9]|3[0-9]|4[0-9]|5[0-9])",
            "type": "string",
            "default": "23:59:59"
          },
          "fromAmount": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "toAmount": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "fromCheque": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "toCheque": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "transactionType": {
            "$ref": "#/components/schemas/TransactionType",
            "description": "DB - Debit Transactions CR - Credit\r\n\t\t\t\t\t\t\tTransactions HO - Hold Transactions RL - Release Transactions HR\r\n\t\t\t\t\t\t\t- Hold/Release Transactions PC - Promo Code List TC - Transaction\r\n\t\t\t\t\t\t\tCategories List TD - Transaction Extra Details"
          },
          "promotionCode": {
            "maxLength": 33,
            "type": "string"
          },
          "nextRecordId": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "journalId": {
            "type": "string"
          },
          "transactionOption": {
            "$ref": "#/components/schemas/TransactionOption",
            "description": "A - All (Default, Exclude M, P, H and T) M -\r\n\t\t\t\t\t\t\tOnly Messages F - Only Financial P - Only Stop H - Only Hold and\r\n\t\t\t\t\t\t\tRelease T - Change Account Status"
          },
          "byTransactionDateOrProcessingDate": {
            "$ref": "#/components/schemas/ByTransactionDateOrProcessingDateType"
          },
          "additionalInformation": {
            "$ref": "#/components/schemas/AdditionalInformationType",
            "description": "N - Transaction response will not show the a\r\n\t\t\t\t\t\t\tpayee/beneficiary Name Y - Transaction response will not show the\r\n\t\t\t\t\t\t\ta payee/beneficiary Name for ( tranCode 1045 or 4045, promoCode\r\n\t\t\t\t\t\t\tSD or UY)"
          },
          "sort": {
            "title": "tns_sort",
            "enum": [
              "A",
              "D"
            ],
            "type": "string",
            "description": ""
          },
          "cursor": {
            "$ref": "../../commonschemas/schemas.json#/Cursor"
          }
        },
        "description": ""
      },
      "AccountTransactionsResponseType": {
        "title": "tns_AccountTransactionsResponse",
        "type": "object",
        "properties": {
          "transaction": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountTransactionsType"
            },
            "description": ""
          },
          "totalTransactions": {
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "AccountTransactionsType": {
        "title": "AccountTransactionsType",
        "type": "object",
        "properties": {
          "recordId": {
            "$ref": "../../commonschemas/schemas.json#/RecordId"
          },
          "processingDate": {
            "$ref": "../../commonschemas/schemas.json#/DateOptional"
          },
          "postingDate": {
            "$ref": "../../commonschemas/schemas.json#/DateOptional"
          },
          "postingTime": {
            "pattern": "([0-9]*)|()",
            "type": "string"
          },
          "location": {
            "$ref": "../../commonschemas/schemas.json#/Location"
          },
          "branch": {
            "$ref": "../../commonschemas/schemas.json#/Branch"
          },
          "tellerId": {
            "maxLength": 16,
            "type": "string"
          },
          "terminalId": {
            "type": "string"
          },
          "amount": {
            "$ref": "../../commonschemas/schemas.json#/MoneyOptional"
          },
          "balance": {
            "$ref": "../../commonschemas/schemas.json#/MoneyOptional"
          },
          "balanceTransaction": {
            "$ref": "../../commonschemas/schemas.json#/MoneyOptional"
          },
          "transactionCode": {
            "maxLength": 6,
            "type": "string"
          },
          "transactionDescription": {
            "maxLength": 100,
            "type": "string"
          },
          "transactionExtraDescription": {
            "maxLength": 100,
            "type": "string"
          },
          "transactionDescription4": {
            "type": "string"
          },
          "category": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "journalId": {
            "$ref": "../../commonschemas/schemas.json#/JournalId"
          },
          "promoCode": {
            "maxLength": 33,
            "type": "string"
          },
          "typeDescription": {
            "maxLength": 100,
            "type": "string"
          },
          "nextRecordId": {
            "$ref": "../../commonschemas/schemas.json#/RecordId"
          },
          "atmTransactionId": {
            "type": "string",
            "default": "0"
          },
          "atmTerminalId": {
            "type": "string",
            "default": "0"
          },
          "chequeNo": {
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "accountHolderName": {
            "type": "string"
          }
        },
        "description": ""
      },
      "UserCodeType": {
        "title": "UserCodeType",
        "type": "object",
        "properties": {
          "userCode1": {
            "maxLength": 1,
            "type": "string"
          },
          "userCode2": {
            "maxLength": 1,
            "type": "string"
          },
          "userCode3": {
            "maxLength": 1,
            "type": "string"
          },
          "userCode4": {
            "maxLength": 1,
            "type": "string"
          },
          "userCode5": {
            "maxLength": 1,
            "type": "string"
          },
          "userCode6": {
            "maxLength": 1,
            "type": "string"
          },
          "userCode7": {
            "maxLength": 1,
            "type": "string"
          },
          "userCode8": {
            "maxLength": 1,
            "type": "string"
          },
          "userCode9": {
            "maxLength": 1,
            "type": "string"
          },
          "userCode10": {
            "maxLength": 1,
            "type": "string"
          },
          "userCode11": {
            "maxLength": 1,
            "type": "string"
          },
          "userCode12": {
            "maxLength": 1,
            "type": "string"
          },
          "userCode13": {
            "maxLength": 1,
            "type": "string"
          },
          "userCode14": {
            "maxLength": 1,
            "type": "string"
          },
          "userCode15": {
            "maxLength": 1,
            "type": "string"
          },
          "userCode16": {
            "maxLength": 1,
            "type": "string"
          },
          "userCode17": {
            "maxLength": 1,
            "type": "string"
          },
          "userCode18": {
            "maxLength": 1,
            "type": "string"
          },
          "userCode19": {
            "maxLength": 1,
            "type": "string"
          },
          "userCode20": {
            "maxLength": 1,
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_AccountBalanceType": {
        "title": "tns_AccountBalanceType",
        "required": [
          "accountId",
          "isoCurrencyCode"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "accountType": {
            "maxLength": 4,
            "type": "string"
          },
          "isoCurrencyCode": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          },
          "accountStatus": {
            "maxLength": 4,
            "type": "string"
          },
          "accountStatusDesc": {
            "maxLength": 60,
            "type": "string"
          },
          "accountHeld": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              }
            ]
          },
          "accountUncleared": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              }
            ]
          },
          "accountBalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              }
            ]
          },
          "accountOverdraft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              }
            ]
          },
          "accountAvilable": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              }
            ]
          },
          "accountUnclaimCloseDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string"
          },
          "accountSARBalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              }
            ]
          },
          "accountIsCashAdvance": {
            "type": "boolean",
            "default": false
          },
          "accountBankName": {
            "maxLength": 100,
            "type": "string"
          }
        },
        "description": ""
      },
      "AccountDetailsType": {
        "title": "AccountDetailsType",
        "required": [
          "accountId"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "$ref": "../../commonschemas/schemas.json#/AccountId"
          },
          "accountType": {
            "$ref": "../../commonschemas/schemas.json#/AccountType"
          },
          "accountTypeDescription": {
            "maxLength": 30,
            "type": "string"
          },
          "branch": {
            "$ref": "../../commonschemas/schemas.json#/Branch"
          },
          "customerId": {
            "$ref": "#/components/schemas/CustomerID"
          },
          "segment": {
            "maxLength": 4,
            "type": "string"
          },
          "isoCurrencyCode": {
            "$ref": "../../commonschemas/schemas.json#/ISOCurrencyCodeOptional"
          },
          "accountStatus": {
            "$ref": "../../commonschemas/schemas.json#/accountStatus"
          },
          "accountStatusDescription": {
            "$ref": "../../commonschemas/schemas.json#/accountStatusDesc"
          },
          "accountIntCat": {
            "maxLength": 4,
            "type": "string"
          },
          "accountIntCatDescription": {
            "maxLength": 100,
            "type": "string"
          },
          "accountStmtFrequency": {
            "maxLength": 1,
            "type": "string"
          },
          "atmFlag": {
            "maxLength": 1,
            "type": "string"
          },
          "calendar": {
            "maxLength": 1,
            "type": "string"
          },
          "languageCode": {
            "maxLength": 2,
            "type": "string"
          },
          "noStops": {
            "maxLength": 1,
            "type": "string"
          },
          "stopDescription": {
            "maxLength": 200,
            "type": "string"
          },
          "noOfMessages": {
            "minimum": 0,
            "type": "integer",
            "maxLength": 5,
            "format": "int32",
            "default": 0
          },
          "accountAvgClBalChPer": {
            "$ref": "../../commonschemas/schemas.json#/MoneyOptional",
            "default": 0.0
          },
          "accountAvgBalYTD": {
            "$ref": "../../commonschemas/schemas.json#/MoneyOptional",
            "default": 0.0
          },
          "accountHeld": {
            "$ref": "../../commonschemas/schemas.json#/MoneyOptional",
            "default": 0.0
          },
          "accountUncleared": {
            "$ref": "../../commonschemas/schemas.json#/MoneyOptional",
            "default": 0.0
          },
          "accountBalance": {
            "$ref": "../../commonschemas/schemas.json#/MoneyOptional",
            "default": 0.0
          },
          "accountOverdraft": {
            "$ref": "../../commonschemas/schemas.json#/MoneyOptional",
            "default": 0.0
          },
          "accountAvailable": {
            "$ref": "../../commonschemas/schemas.json#/MoneyOptional",
            "default": 0.0
          },
          "accountLastFinDate": {
            "$ref": "../../commonschemas/schemas.json#/DateOptional"
          },
          "accountLastStmtDate": {
            "$ref": "../../commonschemas/schemas.json#/DateOptional"
          },
          "accountOpenDate": {
            "$ref": "../../commonschemas/schemas.json#/DateOptional"
          },
          "name1": {
            "maxLength": 40,
            "type": "string"
          },
          "name2": {
            "maxLength": 40,
            "type": "string"
          },
          "accountInd1": {
            "maxLength": 1,
            "type": "string"
          },
          "accountInd2": {
            "maxLength": 1,
            "type": "string"
          },
          "ivrFlag": {
            "maxLength": 1,
            "type": "string"
          },
          "accountUnclaimCloseDate": {
            "$ref": "../../commonschemas/schemas.json#/DateOptional"
          },
          "accountGLClassificationCode": {
            "maxLength": 40,
            "type": "string"
          },
          "accountAverageLastSixMonths": {
            "$ref": "../../commonschemas/schemas.json#/MoneyOptional",
            "default": 0.0
          },
          "accountUserCode": {
            "$ref": "#/components/schemas/UserCodeType"
          },
          "accountChequeBook": {
            "$ref": "#/components/schemas/ChequeBookType"
          },
          "accountSARBalance": {
            "$ref": "../../commonschemas/schemas.json#/MoneyOptional",
            "default": 0.0
          },
          "accountSARAvailable": {
            "$ref": "../../commonschemas/schemas.json#/MoneyOptional",
            "default": 0.0
          },
          "accountCreditLimit": {
            "$ref": "../../commonschemas/schemas.json#/MoneyOptional",
            "default": 0.0
          },
          "accountGroupIndicator": {
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "accountAgentCode": {
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "accountNoticeIndicator": {
            "maxLength": 1,
            "type": "string"
          },
          "accountAddress": {
            "$ref": "#/components/schemas/AccountAddressType"
          },
          "accountTitleCode": {
            "maxLength": 2,
            "type": "string"
          },
          "accountTitleDesc": {
            "maxLength": 30,
            "type": "string"
          },
          "accountDivisionCode": {
            "maxLength": 3,
            "type": "string"
          },
          "accountOverDraftShadowFlag": {
            "maxLength": 1,
            "type": "string"
          },
          "accountManager": {
            "maxLength": 48,
            "type": "string"
          },
          "accountOverdraftDetail": {
            "$ref": "#/components/schemas/OverdraftDetailType"
          },
          "accountSubStatus": {
            "$ref": "../../commonschemas/schemas.json#/accountSubStatus"
          },
          "accountSubStatusDescription": {
            "$ref": "../../commonschemas/schemas.json#/accountSubStatusDesc"
          },
          "accountIsPayroll": {
            "type": "boolean",
            "default": false
          },
          "accountIsCashAdvance": {
            "type": "boolean",
            "default": false
          },
          "accountCashAdvanceAvailable": {
            "$ref": "../../commonschemas/schemas.json#/MoneyOptional",
            "default": 0.0
          },
          "minBalance": {
            "$ref": "../../commonschemas/schemas.json#/MoneyOptional",
            "description": " Min Balance- matching input ACCT_NO and for call account product type '0850' and product category '0001' for BANCS14 Accounts"
          },
          "maxBalance": {
            "$ref": "../../commonschemas/schemas.json#/MoneyOptional",
            "description": "Max Balance- matching input ACCT_NO and for call account product type '0850' and product category '0001' for BANCS14 Accounts",
            "default": 0.0
          },
          "returnsAccrued": {
            "$ref": "../../commonschemas/schemas.json#/MoneyOptional",
            "description": "Returns Accrued - matching input ACCT_NO and for call account product type '0850' and product category '0001' for BANCS14 Accounts",
            "default": 0.0
          },
          "profitRate": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "Profit Rate- matching input ACCT_NO and for call account product type '0850' and product category '0001' for BANCS14 Accounts",
            "default": 0.0
          },
          "creditReturnDate": {
            "$ref": "../../commonschemas/schemas.json#/DateOptional",
            "description": "Date for Credit of Returns- matching input ACCT_NO and for call account product type '0850' and product category '0001' for BANCS14 Accounts"
          },
          "sadadCollectionFlag": {
            "type": "string"
          },
          "sadadCreditFlag": {
            "type": "string"
          },
          "sadadDebitFlag": {
            "type": "string"
          },
          "linkedAccount": {
            "type": "string"
          },
          "currencyKhayrat": {
            "type": "string"
          },
          "maturityDateKhayrat": {
            "type": "string"
          },
          "profitAmount": {
            "type": "string"
          },
          "maturityAmount": {
            "type": "string"
          },
          "rollOverOption": {
            "type": "string"
          },
          "commodityName": {
            "type": "string"
          },
          "commoditySupplier": {
            "type": "string"
          },
          "commodityPrice": {
            "type": "string"
          },
          "commodityDefferedPrice": {
            "type": "string"
          },
          "commodityQuantity": {
            "type": "string"
          },
          "treasuryReferenceNumber": {
            "type": "string"
          }
        },
        "description": ""
      },
      "ChequeBookType": {
        "title": "ChequeBookType",
        "type": "object",
        "properties": {
          "chequeBookName": {
            "maxLength": 40,
            "type": "string"
          },
          "chequeBookAddress1": {
            "$ref": "../../commonschemas/schemas.json#/Max70Text"
          },
          "chequeBookAddress2": {
            "$ref": "../../commonschemas/schemas.json#/Max70Text"
          },
          "chequeBookAddress3": {
            "$ref": "../../commonschemas/schemas.json#/Max70Text"
          },
          "chequeBookAddress4": {
            "$ref": "../../commonschemas/schemas.json#/Max70Text"
          },
          "chequeBookPost": {
            "$ref": "../../commonschemas/schemas.json#/Max16Text"
          },
          "chequeBookType": {
            "maxLength": 4,
            "type": "string"
          }
        },
        "description": ""
      },
      "AccountAddressType": {
        "title": "AccountAddressType",
        "type": "object",
        "properties": {
          "addressLine1": {
            "$ref": "../../commonschemas/schemas.json#/Max70Text"
          },
          "addressLine2": {
            "$ref": "../../commonschemas/schemas.json#/Max70Text"
          },
          "addressLine3": {
            "$ref": "../../commonschemas/schemas.json#/Max70Text"
          },
          "city": {
            "maxLength": 40,
            "type": "string"
          },
          "region": {
            "$ref": "../../commonschemas/schemas.json#/Max35Text"
          },
          "postalCode": {
            "$ref": "../../commonschemas/schemas.json#/Max16Text"
          },
          "postBox": {
            "maxLength": 8,
            "type": "string"
          },
          "country": {
            "$ref": "../../commonschemas/schemas.json#/ISOCountryCodeOptional"
          },
          "homePhone": {
            "$ref": "../../commonschemas/schemas.json#/PhoneNumberOptional"
          }
        },
        "description": ""
      },
      "OverdraftDetailType": {
        "title": "OverdraftDetailType",
        "type": "object",
        "properties": {
          "overdraftStartDate1": {
            "$ref": "../../commonschemas/schemas.json#/DateOptional"
          },
          "overdraftStartDate2": {
            "$ref": "../../commonschemas/schemas.json#/DateOptional"
          },
          "overdraftStartDate3": {
            "$ref": "../../commonschemas/schemas.json#/DateOptional"
          },
          "overdraftStartDate4": {
            "$ref": "../../commonschemas/schemas.json#/DateOptional"
          },
          "overdraftEndDate1": {
            "$ref": "../../commonschemas/schemas.json#/DateOptional"
          },
          "overdraftEndDate2": {
            "$ref": "../../commonschemas/schemas.json#/DateOptional"
          },
          "overdraftEndDate3": {
            "$ref": "../../commonschemas/schemas.json#/DateOptional"
          },
          "overdraftEndDate4": {
            "$ref": "../../commonschemas/schemas.json#/DateOptional"
          },
          "overdraftAmount1": {
            "$ref": "../../commonschemas/schemas.json#/MoneyOptional",
            "default": 0.0
          },
          "overdraftAmount2": {
            "$ref": "../../commonschemas/schemas.json#/MoneyOptional",
            "default": 0.0
          },
          "overdraftAmount3": {
            "$ref": "../../commonschemas/schemas.json#/MoneyOptional",
            "default": 0.0
          },
          "overdraftAmount4": {
            "$ref": "../../commonschemas/schemas.json#/MoneyOptional",
            "default": 0.0
          }
        },
        "description": ""
      },
      "CustomerID": {
        "title": "CustomerID",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "type": {
            "type": "string"
          }
        },
        "description": ""
      },
      "accountIdType": {
        "title": "accountIdType",
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "detail": {
            "$ref": "#/components/schemas/detail",
            "description": "F - Full N - Normal",
            "default": "N"
          }
        },
        "description": ""
      },
      "tns_MT940AccountRegistrationRequest": {
        "title": "tns_MT940AccountRegistrationRequest",
        "required": [
          "option"
        ],
        "type": "object",
        "properties": {
          "option": {
            "maxLength": 2,
            "type": "string"
          },
          "function": {
            "maxLength": 1,
            "type": "string"
          },
          "fromAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "institution": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "financialIdCode": {
            "maxLength": 12,
            "type": "string"
          },
          "lastMaintainedDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "status": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "shortName": {
            "maxLength": 16,
            "type": "string"
          },
          "prefix": {
            "type": "string"
          },
          "financialInstitutionName": {
            "type": "string"
          },
          "contactName": {
            "type": "string"
          },
          "contactPositionTitle": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "faxNumber": {
            "type": "integer",
            "format": "int32"
          },
          "address1": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string"
          },
          "address2": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string"
          },
          "address3": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string"
          },
          "stateCode": {
            "type": "string"
          },
          "countryCode": {
            "pattern": "[A-Z]{2,2}",
            "type": "string"
          },
          "depositoryBank": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_depositoryBank"
              }
            ]
          },
          "custodianFlag": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_custodianFlag"
              }
            ]
          },
          "signatureFileExchange": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_signatureFileExchange"
              }
            ]
          },
          "exchangedMode": {
            "maxLength": 1,
            "type": "string"
          },
          "numberOfSignature": {
            "maxLength": 2,
            "type": "string"
          },
          "countryOfRisk": {
            "type": "string"
          },
          "intradayRisk": {
            "maxLength": 2,
            "type": "string"
          },
          "systemicRiskValue": {
            "type": "string"
          },
          "bankIdentifierCode": {
            "maxLength": 11,
            "type": "string"
          },
          "transMessagePreference": {
            "maxLength": 1,
            "type": "string"
          },
          "swiftClearingAddress": {
            "type": "string"
          },
          "terminalIdetifier": {
            "type": "string"
          },
          "swiftHandler": {
            "type": "string"
          },
          "swiftPriority": {
            "type": "string"
          },
          "incomingAccountId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_incomingAccountId"
              }
            ]
          },
          "clearingAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "chipsUserId": {
            "type": "string"
          },
          "chipsParticipantId": {
            "type": "string"
          },
          "giroAppAccount": {
            "type": "string"
          },
          "autoMT202": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_autoMT202"
              }
            ]
          },
          "telexAddress": {
            "type": "string"
          },
          "telexAnswerBack": {
            "type": "string"
          },
          "telexKeyExchanged": {
            "type": "string"
          },
          "telexPriority": {
            "type": "string"
          },
          "statementGenIdent": {
            "type": "string",
            "description": "Used for statement generation identifier"
          },
          "statementFrequency": {
            "type": "string",
            "description": "Used for statement frequency value should be D\r\n\t\t\t\t\t\t\t- for daily statement and M - for Monthly statement"
          }
        },
        "description": ""
      },
      "tns_MT940AccountRegistrationResponse": {
        "title": "tns_MT940AccountRegistrationResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_MT940AccountRegistrationType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_MT940AccountRegistrationType": {
        "title": "tns_MT940AccountRegistrationType",
        "required": [
          "journalId"
        ],
        "type": "object",
        "properties": {
          "journalId": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "statementDateIndicator": {
            "maxLength": 1,
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_MT940StatementRequest": {
        "title": "tns_MT940StatementRequest",
        "required": [
          "identifier",
          "accountId"
        ],
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string"
          },
          "accountId": {
            "type": "array",
            "items": {
              "maxLength": 24,
              "minLength": 14,
              "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
              "type": "string"
            },
            "description": ""
          },
          "fromDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "toDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_MT940StatementResponse": {
        "title": "tns_MT940StatementResponse",
        "type": "object",
        "properties": {
          "accountStatements": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_MT940StatementType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_MT940StatementType": {
        "title": "tns_MT940StatementType",
        "required": [
          "headerInformation"
        ],
        "type": "object",
        "properties": {
          "headerInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_HeaderInformationType"
              }
            ]
          },
          "accountStatement": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_AccountStatementType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_MT942StatementRequest": {
        "title": "tns_MT942StatementRequest",
        "required": [
          "accountId"
        ],
        "type": "object",
        "properties": {
          "identifier": {
            "maxLength": 6,
            "type": "string"
          },
          "accountId": {
            "type": "array",
            "items": {
              "maxLength": 24,
              "minLength": 14,
              "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
              "type": "string"
            },
            "description": ""
          },
          "fromDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "toDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_MT942StatementResponse": {
        "title": "tns_MT942StatementResponse",
        "type": "object",
        "properties": {
          "accountStatements": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_MT942StatementType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_MT942StatementType": {
        "title": "tns_MT942StatementType",
        "required": [
          "headerInformation"
        ],
        "type": "object",
        "properties": {
          "headerInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_HeaderInformationType"
              }
            ]
          },
          "accountStatement": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_AccountStatementType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_HeaderInformationType": {
        "title": "tns_HeaderInformationType",
        "required": [
          "statusCode",
          "statusDetail",
          "corporateCode",
          "bankCode",
          "totalAccountStatements",
          "totalFeeAmount",
          "feeType"
        ],
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "string"
          },
          "statusDetail": {
            "type": "string"
          },
          "corporateCode": {
            "type": "string"
          },
          "bankCode": {
            "type": "string"
          },
          "totalAccountStatements": {
            "type": "integer",
            "format": "int32"
          },
          "totalFeeAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "feeType": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_AccountStatementType": {
        "title": "tns_AccountStatementType",
        "required": [
          "statusCode",
          "statusDetail",
          "accountId",
          "sequenceNumber",
          "transactionType",
          "receiptTime",
          "transactionData"
        ],
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "string"
          },
          "statusDetail": {
            "type": "string"
          },
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "sequenceNumber": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "transactionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TransactionType"
              }
            ]
          },
          "receiptTime": {
            "type": "string",
            "format": "date-time"
          },
          "transactionData": {
            "maxLength": 4000,
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_StatusDetail": {
        "title": "tns_StatusDetail",
        "enum": [
          "SUCCESS",
          "FAIL"
        ],
        "type": "string",
        "description": ""
      },
      "IBANCreationRequestType": {
        "title": "IBANCreationRequestType",
        "required": [
          "accountId"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "$ref": "../../commonschemas/schemas.json#/BBAN",
            "description": "AccID Is the BANCS Account Identification number"
          }
        }
      },
      "IBANCreationResponseType": {
        "title": "IBANCreationResponseType",
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/components/schemas/IBANCreationType",
            "description": "Success Indication tag (generated successfully)"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "IBANCreationType": {
        "title": "IBANCreationType",
        "required": [
          "IBAN"
        ],
        "type": "object",
        "properties": {
          "IBAN": {
            "$ref": "../../commonschemas/schemas.json#/AccountId",
            "description": "IBAN Is The IBAN Account Number"
          }
        }
      },
      "tns_StatementGenerationRequest": {
        "title": "tns_StatementGenerationRequest",
        "required": [
          "accountId"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Account Identification Number"
          }
        },
        "description": ""
      },
      "tns_StatementGenerationResponse": {
        "title": "tns_StatementGenerationResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_StatementGenerationType"
              },
              {
                "description": "Success Indication tag (generated successfully)"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_StatementGenerationType": {
        "title": "tns_StatementGenerationType",
        "type": "object",
        "properties": {
          "journalId": {
            "type": "string",
            "description": "This represnts the journal Id"
          }
        },
        "description": ""
      },
      "tns_CustomerAccountValidationRequest": {
        "title": "tns_CustomerAccountValidationRequest",
        "required": [
          "MSGHDR",
          "ecnId",
          "profileCode"
        ],
        "type": "object",
        "properties": {
          "MSGHDR": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CustomerAccountValidationRequestMessageHeaderType"
              }
            ]
          },
          "ecnId": {
            "maxLength": 8,
            "minLength": 8,
            "type": "string",
            "description": "Ecn Identification"
          },
          "profileCode": {
            "type": "string",
            "description": "Profile Code"
          }
        },
        "description": ""
      },
      "tns_CustomerAccountValidationResponse": {
        "title": "tns_CustomerAccountValidationResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CustomerAccountValidationType"
              },
              {
                "description": "Success Indication tag (generated successfully)"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_UpdateAccountTransactionDetailRequest": {
        "title": "tns_UpdateAccountTransactionDetailRequest",
        "required": [
          "accountId",
          "option",
          "date",
          "journalId",
          "category",
          "detail"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Account Number"
          },
          "option": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_option"
              },
              {
                "description": "The desired action: â€œAâ€? if Add a new\r\n\t\t\t\t\t\t\tdescription for this transaction â€œUâ€? if Update the\r\n\t\t\t\t\t\t\tdescription\r\n\t\t\t\t\t\t\tfor this transaction â€œDâ€? if delete the transaction\r\n\t\t\t\t\t\t\tdescription"
              }
            ]
          },
          "date": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Transaction Date"
          },
          "journalId": {
            "type": "string",
            "description": "Journal to retrieve from (Only for GL Account)"
          },
          "category": {
            "type": "integer",
            "description": "Category number",
            "format": "int32"
          },
          "detail": {
            "type": "string",
            "description": "The new desired description for this\r\n\t\t\t\t\t\t\ttransaction"
          }
        },
        "description": ""
      },
      "tns_UpdateAccountTransactionDetailResponse": {
        "title": "tns_UpdateAccountTransactionDetailResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_UpdateAccountTransactionDetailType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": "Success"
      },
      "PromoCodesRequestType": {
        "title": "PromoCodesRequestType",
        "type": "object",
        "properties": {
          "accountId": {
            "$ref": "../../commonschemas/schemas.json#/AccountId"
          }
        },
        "description": ""
      },
      "PromoCodesResponseType": {
        "title": "PromoCodesResponseType",
        "type": "object",
        "properties": {
          "record": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromoCodesType"
            }
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "PromoCodesType": {
        "title": "PromoCodesType",
        "required": [
          "number",
          "promoCode",
          "englishDescription",
          "arabicDescription"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "promoCode": {
            "maxLength": 2,
            "type": "string"
          },
          "englishDescription": {
            "type": "string"
          },
          "arabicDescription": {
            "type": "string"
          }
        }
      },
      "TransactionCodesRequestType": {
        "title": "TransactionCodesRequestType",
        "type": "object",
        "properties": {
          "accountId": {
            "$ref": "../../commonschemas/schemas.json#/AccountId"
          }
        },
        "description": ""
      },
      "TransactionCodesResponseType": {
        "title": "TransactionCodesResponseType",
        "type": "object",
        "properties": {
          "record": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionCodesType"
            },
            "description": ""
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "TransactionCodesType": {
        "title": "TransactionCodesType",
        "required": [
          "number",
          "categoryCode",
          "englishDescription",
          "arabicDescription"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "categoryCode": {
            "maxLength": 2,
            "type": "string"
          },
          "englishDescription": {
            "type": "string"
          },
          "arabicDescription": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_msghdrType": {
        "title": "tns_msghdrType",
        "required": [
          "messageDateTime",
          "sessionId",
          "channelId",
          "functionId",
          "userId",
          "terminalId"
        ],
        "type": "object",
        "properties": {
          "messageDateTime": {
            "type": "string",
            "format": "date"
          },
          "sessionId": {
            "type": "string"
          },
          "channelId": {
            "type": "integer",
            "format": "int32"
          },
          "functionId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "terminalId": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_FeeRequest": {
        "title": "tns_FeeRequest",
        "required": [
          "accountId",
          "type"
        ],
        "type": "object",
        "properties": {
          "creditCardNumber": {
            "type": "string"
          },
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Account ID"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_type"
              },
              {
                "description": "Types supported CHEQUEBOOK FASTCASH FUNDTRAN\r\n\t\t\t\t\t\t\tISSUEATM REISSUEATM RESETPIN SARIE STATEMENT\r\n\t\t\t\t\t\t\tSWIFT TOKENSOFT\r\n\t\t\t\t\t\t\tTOKENHARD TRUSTEDPC GOLDDEL\r\n\t\t\t\t\t\t\tDEEBITCARDISSUANCENOREF=Debit Card-\r\n\t\t\t\t\t\t\tNew Issuance (No Reference Number)\r\n\t\t\t\t\t\t\tDEEBITCARDISSUANCEREF=Debit\r\n\t\t\t\t\t\t\tCard Issuance – Using Reference\r\n\t\t\t\t\t\t\tNumber\r\n\t\t\t\t\t\t\tSTATEMENTLAST1M=printing\r\n\t\t\t\t\t\t\tstatement of last one month\r\n\t\t\t\t\t\t\tSTATEMENTLAST3M=printing statement of\r\n\t\t\t\t\t\t\tlast three months\r\n\t\t\t\t\t\t\tSTATEMENTLAST6M=printing statement of last six\r\n\t\t\t\t\t\t\tmonths\r\n\t\t\t\t\t\t\tSTATEMENTUPTO6M=printing statement of last six months\r\n\t\t\t\t\t\t\tCHEQUEBOOKISSUE=cheque book issue"
              }
            ]
          },
          "amount": {
            "type": "number",
            "description": "Amount"
          },
          "countryName": {
            "type": "string",
            "description": "Incoming Country Name"
          },
          "other": {
            "type": "string",
            "description": "Other"
          },
          "currencyCode": {
            "pattern": "[A-Z]{3,3}",
            "type": "string",
            "description": "Incoming currency"
          },
          "fromDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string",
            "description": "From date"
          },
          "toDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string",
            "description": "To Date"
          },
          "toAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "To Account ID"
          },
          "fromCurrencyCode": {
            "pattern": "[A-Z]{3,3}",
            "type": "string",
            "description": "Incoming currency"
          },
          "fee": {
            "type": "number",
            "description": "Reply For Sarie"
          },
          "bankCharge": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_bankCharge"
              },
              {
                "description": "optional element bankCharge if channel need\r\n\t\t\t\t\t\t\tvalue date wise commission in the response.\r\n\t\t\t\t\t\t\twho will pay the\r\n\t\t\t\t\t\t\tcharges REM, SHA, BEN."
              }
            ]
          },
          "bankCode": {
            "type": "string",
            "description": "Bank Code"
          }
        },
        "description": ""
      },
      "tns_FeeResponse": {
        "title": "tns_FeeResponse",
        "type": "object",
        "properties": {
          "fee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_feeType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_ChargeFeeRequest": {
        "title": "tns_ChargeFeeRequest",
        "required": [
          "accountId",
          "type",
          "amount"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Account ID"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_type"
              },
              {
                "description": "Types supported CHEQUEBOOK FASTCASH FUNDTRAN\r\n\t\t\t\t\t\t\tISSUEATM REISSUEATM RESETPIN SARIE STATEMENT\r\n\t\t\t\t\t\t\tSWIFT TOKENSOFT\r\n\t\t\t\t\t\t\tTOKENHARD TRUSTEDPC\r\n\t\t\t\t\t\t\tDEEBITCARDISSUANCENOREF=Debit Card- New\r\n\t\t\t\t\t\t\tIssuance (No Reference Number)\r\n\t\t\t\t\t\t\tDEEBITCARDISSUANCEREF=Debit Card\r\n\t\t\t\t\t\t\tIssuance –\r\n\t\t\t\t\t\t\tUsing Reference Number\r\n\t\t\t\t\t\t\tSTATEMENTLAST1M=printing\r\n\t\t\t\t\t\t\tstatement of last\r\n\t\t\t\t\t\t\tone month STATEMENTLAST3M=printing statement\r\n\t\t\t\t\t\t\tof\r\n\t\t\t\t\t\t\tlast three months\r\n\t\t\t\t\t\t\tSTATEMENTLAST6M=printing statement of last\r\n\t\t\t\t\t\t\tsix\r\n\t\t\t\t\t\t\tmonths STATEMENTUPTO6M=printing\r\n\t\t\t\t\t\t\tstatement of last six months"
              }
            ]
          },
          "amount": {
            "type": "number",
            "description": "Amount"
          },
          "toCurrency": {
            "pattern": "[A-Z]{3,3}",
            "type": "string",
            "description": "Incoming currency"
          },
          "toAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "To Account ID"
          },
          "correction": {
            "type": "boolean"
          },
          "journal": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "promoCode": {
            "maxLength": 2,
            "minLength": 0,
            "type": "string"
          },
          "vatAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_ChargeFeeResponse": {
        "title": "tns_ChargeFeeResponse",
        "type": "object",
        "properties": {
          "journal": {
            "type": "string"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_feeType": {
        "title": "tns_feeType",
        "type": "object",
        "properties": {
          "today": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_todayType"
              }
            ]
          },
          "nextDay": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_nextDayType"
              }
            ]
          },
          "standard": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_standardType"
              }
            ]
          },
          "journalId": {
            "type": "string",
            "default": "0"
          },
          "fee": {
            "type": "number",
            "default": 0
          },
          "accountId": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string",
            "description": "fee bearing account id for the physical delivery\r\n\t\t\t\t\t\tof gold this will be given in the response only if the currency in\r\n\t\t\t\t\t\tthe request is ggm"
          },
          "feeWithoutVat": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "vat": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "taxRate": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_todayType": {
        "title": "tns_todayType",
        "required": [
          "fee",
          "valueDate",
          "status"
        ],
        "type": "object",
        "properties": {
          "fee": {
            "type": "number"
          },
          "valueDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string"
          },
          "status": {
            "maxLength": 1,
            "type": "string"
          },
          "commission": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "optional element commission under each value\r\n\t\t\t\t\t\tdate(today, nextDay, standard), if channel send bankCharge then\r\n\t\t\t\t\t\tcould get commision value."
              }
            ]
          },
          "feeWithoutVat": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "vatOnFee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "commissionWithoutVat": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "vatOnCommission": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "taxRate": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_nextDayType": {
        "title": "tns_nextDayType",
        "required": [
          "fee",
          "valueDate",
          "status"
        ],
        "type": "object",
        "properties": {
          "fee": {
            "type": "number"
          },
          "valueDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string"
          },
          "status": {
            "maxLength": 1,
            "type": "string"
          },
          "commission": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "optional element commission under each value\r\n\t\t\t\t\t\tdate(today, nextDay, standard), if channel send bankCharge then\r\n\t\t\t\t\t\tcould get commision value."
              }
            ]
          },
          "feeWithoutVat": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "vatOnFee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "commissionWithoutVat": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "vatOnCommission": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "taxRate": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_standardType": {
        "title": "tns_standardType",
        "required": [
          "fee",
          "valueDate",
          "status"
        ],
        "type": "object",
        "properties": {
          "fee": {
            "type": "number"
          },
          "valueDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string"
          },
          "status": {
            "maxLength": 1,
            "type": "string"
          },
          "commission": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "optional element commission under each value\r\n\t\t\t\t\t\tdate(today, nextDay, standard), if channel send bankCharge then\r\n\t\t\t\t\t\tcould get commision value."
              }
            ]
          },
          "feeWithoutVat": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "vatOnFee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "commissionWithoutVat": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "vatOnCommission": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "taxRate": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_UpdateAccountTransactionDetailType": {
        "title": "tns_UpdateAccountTransactionDetailType",
        "required": [
          "hasAccountDetailsUpdated"
        ],
        "type": "object",
        "properties": {
          "hasAccountDetailsUpdated": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_hasAccountDetailsUpdated"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CustomerAccountValidationRequestMessageHeaderType": {
        "title": "tns_CustomerAccountValidationRequestMessageHeaderType",
        "type": "object",
        "properties": {
          "msgDateTime": {
            "pattern": "((0[1-9])|([12][0-9])|(3[01]))/((0[1-9])|(1[012]))/((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))|()",
            "type": "string"
          },
          "sessionId": {
            "type": "integer",
            "format": "int32"
          },
          "channelId": {
            "type": "string"
          },
          "functionId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "reserved1": {
            "type": "string"
          },
          "terminalId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": ""
      },
      "tns_CustomerAccountValidationType": {
        "title": "tns_CustomerAccountValidationType",
        "required": [
          "isCustomerAccountValid"
        ],
        "type": "object",
        "properties": {
          "isCustomerAccountValid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_isCustomerAccountValid"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreateIntegratedAccountRequest": {
        "title": "tns_CreateIntegratedAccountRequest",
        "required": [
          "cif",
          "debitedAccount"
        ],
        "type": "object",
        "properties": {
          "cif": {
            "pattern": "([0-9]){14}|([0]){1}",
            "type": "string"
          },
          "debitedAccount": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "totalPoints": {
            "type": "integer",
            "format": "int32"
          },
          "branch": {
            "type": "integer",
            "format": "int32"
          },
          "fundId": {
            "type": "integer",
            "format": "int32"
          },
          "fundCurrency": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          },
          "baseAmount": {
            "type": "number"
          },
          "treasuryRate": {
            "type": "number"
          }
        },
        "description": ""
      },
      "tns_CreateIntegratedAccountResponse": {
        "title": "tns_CreateIntegratedAccountResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_IntegratedAccountType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_IntegratedAccountType": {
        "title": "tns_IntegratedAccountType",
        "type": "object",
        "properties": {
          "newInvAccountNumber": {
            "type": "string",
            "default": "0"
          },
          "fundId": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "tradeDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "valueDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "journalId": {
            "type": "string"
          },
          "newBalance": {
            "type": "number"
          },
          "refNumber": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "time": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "currency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_AccountStatusRequest": {
        "title": "tns_AccountStatusRequest",
        "required": [
          "accountId"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "type": "array",
            "items": {
              "maxLength": 24,
              "minLength": 14,
              "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
              "type": "string"
            },
            "description": ""
          },
          "statusOnly": {
            "type": "boolean"
          }
        },
        "description": ""
      },
      "tns_AccountStatusResponse": {
        "title": "tns_AccountStatusResponse",
        "type": "object",
        "properties": {
          "account": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_AccountStatusType"
            },
            "description": ""
          },
          "totalAccounts": {
            "type": "integer",
            "format": "int32"
          },
          "fault": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fault_FaultType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_AccountStatusType": {
        "title": "tns_AccountStatusType",
        "required": [
          "accountId",
          "status"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_Account"
              }
            ]
          },
          "status": {
            "maxLength": 4,
            "type": "string"
          },
          "statusDescription": {
            "maxLength": 60,
            "type": "string"
          },
          "stop": {
            "type": "string"
          },
          "stopDescription": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_Account": {
        "title": "tns_Account",
        "required": [
          "BBAN"
        ],
        "type": "object",
        "properties": {
          "BBAN": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreateAccountRequest": {
        "title": "tns_CreateAccountRequest",
        "required": [
          "partyDetails",
          "accountDetails"
        ],
        "type": "object",
        "properties": {
          "CCRHeader": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CCRHeaderType"
              }
            ]
          },
          "WFLog": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_WFLogType"
              }
            ]
          },
          "partyDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_partyDetailsType"
              }
            ]
          },
          "accountDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_accountDetailsInformationType"
              }
            ]
          },
          "isBranchChangeRequired": {
            "type": "boolean"
          }
        },
        "description": ""
      },
      "tns_CreateAccountResponse": {
        "title": "tns_CreateAccountResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_createAccountSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GetAccountsRequest": {
        "title": "tns_GetAccountsRequest",
        "required": [
          "inquiryMode"
        ],
        "type": "object",
        "properties": {
          "inquiryMode": {
            "type": "string"
          },
          "CCRHeader": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CCRHeaderType"
              }
            ]
          },
          "lastKeyValue": {
            "type": "string"
          },
          "firstKeyValue": {
            "type": "string"
          },
          "CIF": {
            "type": "string"
          },
          "ecnId": {
            "type": "string"
          },
          "partyId": {
            "type": "string"
          },
          "BaNCSAccountType": {
            "type": "string"
          },
          "accountSequence": {
            "type": "string"
          },
          "accountDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_getAccountDetailsType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GetAccountsResponse": {
        "title": "tns_GetAccountsResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetAccountsSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CCRHeaderType": {
        "title": "tns_CCRHeaderType",
        "type": "object",
        "properties": {
          "messageDate": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "channelId": {
            "type": "string"
          },
          "functionId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "terminalId": {
            "type": "string"
          },
          "reserved": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_WFLogType": {
        "title": "tns_WFLogType",
        "required": [
          "userId",
          "approverUserId",
          "terminalAddress",
          "sessionId",
          "approverResponse",
          "timestamp",
          "authenticationLevel"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "functionId": {
            "type": "string"
          },
          "approverUserId": {
            "type": "string"
          },
          "terminalAddress": {
            "type": "string"
          },
          "sessionId": {
            "type": "string"
          },
          "approverResponse": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "authenticationLevel": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_partyDetailsType": {
        "title": "tns_partyDetailsType",
        "required": [
          "CIF",
          "ecnId",
          "partyId"
        ],
        "type": "object",
        "properties": {
          "CIF": {
            "type": "string"
          },
          "ecnId": {
            "type": "string"
          },
          "partyId": {
            "type": "string"
          },
          "reserveCIF": {
            "type": "string"
          },
          "registrationStatusCode": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_accountDetailsInformationType": {
        "title": "tns_accountDetailsInformationType",
        "type": "object",
        "properties": {
          "accountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "branchCode": {
            "type": "string"
          },
          "agentCode": {
            "type": "string"
          },
          "openingDateGregorian": {
            "type": "string"
          },
          "openingDateHijri": {
            "type": "string"
          },
          "classCode": {
            "type": "string"
          },
          "typeCode": {
            "type": "string"
          },
          "subTypeCode": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "currencyCode": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "industryCode": {
            "type": "string"
          },
          "subIndustryCode": {
            "type": "string"
          },
          "divisionCode": {
            "type": "string"
          },
          "specialAccountIndicator": {
            "type": "string"
          },
          "SAMAGroupCode": {
            "type": "string"
          },
          "SAMACode": {
            "type": "string"
          },
          "jointAccountIndicator": {
            "type": "string"
          },
          "ATMcount": {
            "type": "string"
          },
          "internetBankingIndicator": {
            "type": "string"
          },
          "IVRchannelIndicator": {
            "type": "string"
          },
          "AOLChannelIndicator": {
            "type": "string"
          },
          "eCorpChannelIndicator": {
            "type": "string"
          },
          "reasonLocalSharesFlag": {
            "type": "string"
          },
          "reasonInternetBrokerageFlag": {
            "type": "string"
          },
          "reasonMutualFundsFlag": {
            "type": "string"
          },
          "reasonOtherFlag": {
            "type": "string"
          },
          "reasonOtherDescription": {
            "type": "string"
          },
          "expectedValues": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_expectedValuesType"
              }
            ]
          },
          "internetBankingEmail": {
            "type": "string"
          },
          "wergildAmount": {
            "type": "string"
          },
          "depositCardLimit": {
            "type": "string"
          },
          "notifyRegistrationStatusCode": {
            "type": "string"
          },
          "countrySanctionsFlag": {
            "type": "string"
          },
          "prefrredCalendarCode": {
            "type": "string"
          },
          "preferredLanguageCode": {
            "type": "string"
          },
          "mailOptionCode": {
            "type": "string"
          },
          "noticeIndicator": {
            "type": "string"
          },
          "adviceIndicator": {
            "type": "string"
          },
          "statementDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_statementDetailsType"
              }
            ]
          },
          "waivedFees": {
            "type": "string"
          },
          "mailToCIF": {
            "type": "string"
          },
          "interestCategoryCode": {
            "type": "string"
          },
          "interestTypeCode": {
            "type": "string"
          },
          "interestProceedIndicator": {
            "type": "string"
          },
          "interestAccountNumber": {
            "type": "string"
          },
          "creditRate": {
            "type": "string"
          },
          "facilityAccountNumber": {
            "type": "string"
          },
          "vostroAccountId": {
            "type": "string"
          },
          "vostroStatementCode": {
            "type": "string"
          },
          "delinquency": {
            "type": "string"
          },
          "badDebtIndicator": {
            "type": "string"
          },
          "ATMcardIssuanceCode": {
            "type": "string"
          },
          "sweepIndicator": {
            "type": "string"
          },
          "visaRateIndicator": {
            "type": "string"
          },
          "feeSuppressCode": {
            "type": "string"
          },
          "emergencyFundFacility": {
            "type": "string"
          },
          "payrollSegment": {
            "type": "string"
          },
          "relationDepositAccount": {
            "type": "string"
          },
          "initialDeposit": {
            "type": "string"
          },
          "depositor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_nameType"
              }
            ]
          },
          "localBeneficiary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_nameType"
              }
            ]
          },
          "internationalBeneficiary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_nameType"
              }
            ]
          },
          "executionIndicator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_executionIndicatorType"
              }
            ]
          },
          "expectedMonthlyValueCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_expectedMonthlyValueCodeType"
              }
            ]
          },
          "debtorCreditorCountryCodes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_debtorCreditorCountryCodesType"
              }
            ]
          },
          "interTransferReason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_interTransferReasonType"
              }
            ]
          },
          "averageMonthlyBalanceCode": {
            "type": "string"
          },
          "supplier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_addressLineType"
              }
            ]
          },
          "customer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_addressLineType"
              }
            ]
          },
          "geographicalLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_geographicalLocationType"
              }
            ]
          },
          "payIndicator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_payIndicatorType"
              }
            ]
          },
          "corpEstAuthOwnBlInd": {
            "type": "string"
          },
          "openingReasonCode": {
            "type": "string"
          },
          "openingReasonOther": {
            "type": "string"
          },
          "statementElectornicCopyFlag": {
            "type": "string"
          },
          "otherPartyBenefitAccountFlag": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_expectedValuesType": {
        "title": "tns_expectedValuesType",
        "type": "object",
        "properties": {
          "averageInvestmentBalanceCode": {
            "type": "string"
          },
          "numberOfTransactionsPerMonth": {
            "type": "string"
          },
          "totalTransactionValuePerMonth": {
            "type": "string"
          },
          "branchChannelIndicator": {
            "type": "string"
          },
          "IVRchannelIndicator": {
            "type": "string"
          },
          "mobileChannelIndicator": {
            "type": "string"
          },
          "internetBankingChannelIndicator": {
            "type": "string"
          },
          "ATMchannelIndicator": {
            "type": "string"
          },
          "phoneFaxChannelIndicator": {
            "type": "string"
          },
          "corporateBankCenterIndicator": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_statementDetailsType": {
        "title": "tns_statementDetailsType",
        "type": "object",
        "properties": {
          "frequency": {
            "type": "string"
          },
          "copies": {
            "type": "string"
          },
          "cycle": {
            "type": "string"
          },
          "day": {
            "type": "string"
          },
          "specialPrintIndicator": {
            "type": "string"
          },
          "anotherStatementFrequency": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_depositorType": {
        "title": "tns_depositorType",
        "required": [
          "firstName",
          "middleName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_localBeneficiaryType": {
        "title": "tns_localBeneficiaryType",
        "required": [
          "firstName",
          "NewElement"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "NewElement": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_nameType": {
        "title": "tns_nameType",
        "required": [
          "firstName",
          "lastName"
        ],
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_executionIndicatorType": {
        "title": "tns_executionIndicatorType",
        "type": "object",
        "properties": {
          "personalCheque": {
            "type": "string"
          },
          "soldCheque": {
            "type": "string"
          },
          "bankCheque": {
            "type": "string"
          },
          "internalTransfer": {
            "type": "string"
          },
          "localTransfer": {
            "type": "string"
          },
          "internationalTransfer": {
            "type": "string"
          },
          "other": {
            "type": "string"
          },
          "otherDescription": {
            "type": "string"
          },
          "loanFacility": {
            "type": "string"
          },
          "treasuryFacility": {
            "type": "string"
          },
          "creditCardsFacility": {
            "type": "string"
          },
          "noneDirectFacility": {
            "type": "string"
          },
          "guranteeLetterFacility": {
            "type": "string"
          },
          "creditLetterFacility": {
            "type": "string"
          },
          "collectionsFacility": {
            "type": "string"
          },
          "noneIndirectFacility": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_expectedMonthlyValueCodeType": {
        "title": "tns_expectedMonthlyValueCodeType",
        "type": "object",
        "properties": {
          "cashDeposit": {
            "type": "string"
          },
          "cashWithdrawal": {
            "type": "string"
          },
          "chequeDeposit": {
            "type": "string"
          },
          "chequeWithdrawal": {
            "type": "string"
          },
          "inTransaction": {
            "type": "string"
          },
          "outTransaction": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_debtorCreditorCountryCodesType": {
        "title": "tns_debtorCreditorCountryCodesType",
        "type": "object",
        "properties": {
          "code1": {
            "type": "string"
          },
          "code2": {
            "type": "string"
          },
          "code3": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_interTransferReasonType": {
        "title": "tns_interTransferReasonType",
        "type": "object",
        "properties": {
          "reason1": {
            "type": "string"
          },
          "reason2": {
            "type": "string"
          },
          "reason3": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_addressLineType": {
        "title": "tns_addressLineType",
        "required": [
          "address1"
        ],
        "type": "object",
        "properties": {
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "address3": {
            "type": "string"
          },
          "address4": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_addressType": {
        "title": "tns_addressType",
        "type": "object",
        "description": ""
      },
      "tns_geographicalLocationType": {
        "title": "tns_geographicalLocationType",
        "required": [
          "location1"
        ],
        "type": "object",
        "properties": {
          "location1": {
            "type": "string"
          },
          "location2": {
            "type": "string"
          },
          "location3": {
            "type": "string"
          },
          "location4": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_payIndicatorType": {
        "title": "tns_payIndicatorType",
        "type": "object",
        "properties": {
          "cash": {
            "type": "string"
          },
          "cheque": {
            "type": "string"
          },
          "creditCard": {
            "type": "string"
          },
          "internalTransfers": {
            "type": "string"
          },
          "localTransfers": {
            "type": "string"
          },
          "interTransfers": {
            "type": "string"
          },
          "other": {
            "type": "string"
          },
          "otherDescription": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_createAccountSuccessType": {
        "title": "tns_createAccountSuccessType",
        "required": [
          "accountId",
          "accountNumber"
        ],
        "type": "object",
        "properties": {
          "CCRHeader": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CCRHeaderType"
              }
            ]
          },
          "accountId": {
            "type": "string"
          },
          "accountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_getAccountDetailsType": {
        "title": "tns_getAccountDetailsType",
        "type": "object",
        "properties": {
          "ATMindicator": {
            "type": "string"
          },
          "classCode": {
            "type": "string"
          },
          "categoryCode": {
            "type": "string"
          },
          "internetBankingIndicator": {
            "type": "string"
          },
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "AccountIsIndicator": {
            "type": "string"
          },
          "isStatusIndicator": {
            "type": "string"
          },
          "IVRindicator": {
            "type": "string"
          },
          "jointCode": {
            "type": "string"
          },
          "lsCreateDeplIndicator": {
            "type": "string"
          },
          "lsIndicator": {
            "type": "string"
          },
          "lsStatusIndicator": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          },
          "accountOpenDateGregorian": {
            "type": "string"
          },
          "accountOpenDateHijri": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "tfCreateDeplIndicator": {
            "type": "string"
          },
          "tfIndicator": {
            "type": "string"
          },
          "tfStatusIndicator": {
            "type": "string"
          },
          "trCreateDeplIndicator": {
            "type": "string"
          },
          "trIndicator": {
            "type": "string"
          },
          "trStatusIndicator": {
            "type": "string"
          },
          "typeCode": {
            "type": "string"
          },
          "subTypeCode": {
            "type": "string"
          },
          "channelIndicator": {
            "type": "string"
          },
          "branchCode": {
            "type": "string"
          },
          "divisionCode": {
            "type": "string"
          },
          "currencyCode": {
            "type": "string"
          },
          "maturityDateHijri": {
            "type": "string"
          },
          "maturityDateGregorian": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_GetAccountsSuccessType": {
        "title": "tns_GetAccountsSuccessType",
        "required": [
          "accountId"
        ],
        "type": "object",
        "properties": {
          "CCRHeader": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CCRHeaderType"
              }
            ]
          },
          "ACCTDTL": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ACCTDTLType"
              }
            ]
          },
          "ACCT": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ACCTType"
              }
            ]
          },
          "ACCTSTATUSDETAILS": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ACCTSTATUSDETAILSType"
              }
            ]
          },
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_ACCTSTATUSDETAILSType": {
        "title": "tns_ACCTSTATUSDETAILSType",
        "type": "object",
        "properties": {
          "FreezeReasonCd": {
            "type": "string"
          },
          "BlockReasonCd": {
            "type": "string"
          },
          "LetterNumber": {
            "type": "string"
          },
          "LetterDate": {
            "type": "string"
          },
          "StopDate": {
            "type": "string"
          },
          "Notes": {
            "type": "string"
          },
          "CrtDate": {
            "type": "string"
          },
          "CrtUsr": {
            "type": "string"
          },
          "CrtUsrNm": {
            "type": "string"
          },
          "CrtApproverUsr": {
            "type": "string"
          },
          "CrtApproverUsrNm": {
            "type": "string"
          },
          "LastMaintDate": {
            "type": "string"
          },
          "LastMaintUsr": {
            "type": "string"
          },
          "LastMaintUsrNm": {
            "type": "string"
          },
          "LastMaintApproverUsr": {
            "type": "string"
          },
          "LastMaintApproverUsrNm": {
            "type": "string"
          },
          "SsuFreezeReasonCd": {
            "type": "string"
          },
          "LegalFreezeReasonCd": {
            "type": "string"
          },
          "SsuLetterNumber": {
            "type": "string"
          },
          "SsuLetterDate": {
            "type": "string"
          },
          "SsuStopDate": {
            "type": "string"
          },
          "SsuNotes": {
            "type": "string"
          },
          "LegalLetterNumber": {
            "type": "string"
          },
          "LegalLetterDate": {
            "type": "string"
          },
          "LegalStopDate": {
            "type": "string"
          },
          "LegalNotes": {
            "type": "string"
          },
          "SamaEnfFrzStatusCd": {
            "type": "string"
          },
          "SamaSsuFrzStatusCd": {
            "type": "string"
          },
          "SamaLegalFrzStatusCd": {
            "type": "string"
          },
          "EnfFreezeReasonCd": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_ACCTDTLType": {
        "title": "tns_ACCTDTLType",
        "type": "object",
        "properties": {
          "AcctId": {
            "type": "string"
          },
          "AdviceInd": {
            "type": "string"
          },
          "MailOptCd": {
            "type": "string"
          },
          "NoticeInd": {
            "type": "string"
          },
          "OpenReasonCd": {
            "type": "string"
          },
          "PrfrdClndrCd": {
            "type": "string"
          },
          "PrfrdLangCd": {
            "type": "string"
          },
          "InterestCatCd": {
            "type": "string"
          },
          "InterestTypeCd": {
            "type": "string"
          },
          "InterestProceedInd": {
            "type": "string"
          },
          "CreditRate": {
            "type": "string"
          },
          "Delinquency": {
            "type": "string"
          },
          "InitialDeposit": {
            "type": "string"
          },
          "MainDepositorName1": {
            "type": "string"
          },
          "MainDepositorName2": {
            "type": "string"
          },
          "MainDepositorName3": {
            "type": "string"
          },
          "MainBenefNameLocal1": {
            "type": "string"
          },
          "MainBenefNameLocal2": {
            "type": "string"
          },
          "MainBenefNameLocal3": {
            "type": "string"
          },
          "MainBenefNameInter1": {
            "type": "string"
          },
          "MainBenefNameInter2": {
            "type": "string"
          },
          "MainBenefNameInter3": {
            "type": "string"
          },
          "PersChqExecInd": {
            "type": "string"
          },
          "SoldChqExecInd": {
            "type": "string"
          },
          "BankChqExecInd": {
            "type": "string"
          },
          "InternalTransferExecInd": {
            "type": "string"
          },
          "LocalTransferExecInd": {
            "type": "string"
          },
          "IntlTransferExecInd": {
            "type": "string"
          },
          "OtherExecInd": {
            "type": "string"
          },
          "OtherExecDesc": {
            "type": "string"
          },
          "LoansFacilityInd": {
            "type": "string"
          },
          "TreasuryFacilityInd": {
            "type": "string"
          },
          "CreditCardsFacilityInd": {
            "type": "string"
          },
          "NoneDirectFacilityInd": {
            "type": "string"
          },
          "GuaranteeLtrFacilityInd": {
            "type": "string"
          },
          "CreditLtrFacilityInd": {
            "type": "string"
          },
          "CollectionsFacilityInd": {
            "type": "string"
          },
          "NoneInDirectFacilityInd": {
            "type": "string"
          },
          "ExpMonCashDepositCd": {
            "type": "string"
          },
          "ExpMonCashWithdrawCd": {
            "type": "string"
          },
          "ExpMonChqDepositCd": {
            "type": "string"
          },
          "ExpMonChqWithdrawCd": {
            "type": "string"
          },
          "ExpMonInTransCd": {
            "type": "string"
          },
          "ExpMonOutTransCd": {
            "type": "string"
          },
          "DbCrCountry1Cd": {
            "type": "string"
          },
          "DbCrCountry2Cd": {
            "type": "string"
          },
          "DbCrCountry3Cd": {
            "type": "string"
          },
          "InterTransfersReason1": {
            "type": "string"
          },
          "InterTransfersReason2": {
            "type": "string"
          },
          "InterTransfersReason3": {
            "type": "string"
          },
          "CashPayInd": {
            "type": "string"
          },
          "ChequesPayInd": {
            "type": "string"
          },
          "CreditCardPayInd": {
            "type": "string"
          },
          "InternalTransfersPayInd": {
            "type": "string"
          },
          "LocalTransfersPayInd": {
            "type": "string"
          },
          "InterTransfersPayInd": {
            "type": "string"
          },
          "OtherPayInd": {
            "type": "string"
          },
          "CrtUsr": {
            "type": "string"
          },
          "CrtDate": {
            "type": "string"
          },
          "StatementCopies": {
            "type": "string"
          },
          "StatementCycle": {
            "type": "string"
          },
          "StatementDay": {
            "type": "string"
          },
          "SpecialPrintStmtInd": {
            "type": "string"
          },
          "AnotherStatementFreq": {
            "type": "string"
          },
          "StatementFreq": {
            "type": "string"
          },
          "WaivedFees": {
            "type": "string"
          },
          "MailToCIF": {
            "type": "string"
          },
          "InterestAcctNo": {
            "type": "string"
          },
          "GLClassCd": {
            "type": "string"
          },
          "FacilityAcctNo": {
            "type": "string"
          },
          "VostroAcctId": {
            "type": "string"
          },
          "VostroStmtCd": {
            "type": "string"
          },
          "AtmCardIssuanceCd": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_ACCTType": {
        "title": "tns_ACCTType",
        "type": "object",
        "properties": {
          "AcctId": {
            "type": "string"
          },
          "AcctIvrInd": {
            "type": "string"
          },
          "AcctJointCd": {
            "type": "string"
          },
          "AcctNo": {
            "type": "string"
          },
          "AcctOpenDate": {
            "type": "string"
          },
          "AcctStatusCd": {
            "type": "string"
          },
          "AcctTypeCd": {
            "type": "string"
          },
          "AcctSubTypeCd": {
            "type": "string"
          },
          "CreateBranchCd": {
            "type": "string"
          },
          "CreateDivisionCd": {
            "type": "string"
          },
          "AgentCd": {
            "type": "string"
          },
          "AgentNm": {
            "type": "string"
          },
          "CurrCd": {
            "type": "string"
          },
          "IbChannelInd": {
            "type": "string"
          },
          "IndustryCd": {
            "type": "string"
          },
          "IvrChannelInd": {
            "type": "string"
          },
          "JointAcctInd": {
            "type": "string"
          },
          "AOLChannelInd": {
            "type": "string"
          },
          "ECorpChannelInd": {
            "type": "string"
          },
          "SAMACode": {
            "type": "string"
          },
          "SAMAGroupCd": {
            "type": "string"
          },
          "SpecialAcctInd": {
            "type": "string"
          },
          "SubIndustryCd": {
            "type": "string"
          },
          "CrtUsr": {
            "type": "string"
          },
          "CrtUsrNm": {
            "type": "string"
          },
          "CrtDate": {
            "type": "string"
          },
          "OpnResLocalSharesFlg": {
            "type": "string"
          },
          "OpnResIntBrokerageFlg": {
            "type": "string"
          },
          "OpnResMutualFundsFlg": {
            "type": "string"
          },
          "OpnResOtherFlg": {
            "type": "string"
          },
          "ExpPhoneFaxChannelInd": {
            "type": "string"
          },
          "ExpCorpBankCenterInd": {
            "type": "string"
          },
          "IbChannelEmail": {
            "type": "string"
          },
          "AcctDesc": {
            "type": "string"
          },
          "NoOfStops": {
            "type": "string"
          },
          "SubStatusReason": {
            "type": "string"
          },
          "DepositCardLimit": {
            "type": "string"
          },
          "StatusChangeDate": {
            "type": "string"
          },
          "UnfreezeDate": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_InquireSignatureRequestType": {
        "title": "tns_InquireSignatureRequestType",
        "required": [
          "operationMode",
          "accountNumber"
        ],
        "type": "object",
        "properties": {
          "ccrHeader": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CCRHeaderType"
              }
            ]
          },
          "operationMode": {
            "type": "string"
          },
          "lastKeyValue": {
            "type": "string"
          },
          "firstKeyValue": {
            "type": "string"
          },
          "noOfRecords": {
            "type": "string",
            "description": "Number of records per page"
          },
          "accountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "accountDescription": {
            "type": "string"
          },
          "accountSubTypeCode": {
            "type": "string"
          },
          "currencyCode": {
            "type": "string"
          },
          "openingDate": {
            "pattern": "((0[1-9])|([12][0-9])|(3[01]))/((0[1-9])|(1[012]))/((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))|()",
            "type": "string"
          },
          "openingDateHijri": {
            "type": "string"
          },
          "isConversionRequired": {
            "type": "boolean",
            "description": "default value is false"
          }
        },
        "description": ""
      },
      "tns_InquireSignatureResponse": {
        "title": "tns_InquireSignatureResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "oneOf": [
                  {
                    "nullable": true
                  },
                  {
                    "$ref": "#/components/schemas/tns_InquireSignatureSuccessType"
                  }
                ]
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_InquireSignatureSuccessType": {
        "title": "tns_InquireSignatureSuccessType",
        "type": "object",
        "properties": {
          "ccrHeader": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CCRHeaderType"
              }
            ]
          },
          "bancsMessage": {
            "type": "string",
            "nullable": true
          },
          "accountId": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_Account"
              }
            ]
          },
          "accountDescription": {
            "type": "string",
            "nullable": true
          },
          "accountSubTypeCode": {
            "type": "string",
            "nullable": true
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          },
          "openingDate": {
            "pattern": "((0[1-9])|([12][0-9])|(3[01]))/((0[1-9])|(1[012]))/((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))|()",
            "type": "string",
            "nullable": true
          },
          "partyInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_PartySignatureType"
              }
            ]
          },
          "signatoryInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_SignatureSignedType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_PartySignatureType": {
        "title": "tns_PartySignatureType",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "party id",
            "nullable": true
          },
          "ecnId": {
            "maxLength": 8,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "kycStatusCode": {
            "type": "string",
            "description": "know your customer status code",
            "nullable": true
          },
          "kycMessage": {
            "type": "string",
            "description": "know your customer message",
            "nullable": true
          }
        },
        "description": ""
      },
      "tns_SignatureSignedType": {
        "title": "tns_SignatureSignedType",
        "type": "object",
        "properties": {
          "signFlag": {
            "type": "string",
            "description": "party signature flag",
            "nullable": true
          },
          "accountSignatureId": {
            "type": "string",
            "nullable": true
          },
          "sequenceNumber": {
            "type": "string"
          },
          "accountDescription": {
            "type": "string",
            "nullable": true
          },
          "typeIndicator": {
            "type": "string",
            "description": "signatory type ind",
            "nullable": true
          },
          "titleCode": {
            "type": "string",
            "description": "signatory title code",
            "nullable": true
          },
          "name": {
            "allOf": [
              {
                "oneOf": [
                  {
                    "nullable": true
                  },
                  {
                    "$ref": "#/components/schemas/tns_nameType"
                  }
                ]
              }
            ]
          },
          "familyName": {
            "type": "string",
            "description": "signatory family name",
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "description": "signatory full name",
            "nullable": true
          },
          "partyId": {
            "type": "string",
            "description": "signatory party id",
            "nullable": true
          },
          "ecnId": {
            "maxLength": 8,
            "minLength": 0,
            "type": "string",
            "description": "signatory ecnid",
            "nullable": true
          },
          "languageCode": {
            "type": "string",
            "description": "signatory language code",
            "nullable": true
          },
          "idTypeCode": {
            "type": "string",
            "description": "signatory id type code",
            "nullable": true
          },
          "idNumber": {
            "type": "string",
            "description": "signatory id number",
            "nullable": true
          },
          "accessLevel": {
            "type": "string",
            "nullable": true
          },
          "limit": {
            "type": "string",
            "description": "signature limit",
            "nullable": true
          },
          "interBranchIndicator": {
            "type": "string",
            "nullable": true
          },
          "signature": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "type": "string",
            "nullable": true
          },
          "instruction": {
            "type": "string",
            "description": "signatory terms",
            "nullable": true
          },
          "creationDetails": {
            "allOf": [
              {
                "oneOf": [
                  {
                    "nullable": true
                  },
                  {
                    "$ref": "#/components/schemas/tns_CreationDetailsType"
                  }
                ]
              }
            ]
          },
          "maintenanceDetails": {
            "allOf": [
              {
                "oneOf": [
                  {
                    "nullable": true
                  },
                  {
                    "$ref": "#/components/schemas/tns_MaintenanceDetailsType"
                  }
                ]
              },
              {
                "description": "last maintin"
              }
            ]
          },
          "idIssuePlace": {
            "type": "string",
            "nullable": true
          },
          "nationality": {
            "type": "string",
            "nullable": true
          },
          "idExpiryDate": {
            "pattern": "((0[1-9])|([12][0-9])|(3[01]))/((0[1-9])|(1[012]))/((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))|()",
            "type": "string",
            "nullable": true
          },
          "authAccountOwnerRelCode": {
            "type": "string",
            "description": "Authorized relation with the account owner",
            "nullable": true
          },
          "relationStatus": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "allOf": [
              {
                "oneOf": [
                  {
                    "nullable": true
                  },
                  {
                    "$ref": "#/components/schemas/tns_AddressInformationType"
                  }
                ]
              }
            ]
          },
          "additionalNumber": {
            "type": "string",
            "description": "signatory address additional number",
            "nullable": true
          },
          "basicNumber": {
            "type": "string",
            "description": "signatory address basicnumber",
            "nullable": true
          },
          "internalMail": {
            "type": "string",
            "nullable": true
          },
          "unitNumber": {
            "type": "string",
            "description": "signatory address unit number",
            "nullable": true
          },
          "cif": {
            "pattern": "([0-9]){14}|([0]){1}|()",
            "type": "string",
            "nullable": true
          },
          "operationIndicator": {
            "type": "string",
            "nullable": true
          },
          "expiryDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "nullable": true
          },
          "poaTerms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_POATermsType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_CreationDetailsType": {
        "title": "tns_CreationDetailsType",
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "description": "creation user who entered the signature"
          },
          "branch": {
            "type": "string",
            "description": "creation branch where the signature is entered"
          },
          "englishName": {
            "type": "string",
            "description": "creation user English name"
          },
          "arabicName": {
            "type": "string",
            "description": "creation user Arabic name"
          },
          "date": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "creation date of entering the signature"
          }
        },
        "description": ""
      },
      "tns_MaintenanceDetailsType": {
        "title": "tns_MaintenanceDetailsType",
        "type": "object",
        "properties": {
          "user": {
            "type": "string",
            "description": "last maintian creation user who entered the\r\n\t\t\t\t\t\tsignature"
          },
          "branch": {
            "type": "string",
            "description": "last maintain creation branch where the\r\n\t\t\t\t\t\tsignature is enter"
          },
          "englishName": {
            "type": "string",
            "description": "last maintain creation user English name"
          },
          "arabicName": {
            "type": "string",
            "description": "last maintian creation user Arabic name"
          },
          "date": {
            "type": "string",
            "description": "last maint creation date of entering the\r\n\t\t\t\t\t\tsignature",
            "nullable": true
          }
        },
        "description": ""
      },
      "tns_AddressInformationType": {
        "title": "tns_AddressInformationType",
        "required": [
          "postalCode"
        ],
        "type": "object",
        "properties": {
          "addressId": {
            "type": "string"
          },
          "addressIndicator": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "district": {
            "type": "string"
          },
          "poBox": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "street": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreateSignatureRequestType": {
        "title": "tns_CreateSignatureRequestType",
        "required": [
          "operationMode",
          "accountNumber",
          "accountDescription",
          "accountTypeCode",
          "currencyCode",
          "openingDate",
          "signatoryInformation"
        ],
        "type": "object",
        "properties": {
          "ccrHeader": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CCRHeaderType"
              }
            ]
          },
          "operationMode": {
            "type": "string"
          },
          "lastKeyValue": {
            "type": "string",
            "nullable": true
          },
          "firstKeyValue": {
            "type": "string",
            "nullable": true
          },
          "noOfRecords": {
            "type": "string",
            "description": "number of records per page",
            "nullable": true
          },
          "accountNumber": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_Account"
              }
            ]
          },
          "accountDescription": {
            "type": "string"
          },
          "accountTypeCode": {
            "type": "string"
          },
          "currencyCode": {
            "type": "string"
          },
          "openingDate": {
            "pattern": "((0[1-9])|([12][0-9])|(3[01]))/((0[1-9])|(1[012]))/((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))|()",
            "type": "string"
          },
          "openingDateHijri": {
            "type": "string",
            "nullable": true
          },
          "signatoryInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_SignatureSignedCreateType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_SignatureSignedCreateType": {
        "title": "tns_SignatureSignedCreateType",
        "required": [
          "signFlag",
          "accountSignatureId",
          "sequenceNumber",
          "accountDescription",
          "typeIndicator",
          "titleCode",
          "name",
          "familyName",
          "fullName",
          "languageCode",
          "idTypeCode",
          "idNumber",
          "accessLevel",
          "limit",
          "interBranchIndicator",
          "signature",
          "statusCode",
          "idIssueDate",
          "idIssuePlace",
          "nationality",
          "idExpiryDate",
          "relationStatus",
          "phoneNumber",
          "mobileNumber",
          "address"
        ],
        "type": "object",
        "properties": {
          "signFlag": {
            "type": "string",
            "description": "party signature flag"
          },
          "accountSignatureId": {
            "type": "string"
          },
          "sequenceNumber": {
            "type": "string"
          },
          "accountDescription": {
            "type": "string"
          },
          "typeIndicator": {
            "type": "string"
          },
          "titleCode": {
            "type": "string"
          },
          "name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_nameType"
              }
            ]
          },
          "familyName": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "partyId": {
            "type": "string",
            "nullable": true
          },
          "ecnId": {
            "maxLength": 8,
            "minLength": 0,
            "type": "string"
          },
          "languageCode": {
            "type": "string"
          },
          "idTypeCode": {
            "type": "string"
          },
          "idNumber": {
            "type": "string"
          },
          "expiryDate": {
            "pattern": "((0[1-9])|([12][0-9])|(3[01]))/((0[1-9])|(1[012]))/((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))|()",
            "type": "string",
            "nullable": true
          },
          "expiryDateHijri": {
            "type": "string",
            "nullable": true
          },
          "accessLevel": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "interBranchIndicator": {
            "type": "string"
          },
          "signature": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "instruction": {
            "type": "string",
            "description": "signatoury terms",
            "nullable": true
          },
          "category": {
            "type": "string",
            "nullable": true
          },
          "idIssueDate": {
            "pattern": "((0[1-9])|([12][0-9])|(3[01]))/((0[1-9])|(1[012]))/((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))|()",
            "type": "string"
          },
          "idIssuePlace": {
            "type": "string"
          },
          "nationality": {
            "type": "string"
          },
          "idExpiryDate": {
            "pattern": "((0[1-9])|([12][0-9])|(3[01]))/((0[1-9])|(1[012]))/((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))|()",
            "type": "string"
          },
          "relationStatus": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "mobileNumber": {
            "type": "string"
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AddressInformationType"
              }
            ]
          },
          "cif": {
            "pattern": "([0-9]){14}|([0]){1}|()",
            "type": "string"
          },
          "poaTerms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_POATermsType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_CreateSignatureResponseType": {
        "title": "tns_CreateSignatureResponseType",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreateSignatureSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreateSignatureSuccessType": {
        "title": "tns_CreateSignatureSuccessType",
        "type": "object",
        "properties": {
          "ccrHeader": {
            "allOf": [
              {
                "oneOf": [
                  {
                    "nullable": true
                  },
                  {
                    "$ref": "#/components/schemas/tns_CCRHeaderType"
                  }
                ]
              }
            ]
          },
          "bancsMessage": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_ConvertSignatureRequestRequestType": {
        "title": "tns_ConvertSignatureRequestRequestType",
        "required": [
          "accountDetails",
          "signatureDetails"
        ],
        "type": "object",
        "properties": {
          "ccrHeader": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CCRHeaderType"
              }
            ]
          },
          "bancsMessage": {
            "type": "string"
          },
          "accountDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_convertSignatureaccountDetailsType"
              }
            ]
          },
          "signatureDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_SignatureSignedType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_ConvertSignatureResponse": {
        "title": "tns_ConvertSignatureResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "oneOf": [
                  {
                    "nullable": true
                  },
                  {
                    "$ref": "#/components/schemas/tns_ConvertSignatureSuccessType"
                  }
                ]
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_ConvertSignatureSuccessType": {
        "title": "tns_ConvertSignatureSuccessType",
        "type": "object",
        "properties": {
          "accountDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_convertSignatureaccountDetailsType"
              }
            ]
          },
          "signatureDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_SignatureConversionsInformationType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_SignatureConversionsInformationType": {
        "title": "tns_SignatureConversionsInformationType",
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string"
          },
          "accessLevel": {
            "type": "string"
          },
          "accountSignatureId": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "signFlg": {
            "type": "string",
            "description": "party signature flag"
          },
          "sequenceNumber": {
            "type": "string"
          },
          "accountDescription": {
            "type": "string"
          },
          "creation": {
            "$ref": "#/components/schemas/tns_CreationDetailsType"
          },
          "expiryDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "interBranchInd": {
            "type": "string"
          },
          "lastMaintain": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_MaintenanceDetailsType"
              }
            ]
          },
          "instruction": {
            "type": "string",
            "description": "signatoury terms"
          },
          "ecnId": {
            "maxLength": 8,
            "minLength": 8,
            "type": "string"
          },
          "idExpiryDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "idType": {
            "type": "string"
          },
          "idIssuePlace": {
            "type": "string"
          },
          "idNumber": {
            "type": "string"
          },
          "nationality": {
            "type": "string"
          },
          "typeIndicator": {
            "type": "string"
          },
          "signature": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "address": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AddressInformationType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_convertSignatureaccountDetailsType": {
        "title": "tns_convertSignatureaccountDetailsType",
        "required": [
          "accountNumber"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "accountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "subTypeCode": {
            "type": "string"
          },
          "currencyCode": {
            "type": "string"
          },
          "openingDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_accountEnquiryInputType": {
        "title": "tns_accountEnquiryInputType",
        "required": [
          "accountNumber"
        ],
        "type": "object",
        "properties": {
          "accountNumber": {
            "maxLength": 17,
            "pattern": "([0-9]{1,17})",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_accountEnquiryOutputType": {
        "title": "tns_accountEnquiryOutputType",
        "type": "object",
        "properties": {
          "accountEnquiry": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_accountEnquirySuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_accountEnquirySuccessType": {
        "title": "tns_accountEnquirySuccessType",
        "type": "object",
        "properties": {
          "accountNumber": {
            "maxLength": 17,
            "pattern": "([0-9]{1,17})",
            "type": "string"
          },
          "customerNumber": {
            "type": "number",
            "description": "Customer Number for given Account Number"
          },
          "accountSystem": {
            "type": "string",
            "description": "Account System for given Account Number\r\n\t\t\t\t\t\tGEN,LON,DEP,CIF\r\n\t\t\t\t\t\t(If the input is a CIF no. then Account \"CIF\")\r\n\t\t\t\t\t\t(If\r\n\t\t\t\t\t\tthe input is a Loan no. then Account \"LON\")\r\n\t\t\t\t\t\t(If the input is a\r\n\t\t\t\t\t\tDeposit no. then Account \"DEP\")\r\n\t\t\t\t\t\t(If the input is a General no. then\r\n\t\t\t\t\t\tAccount \"GEN\")"
          },
          "bancsIndicator": {
            "type": "string",
            "description": "BaNCS System if N then it is BaNCSv9\r\n\t\t\t\t\t\tif F then it\r\n\t\t\t\t\t\tis BaNCSv14"
          },
          "accountType": {
            "maxLength": 4,
            "type": "string",
            "description": "Account Type for given Account Number\r\n\t\t\t\t\t\tCIF = 00\r\n\t\t\t\t\t\tGEN= 90\r\n\t\t\t\t\t\tLON= 08\r\n\t\t\t\t\t\tDeposit Current=00\r\n\t\t\t\t\t\tDeposit FX=01\r\n\t\t\t\t\t\tDeposit Saving=12\r\n\t\t\t\t\t\tDeposit Overdraft=04\r\n\t\t\t\t\t\tDeposit sub GL=89"
          }
        },
        "description": ""
      },
      "tns_AccountStopResponse": {
        "title": "tns_AccountStopResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_successType"
              },
              {
                "description": "AccountStop success Response is captured here\r\n\t\t\t\t\t\t\tin Success tag along with the journalid and account id"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              },
              {
                "description": "AccountStop fault response is captured here in\r\n\t\t\t\t\t\t\tfault tag"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_AccountStopRequestType": {
        "title": "tns_AccountStopRequestType",
        "type": "object",
        "properties": {
          "accountID": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Account ID for Account Stop request"
          },
          "stopType": {
            "type": "string",
            "description": "Stop Type can be A-All,C-Credit,D-Debit"
          },
          "requestType": {
            "type": "string",
            "description": "Request Type can be SET,REMOVE"
          },
          "reasonNumber": {
            "type": "string",
            "description": "Reason Number for Account Stop request"
          },
          "reasonDescription": {
            "type": "string",
            "description": "Reason Description for Account Stop request"
          }
        },
        "description": ""
      },
      "tns_successType": {
        "title": "tns_successType",
        "type": "object",
        "properties": {
          "accountID": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "journalID": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_POATermsType": {
        "title": "tns_POATermsType",
        "type": "object",
        "properties": {
          "poaTermsFlg": {
            "type": "string"
          },
          "termId": {
            "type": "string"
          },
          "termNo": {
            "type": "string"
          },
          "authNotice": {
            "type": "string"
          },
          "dealingLimit": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_ValidateIBANRequest": {
        "title": "tns_ValidateIBANRequest",
        "required": [
          "ibanAcc"
        ],
        "type": "object",
        "properties": {
          "ibanAcc": {
            "type": "string",
            "description": "IBAN Acc to validate"
          }
        },
        "description": ""
      },
      "tns_ValidateIBANResponse": {
        "title": "tns_ValidateIBANResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ValidateIBANSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_ValidateIBANSuccessType": {
        "title": "tns_ValidateIBANSuccessType",
        "required": [
          "flag"
        ],
        "type": "object",
        "properties": {
          "flag": {
            "type": "string",
            "description": "flag Returns: 5=no argument, '0'=no error,\r\n\t\t\t\t\t\t'1'=invalid length, '2'=invalid symbol, '3'=invalid symbol in\r\n\t\t\t\t\t\tpositions 1-2, '4'=invalid symbol in positions 3-4, '9'=check sum\r\n\t\t\t\t\t\tfailed"
          }
        },
        "description": ""
      },
      "tns_GetServiceAccountStatusRequest": {
        "title": "tns_GetServiceAccountStatusRequest",
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "AccountId"
          },
          "productId": {
            "type": "string",
            "description": "ProductId"
          }
        },
        "description": "ServiceAccountStatusRequest"
      },
      "tns_GetServiceAccountStatusResponse": {
        "title": "tns_GetServiceAccountStatusResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ServiceAccountStatussuccessType"
              },
              {
                "description": "Success"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              },
              {
                "description": "Fault"
              }
            ]
          }
        },
        "description": "ServiceAccountStatusResponse"
      },
      "tns_ServiceAccountStatussuccessType": {
        "title": "tns_ServiceAccountStatussuccessType",
        "type": "object",
        "properties": {
          "accountDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ServiceAccountDetailsType"
              },
              {
                "description": "Account Details"
              }
            ]
          },
          "productDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ProductDetailsType"
              },
              {
                "description": "Product Details"
              }
            ]
          },
          "bucket": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_BucketType"
              },
              {
                "description": "Bucket"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_ServiceAccountDetailsType": {
        "title": "tns_ServiceAccountDetailsType",
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "AccountId"
          },
          "status": {
            "type": "string",
            "description": "Status"
          }
        },
        "description": ""
      },
      "tns_ProductDetailsType": {
        "title": "tns_ProductDetailsType",
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "ProductId"
          },
          "status": {
            "type": "string",
            "description": "Status"
          },
          "attribute": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_AttributeType"
            },
            "description": "Attribute"
          }
        },
        "description": ""
      },
      "tns_AttributeType": {
        "title": "tns_AttributeType",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id"
          },
          "type": {
            "type": "string",
            "description": "Type"
          },
          "label": {
            "type": "string",
            "description": "Label"
          },
          "category": {
            "type": "string",
            "description": "Category"
          },
          "dataType": {
            "type": "string",
            "description": "Data Type"
          },
          "value": {
            "type": "string",
            "description": "Value"
          }
        },
        "description": ""
      },
      "tns_BucketType": {
        "title": "tns_BucketType",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id"
          },
          "type": {
            "type": "string",
            "description": "Type"
          },
          "attribute": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_AttributeType"
            },
            "description": ""
          },
          "balance": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_BalanceType"
            },
            "description": "Balance"
          }
        },
        "description": ""
      },
      "tns_BalanceType": {
        "title": "tns_BalanceType",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id"
          },
          "type": {
            "type": "string",
            "description": "Type"
          },
          "number": {
            "type": "string",
            "description": "Number"
          },
          "name": {
            "type": "string",
            "description": "Name"
          },
          "quantity": {
            "type": "string",
            "description": "Quantity"
          },
          "expiryDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "lastVisitDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "LastVisit Date"
          },
          "expiryType": {
            "type": "string",
            "description": "Expiry Type"
          },
          "resetFlag": {
            "type": "string",
            "description": "Reset Flag"
          },
          "cpgnType": {
            "type": "string",
            "description": "Cpgn Type"
          }
        },
        "description": ""
      },
      "tns_ServiceEntityRedeemRequest": {
        "title": "tns_ServiceEntityRedeemRequest",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id"
          },
          "transactionReference": {
            "type": "string",
            "description": "Transaction Reference"
          },
          "redeem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_RedeemType"
            },
            "description": "Redeem"
          }
        },
        "description": "Service Entity Redeem Request"
      },
      "tns_ServiceEntityRedeemResponse": {
        "title": "tns_ServiceEntityRedeemResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ServiceEntityRedeemSuccessType"
              },
              {
                "description": "Success"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              },
              {
                "description": "Fault"
              }
            ]
          }
        },
        "description": "Service Entity Redeem Response"
      },
      "tns_RedeemType": {
        "title": "tns_RedeemType",
        "type": "object",
        "properties": {
          "entityReference": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_EntityReferenceType"
              },
              {
                "description": "Entity Reference"
              }
            ]
          },
          "redeemValue": {
            "type": "string",
            "description": "Redeem Value"
          },
          "liabilityDistribution": {
            "type": "string",
            "description": "Liability Distribution"
          }
        },
        "description": ""
      },
      "tns_EntityReferenceType": {
        "title": "tns_EntityReferenceType",
        "type": "object",
        "properties": {
          "entityId": {
            "type": "string",
            "description": "Entity Id"
          },
          "entityType": {
            "type": "string",
            "description": "Entity Type"
          },
          "expiryDate": {
            "pattern": "(((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))-((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3})))|()",
            "type": "string",
            "description": "Expiry Date"
          }
        },
        "description": ""
      },
      "tns_ServiceEntityRedeemSuccessType": {
        "title": "tns_ServiceEntityRedeemSuccessType",
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "Transaction Id"
          }
        },
        "description": ""
      },
      "tns_AccountTransactionDetailsRequest": {
        "title": "tns_AccountTransactionDetailsRequest",
        "required": [
          "accountId",
          "recordId"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "recordId": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          }
        },
        "description": ""
      },
      "tns_AccountTransactionDetailsResponse": {
        "title": "tns_AccountTransactionDetailsResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AccountTransactionDetailType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              },
              {
                "description": "Fault"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_AccountTransactionDetailType": {
        "title": "tns_AccountTransactionDetailType",
        "required": [
          "description"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_GetGLAccountBalanceRequest": {
        "title": "tns_GetGLAccountBalanceRequest",
        "type": "object",
        "properties": {
          "accountId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/accountIdType"
              },
              {
                "description": "Account Identification Number"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GetGLAccountBalanceResponse": {
        "title": "tns_GetGLAccountBalanceResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetGLAccountBalanceType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GetGLAccountBalanceType": {
        "title": "tns_GetGLAccountBalanceType",
        "required": [
          "accountId"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "accountType": {
            "maxLength": 4,
            "type": "string"
          },
          "accountStatus": {
            "maxLength": 4,
            "type": "string"
          },
          "branchNumber": {
            "type": "string"
          },
          "ledgerName": {
            "type": "string"
          },
          "otherLanguageLedgerName": {
            "type": "string"
          },
          "currency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          },
          "currentBalance": {
            "type": "number"
          },
          "gLClassificationCode": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CorporateAccountTransactionsRequest": {
        "title": "tns_CorporateAccountTransactionsRequest",
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "fromDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "toDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CorporateAccountTransactionsResponse": {
        "title": "tns_CorporateAccountTransactionsResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_successType1"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_transactionCount": {
        "title": "tns_transactionCount",
        "type": "object",
        "description": ""
      },
      "tns_TransactionCountType": {
        "title": "tns_TransactionCountType",
        "type": "object",
        "properties": {
          "count": {
            "type": "string",
            "description": "total number of transactions"
          }
        },
        "description": ""
      },
      "tns_TransactionDetailsType": {
        "title": "tns_TransactionDetailsType",
        "type": "object",
        "properties": {
          "merchantCategory": {
            "type": "string",
            "description": "Merchant Category"
          },
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Account ID"
          },
          "transactionId": {
            "type": "string",
            "description": "Transaction ID"
          },
          "valueDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string"
          },
          "transactionDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "Value Date"
          },
          "transactionDescription": {
            "type": "string",
            "description": "Transaction Description"
          },
          "filler": {
            "type": "string",
            "description": "Filler"
          },
          "transactionMemo": {
            "type": "string",
            "description": "Transaction Memo"
          },
          "chkNumber": {
            "type": "string",
            "description": "Chk Number"
          },
          "postingDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "Posting Date"
          },
          "rModificationId": {
            "type": "string",
            "description": "R Modification ID"
          },
          "transactionSerialNumber": {
            "type": "string",
            "description": "Transaction Serial Number"
          },
          "transactionAmount": {
            "type": "number",
            "description": "Transaction Amount"
          },
          "transactionType": {
            "type": "string",
            "description": "Transaction Type"
          },
          "rCreationId": {
            "type": "string",
            "description": "R Creation ID"
          },
          "rModificationTime": {
            "pattern": "([0-9]*)|()",
            "type": "string"
          },
          "dbTS": {
            "type": "string",
            "description": "Database Time Stamp"
          },
          "orgAmount": {
            "type": "number",
            "description": "Origin Amount"
          },
          "orgCurrency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "Origin Currency"
          },
          "transactionCategory": {
            "type": "string",
            "description": "Transaction Category"
          },
          "transactionOrgn": {
            "type": "string",
            "description": "Transaction origin"
          },
          "bankId": {
            "type": "string",
            "description": "Bank ID"
          },
          "branchId": {
            "type": "string",
            "description": "Branch ID"
          },
          "payeeId": {
            "type": "string",
            "description": "Payee ID"
          },
          "transactionReconcilationStatus": {
            "type": "string",
            "description": "Transaction Reconcilation Status"
          },
          "DeletionFlag": {
            "type": "string",
            "description": "Deletion Flag"
          },
          "rn": {
            "type": "string",
            "description": "RN"
          },
          "transactionBalance": {
            "type": "number",
            "description": "Transaction Balance"
          }
        },
        "description": ""
      },
      "tns_transactionsDetailsType": {
        "title": "tns_transactionsDetailsType",
        "type": "object",
        "properties": {
          "transaction": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_TransactionDetailsType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_AccountMandatesRequest": {
        "title": "tns_AccountMandatesRequest",
        "required": [
          "accountId",
          "cursor"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "cursor": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Cursor"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_AccountMandatesResponse": {
        "title": "tns_AccountMandatesResponse",
        "type": "object",
        "properties": {
          "AccountMandatesList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AccountMandateListType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_AccountMandateListType": {
        "title": "tns_AccountMandateListType",
        "type": "object",
        "properties": {
          "AccountMandate": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_AccountMandateType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_AccountMandateType": {
        "title": "tns_AccountMandateType",
        "type": "object",
        "properties": {
          "sequenceNumber": {
            "type": "integer",
            "format": "int32"
          },
          "mandateReference": {
            "type": "string"
          },
          "originator": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_successType1": {
        "title": "tns_successType1",
        "type": "object",
        "properties": {
          "transactionCount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_TransactionCountType"
              }
            ]
          },
          "transactionDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_transactionsDetailsType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_AccountAddressRequest": {
        "title": "tns_AccountAddressRequest",
        "required": [
          "accountId"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_AccountAddressResponse": {
        "title": "tns_AccountAddressResponse",
        "type": "object",
        "properties": {
          "accountAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AccountAddressType1"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_AccountAddressType1": {
        "title": "tns_AccountAddressType1",
        "type": "object",
        "properties": {
          "accountName": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "PoBox": {
            "type": "string"
          },
          "postCode": {
            "type": "string"
          },
          "homePhone": {
            "type": "string"
          },
          "workPhone": {
            "type": "string"
          },
          "homeFax": {
            "type": "string"
          },
          "workFax": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "pager": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "noticeInd": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_AccountTransferNotificationRequest": {
        "title": "tns_AccountTransferNotificationRequest",
        "required": [
          "accountId"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "currency": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_AccountTransferNotificationResponse": {
        "title": "tns_AccountTransferNotificationResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AccountTransferNotificationSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_AccountTransferNotificationSuccessType": {
        "title": "tns_AccountTransferNotificationSuccessType",
        "type": "object",
        "properties": {
          "uniqueId": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CMSBulkAccountCreationRequest": {
        "title": "tns_CMSBulkAccountCreationRequest",
        "required": [
          "omniMappedCode",
          "bulkCount"
        ],
        "type": "object",
        "properties": {
          "omniMappedCode": {
            "type": "string"
          },
          "bulkCount": {
            "type": "integer",
            "description": "Number of accounts to be created. It should be\r\n\t\t\t\t\t\t\tgreater than 0",
            "format": "int32"
          },
          "omniEnglishName": {
            "type": "string",
            "description": "Onmi Name in English"
          },
          "omniArabicName": {
            "type": "string",
            "description": "Onmi Name in Arabic"
          },
          "currency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          },
          "omniAccountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "remitterIdFrom": {
            "type": "string"
          },
          "remitterIdTo": {
            "type": "string"
          },
          "blockedTransactions": {
            "type": "string"
          },
          "userComments": {
            "type": "string"
          },
          "transactionNotificationFlag": {
            "type": "string",
            "description": "Transaction Notification flag (Credit / Debit)\r\n\t\t\t\t\t\t\tPossible values Y or N, Default N"
          },
          "debitCreditFlag": {
            "type": "string",
            "description": "Debit Credit Flag Possible Values C, D, B\r\n\t\t\t\t\t\t\tCredit, Debit, and Both respectively Default Value shall be B"
          },
          "minimumAccountBalanceLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "Minimum Limit of the Account Balance Default\r\n\t\t\t\t\t\t\tshall be Zero"
              }
            ]
          },
          "maximumAccountBalanceLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "subscriptionFlag": {
            "type": "string",
            "description": "MT940 – Subscription flag Possible values Y or\r\n\t\t\t\t\t\t\tN, Default N"
          },
          "accountResetFlag": {
            "type": "string",
            "description": "Account Reset Flag Possible values Y or N,\r\n\t\t\t\t\t\t\tDefault N"
          }
        },
        "description": ""
      },
      "tns_CMSBulkAccountCreationResponse": {
        "title": "tns_CMSBulkAccountCreationResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreatedCMSAccountListType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreatedCMSAccountListType": {
        "title": "tns_CreatedCMSAccountListType",
        "type": "object",
        "properties": {
          "account": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_CreatedCMSAccountType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_CreatedCMSAccountType": {
        "title": "tns_CreatedCMSAccountType",
        "type": "object",
        "properties": {
          "accountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Virtual Account Number"
          },
          "ibanAccountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Virtual IBAN Account Number"
          },
          "remitterId": {
            "type": "string"
          },
          "transactionNotificationFlag": {
            "type": "string",
            "description": "Transaction Notification flag (Credit / Debit)\r\n\t\t\t\t\t\tPossible values Y or N, Default N"
          },
          "debitCreditFlag": {
            "type": "string",
            "description": "Debit Credit Flag Possible Values C, D, B\r\n\t\t\t\t\t\tCredit, Debit, and Both respectively Default Value shall be B"
          },
          "minimumAccountBalanceLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "Minimum Limit of the Account Balance Default\r\n\t\t\t\t\t\tshall be Zero"
              }
            ]
          },
          "maximumAccountBalanceLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "subscriptionFlag": {
            "type": "string",
            "description": "MT940 – Subscription flag Possible values Y or\r\n\t\t\t\t\t\tN, Default N"
          },
          "accountResetFlag": {
            "type": "string",
            "description": "Account Reset Flag Possible values Y or N,\r\n\t\t\t\t\t\tDefault N"
          }
        },
        "description": ""
      },
      "CMSAccountMaintenanceRequestType": {
        "title": "CMSAccountMaintenanceRequest",
        "required": [
          "requestMode",
          "accountNumber",
          "omniAccountNumber"
        ],
        "type": "object",
        "properties": {
          "requestMode": {
            "type": "string",
            "description": "Type of Request:\r\n\t\t\t\t\t\t\tADD,MODIFY,APPROVE,REJECT,REVERT,SUSPEND,REVOKE"
          },
          "accountNumber": {
            "$ref": "../../commonschemas/schemas.json#/AccountId",
            "description": "Virtual Account Number"
          },
          "omniAccountNumber": {
            "$ref": "../../commonschemas/schemas.json#/AccountId"
          },
          "englishNickName": {
            "type": "string",
            "description": "Nick Name in English"
          },
          "arabicNickName": {
            "type": "string",
            "description": "Nick Name in Arabic"
          },
          "currency": {
            "$ref": "../../commonschemas/schemas.json#/ISOCurrencyCodeOptional"
          },
          "omniMappedCode": {
            "type": "string"
          },
          "externalLinkCode1": {
            "type": "string"
          },
          "externalLinkCode2": {
            "type": "string"
          },
          "referenceNumber1": {
            "type": "string"
          },
          "referenceNumber2": {
            "type": "string"
          },
          "notes1": {
            "type": "string"
          },
          "notes2": {
            "type": "string"
          },
          "remitterId": {
            "type": "string"
          },
          "blockedTransactions": {
            "type": "string",
            "description": "All Blocked Transaction Types should come with\r\n\t\t\t\t\t\t\tcomma separated . Example: TRN01,TRN02"
          },
          "transactionNotificationFlag": {
            "type": "string",
            "description": "Transaction Notification flag (Credit / Debit)\r\n\t\t\t\t\t\t\tPossible values Y or N, Default N"
          },
          "debitFlag": {
            "type": "string",
            "description": "Debit Flag Possible Values Y or N Default Value\r\n\t\t\t\t\t\t\tshall be Y"
          },
          "creditFlag": {
            "type": "string",
            "description": "Credit Flag Possible Values Y or N Default\r\n\t\t\t\t\t\t\tValue shall be Y"
          },
          "minimumAccountBalanceLimit": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Minimum Limit of the Account Balance Default\r\n\t\t\t\t\t\t\tshall be Zero"
          },
          "maximumAccountBalanceLimit": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "subscriptionFlag": {
            "type": "string",
            "description": "MT940 – Subscription flag Possible values Y or\r\n\t\t\t\t\t\t\tN, Default N"
          },
          "accountResetFlag": {
            "type": "string",
            "description": "Account Reset Flag Possible values Y or N,\r\n\t\t\t\t\t\t\tDefault N"
          },
          "uniqueReference": {
            "type": "string"
          },
          "skipCapLimit": {
            "type": "string"
          }
        },
        "description": ""
      },
      "CMSAccountMaintenanceResponseType": {
        "title": "CMSAccountMaintenanceResponse",
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/components/schemas/CMSMaintenanceSuccessType"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "CMSMaintenanceSuccessType": {
        "title": "CMSMaintenanceSuccessType",
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "string"
          },
          "statusDescription": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "account": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CMSAccountMaintenanceType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "CMSAccountMaintenanceType": {
        "title": "CMSAccountMaintenanceType",
        "type": "object",
        "properties": {
          "accountNumber": {
            "$ref": "../../commonschemas/schemas.json#/AccountId",
            "description": "Virtual Account Number"
          },
          "ibanAccountNumber": {
            "$ref": "../../commonschemas/schemas.json#/AccountId",
            "description": "Virtual IBAN Account Number"
          },
          "remitterId": {
            "type": "string"
          },
          "blockedTransactions": {
            "type": "string",
            "description": "All Blocked Transaction Types should come with\r\n\t\t\t\t\t\tcomma separated . Example: TRN01,TRN02"
          },
          "minimumAccountBalanceLimit": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Minimum Limit of the Account Balance Default\r\n\t\t\t\t\t\tshall be Zero"
          },
          "maximumAccountBalanceLimit": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "subscriptionFlag": {
            "type": "string",
            "description": "MT940 – Subscription flag Possible values Y or\r\n\t\t\t\t\t\tN, Default N"
          },
          "debitFlag": {
            "type": "string",
            "description": "Debit Flag Possible Values Y or N Default Value\r\n\t\t\t\t\t\tshall be Y"
          },
          "creditFlag": {
            "type": "string",
            "description": "Credit Flag Possible Values Y or N Default Value\r\n\t\t\t\t\t\tshall be Y"
          },
          "accountResetFlag": {
            "type": "string",
            "description": "Account Reset Flag Possible values Y or N,\r\n\t\t\t\t\t\tDefault N"
          }
        },
        "description": ""
      },
      "tns_CMSBulkAccountUpdationRequest": {
        "title": "tns_CMSBulkAccountUpdationRequest",
        "required": [
          "omniMappedCode",
          "account"
        ],
        "type": "object",
        "properties": {
          "omniEnglishName": {
            "type": "string",
            "description": "Omni Name in English"
          },
          "omniArabicName": {
            "type": "string",
            "description": "Omni Name in Arabic"
          },
          "omniMappedCode": {
            "type": "string"
          },
          "currency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          },
          "omniAccountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "blockedTransactions": {
            "type": "string",
            "description": "All Blocked Transaction Types should come with\r\n\t\t\t\t\t\t\tcomma separated . Example: TRN01,TRN02"
          },
          "userComments": {
            "type": "string"
          },
          "account": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_CMSBulkAcctUpdateType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_CMSBulkAcctUpdateType": {
        "title": "tns_CMSBulkAcctUpdateType",
        "required": [
          "accountNumber",
          "englishNickName"
        ],
        "type": "object",
        "properties": {
          "accountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Virtual Account Number"
          },
          "ibanAccountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Virtual IBAN Account Number"
          },
          "englishNickName": {
            "type": "string",
            "description": "Nick Name in English"
          },
          "arabicNickName": {
            "type": "string",
            "description": "Nick Name in Arabic"
          },
          "transactionNotificationFlag": {
            "type": "string",
            "description": "Transaction Notification flag (Credit / Debit)\r\n\t\t\t\t\t\tPossible values Y or N, Default N"
          },
          "debitCreditFlag": {
            "type": "string",
            "description": "Debit Credit Flag Possible Values C, D, B\r\n\t\t\t\t\t\tCredit, Debit, and Both respectively Default Value shall be B"
          },
          "minimumAccountBalanceLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "Minimum Limit of the Account Balance Default\r\n\t\t\t\t\t\tshall be Zero"
              }
            ]
          },
          "maximumAccountBalanceLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "subscriptionFlag": {
            "type": "string",
            "description": "MT940 – Subscription flag Possible values Y or\r\n\t\t\t\t\t\tN, Default N"
          },
          "accountResetFlag": {
            "type": "string",
            "description": "Account Reset Flag Possible values Y or N,\r\n\t\t\t\t\t\tDefault N"
          }
        },
        "description": ""
      },
      "tns_CMSBulkAccountUpdationResponse": {
        "title": "tns_CMSBulkAccountUpdationResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CMSAccountUpdateResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CMSAccountUpdateResponseType": {
        "title": "tns_CMSAccountUpdateResponseType",
        "required": [
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "string"
          },
          "statusDescription": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "account": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_CMSAccountUpdateType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_CMSAccountUpdateType": {
        "title": "tns_CMSAccountUpdateType",
        "required": [
          "statusCode",
          "accountNumber",
          "englishNickName"
        ],
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "string",
            "description": "Account updation status"
          },
          "statusDescription": {
            "type": "string"
          },
          "accountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Virtual Account Number"
          },
          "ibanAccountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Virtual IBAN Account Number"
          },
          "englishNickName": {
            "type": "string",
            "description": "Nick Name in English"
          },
          "arabicNickName": {
            "type": "string",
            "description": "Nick Name in Arabic"
          },
          "transactionNotificationFlag": {
            "type": "string",
            "description": "Transaction Notification flag (Credit / Debit)\r\n\t\t\t\t\t\tPossible values Y or N, Default N"
          },
          "debitCreditFlag": {
            "type": "string",
            "description": "Debit Credit Flag Possible Values C, D, B\r\n\t\t\t\t\t\tCredit, Debit, and Both respectively Default Value shall be B"
          },
          "minimumAccountBalanceLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "Minimum Limit of the Account Balance Default\r\n\t\t\t\t\t\tshall be Zero"
              }
            ]
          },
          "maximumAccountBalanceLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "subscriptionFlag": {
            "type": "string",
            "description": "MT940 – Subscription flag Possible values Y or\r\n\t\t\t\t\t\tN, Default N"
          },
          "accountResetFlag": {
            "type": "string",
            "description": "Account Reset Flag Possible values Y or N,\r\n\t\t\t\t\t\tDefault N"
          }
        },
        "description": ""
      },
      "CMSAccountsRequestType": {
        "title": "CMSAccountsRequestType",
        "required": [
          "debitCreditFlag"
        ],
        "type": "object",
        "properties": {
          "accountNumber": {
            "$ref": "../../commonschemas/schemas.json#/AccountId",
            "description": "Virtual Account Number"
          },
          "omniAccountNumber": {
            "$ref": "../../commonschemas/schemas.json#/AccountId"
          },
          "omniMappedCode": {
            "type": "string"
          },
          "ibanAccountNumber": {
            "$ref": "../../commonschemas/schemas.json#/AccountId"
          },
          "mainStatus": {
            "type": "string"
          },
          "subStatus": {
            "type": "string"
          },
          "createDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional"
          },
          "createStartDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "To be used to filter between\r\n\t\t\t\t\t\t\tcreateStartDate(included) and createEndDate(excluded)"
          },
          "createEndDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "To be used to filter between\r\n\t\t\t\t\t\t\tcreateStartDate(included) and createEndDate(excluded)"
          },
          "approveDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "Approve Date. Not to be used. Instead use\r\n\t\t\t\t\t\t\tapproveStartDate and approveEndDate"
          },
          "approveStartDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "To be used to filter between\r\n\t\t\t\t\t\t\tapproveStartDate(included) and approveEndDate(excluded)"
          },
          "approveEndDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "To be used to filter between\r\n\t\t\t\t\t\t\tapproveStartDate(included) and approveEndDate(excluded)"
          },
          "getBasicData": {
            "type": "string"
          },
          "accountStartSeq": {
            "type": "string"
          },
          "accountEndSeq": {
            "type": "string"
          },
          "transactionNotificationFlag": {
            "type": "string",
            "description": "Transaction Notification flag (Credit / Debit)\r\n\t\t\t\t\t\t\tPossible values Y or N, Default N"
          },
          "debitFlag": {
            "type": "string",
            "description": "Debit Flag Possible Values Y or N Default Value\r\n\t\t\t\t\t\t\tshall be Y"
          },
          "creditFlag": {
            "type": "string",
            "description": "Credit Flag Possible Values Y or N Default\r\n\t\t\t\t\t\t\tValue shall be Y"
          },
          "minimumAccountBalanceLimit": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Minimum Limit of the Account Balance Default\r\n\t\t\t\t\t\t\tshall be Zero"
          },
          "maximumAccountBalanceLimit": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "subscriptionFlag": {
            "type": "string",
            "description": "MT940 – Subscription flag Possible values Y or\r\n\t\t\t\t\t\t\tN, Default N"
          },
          "debitCreditFlag": {
            "type": "string",
            "description": "If BANCS / any other systems do the enquiry for\r\n\t\t\t\t\t\t\tValidating the BALANCE Check for Debit transaction, this flag\r\n\t\t\t\t\t\t\tshould sent as Y.\r\n\t\t\t\t\t\t\tPossible values as Y ,N. Default shall be N.If\r\n\t\t\t\t\t\t\tsent as Y, CMS will hold\r\n\t\t\t\t\t\t\tthe cash.Transaction+ Fee amount"
          },
          "transactionAmount": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          }
        },
        "description": "One or more filter to be used"
      },
      "CMSAccountsResponseType": {
        "title": "CMSAccountsResponseType",
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/components/schemas/CMSAccountsResponseDetailsType"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "CMSAccountsResponseDetailsType": {
        "title": "CMSAccountsResponseDetailsType",
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "string"
          },
          "statusDescription": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "account": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CMSAccountType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "CMSAccountType": {
        "title": "CMSAccountType",
        "type": "object",
        "properties": {
          "customerNumber": {
            "type": "string"
          },
          "omniAccountNumber": {
            "$ref": "../../commonschemas/schemas.json#/AccountId"
          },
          "omniMappedCode": {
            "type": "string"
          },
          "accountNumber": {
            "$ref": "../../commonschemas/schemas.json#/AccountId",
            "description": "Virtual Account Number"
          },
          "ibanAccountNumber": {
            "$ref": "../../commonschemas/schemas.json#/AccountId",
            "description": "Virtual IBAN Account Number"
          },
          "englishNickName": {
            "type": "string",
            "description": "Nick Name in English"
          },
          "arabicNickName": {
            "type": "string",
            "description": "Nick Name in Arabic"
          },
          "mainStatus": {
            "type": "string"
          },
          "mainStatusDesciption": {
            "type": "string"
          },
          "subStatus": {
            "type": "string"
          },
          "subStatusDescription": {
            "type": "string"
          },
          "createUserCode": {
            "type": "string"
          },
          "createDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional"
          },
          "updateUserCode": {
            "type": "string"
          },
          "updateDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional"
          },
          "approveUserCode": {
            "type": "string"
          },
          "approveDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional"
          },
          "sts01": {
            "type": "string"
          },
          "sts02": {
            "type": "string"
          },
          "aeventNumber": {
            "type": "string"
          },
          "leventNumber": {
            "type": "string"
          },
          "currency": {
            "$ref": "../../commonschemas/schemas.json#/ISOCurrencyCodeOptional"
          },
          "accountOpenDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional"
          },
          "expiryDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional"
          },
          "externalLinkCode1": {
            "type": "string"
          },
          "externalLinkCode2": {
            "type": "string"
          },
          "referenceNumber1": {
            "type": "string"
          },
          "referenceNumber2": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "allowedTransactions": {
            "type": "string",
            "description": "32-digit Bit Mapped Value of Allowed or Blocked\r\n\t\t\t\t\t\tTransaction Types"
          },
          "transactionNotificationFlag": {
            "type": "string",
            "description": "Transaction Notification flag (Credit / Debit)\r\n\t\t\t\t\t\tPossible values Y or N, Default N"
          },
          "debitFlag": {
            "type": "string",
            "description": "Debit Flag Possible Values Y or N Default Value\r\n\t\t\t\t\t\tshall be Y"
          },
          "creditFlag": {
            "type": "string",
            "description": "Credit Flag Possible Values Y or N Default Value\r\n\t\t\t\t\t\tshall be Y"
          },
          "minimumAccountBalanceLimit": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "maximumAccountBalanceLimit": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "subscriptionFlag": {
            "type": "string",
            "description": "MT940 – Subscription flag Possible values Y or\r\n\t\t\t\t\t\tN, Default N"
          },
          "accountBalance": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "currentHoldAmount": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "availableBalance": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "transactionReturnCode": {
            "type": "string",
            "description": "Return Code for Transaction Enquiry 0000-Is\r\n\t\t\t\t\t\tPositive for any Case, Non-0000 – Shall be negative Cases"
          },
          "transactionReturnNotes": {
            "type": "string",
            "description": "Return Notes for Transaction Enquiry"
          },
          "transactionAmount": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "feeAmount": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "transactionTaxAmount": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "transactionTotalAmount": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Transaction total Amount =transactionAmount+\r\n\t\t\t\t\t\tfeeAmount+ transactionTaxAmount"
          },
          "holdReference": {
            "type": "string"
          },
          "holdStatus": {
            "type": "string",
            "description": "HOLD Status Possible Values Y or N, Y – Hold is\r\n\t\t\t\t\t\tSuccess ,N – Hold is Not Success (If N, Transactions should not be\r\n\t\t\t\t\t\tprocessed for DEBITS)"
          },
          "holdRemarks": {
            "type": "string",
            "description": "Hold Remarks / Notes"
          },
          "totalHoldAmount": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Total Amount Hold as part of this request"
          },
          "totalCreditAmount": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Total Credit on the Account"
          },
          "inProgressDebitAmount": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Total in Progress Debit Amount"
          },
          "inProgressCreditAmount": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Total in Progress Credit Amount"
          },
          "transactionReturnNotes1": {
            "type": "string",
            "description": "Return Notes1 for Transaction Enquiry"
          },
          "totalDebitAmount": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Total Debits on the Account"
          }
        },
        "description": ""
      },
      "CMSAccountTransactionsRequestType": {
        "title": "CMSAccountTransactionsRequestType",
        "type": "object",
        "properties": {
          "omniMappedCode": {
            "type": "string"
          },
          "accountNumber": {
            "$ref": "../../commonschemas/schemas.json#/AccountId",
            "description": "Virtual Account Number"
          },
          "omniAccountNumber": {
            "$ref": "../../commonschemas/schemas.json#/AccountId",
            "type": "string"
          },
          "messageStartDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "type": "string"
          },
          "messageEndDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "type": "string"
          },
          "transactionStartDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "type": "string"
          },
          "transactionEndDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "type": "string"
          },
          "debitCreditFlag": {
            "type": "string"
          },
          "fromAmount": {
            "$ref": "#/components/schemas/tns_AmountOptional"
          },
          "toAmount": {
            "$ref": "#/components/schemas/tns_AmountOptional"
          },
          "returnCode": {
            "type": "string"
          },
          "mainStatus": {
            "type": "string"
          },
          "createDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "type": "string"
          },
          "createStartDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "type": "string"
          },
          "createEndDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "type": "string"
          },
          "approveDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "type": "string"
          },
          "approveStartDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "type": "string"
          },
          "approveEndDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "type": "string"
          },
          "getBasicData": {
            "type": "string"
          },
          "accountStartSeq": {
            "type": "string"
          },
          "accountEndSeq": {
            "type": "string"
          },
          "ibanAccountNumber": {
            "type": "string"
          },
          "reference1": {
            "type": "string",
            "description": "OMNI Account Number"
          },
          "reference2": {
            "type": "string",
            "description": "Source Account"
          },
          "reference3": {
            "type": "string",
            "description": "Nick Name"
          },
          "reference4": {
            "type": "string",
            "description": "Transaction Code"
          },
          "reference5": {
            "type": "string",
            "description": "Cheque No/UTI No"
          },
          "sourceReference": {
            "type": "string",
            "description": "Source Reference"
          },
          "uniqueReference": {
            "type": "string",
            "description": "Unique Reference"
          }
        },
        "description": "One or more filter to be used"
      },
      "CMSAccountTransactionsResponseType": {
        "title": "CMSAccountTransactionsResponseType",
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/components/schemas/VirtualAccountsResponseType"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "VirtualAccountsResponseType": {
        "title": "VirtualAccountsResponseType",
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "string"
          },
          "statusDescription": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "transaction": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CMSAccountTransactionType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "CMSAccountTransactionType": {
        "title": "CMSAccountTransactionType",
        "type": "object",
        "properties": {
          "messageID": {
            "type": "string"
          },
          "accountNumber": {
            "$ref": "../../commonschemas/schemas.json#/AccountId",
            "description": "Virtual Account Number"
          },
          "omniMappedCode": {
            "type": "string"
          },
          "messageDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "type": "string"
          },
          "omniAccountNumber": {
            "$ref": "../../commonschemas/schemas.json#/AccountId",
            "type": "string"
          },
          "transactionDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "type": "string"
          },
          "currency": {
            "$ref": "../../commonschemas/schemas.json#/ISOCurrencyCodeOptional",
            "type": "string"
          },
          "valueDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "type": "string"
          },
          "amount": {
            "$ref": "#/components/schemas/tns_AmountOptional"
          },
          "debitCreditFlag": {
            "type": "string"
          },
          "debitCreditDescription": {
            "type": "string"
          },
          "mainStatus": {
            "type": "string"
          },
          "mainStatusDesciption": {
            "type": "string"
          },
          "channel": {
            "type": "string"
          },
          "requestUser": {
            "type": "string"
          },
          "omniName": {
            "type": "string"
          },
          "nickName": {
            "type": "string"
          },
          "reference1": {
            "type": "string"
          },
          "reference2": {
            "type": "string"
          },
          "reference3": {
            "type": "string"
          },
          "reference4": {
            "type": "string"
          },
          "reference5": {
            "type": "string"
          },
          "reference6": {
            "type": "string"
          },
          "sourceReference": {
            "type": "string"
          },
          "uniqueReference": {
            "type": "string"
          },
          "englishLine1": {
            "type": "string"
          },
          "englishLine2": {
            "type": "string"
          },
          "arabicLine1": {
            "type": "string"
          },
          "arabicLine2": {
            "type": "string"
          },
          "returnCode": {
            "type": "string"
          },
          "notes1": {
            "type": "string"
          },
          "notes2": {
            "type": "string"
          },
          "createUserCode": {
            "type": "string"
          },
          "createDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "type": "string"
          },
          "approveUserCode": {
            "type": "string"
          },
          "approveDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "type": "string"
          },
          "tagDetails": {
            "type": "string"
          },
          "ibanAccountNumber": {
            "type": "string"
          },
          "transactionFeeAmount": {
            "$ref": "#/components/schemas/tns_AmountOptional"
          },
          "transactionTaxAmount": {
            "$ref": "#/components/schemas/tns_AmountOptional"
          },
          "transactionTotalAmount": {
            "$ref": "#/components/schemas/tns_AmountOptional",
            "description": "Transaction total Amount If Debit,\r\n\t\t\t\t\t\tTRANSACTIONAMT+ TRANSACTIONFEEAMOUNT+ TRANSACTIONTAXAMOUNT\r\n\t\t\t\t\t\tIf\r\n\t\t\t\t\t\tCredit, TRANSACTIONAMT- TRANSACTIONFEEAMOUNT-\r\n\t\t\t\t\t\tTRANSACTIONTAXAMOUNT"
          }
        },
        "description": ""
      },
      "tns_AccountOwnerRequest": {
        "title": "tns_AccountOwnerRequest",
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_accountsType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_AccountOwnerResponse": {
        "title": "tns_AccountOwnerResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AccountOwnerSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_accountsType": {
        "title": "tns_accountsType",
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_accountResponseType": {
        "title": "tns_accountResponseType",
        "type": "object",
        "properties": {
          "accountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "accountSystem": {
            "type": "string"
          },
          "cif": {
            "pattern": "([0-9]){14}|([0]){1}",
            "type": "string"
          },
          "owner": {
            "type": "number"
          },
          "tfn": {
            "type": "string"
          },
          "override": {
            "type": "integer",
            "format": "int32"
          },
          "confirm": {
            "type": "string"
          },
          "invType": {
            "type": "string"
          },
          "totalLinks": {
            "type": "integer",
            "format": "int32"
          },
          "isJoint": {
            "type": "boolean"
          }
        },
        "description": ""
      },
      "tns_AccountOwnerSuccessType": {
        "title": "tns_AccountOwnerSuccessType",
        "type": "object",
        "properties": {
          "account": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_accountResponseType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_MutualFundSignatureInquiryRequest": {
        "title": "tns_MutualFundSignatureInquiryRequest",
        "required": [
          "accountId"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "AccID"
          }
        },
        "description": ""
      },
      "tns_MutualFundSignatureInquiryResponse": {
        "title": "tns_MutualFundSignatureInquiryResponse",
        "type": "object",
        "properties": {
          "mutualFundSignatureInquiry": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_MutualFundSignatureInquiryType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_MutualFundSignatureInquiryType": {
        "title": "tns_MutualFundSignatureInquiryType",
        "required": [
          "acctInfo",
          "signatureInfo"
        ],
        "type": "object",
        "properties": {
          "acctInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_acctInfoType"
              }
            ]
          },
          "signatureInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_signatureInfoType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_acctInfoType": {
        "title": "tns_acctInfoType",
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "accountTypeCd": {
            "type": "string"
          },
          "currencyCd": {
            "type": "string"
          },
          "accountOpenDate": {
            "type": "string",
            "description": "ddmmyy"
          }
        },
        "description": ""
      },
      "tns_signatureInfoType": {
        "title": "tns_signatureInfoType",
        "type": "object",
        "properties": {
          "sequenceNo": {
            "type": "string"
          },
          "signName": {
            "type": "string"
          },
          "signatoryTypeInd": {
            "type": "string"
          },
          "signatoryFullName": {
            "type": "string"
          },
          "expiryDate": {
            "type": "string",
            "description": "ddmmyy"
          },
          "accessLevel": {
            "type": "string"
          },
          "signature": {
            "type": "string",
            "description": "base64 encoded"
          },
          "instruction1": {
            "type": "string"
          },
          "instruction2": {
            "type": "string"
          },
          "instruction3": {
            "type": "string"
          },
          "createDate": {
            "type": "string",
            "description": "ddmmyy"
          },
          "createdUserId": {
            "type": "string"
          },
          "createdUserBranchId": {
            "type": "string"
          },
          "createdApproverUserId": {
            "type": "string"
          },
          "createdApproverBranchId": {
            "type": "string"
          },
          "lastMaintDate": {
            "type": "string",
            "description": "ddmmyy"
          },
          "lastMaintUsr": {
            "type": "string"
          },
          "lastMaintBranch": {
            "type": "string"
          },
          "lastMaintApproverUsr": {
            "type": "string"
          },
          "signCode": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_MutualFundSignatureCreationRequest": {
        "title": "tns_MutualFundSignatureCreationRequest",
        "required": [
          "acctInfo",
          "signatureInfo"
        ],
        "type": "object",
        "properties": {
          "acctInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_acctInfoType"
              }
            ]
          },
          "signatureInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_signatureInfoType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_MutualFundSignatureCreationResponse": {
        "title": "tns_MutualFundSignatureCreationResponse",
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_MutualFundSignatureUpdationRequest": {
        "title": "tns_MutualFundSignatureUpdationRequest",
        "required": [
          "acctInfo",
          "signatureInfo"
        ],
        "type": "object",
        "properties": {
          "acctInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_acctInfoType"
              }
            ]
          },
          "signatureInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_signatureInfoType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_MutualFundSignatureUpdationResponse": {
        "title": "tns_MutualFundSignatureUpdationResponse",
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_MutualFundSignatureDeletionRequest": {
        "title": "tns_MutualFundSignatureDeletionRequest",
        "required": [
          "acctInfo",
          "signatureInfo"
        ],
        "type": "object",
        "properties": {
          "acctInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_acctInfoType"
              }
            ]
          },
          "signatureInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_signatureInfoType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_MutualFundSignatureDeletionResponse": {
        "title": "tns_MutualFundSignatureDeletionResponse",
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_InquireClosedAccountsRequest": {
        "title": "tns_InquireClosedAccountsRequest",
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "idNo": {
            "maxLength": 24,
            "type": "string"
          },
          "idType": {
            "maxLength": 4,
            "type": "string"
          },
          "promoNo": {
            "maxLength": 2,
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_InquireClosedAccountsResponse": {
        "title": "tns_InquireClosedAccountsResponse",
        "type": "object",
        "properties": {
          "InquireClosedAccounts": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InquireClosedAccountsType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_InquireClosedAccountsType": {
        "title": "tns_InquireClosedAccountsType",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "branch": {
            "type": "string"
          },
          "idNumber": {
            "type": "string"
          },
          "idType": {
            "type": "string"
          },
          "cif": {
            "pattern": "([0-9]){14}|([0]){1}|()",
            "type": "string"
          },
          "nationality": {
            "type": "string"
          },
          "closedReason": {
            "type": "string"
          },
          "lastFinalTrnDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "balanceSAR": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "balanceFCY": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "balanceFCYRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "transferDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "transferJournal": {
            "type": "string"
          },
          "transferBranch": {
            "type": "string"
          },
          "transferTeller": {
            "type": "string"
          },
          "transferGLAccount": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "paymentDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "paymentJournal": {
            "type": "string"
          },
          "paymentBranch": {
            "type": "string"
          },
          "paymentTeller": {
            "type": "string"
          },
          "paymentAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "paymentStatus": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_SAMAStandingOrderInquiryType": {
        "title": "tns_SAMAStandingOrderInquiryType",
        "type": "object",
        "properties": {
          "accountNumber": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string",
            "description": "Account Number"
          },
          "fromAccountCurrencyCode": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "From Account currency code"
          },
          "systemId": {
            "type": "string",
            "description": "System Id"
          },
          "shortEnquiryOpt": {
            "type": "string",
            "description": "Short Enquiry"
          },
          "pageNumber": {
            "minimum": 0,
            "type": "integer",
            "description": "Page Number",
            "format": "int32",
            "default": 0
          },
          "selectEnquireOrAmendOption": {
            "type": "string",
            "description": "Select Enquire Or Amend Option"
          },
          "enquireOrAmendOptionCode": {
            "type": "string",
            "description": "Enquire Or Amend Option Code"
          },
          "pageControl": {
            "type": "string",
            "description": "Page Control to get more pages"
          },
          "functionOpt1": {
            "type": "string",
            "description": "If function is M transaction details are\r\n\t\t\t\t\t\tprovided."
          },
          "ownerIndCode1": {
            "type": "string"
          },
          "standingOrdTypeCode1": {
            "type": "string",
            "description": "Standing Order Type Code"
          },
          "orderDate1": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Order Date"
          },
          "startOrNextDt1": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Start or Next Date"
          },
          "endDate1": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "End Date"
          },
          "postingFreqCode1": {
            "type": "string",
            "description": "Posting Frequncy Code"
          },
          "autoChaseDays1": {
            "type": "string",
            "description": "Auto Chase Days"
          },
          "amtToXfer1": {
            "type": "number",
            "description": "Amount"
          },
          "toAcctCurCode1": {
            "type": "string",
            "description": "To Account Currency Code"
          },
          "recordForFNSUse1": {
            "type": "string",
            "description": "Record For FN Use"
          },
          "pymtPurpose1": {
            "type": "string",
            "description": "Payment Purpose"
          },
          "priorityTo1": {
            "type": "string"
          },
          "priorityFrom1": {
            "type": "string"
          },
          "sOAcctNum1": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string",
            "description": "SO Account Number"
          },
          "systemIdentifier1": {
            "type": "string",
            "description": "System Identifier"
          },
          "bankID1": {
            "type": "string",
            "description": "Bank ID"
          },
          "fill1": {
            "type": "string"
          },
          "pmtType1": {
            "type": "string",
            "description": "Payment Type"
          },
          "pmtPercentage1": {
            "type": "number",
            "description": "Payment Percentage",
            "default": 0
          },
          "refNum1": {
            "type": "string",
            "description": "Reference Number"
          },
          "cal1": {
            "type": "string",
            "description": "Calendar"
          },
          "functionOpt2": {
            "type": "string"
          },
          "ownerIndCode2": {
            "type": "string"
          },
          "standingOrdTypeCode2": {
            "type": "string"
          },
          "orderDate2": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "startOrNextDt2": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "endDate2": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "postingFreqCode2": {
            "type": "string"
          },
          "autoChaseDays2": {
            "type": "string"
          },
          "amtToXfer2": {
            "type": "number"
          },
          "toAcctCurCode2": {
            "type": "string"
          },
          "recordForFNSUse2": {
            "type": "string"
          },
          "pymtPurpose2": {
            "type": "string"
          },
          "priorityTo2": {
            "type": "string"
          },
          "priorityFrom2": {
            "type": "string"
          },
          "sOAcctNum2": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "systemIdentifier2": {
            "type": "string"
          },
          "bankID2": {
            "type": "string"
          },
          "fill2": {
            "type": "string"
          },
          "pmtType2": {
            "type": "string"
          },
          "pmtPercentage2": {
            "type": "number",
            "default": 0
          },
          "refNum2": {
            "type": "string"
          },
          "cal2": {
            "type": "string"
          },
          "functionOpt3": {
            "type": "string"
          },
          "ownerIndCode3": {
            "type": "string"
          },
          "standingOrdTypeCode3": {
            "type": "string"
          },
          "orderDate3": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "startOrNextDt3": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "endDate3": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "postingFreqCode3": {
            "type": "string"
          },
          "autoChaseDays3": {
            "type": "string"
          },
          "amtToXfer3": {
            "type": "number"
          },
          "toAcctCurCode3": {
            "type": "string"
          },
          "recordForFNSUse3": {
            "type": "string"
          },
          "pymtPurpose3": {
            "type": "string"
          },
          "priorityTo3": {
            "type": "string"
          },
          "priorityForm3": {
            "type": "string"
          },
          "sOAcctNum3": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "systemIdentifier3": {
            "type": "string"
          },
          "bankID3": {
            "type": "string"
          },
          "fill3": {
            "type": "string"
          },
          "pmtType3": {
            "type": "string"
          },
          "pmtPercentage3": {
            "type": "number",
            "default": 0
          },
          "refNum3": {
            "type": "string"
          },
          "cal3": {
            "type": "string"
          },
          "functionOpt4": {
            "type": "string"
          },
          "ownerIndCode4": {
            "type": "string"
          },
          "standingOrdTypeCode4": {
            "type": "string"
          },
          "orderDate4": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "startOrNextDt4": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "endDate4": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "postingFreqCode4": {
            "type": "string"
          },
          "autoChaseDays4": {
            "type": "string"
          },
          "amtToXfer4": {
            "type": "number"
          },
          "toAcctCurCode4": {
            "type": "string"
          },
          "recordForFNSUse4": {
            "type": "string"
          },
          "pymtPurpose4": {
            "type": "string"
          },
          "priorityTo4": {
            "type": "string"
          },
          "priorityFrom4": {
            "type": "string"
          },
          "sOAcctNum4": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "systemIdentifier4": {
            "type": "string"
          },
          "bankID4": {
            "type": "string"
          },
          "fill4": {
            "type": "string"
          },
          "pmtType4": {
            "type": "string"
          },
          "pmtPercentage4": {
            "type": "number",
            "default": 0
          },
          "refNum4": {
            "type": "string"
          },
          "cal4": {
            "type": "string"
          },
          "functionOpt5": {
            "type": "string"
          },
          "ownerIndCode5": {
            "type": "string"
          },
          "standingOrdTypeCode5": {
            "type": "string"
          },
          "orderDate5": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "startOrNextDt5": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "endDate5": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "postingFreqCode5": {
            "type": "string"
          },
          "autoChaseDays5": {
            "type": "string"
          },
          "amtToXfer5": {
            "type": "number"
          },
          "toAcctCurCode5": {
            "type": "string"
          },
          "recordForFNSUse5": {
            "type": "string"
          },
          "pymtPurpose5": {
            "type": "string"
          },
          "priorityTo5": {
            "type": "string"
          },
          "priorityFrom5": {
            "type": "string"
          },
          "sOAcctNum5": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "systemIdentifier5": {
            "type": "string"
          },
          "bankID5": {
            "type": "string"
          },
          "fill5": {
            "type": "string"
          },
          "pmtType5": {
            "type": "string"
          },
          "pmtPercentage5": {
            "type": "number",
            "default": 0
          },
          "refNum5": {
            "type": "string"
          },
          "cal5": {
            "type": "string"
          },
          "functionOpt6": {
            "type": "string"
          },
          "ownerIndCode6": {
            "type": "string"
          },
          "standingOrdTypeCode6": {
            "type": "string"
          },
          "orderDate6": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "startOrNextDt6": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "endDate6": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "postingFreqCode6": {
            "type": "string"
          },
          "autoChaseDays6": {
            "type": "string"
          },
          "amtToXfer6": {
            "type": "number"
          },
          "toAcctCurCode6": {
            "type": "string"
          },
          "recordForFNSUse6": {
            "type": "string"
          },
          "pymtPurpose6": {
            "type": "string"
          },
          "priorityTo6": {
            "type": "string"
          },
          "priorityFrom6": {
            "type": "string"
          },
          "sOAcctNum6": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "systemIdentifier6": {
            "type": "string"
          },
          "bankID6": {
            "type": "string"
          },
          "fill6": {
            "type": "string"
          },
          "pmtType6": {
            "type": "string"
          },
          "pmtPercentage6": {
            "type": "number",
            "default": 0
          },
          "refNum6": {
            "type": "string"
          },
          "cal6": {
            "type": "string"
          },
          "functionOpt7": {
            "type": "string"
          },
          "ownerIndCode7": {
            "type": "string"
          },
          "standingOrdTypeCode7": {
            "type": "string"
          },
          "orderDate7": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "startOrNextDt7": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "endDate7": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "postingFreqCode7": {
            "type": "string"
          },
          "autoChaseDays7": {
            "type": "string"
          },
          "amtToXfer7": {
            "type": "number"
          },
          "toAcctCurCode7": {
            "type": "string"
          },
          "recordForFNSUse7": {
            "type": "string"
          },
          "pymtPurpose7": {
            "type": "string"
          },
          "priorityTo7": {
            "type": "string"
          },
          "priorityFrom7": {
            "type": "string"
          },
          "sOAcctNum7": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "systemIndentifier7": {
            "type": "string"
          },
          "bankID7": {
            "type": "string"
          },
          "fill7": {
            "type": "string"
          },
          "pmtType7": {
            "type": "string"
          },
          "pmtPercentage7": {
            "type": "number",
            "default": 0
          },
          "refNum7": {
            "type": "string"
          },
          "cal7": {
            "type": "string"
          },
          "moreRecordsToFollow": {
            "type": "string"
          },
          "samaStandingOrderDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_samaStandingOrderDetailsType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_SAMAStandingOrderInquiryResponse": {
        "title": "tns_SAMAStandingOrderInquiryResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_SAMAStandingOrderInquiryType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_samaStandingOrderDetailsType": {
        "title": "tns_samaStandingOrderDetailsType",
        "type": "object",
        "properties": {
          "accountNumber": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string",
            "description": "From Account Number"
          },
          "amount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "frequency": {
            "type": "integer",
            "description": "Frequency",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "description": "Frequency Code"
          },
          "calCode": {
            "type": "string",
            "description": "Calendar Code"
          },
          "date": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Request Date"
          },
          "samaDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Letter Received Date"
          },
          "toAccountNumber": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string",
            "description": "To Account Number"
          },
          "ramadanWaive": {
            "type": "string",
            "description": "Ramadan Waive"
          },
          "iBanFlag": {
            "type": "string",
            "description": "Stop Standing Order"
          },
          "bank": {
            "type": "string",
            "description": "Bank"
          },
          "samaNumber": {
            "type": "string",
            "description": "SAMA Letter Number"
          },
          "startDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Start Date"
          },
          "stop": {
            "type": "string",
            "description": "Stop Standing Order"
          },
          "ramadan": {
            "type": "string"
          },
          "iBanFlag1": {
            "type": "string"
          },
          "calendar": {
            "type": "integer",
            "format": "int32"
          },
          "iBanAccount": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string",
            "description": "To Local Bank Account- IBAN Format"
          },
          "endDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "End Date"
          },
          "BeneficiaryName": {
            "type": "string",
            "description": "Beneficiary Name"
          },
          "comment": {
            "type": "string",
            "description": "Comment"
          },
          "deductionPurpose": {
            "type": "string",
            "description": "Deduction Purpose"
          }
        },
        "description": ""
      },
      "tns_customerStandingOrderDetailsType": {
        "title": "tns_customerStandingOrderDetailsType",
        "type": "object",
        "properties": {
          "accountNumber": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string",
            "description": "From Account Number"
          },
          "amount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "Amount"
              }
            ]
          },
          "frequency": {
            "type": "integer",
            "description": "Frequency",
            "format": "int32"
          },
          "code": {
            "type": "string",
            "description": "Frequency Code"
          },
          "orderDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Order Date"
          },
          "toAccountNumber": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string",
            "description": "To Account Number"
          },
          "comments": {
            "type": "string",
            "description": "Comments"
          },
          "startDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Start Date"
          },
          "fromAccountCurrency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "From Account Currency"
          },
          "securityCode": {
            "maxLength": 4,
            "type": "string"
          },
          "toAccountCurrency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "To Account Currency"
          },
          "priorityCode": {
            "maxLength": 2,
            "type": "string",
            "description": "Priority Code"
          },
          "toComments": {
            "type": "string",
            "description": "To account number comments"
          },
          "channelCode": {
            "maxLength": 2,
            "type": "string",
            "description": "Channel Code"
          },
          "fundFlag": {
            "maxLength": 1,
            "type": "string",
            "description": "Accept Fund Flag"
          },
          "riskFlag": {
            "maxLength": 1,
            "type": "string",
            "description": "Accept risk flag"
          },
          "thimarFee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "endDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "End Date"
          },
          "commission": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "record": {
            "type": "string"
          },
          "referenceNumber": {
            "type": "string",
            "description": "Reference Number"
          },
          "calCode": {
            "maxLength": 1,
            "type": "string",
            "description": "Calendar Code"
          },
          "autoChaseDays": {
            "maxLength": 2,
            "type": "string"
          },
          "status": {
            "maxLength": 2,
            "type": "string",
            "description": "Status - Payment Type"
          },
          "paymentPurpose": {
            "type": "string",
            "description": "Payment Purpose"
          },
          "chargeIndicator": {
            "maxLength": 2,
            "type": "string",
            "description": "Charge Indicator - Pay Fee or Fine"
          },
          "beneficiaryAccountId": {
            "type": "string"
          },
          "ibanFlag": {
            "maxLength": 1,
            "type": "string"
          },
          "amountFlag": {
            "maxLength": 1,
            "type": "string"
          },
          "renewalFlag": {
            "maxLength": 1,
            "type": "string"
          },
          "feeBearingAccount": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "beneficiaryName": {
            "type": "string"
          },
          "beneficiaryAddress1": {
            "type": "string"
          },
          "beneficiaryAddress2": {
            "type": "string"
          },
          "beneficiaryAddress3": {
            "type": "string"
          },
          "LocalBankCode": {
            "type": "string"
          },
          "templateId": {
            "type": "string"
          },
          "bicCode": {
            "type": "string"
          },
          "bankName": {
            "type": "string"
          },
          "bankRouteCode": {
            "type": "string"
          },
          "exchangeRate": {
            "type": "string"
          },
          "originalExchangeRate": {
            "type": "string"
          },
          "counterAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "baseAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "cif": {
            "pattern": "([0-9]){14}|([0]){1}|()",
            "type": "string"
          },
          "utiCode": {
            "type": "string"
          },
          "classification": {
            "type": "string"
          },
          "narrative": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CustomerStandingOrderInquiryType": {
        "title": "tns_CustomerStandingOrderInquiryType",
        "type": "object",
        "properties": {
          "accountNumber": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string",
            "description": "Account Number"
          },
          "fromAccountCurrencyCode": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "From Account Currency Code"
          },
          "systemId": {
            "type": "string",
            "description": "System Id"
          },
          "shortEnquiryOpt": {
            "type": "string",
            "description": "Short Enquiry"
          },
          "pageNumber": {
            "minimum": 0,
            "type": "integer",
            "description": "Page Number",
            "format": "int32",
            "default": 0
          },
          "selectEnquireOrAmendOption": {
            "type": "string",
            "description": "Select Enquire or Amend Option"
          },
          "enquireOrAmendOptionCode": {
            "type": "string",
            "description": "Enquire or Amend option code"
          },
          "pageControl": {
            "type": "string",
            "description": "Page control - This is provided incase more\r\n\t\t\t\t\t\trecords to be fetched"
          },
          "functionOpt1": {
            "type": "string",
            "description": "Function Option. If equals M then transaction\r\n\t\t\t\t\t\tdetails are fetched"
          },
          "ownerIndCode1": {
            "type": "string",
            "description": "OwnerInd Code"
          },
          "standingOrdTypeCode1": {
            "type": "string",
            "description": "Standing Order Type code"
          },
          "orderDate1": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Order Date"
          },
          "startOrNextDt1": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Start or Next Date"
          },
          "endDate1": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "End Date"
          },
          "postingFreqCode1": {
            "type": "string",
            "description": "Posting Frequency Code"
          },
          "autoChaseDays1": {
            "type": "string",
            "description": "Auto chase days"
          },
          "amtToXfer1": {
            "type": "number",
            "description": "Amount"
          },
          "toAcctCurCode1": {
            "type": "string",
            "description": "To Account Currency Code"
          },
          "recordForFNSUse1": {
            "type": "string",
            "description": "Record for FNS Use"
          },
          "pymtPurpose1": {
            "type": "string",
            "description": "Payment Purpose"
          },
          "priorityTo1": {
            "type": "string",
            "description": "To priority"
          },
          "priorityFrom1": {
            "type": "string",
            "description": "Priority From"
          },
          "sOAcctNum1": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string",
            "description": "SO Account Number"
          },
          "systemIdentifier1": {
            "type": "string",
            "description": "System Identifier"
          },
          "bankID1": {
            "type": "string",
            "description": "Bank ID"
          },
          "fill1": {
            "type": "string"
          },
          "pmtType1": {
            "type": "string",
            "description": "Payment type"
          },
          "pmtPercentage1": {
            "type": "number",
            "description": "Payment percentage",
            "default": 0
          },
          "refNum1": {
            "type": "string",
            "description": "Reference Number"
          },
          "cal1": {
            "type": "string",
            "description": "Calendar"
          },
          "ibanNumber1": {
            "type": "string"
          },
          "templateId1": {
            "type": "string"
          },
          "functionOpt2": {
            "type": "string"
          },
          "ownerIndCode2": {
            "type": "string"
          },
          "standingOrdTypeCode2": {
            "type": "string"
          },
          "orderDate2": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "startOrNextDt2": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "endDate2": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "postingFreqCode2": {
            "type": "string"
          },
          "autoChaseDays2": {
            "type": "string"
          },
          "amtToXfer2": {
            "type": "number"
          },
          "toAcctCurCode2": {
            "type": "string"
          },
          "recordForFNSUse2": {
            "type": "string"
          },
          "pymtPurpose2": {
            "type": "string"
          },
          "priorityTo2": {
            "type": "string"
          },
          "priorityFrom2": {
            "type": "string"
          },
          "sOAcctNum2": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "systemIdentifier2": {
            "type": "string"
          },
          "bankID2": {
            "type": "string"
          },
          "fill2": {
            "type": "string"
          },
          "pmtType2": {
            "type": "string"
          },
          "pmtPercentage2": {
            "type": "number",
            "default": 0
          },
          "refNum2": {
            "type": "string"
          },
          "cal2": {
            "type": "string"
          },
          "ibanNumber2": {
            "type": "string"
          },
          "templateId2": {
            "type": "string"
          },
          "functionOpt3": {
            "type": "string"
          },
          "ownerIndCode3": {
            "type": "string"
          },
          "standingOrdTypeCode3": {
            "type": "string"
          },
          "orderDate3": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "startOrNextDt3": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "endDate3": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "postingFreqCode3": {
            "type": "string"
          },
          "autoChaseDays3": {
            "type": "string"
          },
          "amtToXfer3": {
            "type": "number"
          },
          "toAcctCurCode3": {
            "type": "string"
          },
          "recordForFNSUse3": {
            "type": "string"
          },
          "pymtPurpose3": {
            "type": "string"
          },
          "priorityTo3": {
            "type": "string"
          },
          "priorityForm3": {
            "type": "string"
          },
          "sOAcctNum3": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "systemIdentifier3": {
            "type": "string"
          },
          "bankID3": {
            "type": "string"
          },
          "fill3": {
            "type": "string"
          },
          "pmtType3": {
            "type": "string"
          },
          "pmtPercentage3": {
            "type": "number",
            "default": 0
          },
          "refNum3": {
            "type": "string"
          },
          "cal3": {
            "type": "string"
          },
          "ibanNumber3": {
            "type": "string"
          },
          "templateId3": {
            "type": "string"
          },
          "functionOpt4": {
            "type": "string"
          },
          "ownerIndCode4": {
            "type": "string"
          },
          "standingOrdTypeCode4": {
            "type": "string"
          },
          "orderDate4": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "startOrNextDt4": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "endDate4": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "postingFreqCode4": {
            "type": "string"
          },
          "autoChaseDays4": {
            "type": "string"
          },
          "amtToXfer4": {
            "type": "number"
          },
          "toAcctCurCode4": {
            "type": "string"
          },
          "recordForFNSUse4": {
            "type": "string"
          },
          "pymtPurpose4": {
            "type": "string"
          },
          "priorityTo4": {
            "type": "string"
          },
          "priorityFrom4": {
            "type": "string"
          },
          "sOAcctNum4": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "systemIdentifier4": {
            "type": "string"
          },
          "bankID4": {
            "type": "string"
          },
          "fill4": {
            "type": "string"
          },
          "pmtType4": {
            "type": "string"
          },
          "pmtPercentage4": {
            "type": "number",
            "default": 0
          },
          "refNum4": {
            "type": "string"
          },
          "cal4": {
            "type": "string"
          },
          "ibanNumber4": {
            "type": "string"
          },
          "templateId4": {
            "type": "string"
          },
          "functionOpt5": {
            "type": "string"
          },
          "ownerIndCode5": {
            "type": "string"
          },
          "standingOrdTypeCode5": {
            "type": "string"
          },
          "orderDate5": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "startOrNextDt5": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "endDate5": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "postingFreqCode5": {
            "type": "string"
          },
          "autoChaseDays5": {
            "type": "string"
          },
          "amtToXfer5": {
            "type": "number"
          },
          "toAcctCurCode5": {
            "type": "string"
          },
          "recordForFNSUse5": {
            "type": "string"
          },
          "pymtPurpose5": {
            "type": "string"
          },
          "priorityTo5": {
            "type": "string"
          },
          "priorityFrom5": {
            "type": "string"
          },
          "sOAcctNum5": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "systemIdentifier5": {
            "type": "string"
          },
          "bankID5": {
            "type": "string"
          },
          "fill5": {
            "type": "string"
          },
          "pmtType5": {
            "type": "string"
          },
          "pmtPercentage5": {
            "type": "number",
            "default": 0
          },
          "refNum5": {
            "type": "string"
          },
          "cal5": {
            "type": "string"
          },
          "ibanNumber5": {
            "type": "string"
          },
          "templateId5": {
            "type": "string"
          },
          "functionOpt6": {
            "type": "string"
          },
          "ownerIndCode6": {
            "type": "string"
          },
          "standingOrdTypeCode6": {
            "type": "string"
          },
          "orderDate6": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "startOrNextDt6": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "endDate6": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "postingFreqCode6": {
            "type": "string"
          },
          "autoChaseDays6": {
            "type": "string"
          },
          "amtToXfer6": {
            "type": "number"
          },
          "toAcctCurCode6": {
            "type": "string"
          },
          "recordForFNSUse6": {
            "type": "string"
          },
          "pymtPurpose6": {
            "type": "string"
          },
          "priorityTo6": {
            "type": "string"
          },
          "priorityFrom6": {
            "type": "string"
          },
          "sOAcctNum6": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "systemIdentifier6": {
            "type": "string"
          },
          "bankID6": {
            "type": "string"
          },
          "fill6": {
            "type": "string"
          },
          "pmtType6": {
            "type": "string"
          },
          "pmtPercentage6": {
            "type": "number",
            "default": 0
          },
          "refNum6": {
            "type": "string"
          },
          "cal6": {
            "type": "string"
          },
          "ibanNumber6": {
            "type": "string"
          },
          "templateId6": {
            "type": "string"
          },
          "functionOpt7": {
            "type": "string"
          },
          "ownerIndCode7": {
            "type": "string"
          },
          "standingOrdTypeCode7": {
            "type": "string"
          },
          "orderDate7": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "startOrNextDt7": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "endDate7": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "postingFreqCode7": {
            "type": "string"
          },
          "autoChaseDays7": {
            "type": "string"
          },
          "amtToXfer7": {
            "type": "number"
          },
          "toAcctCurCode7": {
            "type": "string"
          },
          "recordForFNSUse7": {
            "type": "string"
          },
          "pymtPurpose7": {
            "type": "string"
          },
          "priorityTo7": {
            "type": "string"
          },
          "priorityFrom7": {
            "type": "string"
          },
          "sOAcctNum7": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "systemIndentifier7": {
            "type": "string"
          },
          "bankID7": {
            "type": "string"
          },
          "fill7": {
            "type": "string"
          },
          "pmtType7": {
            "type": "string"
          },
          "pmtPercentage7": {
            "type": "number",
            "default": 0
          },
          "refNum7": {
            "type": "string"
          },
          "cal7": {
            "type": "string"
          },
          "ibanNumber7": {
            "type": "string"
          },
          "templateId7": {
            "type": "string"
          },
          "moreRecordsToFollow": {
            "type": "string"
          },
          "customerStandingOrderDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_customerStandingOrderDetailsType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CustomerStandingOrderInquiryResponse": {
        "title": "tns_CustomerStandingOrderInquiryResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CustomerStandingOrderInquiryType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CMSOmniAccountMaintenanceRequest": {
        "title": "tns_CMSOmniAccountMaintenanceRequest",
        "required": [
          "requestMode",
          "omniAccountType",
          "accountOwnerType",
          "branchCode",
          "transactionNotificationFlag"
        ],
        "type": "object",
        "properties": {
          "requestMode": {
            "type": "string",
            "description": "Type of Request: ADD,MODIFY,DELETE,APPROVE"
          },
          "omniAccountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "omniMappedCode": {
            "type": "string"
          },
          "omniAccountType": {
            "type": "string"
          },
          "currency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          },
          "omniCommisionAccount": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "omniEnglishName": {
            "type": "string",
            "description": "Onmi Name in English"
          },
          "omniArabicName": {
            "type": "string",
            "description": "Onmi Name in Arabic"
          },
          "accountOwnerType": {
            "type": "string"
          },
          "branchCode": {
            "type": "string",
            "description": "Virtual branch code.Allowed Values - 795,\r\n\t\t\t\t\t\t\t787"
          },
          "currencyNumericId": {
            "type": "string"
          },
          "transactionNotificationFlag": {
            "type": "string",
            "description": "Default credit notification enabled. Allowed\r\n\t\t\t\t\t\t\tValues - Y,N"
          },
          "blockedTransactions": {
            "type": "string",
            "description": "All Blocked Transaction Types should come\r\n\t\t\t\t\t\t\twith\r\n\t\t\t\t\t\t\tcomma separated, Example - TRN01,TRN02"
          },
          "cifNumber": {
            "type": "string"
          },
          "userComments": {
            "type": "string"
          },
          "feeFlag": {
            "type": "string",
            "description": "Possible Values Y or N"
          },
          "corporateFeeAccount": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "A valid NCB Account (Corporate’s Fee\r\n\t\t\t\t\t\t\tAccount)"
          },
          "feePercentage": {
            "type": "string",
            "description": "Percentage of Fee from Transaction Amount"
          },
          "feeTransactionCodes": {
            "type": "string",
            "description": "List of Transaction Codes / Promo Codes .\r\n\t\t\t\t\t\t\tSeparated with comma"
          },
          "uniqueReference": {
            "type": "string"
          },
          "skipCapLimit": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CMSOmniAccountMaintenanceResponse": {
        "title": "tns_CMSOmniAccountMaintenanceResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CMSOmniAccountMaintenanceResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CMSOmniAccountMaintenanceResponseType": {
        "title": "tns_CMSOmniAccountMaintenanceResponseType",
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "string"
          },
          "statusDescription": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "account": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CMSOmniAccountMaintenanceType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CMSOmniAccountMaintenanceType": {
        "title": "tns_CMSOmniAccountMaintenanceType",
        "type": "object",
        "properties": {
          "omniMappedCode": {
            "type": "string"
          },
          "lastSequenceOfAccount": {
            "type": "string",
            "description": "Last sequence of Virtual account under this Omni"
          },
          "branchCode": {
            "type": "string"
          },
          "accountOwnerType": {
            "type": "string"
          },
          "currencyNumericId": {
            "type": "string"
          },
          "cifNumber": {
            "type": "string"
          },
          "transactionNotificationFlag": {
            "type": "string"
          },
          "allowedTransactions": {
            "type": "string",
            "description": "32-digit Bit Mapped Value of Allowed or Blocked\r\n\t\t\t\t\t\tTransaction Types"
          },
          "blockedTransactions": {
            "type": "string"
          },
          "feeFlag": {
            "type": "string"
          },
          "corporateFeeAccount": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "feePercentage": {
            "type": "string"
          },
          "feeTransactionCodes": {
            "type": "string"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_allowedTransactionFormatedType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_allowedTransactionFormatedType": {
        "title": "tns_allowedTransactionFormatedType",
        "type": "object",
        "properties": {
          "orderBy": {
            "type": "string"
          },
          "transactionCode": {
            "type": "string"
          },
          "transactionCodeDescription": {
            "type": "string"
          },
          "isSelected": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CMSOmniAccountDetailsRequest": {
        "title": "tns_CMSOmniAccountDetailsRequest",
        "type": "object",
        "properties": {
          "omniAccountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "cifNumber": {
            "type": "string"
          },
          "transactionNotificationFlag": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CMSOmniAccountDetailsResponse": {
        "title": "tns_CMSOmniAccountDetailsResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CMSOmniAccountDetailsResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CMSOmniAccountDetailsResponseType": {
        "title": "tns_CMSOmniAccountDetailsResponseType",
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "string"
          },
          "statusDescription": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "account": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_CMSOmniAccountDetailsType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_CMSOmniAccountDetailsType": {
        "title": "tns_CMSOmniAccountDetailsType",
        "type": "object",
        "properties": {
          "institutionCode": {
            "type": "string"
          },
          "omniMappedCode": {
            "type": "string"
          },
          "omniAccountType": {
            "type": "string"
          },
          "currency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          },
          "omniCommisionAccount": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "omniEnglishName": {
            "type": "string",
            "description": "Onmi Name in English"
          },
          "omniArabicName": {
            "type": "string",
            "description": "Onmi Name in Arabic"
          },
          "mainStatus": {
            "type": "string"
          },
          "mainStatusDesciption": {
            "type": "string"
          },
          "createUserCode": {
            "type": "string"
          },
          "createDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "updateUserCode": {
            "type": "string"
          },
          "updateDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "approveUserCode": {
            "type": "string"
          },
          "approveDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "accountOwnerType": {
            "type": "string"
          },
          "accountOwnerTypeDescription": {
            "type": "string"
          },
          "lastSequenceOfAccount": {
            "type": "string",
            "description": "Last sequence of Virtual account under this Omni"
          },
          "branchCode": {
            "type": "string"
          },
          "currencyNumericId": {
            "type": "string"
          },
          "cifNumber": {
            "type": "string"
          },
          "transactionNotificationFlag": {
            "type": "string"
          },
          "allowedTransactions": {
            "type": "string"
          },
          "blockedTransactions": {
            "type": "string"
          },
          "feeFlag": {
            "type": "string"
          },
          "corporateFeeAccount": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "feePercentage": {
            "type": "string"
          },
          "feeTransactionCodes": {
            "type": "string"
          },
          "numberOfVirtualAccounts": {
            "type": "string"
          },
          "lastUpdateTime": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_allowedTransactionFormatedType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_DepositAccountCreationRequest": {
        "title": "tns_DepositAccountCreationRequest",
        "required": [
          "cif",
          "customerName",
          "productType",
          "subCategory",
          "currency",
          "originBranch",
          "accountOpeningReason"
        ],
        "type": "object",
        "properties": {
          "accountNumber": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "cif": {
            "pattern": "([0-9]){14}|([0]){1}",
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "idType": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "taxFileNumber": {
            "type": "string"
          },
          "address3": {
            "type": "string"
          },
          "nationality": {
            "pattern": "([A-Z]{2,2})|()",
            "type": "string"
          },
          "address4": {
            "type": "string"
          },
          "postCode": {
            "type": "string"
          },
          "productType": {
            "maxLength": 4,
            "type": "string"
          },
          "subCategory": {
            "type": "string"
          },
          "legalEntity": {
            "type": "string"
          },
          "intersetPaymentMethod": {
            "type": "string"
          },
          "transferAccountSystem": {
            "type": "string"
          },
          "toAccountNumber": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "exemptProfile": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "statementFrequency": {
            "type": "string"
          },
          "consolidatedStatements": {
            "type": "string"
          },
          "dateFormat": {
            "type": "string"
          },
          "mailIndicator": {
            "type": "string"
          },
          "noticeIndicator": {
            "type": "string"
          },
          "noticeCustomerNumber": {
            "pattern": "([0-9]){14}|([0]){1}|()",
            "type": "string"
          },
          "creditProfitRate": {
            "type": "string"
          },
          "termInterest": {
            "type": "string"
          },
          "interestFrequency": {
            "type": "string"
          },
          "months": {
            "type": "string"
          },
          "days": {
            "type": "string"
          },
          "agentCode": {
            "type": "string",
            "description": "Account Source Agent Code"
          },
          "investmentType": {
            "type": "string"
          },
          "districtCode": {
            "type": "string"
          },
          "industrySector": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "globalLimitNumber": {
            "type": "string",
            "description": "Facility Account"
          },
          "applicationID": {
            "type": "string"
          },
          "visaFlag": {
            "type": "string"
          },
          "visaSecurityCode": {
            "type": "string"
          },
          "visaCreditLimit": {
            "type": "string"
          },
          "visaDelinquency": {
            "type": "string"
          },
          "visaCreditRating": {
            "type": "string"
          },
          "termLength": {
            "type": "string"
          },
          "termBasis": {
            "type": "string"
          },
          "termValue": {
            "type": "string"
          },
          "interestType": {
            "type": "string"
          },
          "interestCategory02": {
            "type": "string"
          },
          "tierTableName": {
            "type": "string"
          },
          "domesticRisk": {
            "type": "string"
          },
          "crossBorderRisk": {
            "type": "string"
          },
          "accountCrossBorderRisk": {
            "type": "string"
          },
          "securityCode": {
            "type": "string"
          },
          "timeBand": {
            "type": "string"
          },
          "vostroAccountBankID": {
            "type": "string"
          },
          "glClassificationCode": {
            "type": "string"
          },
          "accountOpenDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "copies": {
            "type": "string"
          },
          "noticeProcessing": {
            "type": "string"
          },
          "accountExtraction": {
            "type": "string"
          },
          "matchedRate": {
            "type": "string"
          },
          "fcyClause": {
            "type": "string"
          },
          "currency": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          },
          "interestRateChangeStatement": {
            "type": "string"
          },
          "reviewMethod": {
            "type": "string"
          },
          "brokerNumber": {
            "type": "string"
          },
          "foreignCurrency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          },
          "baseForeignCurrencyAccount": {
            "type": "string"
          },
          "bookingNumber": {
            "type": "string"
          },
          "transferPercentRate": {
            "type": "string"
          },
          "termCertificateNumber": {
            "type": "string"
          },
          "insurancePackageNumber": {
            "type": "string"
          },
          "insuraceTerm": {
            "type": "string"
          },
          "interestTransferBsb": {
            "type": "string"
          },
          "chequeSignatureValidation": {
            "type": "string"
          },
          "accountSegmentCode": {
            "type": "string"
          },
          "statementDeliveryMode": {
            "type": "string",
            "description": "Print Statement"
          },
          "smsAlertServiceIndicator": {
            "type": "string"
          },
          "regularSmsAlertsFrequency": {
            "type": "string"
          },
          "regularSmsAlertsDay": {
            "type": "string"
          },
          "commodityCode": {
            "type": "string",
            "description": "Industry Sector"
          },
          "groupCode": {
            "type": "string"
          },
          "checkCustomerLimit": {
            "type": "string"
          },
          "termBreakoutAmount": {
            "type": "string"
          },
          "nominatedSettlementOption": {
            "type": "string"
          },
          "badDebtIndicator": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "interestType01": {
            "type": "string"
          },
          "samaCode": {
            "type": "string"
          },
          "customerSegmentCode": {
            "type": "string"
          },
          "mortgageOffsetIndicator": {
            "type": "string"
          },
          "principalChangeAmount": {
            "type": "string"
          },
          "pricipaleChangeFrequency": {
            "type": "string"
          },
          "statementNarratives": {
            "type": "string"
          },
          "specialGrant": {
            "type": "string"
          },
          "invalidTin": {
            "type": "string"
          },
          "backupWithholdingStartDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "noticeStartDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "backupWithholding": {
            "type": "string"
          },
          "salExpiryFlag": {
            "type": "string"
          },
          "holidayProcessingFlag": {
            "type": "string"
          },
          "casualRateType": {
            "type": "string"
          },
          "casualOverdraftRate": {
            "type": "string"
          },
          "projectNameReference": {
            "type": "string"
          },
          "fixedAmountLoan": {
            "type": "string"
          },
          "creditReductionLoan": {
            "type": "string"
          },
          "creditPriority": {
            "type": "string"
          },
          "dpsPriority": {
            "type": "string"
          },
          "dpsSubPriority": {
            "type": "string"
          },
          "creditFunds": {
            "type": "string"
          },
          "minimumTransferAmount": {
            "type": "string"
          },
          "dpsInclusion": {
            "type": "string"
          },
          "flag1": {
            "type": "string"
          },
          "flag2": {
            "type": "string"
          },
          "flag3": {
            "type": "string"
          },
          "flag4": {
            "type": "string"
          },
          "flag5": {
            "type": "string"
          },
          "attribute01": {
            "type": "string"
          },
          "attribute02": {
            "type": "string"
          },
          "attribute03": {
            "type": "string"
          },
          "attribute04": {
            "type": "string"
          },
          "attribute05": {
            "type": "string"
          },
          "attribute06": {
            "type": "string"
          },
          "attribute07": {
            "type": "string"
          },
          "attribute08": {
            "type": "string"
          },
          "attribute09": {
            "type": "string"
          },
          "attribute10": {
            "type": "string"
          },
          "minimumFundsLeft": {
            "type": "string"
          },
          "noChaseFlag": {
            "type": "string"
          },
          "linkAccount": {
            "type": "string"
          },
          "minorMajorFlag": {
            "type": "string"
          },
          "creditDebitAllowed": {
            "type": "string"
          },
          "autoTermDeposit": {
            "type": "string"
          },
          "autoAccountType": {
            "maxLength": 4,
            "type": "string"
          },
          "autoSubCategory": {
            "type": "string"
          },
          "autoInterestFrequency": {
            "type": "string"
          },
          "autoTermBasis": {
            "type": "string"
          },
          "autoInterestPaymentMethod": {
            "type": "string"
          },
          "autoTransferAccountNumber": {
            "type": "string"
          },
          "autoInterestTransferSystem": {
            "type": "string"
          },
          "autoTermLength": {
            "type": "string"
          },
          "specialCondition": {
            "type": "string"
          },
          "expiryDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "agreementCode": {
            "type": "string"
          },
          "facilityCode": {
            "type": "string"
          },
          "syndFlag": {
            "type": "string"
          },
          "subSyndNum": {
            "type": "string"
          },
          "funderFlag": {
            "type": "string"
          },
          "riskGrd": {
            "type": "string"
          },
          "carryForwardFlag": {
            "type": "string"
          },
          "accountRisk": {
            "type": "string"
          },
          "checkList1": {
            "type": "string"
          },
          "checkList2": {
            "type": "string"
          },
          "checkList3": {
            "type": "string"
          },
          "checkList4": {
            "type": "string"
          },
          "checkList5": {
            "type": "string"
          },
          "checkList6": {
            "type": "string"
          },
          "checkList7": {
            "type": "string"
          },
          "folioAccountFlag": {
            "type": "string"
          },
          "mAcctNumber": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "accountTrfName": {
            "type": "string"
          },
          "ndipAcknowledgement": {
            "type": "string"
          },
          "homeEntity": {
            "type": "string"
          },
          "filler1": {
            "type": "string"
          },
          "filler2": {
            "type": "string"
          },
          "filler3": {
            "type": "string"
          },
          "filler4": {
            "type": "string"
          },
          "filler5": {
            "type": "string"
          },
          "filler6": {
            "type": "string"
          },
          "affAccount": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "originBranch": {
            "type": "string",
            "description": "Customer relation branch"
          },
          "citizenCode": {
            "type": "string"
          },
          "rmCode": {
            "type": "string"
          },
          "officerCode": {
            "type": "string"
          },
          "retainFlag": {
            "type": "string"
          },
          "specialRateAll": {
            "type": "string"
          },
          "psrRatio": {
            "type": "string"
          },
          "homeBranch": {
            "type": "string"
          },
          "oal": {
            "type": "string"
          },
          "customerType": {
            "type": "string"
          },
          "occupationCode": {
            "type": "string"
          },
          "dateOfBirth": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "originCountry": {
            "pattern": "([A-Z]{2,2})|()",
            "type": "string"
          },
          "citizenship": {
            "type": "string"
          },
          "businessSector": {
            "type": "string"
          },
          "cardAnnualFeewaived": {
            "type": "string"
          },
          "workoutType": {
            "type": "string"
          },
          "installmentAmount": {
            "type": "string"
          },
          "signCondition": {
            "type": "string"
          },
          "watchlistFlag": {
            "type": "string"
          },
          "watchlistDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "akpkTag": {
            "type": "string"
          },
          "akpkDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "recoverableTag": {
            "type": "string"
          },
          "recoverableDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "foreignAdditionalIndicator": {
            "type": "string"
          },
          "stateCode": {
            "type": "string"
          },
          "electronicDisc": {
            "type": "string"
          },
          "maturityDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "maturityAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "treasuryCost": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "treasuryReference": {
            "type": "string"
          },
          "commodityShortName": {
            "type": "string"
          },
          "commodityLongName": {
            "type": "string"
          },
          "brokerShortName": {
            "type": "string"
          },
          "brokerLongName": {
            "type": "string"
          },
          "commodityPrice": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "commodityQuantity": {
            "type": "string"
          },
          "commodityDeffPrice": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "rescindable": {
            "type": "string"
          },
          "iban": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "tranAccount": {
            "type": "string"
          },
          "campaignCode": {
            "type": "string"
          },
          "escrCancelRem": {
            "type": "string"
          },
          "backupWithholdingAccount": {
            "type": "string"
          },
          "accountTitle": {
            "type": "string"
          },
          "accountTypeNew": {
            "type": "string"
          },
          "beneficiaryFirstname": {
            "type": "string"
          },
          "beneficiaryLastname": {
            "type": "string"
          },
          "ibYesNo": {
            "type": "string"
          },
          "statementCounter": {
            "type": "string",
            "description": "Statement Dating"
          },
          "noNilStatement": {
            "type": "string"
          },
          "coExFlag": {
            "type": "string"
          },
          "accountType": {
            "type": "string"
          },
          "specialAccountIndicator": {
            "type": "string"
          },
          "vostroStatement": {
            "type": "string"
          },
          "printNoticeTransactions": {
            "type": "string"
          },
          "accountDivision": {
            "type": "string"
          },
          "samaGroup": {
            "type": "string"
          },
          "ivr": {
            "type": "string"
          },
          "alahli": {
            "type": "string"
          },
          "ecorp": {
            "type": "string"
          },
          "numberOfDbAndDepCard": {
            "type": "string"
          },
          "limitDepositCard": {
            "type": "string"
          },
          "jointAccounts": {
            "type": "string"
          },
          "wergildAmount": {
            "type": "string"
          },
          "linkCif": {
            "pattern": "([0-9]){14}|([0]){1}|()",
            "type": "string"
          },
          "addressValidFromDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "addressValidToDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "waselPostOfficeType": {
            "type": "string"
          },
          "basicNumber": {
            "type": "string"
          },
          "unitNumber": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "poBox": {
            "type": "string"
          },
          "district": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "internalMail": {
            "type": "string"
          },
          "accountOpeningReason": {
            "type": "string"
          },
          "specifyReasons": {
            "type": "string",
            "description": "If account opening reason is other, Specify"
          },
          "initialDeposit": {
            "type": "string"
          },
          "depositorName01": {
            "type": "string"
          },
          "depositorName02": {
            "type": "string"
          },
          "depositorName03": {
            "type": "string"
          },
          "beneficiaryNameLocal01": {
            "type": "string"
          },
          "beneficiaryNameLocal02": {
            "type": "string"
          },
          "beneficiaryNameLocal03": {
            "type": "string"
          },
          "beneficiaryNameInternational1": {
            "type": "string"
          },
          "beneficiaryNameInternational2": {
            "type": "string"
          },
          "beneficiaryNameInternational3": {
            "type": "string"
          },
          "channelPhoneFax": {
            "type": "string"
          },
          "channelBranch": {
            "type": "string"
          },
          "channelMobile": {
            "type": "string"
          },
          "channelElectronic": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "localTransfer": {
            "type": "string"
          },
          "internationalTransfer": {
            "type": "string"
          },
          "otherTransfer": {
            "type": "string"
          },
          "specifyOtherTransfer": {
            "type": "string",
            "description": "Specify if other transfer selected"
          },
          "serviceNone": {
            "type": "string"
          },
          "serviceLoans": {
            "type": "string"
          },
          "serviceTreasary": {
            "type": "string"
          },
          "serviceCreditCards": {
            "type": "string"
          },
          "totalMonthlyCashDeposit": {
            "type": "string",
            "description": "Total Expected Monthly Cash Deposits"
          },
          "totalMonthlyChequeDeposit": {
            "type": "string",
            "description": "Total Expected Monthly Cheque Deposits"
          },
          "totalMonthlyIncomingTransfer": {
            "type": "string",
            "description": "Total Expected Monthly Incoming\r\n\t\t\t\t\t\t\tLocal/International Transfers"
          },
          "transferCountry01": {
            "pattern": "([A-Z]{2,2})|()",
            "type": "string",
            "description": "Most significant three countries to transfer\r\n\t\t\t\t\t\t\tto\r\n\t\t\t\t\t\t\tor from"
          },
          "transferCountry02": {
            "pattern": "([A-Z]{2,2})|()",
            "type": "string",
            "description": "Most significant three countries to transfer\r\n\t\t\t\t\t\t\tto\r\n\t\t\t\t\t\t\tor from"
          },
          "transferCountry03": {
            "pattern": "([A-Z]{2,2})|()",
            "type": "string",
            "description": "Most significant three countries to transfer\r\n\t\t\t\t\t\t\tto\r\n\t\t\t\t\t\t\tor from"
          },
          "transferReason01": {
            "type": "string",
            "description": "Reasons of international transfer"
          },
          "transferReason02": {
            "type": "string",
            "description": "Reasons of international transfer"
          },
          "transferReason03": {
            "type": "string",
            "description": "Reasons of international transfer"
          },
          "totalMonthlyCashWithdrawl": {
            "type": "string",
            "description": "Total Expected Monthly Cash Withdrawals"
          },
          "totalMonthlyChequeWithdrawl": {
            "type": "string",
            "description": "Total Expected Monthly Cheque Withdrawals"
          },
          "totalMonthlyOutgoingTransfer": {
            "type": "string",
            "description": "Total Expected Monthly Incoming Outgoing\r\n\t\t\t\t\t\t\tLocal/International Transfers"
          },
          "investmentAccountBalance": {
            "type": "string"
          },
          "expNumberTrans": {
            "type": "string"
          },
          "expMaximumValueOfTransfer": {
            "type": "string"
          },
          "modeElectronic": {
            "type": "string"
          },
          "accountOwnUse": {
            "type": "string"
          },
          "relationDepositAccount": {
            "type": "string"
          },
          "vostroAccountBankIndicator": {
            "type": "string"
          },
          "scanImageID": {
            "type": "string"
          },
          "portNameLatin": {
            "type": "string"
          },
          "portNameArabic": {
            "type": "string"
          },
          "creationBranch": {
            "type": "string"
          },
          "portTAdawlFlag": {
            "type": "string"
          },
          "specPortAccount": {
            "type": "string"
          },
          "finalBeneficiary": {
            "type": "string"
          },
          "subscriptionFlag900": {
            "type": "string"
          },
          "subscriptionFlag910": {
            "type": "string"
          },
          "samaMsbFlag": {
            "type": "string"
          },
          "filler7": {
            "type": "string"
          },
          "accountClassification": {
            "type": "string"
          },
          "samaApprovalNumber": {
            "type": "string",
            "description": "SAMA/Compliance Division Approval no."
          },
          "approvalDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "mtFeeApplicable": {
            "type": "string"
          },
          "mtFeeAmount": {
            "type": "string"
          },
          "houseLaborIndicator": {
            "type": "string"
          },
          "linkedAccount": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "sssReferenceNumber": {
            "type": "string"
          },
          "cardLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "filler8": {
            "type": "string"
          },
          "interestType02": {
            "type": "string"
          },
          "interestCategory01": {
            "type": "string"
          },
          "checkerId": {
            "type": "string"
          },
          "statementForm": {
            "type": "string"
          },
          "paymentSupportCashCheckbox": {
            "type": "string"
          },
          "paymentSupportChequeCheckbox": {
            "type": "string"
          },
          "paymentSupportCreditCardCheckbox": {
            "type": "string"
          },
          "paymentSupportInternationalTransferCheckbox": {
            "type": "string"
          },
          "paymentSupportLocalTransferCheckbox": {
            "type": "string"
          },
          "paymentSupportInternationalN1TransferCheckbox": {
            "type": "string"
          },
          "paymentSupportOthersCheckbox": {
            "type": "string"
          },
          "paymentSupportOthers": {
            "type": "string"
          },
          "channelATMCheckbox": {
            "type": "string"
          },
          "channelCorporateCheckbox": {
            "type": "string"
          },
          "channelAlahliCorpCheckbox": {
            "type": "string"
          },
          "bankChequeCheckbox": {
            "type": "string"
          },
          "soldChequeCheckbox": {
            "type": "string"
          },
          "personalChequeCheckbox": {
            "type": "string"
          },
          "intrChequeCheckbox": {
            "type": "string"
          },
          "serviceColtnCheckbox": {
            "type": "string"
          },
          "serviceLcCheckbox": {
            "type": "string"
          },
          "serviceLgCheckbox": {
            "type": "string"
          },
          "serviceIndFactorCheckbox": {
            "type": "string"
          },
          "suppNameAddress1": {
            "type": "string"
          },
          "suppNameAddress2": {
            "type": "string"
          },
          "suppNameAddress3": {
            "type": "string"
          },
          "customerNameAddress1": {
            "type": "string"
          },
          "customerNameAddress2": {
            "type": "string"
          },
          "customerNameAddress3": {
            "type": "string"
          },
          "geoLocationAddress1": {
            "type": "string"
          },
          "geoLocationAddress2": {
            "type": "string"
          },
          "geoLocationAddress3": {
            "type": "string"
          },
          "totalOutInternalTransfer": {
            "type": "string"
          },
          "totalInInternalTransfer": {
            "type": "string"
          },
          "instrumentType": {
            "type": "string"
          },
          "feeBearer": {
            "type": "string"
          },
          "applicationDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "applicationAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "creditAvailWith": {
            "type": "string"
          },
          "creditAvailBy": {
            "type": "string"
          },
          "placeOfExpiry": {
            "type": "string"
          },
          "letterOfGuarantee": {
            "type": "string"
          },
          "flatFee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "balancePercentageFee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "reviewDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "favouree": {
            "type": "string"
          },
          "marginAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "feeAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "syndicationFlag": {
            "type": "string"
          },
          "lcType": {
            "type": "string"
          },
          "lcDepositAccount": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "typeOfGoods": {
            "type": "string"
          },
          "otherSpecsLC": {
            "type": "string"
          },
          "lgType": {
            "type": "string"
          },
          "filler9": {
            "type": "string"
          },
          "lgDepositAccount": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "otherSpecsLG": {
            "type": "string"
          },
          "refinanceUssance1": {
            "type": "string"
          },
          "refinanceUssance2": {
            "type": "string"
          },
          "accountIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_accountIdentifier"
              },
              {
                "description": "This is required to route call to create\r\n\t\t\t\t\t\t\tdeposit account(DEP) or Contingent\r\n\t\t\t\t\t\t\taccount(CTA), if value empty\r\n\t\t\t\t\t\t\tthen should\r\n\t\t\t\t\t\t\tconsider deposit account."
              }
            ]
          },
          "totalExpectedMonthlyOtherDeposits": {
            "type": "string"
          },
          "addRepresentative": {
            "type": "string"
          },
          "ownershipPercentage": {
            "type": "string"
          },
          "isCustomerRelationCheckBox": {
            "type": "string"
          },
          "realBeneficiaryFlag": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_DepositAccountCreationResponse": {
        "title": "tns_DepositAccountCreationResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_DepositAccountCreationResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_DepositAccountCreationResponseType": {
        "title": "tns_DepositAccountCreationResponseType",
        "type": "object",
        "properties": {
          "accountId": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "iban": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_StandingOrderFeeRequest": {
        "title": "tns_StandingOrderFeeRequest",
        "type": "object",
        "properties": {
          "accountNumber": {
            "maxLength": 17,
            "pattern": "([0-9]{1,17})",
            "type": "string"
          },
          "feeType": {
            "maxLength": 3,
            "type": "string"
          },
          "accountType": {
            "maxLength": 4,
            "type": "string"
          },
          "accountIntCat": {
            "maxLength": 4,
            "type": "string"
          },
          "division": {
            "maxLength": 3,
            "type": "string"
          },
          "program": {
            "maxLength": 3,
            "type": "string"
          },
          "tranCode": {
            "type": "string"
          },
          "branchType": {
            "maxLength": 1,
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "bankCode": {
            "maxLength": 4,
            "type": "string"
          },
          "transactionCurrency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          },
          "geoArea": {
            "maxLength": 3,
            "type": "string"
          },
          "monthOfYear": {
            "maxLength": 2,
            "type": "string"
          },
          "dayOfWeek": {
            "maxLength": 1,
            "type": "string"
          },
          "frequency": {
            "maxLength": 1,
            "type": "string"
          },
          "frequency1": {
            "maxLength": 2,
            "type": "string"
          },
          "segmentCode": {
            "maxLength": 2,
            "type": "string"
          },
          "transactionDateDay": {
            "maxLength": 2,
            "type": "string"
          },
          "transactionDateMonth": {
            "maxLength": 2,
            "type": "string"
          },
          "transactionDateYear": {
            "maxLength": 4,
            "type": "string"
          },
          "transactionTimeHours": {
            "maxLength": 2,
            "type": "string"
          },
          "transactionTimeMins": {
            "maxLength": 2,
            "type": "string"
          },
          "transactionEventInd": {
            "maxLength": 1,
            "type": "string"
          },
          "transactionMnemonic": {
            "maxLength": 2,
            "type": "string"
          },
          "transactionAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              }
            ]
          },
          "others1": {
            "type": "string"
          },
          "others2": {
            "type": "string"
          },
          "others3": {
            "type": "string"
          },
          "others4": {
            "type": "string"
          },
          "others5": {
            "type": "string"
          },
          "others6": {
            "type": "string"
          },
          "response": {
            "type": "string"
          },
          "staffInd": {
            "maxLength": 1,
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_StandingOrderFeeResponse": {
        "title": "tns_StandingOrderFeeResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_StandingOrderFeeSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_StandingOrderFeeSuccessType": {
        "title": "tns_StandingOrderFeeSuccessType",
        "type": "object",
        "properties": {
          "accountNumber": {
            "maxLength": 20,
            "type": "string"
          },
          "accountCurrencyCode": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          },
          "status": {
            "maxLength": 4,
            "type": "string"
          },
          "branchNumber": {
            "type": "string"
          },
          "accountTypeDescription": {
            "type": "string"
          },
          "accountType": {
            "maxLength": 4,
            "type": "string"
          },
          "accountIntCat": {
            "maxLength": 4,
            "type": "string"
          },
          "customerNumber": {
            "type": "string"
          },
          "customerSegmentCode": {
            "maxLength": 4,
            "type": "string"
          },
          "currentBalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              }
            ]
          },
          "averageBalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              }
            ]
          },
          "userCodes": {
            "type": "string"
          },
          "feeType": {
            "maxLength": 3,
            "type": "string"
          },
          "System": {
            "type": "string"
          },
          "division": {
            "maxLength": 3,
            "type": "string"
          },
          "segmentCode": {
            "maxLength": 2,
            "type": "string"
          },
          "program": {
            "maxLength": 3,
            "type": "string"
          },
          "transactionEvent": {
            "type": "string"
          },
          "channel": {
            "maxLength": 2,
            "type": "string"
          },
          "branchType": {
            "maxLength": 1,
            "type": "string"
          },
          "countryCode": {
            "maxLength": 2,
            "type": "string"
          },
          "countryName": {
            "type": "string"
          },
          "bankCode": {
            "maxLength": 4,
            "type": "string"
          },
          "transactionCurrencyCode": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          },
          "geoArea": {
            "maxLength": 3,
            "type": "string"
          },
          "monthOfYear": {
            "maxLength": 2,
            "type": "string"
          },
          "dayOfWeek": {
            "maxLength": 1,
            "type": "string"
          },
          "frequencyCode": {
            "maxLength": 1,
            "type": "string"
          },
          "frequency": {
            "maxLength": 2,
            "type": "string"
          },
          "transactionDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "transactionTime": {
            "maxLength": 5,
            "type": "string"
          },
          "transactionEventInd": {
            "maxLength": 1,
            "type": "string"
          },
          "transactionAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              }
            ]
          },
          "transactionMnemonic": {
            "type": "string"
          },
          "others1": {
            "type": "string"
          },
          "others2": {
            "type": "string"
          },
          "others3": {
            "type": "string"
          },
          "others4": {
            "type": "string"
          },
          "others5": {
            "type": "string"
          },
          "others6": {
            "type": "string"
          },
          "standardFee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              }
            ]
          },
          "waiveFee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              }
            ]
          },
          "netFee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              }
            ]
          },
          "feeExempted": {
            "type": "string"
          },
          "feeWithoutVat": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "vat": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "taxRate": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_accountIdentifierType": {
        "title": "tns_accountIdentifierType",
        "type": "object",
        "description": ""
      },
      "tns_StandingOrderCreationRequest": {
        "title": "tns_StandingOrderCreationRequest",
        "type": "object",
        "properties": {
          "fromAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "From Account NO"
          },
          "transferAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "Standing Order Amount"
              }
            ]
          },
          "frequency": {
            "maxLength": 2,
            "type": "string",
            "description": "Frequency ( Default cycle – 01)"
          },
          "frequencyCode": {
            "maxLength": 1,
            "type": "string",
            "description": "Frequnecy Code D-Daily, M-Monthly or W-Weekly"
          },
          "toAccountId": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string",
            "description": "To Account No in case of NCB to NCB"
          },
          "mfAccountNumber": {
            "type": "string"
          },
          "startDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Standing Order Start Date"
          },
          "fromCurrencyCode": {
            "pattern": "[A-Z]{3,3}",
            "type": "string",
            "description": "From Account Currency Code"
          },
          "securityCode": {
            "maxLength": 4,
            "type": "string",
            "description": "Security Code"
          },
          "toCurrencyCode": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          },
          "priorityCode": {
            "maxLength": 2,
            "type": "string",
            "description": "Priority Code"
          },
          "toAccountIdComments": {
            "type": "string"
          },
          "channelCode": {
            "type": "string",
            "description": "Branch"
          },
          "acceptFundFlag": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_YorNType"
              }
            ]
          },
          "acceptRiskFlag": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_YorNType"
              }
            ]
          },
          "thimarAppFee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "systemIdCode": {
            "maxLength": 3,
            "type": "string"
          },
          "endDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Standing Order End Date"
          },
          "commission": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "calendar": {
            "maxLength": 1,
            "type": "string",
            "description": "Calendar Code G-Gregorian H-Hijri"
          },
          "autoChaseDays": {
            "maxLength": 2,
            "type": "string"
          },
          "paymentType": {
            "maxLength": 2,
            "type": "string",
            "description": "Payment Type eg GS"
          },
          "purpose": {
            "maxLength": 5,
            "type": "string",
            "description": "its value can be “FR”"
          },
          "payFeeOrFine": {
            "maxLength": 2,
            "type": "string"
          },
          "ibanNumber": {
            "type": "string",
            "description": "IBAN In case of SWFT/SARIE"
          },
          "ibanFlag": {
            "maxLength": 1,
            "type": "string",
            "description": "For NCB to NCB=N , For SARIE=L, For SWFT=I"
          },
          "amountFlag": {
            "maxLength": 1,
            "type": "string",
            "description": "To Identify whether Standing Order amount is\r\n\t\t\t\t\t\t\tCredit Amount or Debit Amount"
          },
          "renewalFlag": {
            "maxLength": 1,
            "type": "string",
            "description": "Standing Order Renewal Flag"
          },
          "feeBearingAccount": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string",
            "description": "Fee Bearing Account"
          },
          "beneficiaryName": {
            "type": "string",
            "description": "Beneficiary Name In case of SWFT/SARIE"
          },
          "beneficiaryAddress1": {
            "type": "string",
            "description": "Address1 In case of SWFT/SARIE"
          },
          "beneficiaryAddress2": {
            "type": "string",
            "description": "Address2 In case of SWFT/SARIE"
          },
          "beneficiaryAddress3": {
            "type": "string",
            "description": "Address3 In case of SWFT/SARIE"
          },
          "localBankCode": {
            "maxLength": 10,
            "type": "string",
            "description": "loca lBank Code - this requires for sarie"
          },
          "templateId": {
            "type": "string",
            "description": "is the desired unique Payment Template\r\n\t\t\t\t\t\t\tIdentification. this requires for both sarie\r\n\t\t\t\t\t\t\tand swift"
          },
          "swiftBic": {
            "maxLength": 20,
            "type": "string",
            "description": "Bic Code. this requires for swift"
          },
          "bankName": {
            "type": "string",
            "description": "bank Name of the beneficiary. In case of\r\n\t\t\t\t\t\t\tSWFT/SARIE"
          },
          "bankRouteCode": {
            "maxLength": 18,
            "type": "string",
            "description": "Bank Route Code. this requires for swift"
          },
          "treasuryRate": {
            "type": "string",
            "description": "in case of cross currency transaction"
          },
          "counterAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "in case of cross currency transaction"
              }
            ]
          },
          "baseAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "in case of cross currency transaction"
              }
            ]
          },
          "cif": {
            "pattern": "([0-9]){14}|([0]){1}|()",
            "type": "string"
          },
          "remitterName": {
            "type": "string",
            "description": "Remitter Name In case of SWFT/SARIE"
          },
          "dealId": {
            "type": "string",
            "description": "in case of cross currency transaction"
          },
          "investmentAccountNumber": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string",
            "description": "in case of fund in"
          },
          "classification": {
            "type": "string",
            "description": "01 -Customer, 02- SAMA, 03- Court"
          },
          "narrative": {
            "type": "string",
            "description": "Statement Narrative"
          },
          "standingInstructionOrderDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "finalPayment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "standingInstructionType": {
            "type": "string"
          },
          "agreeFlag": {
            "type": "string"
          },
          "signFlag": {
            "type": "string"
          },
          "standingOrderIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_standingOrderIdentifierType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_standingOrderIdentifierType": {
        "title": "tns_standingOrderIdentifierType",
        "enum": [
          "NCBTONCB",
          "FUNDIN",
          "SARIE",
          "SWIFT"
        ],
        "type": "string",
        "description": ""
      },
      "tns_StandingOrderCreationResponse": {
        "title": "tns_StandingOrderCreationResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_StandingOrderCreationSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_StandingOrderCreationSuccessType": {
        "title": "tns_StandingOrderCreationSuccessType",
        "type": "object",
        "properties": {
          "referenceNumber": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_StandingOrderCancellationRequest": {
        "title": "tns_StandingOrderCancellationRequest",
        "type": "object",
        "properties": {
          "fromAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "fromAccountId"
          },
          "transferAmount": {
            "type": "number",
            "description": "transferAmount"
          },
          "frequency": {
            "type": "string",
            "description": "01: Default Cycle"
          },
          "frequencyCode": {
            "type": "string",
            "description": "D: Daily, M: Monthly or W: Weekly"
          },
          "orderDate": {
            "pattern": "([0-9]){8}",
            "type": "string",
            "description": "orderDate"
          },
          "toAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "in case of NCB to NCB"
          },
          "fromAccountIdComments": {
            "type": "string",
            "description": "fromAccountIdComments"
          },
          "startDate": {
            "pattern": "([0-9]){8}",
            "type": "string",
            "description": "SO Start Date"
          },
          "fromCurrencyCode": {
            "pattern": "[A-Z]{3,3}",
            "type": "string",
            "description": "fromCurrencyCode"
          },
          "toCurrencyCode": {
            "pattern": "[A-Z]{3,3}",
            "type": "string",
            "description": "toCurrencyCode"
          },
          "toAccountIdComments": {
            "type": "string",
            "description": "toAccountIdComments"
          },
          "channelCode": {
            "type": "string",
            "description": "branch"
          },
          "acceptFundFlag": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_YorNType"
              },
              {
                "description": "acceptFundFlag"
              }
            ]
          },
          "acceptRiskFlag": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_YorNType"
              },
              {
                "description": "acceptRiskFlag"
              }
            ]
          },
          "thimarAppFee": {
            "type": "number",
            "description": "thimarAppFee"
          },
          "systemIdentifierCode": {
            "type": "string",
            "description": "systemIdentifierCode"
          },
          "endDate": {
            "pattern": "([0-9]){8}",
            "type": "string",
            "description": "SO End Date"
          },
          "recordForFNSUse": {
            "type": "string",
            "description": "recordForFNSUse"
          },
          "ibanNumber": {
            "type": "string",
            "description": "In case of SWFT/SARIE"
          },
          "ibanFlag": {
            "type": "string",
            "description": "For NCB to NCB =\"N\" , For SARIE = \"L\", For\r\n\t\t\t\t\t\t\tSWFT\r\n\t\t\t\t\t\t\t= \"I\""
          },
          "amountFlag": {
            "type": "string",
            "description": "to Identify whether Standing Order amount is\r\n\t\t\t\t\t\t\tCredit Amount or Debit Amount"
          },
          "renewalFlag": {
            "type": "string",
            "description": "Standing Order Renewal Flag"
          },
          "feeBearingAccount": {
            "type": "string",
            "description": "feeBearingAccount"
          },
          "beneficiaryName": {
            "type": "string",
            "description": "In case of SWFT/SARIE"
          },
          "beneficiaryAddress1": {
            "type": "string",
            "description": "In case of SWFT/SARIE"
          },
          "beneficiaryAddress2": {
            "type": "string",
            "description": "In case of SWFT/SARIE"
          },
          "beneficiaryAddress3": {
            "type": "string",
            "description": "In case of SWFT/SARIE"
          },
          "localBankCode": {
            "maxLength": 4,
            "type": "string",
            "description": "in case of SARIE"
          },
          "templateId": {
            "type": "string",
            "description": "TemplateId"
          },
          "swiftBic": {
            "maxLength": 20,
            "type": "string",
            "description": "In case of SWFT transfer"
          },
          "bankName": {
            "type": "string",
            "description": "In case of SWFT/SARIE"
          },
          "bankRouteCode": {
            "maxLength": 18,
            "type": "string",
            "description": "In case of SWFT transfer"
          },
          "treasuryRate": {
            "type": "string",
            "description": "in case of cross currency transaction"
          },
          "counterAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "in case of cross currency transaction"
              }
            ]
          },
          "baseAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "in case of cross currency transaction"
              }
            ]
          },
          "cif": {
            "pattern": "([0-9]){14}|([0]){1}|()",
            "type": "string"
          },
          "investmentAccountNumber": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string",
            "description": "in case of fund in"
          },
          "standingOrderIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_standingOrderIdentifierType"
              }
            ]
          },
          "classification": {
            "type": "string",
            "description": "01 -Customer, 02- SAMA, 03- Court"
          },
          "narrative": {
            "type": "string",
            "description": "Statement Narrative"
          },
          "reasonCode": {
            "type": "string",
            "description": "Reason Code"
          },
          "standingOrderType": {
            "type": "string",
            "description": "Standing Order Type"
          },
          "standingInstructionType": {
            "type": "string",
            "description": "Standing Instruction Type"
          }
        },
        "description": "StandingOrderCancellationRequest"
      },
      "tns_StandingOrderCancellationResponse": {
        "title": "tns_StandingOrderCancellationResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_StandingOrderCancellationsuccessType"
              },
              {
                "description": "StandingOrderCancellationresponse"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              },
              {
                "description": "fault"
              }
            ]
          }
        },
        "description": "StandingOrderCancellationResponse"
      },
      "tns_StandingOrderCancellationsuccessType": {
        "title": "tns_StandingOrderCancellationsuccessType",
        "type": "object",
        "properties": {
          "referenceNumber": {
            "type": "string",
            "description": "referenceNumber"
          }
        },
        "description": "fromAccountId"
      },
      "tns_StandingOrderUpdationRequest": {
        "title": "tns_StandingOrderUpdationRequest",
        "type": "object",
        "properties": {
          "fromAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "fromAccountId"
          },
          "transferAmount": {
            "type": "number",
            "description": "transferAmount"
          },
          "frequency": {
            "type": "string",
            "description": "01: Default Cycle"
          },
          "frequencyCode": {
            "type": "string",
            "description": "D: Daily, M: Monthly or W: Weekly"
          },
          "orderDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "orderDate"
          },
          "toAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "in case of NCB to NCB"
          },
          "fromAccountIdComments": {
            "type": "string",
            "description": "fromAccountIdComments"
          },
          "startDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "SO Start Date"
          },
          "fromCurrencyCode": {
            "pattern": "[A-Z]{3,3}",
            "type": "string",
            "description": "fromCurrencyCode"
          },
          "securityCode": {
            "type": "string",
            "description": "securityCode"
          },
          "toCurrencyCode": {
            "pattern": "[A-Z]{3,3}",
            "type": "string",
            "description": "toCurrencyCode"
          },
          "priorityCode": {
            "type": "string",
            "description": "priorityCode"
          },
          "toAccountIdComments": {
            "type": "string",
            "description": "toAccountIdComments"
          },
          "channelCode": {
            "type": "string",
            "description": "branch"
          },
          "acceptFundFlag": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_YorNType"
              },
              {
                "description": "acceptFundFlag"
              }
            ]
          },
          "acceptRiskFlag": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_YorNType"
              },
              {
                "description": "acceptRiskFlag"
              }
            ]
          },
          "thimarAppFee": {
            "type": "number",
            "description": "thimarAppFee"
          },
          "systemIdCode": {
            "type": "string",
            "description": "systemIdCode"
          },
          "endDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "SO End Date"
          },
          "commission1": {
            "type": "number",
            "description": "commission1"
          },
          "record": {
            "type": "string",
            "description": "record"
          },
          "referenceNumber": {
            "type": "string",
            "description": "referenceNumber"
          },
          "calendar": {
            "type": "string",
            "description": "G for Gregorian, H: Hijr"
          },
          "autoChaseDays": {
            "type": "string",
            "description": "autoChaseDays"
          },
          "paymentType": {
            "type": "string",
            "description": "Payment Type ex. “GS”"
          },
          "paymentPurpose": {
            "type": "string",
            "description": "paymentPurpose"
          },
          "payFeeOrFine": {
            "type": "string",
            "description": "payFeeOrFine"
          },
          "ibanNumber": {
            "type": "string",
            "description": "In case of SWFT/SARIE"
          },
          "ibanFlag": {
            "type": "string",
            "description": "ibanFlag"
          },
          "amountFlag": {
            "type": "string",
            "description": "to Identify whether Standing Order amount is\r\n\t\t\t\t\t\t\tCredit Amount or Debit Amount"
          },
          "renewalFlag": {
            "type": "string",
            "description": "Standing Order Renewal Flag"
          },
          "feeBearingAccount": {
            "type": "string",
            "description": "feeBearingAccount"
          },
          "beneficiaryName": {
            "type": "string",
            "description": "In case of SWFT/SARIE"
          },
          "beneficiaryAddress1": {
            "type": "string",
            "description": "In case of SWFT/SARIE"
          },
          "beneficiaryAddress2": {
            "type": "string",
            "description": "In case of SWFT/SARIE"
          },
          "beneficiaryAddress3": {
            "type": "string",
            "description": "In case of SWFT/SARIE"
          },
          "localBankCode": {
            "maxLength": 4,
            "type": "string",
            "description": "in case of SARIE"
          },
          "bankName": {
            "maxLength": 35,
            "type": "string",
            "description": "In case of SWFT/SARIE"
          },
          "bankRouteCode": {
            "maxLength": 32,
            "type": "string",
            "description": "In case of SWFT transfer"
          },
          "swiftbic": {
            "maxLength": 20,
            "type": "string",
            "description": "In case of SWFT transfer"
          },
          "templateId": {
            "type": "string",
            "description": "TemplateId"
          },
          "treasuryRate": {
            "type": "string",
            "description": "in case of cross currency transaction"
          },
          "counterAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "in case of cross currency transaction"
              }
            ]
          },
          "baseAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "in case of cross currency transaction"
              }
            ]
          },
          "cif": {
            "pattern": "([0-9]){14}|([0]){1}|()",
            "type": "string"
          },
          "remitterName": {
            "type": "string",
            "description": "In case of SWFT/SARIE"
          },
          "dealId": {
            "type": "string",
            "description": "in case of cross currency transaction"
          },
          "investmentAccountNumber": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string",
            "description": "in case of fund in"
          },
          "standingOrderIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_standingOrderIdentifierType"
              }
            ]
          },
          "classification": {
            "type": "string",
            "description": "01 -Customer, 02- SAMA, 03- Court"
          },
          "narrative": {
            "type": "string",
            "description": "Statement Narrative"
          },
          "action": {
            "type": "string",
            "description": "Action can have below value\r\n\t\t\t\t\t\t\t-\"S\" for Suspend.\r\n\t\t\t\t\t\t\t-\"M\" for Amend/Update.(Default Value)"
          },
          "suspensionRevoketDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Suspend Revoke Date"
          },
          "suspensionStartDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Suspend Start Date"
          },
          "finalPayment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "Transaction Amount"
              }
            ]
          },
          "standingInstructionType": {
            "type": "string",
            "description": "Standing Instruction Type"
          }
        },
        "description": "StandingOrderUpdationRequest"
      },
      "tns_StandingOrderUpdationResponse": {
        "title": "tns_StandingOrderUpdationResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_StandingOrderUpdationSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": "StandingOrderUpdationResponse"
      },
      "tns_StandingOrderUpdationSuccessType": {
        "title": "tns_StandingOrderUpdationSuccessType",
        "type": "object",
        "properties": {
          "referenceNumber": {
            "type": "string",
            "description": "referenceNumber"
          }
        },
        "description": ""
      },
      "tns_SadadInquiryCollectionLinkedAccountsRequest": {
        "title": "tns_SadadInquiryCollectionLinkedAccountsRequest",
        "type": "object",
        "properties": {
          "accountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Account Number"
          }
        },
        "description": ""
      },
      "tns_SadadInquiryCollectionLinkedAccountsResponse": {
        "title": "tns_SadadInquiryCollectionLinkedAccountsResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_sadadInquirycollectionSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_sadadInquirycollectionSuccessType": {
        "title": "tns_sadadInquirycollectionSuccessType",
        "type": "object",
        "properties": {
          "accountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Account Number"
          },
          "beneficiaryDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_benificiaryDetailsType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_benificiaryDetailsType": {
        "title": "tns_benificiaryDetailsType",
        "type": "object",
        "properties": {
          "beneficiaryAccountNumber": {
            "type": "string",
            "description": "Beneficiary Account Number"
          },
          "beneficiaryType": {
            "type": "string",
            "description": "Beneficiary Type"
          },
          "beneficiaryName": {
            "type": "string",
            "description": "Beneficiary Name"
          },
          "beneficiaryBankReference": {
            "type": "string",
            "description": "Beneficiary Bank Reference"
          }
        },
        "description": ""
      },
      "tns_DepositAccountInquiryRequest": {
        "title": "tns_DepositAccountInquiryRequest",
        "required": [
          "accountNumber"
        ],
        "type": "object",
        "properties": {
          "accountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "option": {
            "maxLength": 1,
            "type": "string"
          },
          "coexFlag": {
            "maxLength": 1,
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_DepositAccountInquiryResponse": {
        "title": "tns_DepositAccountInquiryResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_DepositAccountType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_DepositAccountType": {
        "title": "tns_DepositAccountType",
        "required": [
          "nominatedCurrency",
          "originBranch",
          "accountOpeningReason"
        ],
        "type": "object",
        "properties": {
          "accountNumber": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "cif": {
            "pattern": "([0-9]){14}|([0]){1}|()",
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "idType": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "taxFileNumber": {
            "type": "string"
          },
          "address3": {
            "type": "string"
          },
          "nationalityCode": {
            "pattern": "([A-Z]{2,2})|()",
            "type": "string"
          },
          "address4": {
            "type": "string"
          },
          "postCode": {
            "type": "string"
          },
          "productType": {
            "maxLength": 4,
            "type": "string"
          },
          "subCategory": {
            "maxLength": 4,
            "type": "string"
          },
          "legalEntity": {
            "type": "string"
          },
          "intersetPaymentMethod": {
            "type": "string"
          },
          "transferAccountSystem": {
            "type": "string"
          },
          "toAccountNumber": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "exemptProfile": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "statementFrequency": {
            "type": "string"
          },
          "consolidatedStatements": {
            "type": "string"
          },
          "dateFormat": {
            "type": "string"
          },
          "mailIndicator": {
            "type": "string"
          },
          "noticeIndicator": {
            "type": "string"
          },
          "noticeCustomerNumber": {
            "pattern": "([0-9]){14}|([0]){1}|()",
            "type": "string"
          },
          "creditProfitRate": {
            "type": "string"
          },
          "termInterest": {
            "type": "string"
          },
          "interestFrequency": {
            "type": "string"
          },
          "months": {
            "type": "string"
          },
          "days": {
            "type": "string"
          },
          "agentCode": {
            "type": "string",
            "description": "Account Source Agent Code"
          },
          "investmentTypeCode": {
            "type": "string"
          },
          "districtCode": {
            "type": "string"
          },
          "industrySector": {
            "type": "string"
          },
          "groupIndicator": {
            "type": "string"
          },
          "globalLimitNumber": {
            "type": "string",
            "description": "Facility Account"
          },
          "applicationID": {
            "type": "string"
          },
          "visaFlag": {
            "type": "string"
          },
          "visaSecurityCode": {
            "type": "string"
          },
          "visaCreditLimit": {
            "type": "string"
          },
          "visaDelinquency": {
            "type": "string"
          },
          "visaCreditRating": {
            "type": "string"
          },
          "termLength": {
            "type": "string"
          },
          "termBasis": {
            "type": "string"
          },
          "termValue": {
            "type": "string"
          },
          "interestAccountType": {
            "type": "string"
          },
          "interestCategory02": {
            "type": "string"
          },
          "tierTableName": {
            "type": "string"
          },
          "domesticRisk": {
            "type": "string"
          },
          "crossBorderRisk": {
            "type": "string"
          },
          "accountCrossBorderRisk": {
            "type": "string"
          },
          "securityCode": {
            "type": "string"
          },
          "timeBand": {
            "type": "string"
          },
          "vostroAccountBankID": {
            "type": "string"
          },
          "glClassificationCode": {
            "type": "string"
          },
          "accountOpenDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "copies": {
            "type": "string"
          },
          "noticeProcessing": {
            "type": "string"
          },
          "accountExtraction": {
            "type": "string"
          },
          "matchedRate": {
            "type": "string"
          },
          "fcyClause": {
            "type": "string"
          },
          "nominatedCurrency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          },
          "interestRateChangeStatement": {
            "type": "string"
          },
          "reviewMethod": {
            "type": "string"
          },
          "brokerNumber": {
            "type": "string"
          },
          "foreignCurrency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          },
          "baseForeignCurrencyAccount": {
            "type": "string"
          },
          "bookingNumber": {
            "type": "string"
          },
          "transferPercentRate": {
            "type": "string"
          },
          "termCertificateNumber": {
            "type": "string"
          },
          "insurancePackageNumber": {
            "type": "string"
          },
          "insuraceTerm": {
            "type": "string"
          },
          "interestTransferBsb": {
            "type": "string"
          },
          "interestTransferBsb2": {
            "type": "string"
          },
          "chequeSignatureValidation": {
            "type": "string"
          },
          "accountSegmentCode": {
            "type": "string"
          },
          "statementDeliveryMode": {
            "type": "string",
            "description": "Print Statement"
          },
          "smsAlertServiceIndicator": {
            "type": "string"
          },
          "regularSmsAlertsFrequency": {
            "type": "string"
          },
          "regularSmsAlertsDay": {
            "type": "string"
          },
          "commodityCode": {
            "type": "string",
            "description": "Industry Sector"
          },
          "groupCode": {
            "type": "string"
          },
          "checkCustomerLimit": {
            "type": "string"
          },
          "termBreakoutAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "nominatedSettlementOption": {
            "type": "string"
          },
          "badDebtIndicator": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "interestType01": {
            "type": "string"
          },
          "samaCode": {
            "type": "string"
          },
          "mortgageOffsetIndicator": {
            "type": "string"
          },
          "principalChangeAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "pricipaleChangeFrequency": {
            "type": "string"
          },
          "statementNarratives": {
            "type": "string"
          },
          "specialGrant": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "invalidTin": {
            "type": "string"
          },
          "backupWithholdingStartDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "noticeStartDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "backupWithholding": {
            "type": "string"
          },
          "salExpiryFlag": {
            "type": "string"
          },
          "holidayProcessingFlag": {
            "type": "string"
          },
          "casualRateType": {
            "type": "string"
          },
          "casualOverdraftRate": {
            "type": "string"
          },
          "projectNameReference": {
            "type": "string"
          },
          "fixedAmountLoan": {
            "type": "string"
          },
          "creditReductionLoan": {
            "type": "string"
          },
          "creditPriority": {
            "type": "string"
          },
          "dpsPriority": {
            "type": "string"
          },
          "dpsSubPriority": {
            "type": "string"
          },
          "creditFunds": {
            "type": "string"
          },
          "minimumTransferAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "dpsInclusion": {
            "type": "string"
          },
          "flag1": {
            "type": "string"
          },
          "flag2": {
            "type": "string"
          },
          "flag3": {
            "type": "string"
          },
          "flag4": {
            "type": "string"
          },
          "flag5": {
            "type": "string"
          },
          "attribute01": {
            "type": "string"
          },
          "attribute02": {
            "type": "string"
          },
          "attribute03": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "attribute04": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "attribute05": {
            "type": "string"
          },
          "attribute06": {
            "type": "string"
          },
          "attribute07": {
            "type": "string"
          },
          "attribute08": {
            "type": "string"
          },
          "attribute09": {
            "type": "string"
          },
          "attribute10": {
            "type": "string"
          },
          "minimumFundsLeft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "noChaseFlag": {
            "type": "string"
          },
          "linkAccount": {
            "type": "string"
          },
          "minorMajorFlag": {
            "type": "string"
          },
          "creditDebitAllowed": {
            "type": "string"
          },
          "autoTermDeposit": {
            "type": "string"
          },
          "autoAccountType": {
            "maxLength": 4,
            "type": "string"
          },
          "autoSubCategory": {
            "type": "string"
          },
          "autoInterestFrequency": {
            "type": "string"
          },
          "autoTermBasis": {
            "type": "string"
          },
          "autoInterestPaymentMethod": {
            "type": "string"
          },
          "autoTransferAccountNumber": {
            "type": "string"
          },
          "autoInterestTransferSystem": {
            "type": "string"
          },
          "autoTermLength": {
            "type": "string"
          },
          "specialCondition": {
            "type": "string"
          },
          "expiryDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "riskGrd": {
            "type": "string"
          },
          "carryForwardFlag": {
            "type": "string"
          },
          "accountRisk": {
            "type": "string"
          },
          "checkList1": {
            "type": "string"
          },
          "checkList2": {
            "type": "string"
          },
          "checkList3": {
            "type": "string"
          },
          "checkList4": {
            "type": "string"
          },
          "checkList5": {
            "type": "string"
          },
          "checkList6": {
            "type": "string"
          },
          "checkList7": {
            "type": "string"
          },
          "accountTrfName": {
            "type": "string"
          },
          "ndipAcknowledgement": {
            "type": "string"
          },
          "homeEntity": {
            "type": "string"
          },
          "escheatmentProcApp": {
            "type": "string"
          },
          "escheatmentInitDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "escheatmentRemarks": {
            "type": "string"
          },
          "noticeAcknowledgement": {
            "type": "string"
          },
          "cpsiDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "wkitIssuedFlag": {
            "type": "string"
          },
          "affAccount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "originBranch": {
            "type": "string",
            "description": "Customer relation branch"
          },
          "citizenCode": {
            "type": "string"
          },
          "rmCode": {
            "type": "string"
          },
          "officerCode": {
            "type": "string"
          },
          "retainFlag": {
            "type": "string"
          },
          "specialRateAll": {
            "type": "string"
          },
          "psrRatio": {
            "type": "string"
          },
          "oal": {
            "type": "string"
          },
          "cardAnnualFeewaived": {
            "type": "string"
          },
          "workoutType": {
            "type": "string"
          },
          "signCondition": {
            "type": "string"
          },
          "watchlistFlag": {
            "type": "string"
          },
          "watchlistDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "akpkTag": {
            "type": "string"
          },
          "akpkDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "recoverableTag": {
            "type": "string"
          },
          "recoverableDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "foreignAdditionalIndicator": {
            "type": "string"
          },
          "stateCode": {
            "type": "string"
          },
          "electronicDisc": {
            "type": "string"
          },
          "maturityDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "maturityAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "treasuryCost": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "treasuryReference": {
            "type": "string"
          },
          "commodityShortName": {
            "type": "string"
          },
          "commodityLongName": {
            "type": "string"
          },
          "brokerShortName": {
            "type": "string"
          },
          "brokerLongName": {
            "type": "string"
          },
          "commodityPrice": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "commodityQuantity": {
            "type": "string"
          },
          "commodityDeffPrice": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "rescindable": {
            "type": "string"
          },
          "iban": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "tranAccount": {
            "type": "string"
          },
          "campaignCode": {
            "type": "string"
          },
          "escrCancelRem": {
            "type": "string"
          },
          "backupWithholdingAccount": {
            "type": "string"
          },
          "accountTitle": {
            "type": "string"
          },
          "accountTypeNew": {
            "type": "string"
          },
          "beneficiaryFirstname": {
            "type": "string"
          },
          "beneficiaryLastname": {
            "type": "string"
          },
          "ibYesNo": {
            "type": "string"
          },
          "statementCounter": {
            "type": "string",
            "description": "Statement Dating"
          },
          "noNilStatement": {
            "type": "string"
          },
          "coExFlag": {
            "type": "string"
          },
          "accountType": {
            "type": "string"
          },
          "specialAccountIndicator": {
            "type": "string"
          },
          "vostroStatement": {
            "type": "string"
          },
          "printNoticeTransactions": {
            "type": "string"
          },
          "accountDivision": {
            "type": "string"
          },
          "samaGroup": {
            "type": "string"
          },
          "ivr": {
            "type": "string"
          },
          "alahli": {
            "type": "string"
          },
          "ecorp": {
            "type": "string"
          },
          "numberOfDbAndDepCard": {
            "type": "string"
          },
          "limitDepositCard": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "jointAccounts": {
            "type": "string"
          },
          "wergildAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "linkCif": {
            "pattern": "([0-9]){14}|([0]){1}|()",
            "type": "string"
          },
          "addressValidFromDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "addressValidToDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "waselPostOfficeType": {
            "type": "string"
          },
          "basicNumber": {
            "type": "string"
          },
          "unitNumber": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "poBox": {
            "type": "string"
          },
          "district": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "internalMail": {
            "type": "string"
          },
          "accountOpeningReason": {
            "type": "string"
          },
          "specifyReasons": {
            "type": "string",
            "description": "If account opening reason is other, Specify"
          },
          "initialDeposit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "depositorName01": {
            "type": "string"
          },
          "depositorName02": {
            "type": "string"
          },
          "depositorName03": {
            "type": "string"
          },
          "beneficiaryNameLocal01": {
            "type": "string"
          },
          "beneficiaryNameLocal02": {
            "type": "string"
          },
          "beneficiaryNameLocal03": {
            "type": "string"
          },
          "beneficiaryNameInternational1": {
            "type": "string"
          },
          "beneficiaryNameInternational2": {
            "type": "string"
          },
          "beneficiaryNameInternational3": {
            "type": "string"
          },
          "channelPhoneFax": {
            "type": "string"
          },
          "channelBranch": {
            "type": "string"
          },
          "channelMobile": {
            "type": "string"
          },
          "channelElectronic": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "localTransfer": {
            "type": "string"
          },
          "internationalTransfer": {
            "type": "string"
          },
          "otherTransfer": {
            "type": "string"
          },
          "specifyOtherTransfer": {
            "type": "string",
            "description": "Specify if other transfer selected"
          },
          "serviceNone": {
            "type": "string"
          },
          "serviceLoans": {
            "type": "string"
          },
          "serviceTreasary": {
            "type": "string"
          },
          "serviceCreditCards": {
            "type": "string"
          },
          "totalMonthlyCashDeposit": {
            "type": "string",
            "description": "Total Expected Monthly Cash Deposits"
          },
          "totalMonthlyChequeDeposit": {
            "type": "string",
            "description": "Total Expected Monthly Cheque Deposits"
          },
          "totalMonthlyIncomingTransfer": {
            "type": "string",
            "description": "Total Expected Monthly Incoming\r\n\t\t\t\t\t\tLocal/International Transfers"
          },
          "transferCountry01": {
            "pattern": "([A-Z]{2,2})|()",
            "type": "string",
            "description": "Most significant three countries to transfer to\r\n\t\t\t\t\t\tor from"
          },
          "transferCountry02": {
            "pattern": "([A-Z]{2,2})|()",
            "type": "string",
            "description": "Most significant three countries to transfer to\r\n\t\t\t\t\t\tor from"
          },
          "transferCountry03": {
            "pattern": "([A-Z]{2,2})|()",
            "type": "string",
            "description": "Most significant three countries to transfer to\r\n\t\t\t\t\t\tor from"
          },
          "transferReason01": {
            "type": "string",
            "description": "Reasons of international transfer"
          },
          "transferReason02": {
            "type": "string",
            "description": "Reasons of international transfer"
          },
          "transferReason03": {
            "type": "string",
            "description": "Reasons of international transfer"
          },
          "totalMonthlyCashWithdrawl": {
            "type": "string",
            "description": "Total Expected Monthly Cash Withdrawals"
          },
          "totalMonthlyChequeWithdrawl": {
            "type": "string",
            "description": "Total Expected Monthly Cheque Withdrawals"
          },
          "totalMonthlyOutgoingTransfer": {
            "type": "string",
            "description": "Total Expected Monthly Incoming Outgoing\r\n\t\t\t\t\t\tLocal/International Transfers"
          },
          "investmentAccountBalance": {
            "type": "string"
          },
          "expNumberTrans": {
            "type": "string"
          },
          "expMaximumValueOfTransfer": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "modeElectronic": {
            "type": "string"
          },
          "accountOwnUse": {
            "type": "string"
          },
          "relationDepositAccount": {
            "type": "string"
          },
          "vostroAccountBankIndicator": {
            "type": "string"
          },
          "portRequestNumber": {
            "type": "string"
          },
          "portNameLatin": {
            "type": "string"
          },
          "portNameArabic": {
            "type": "string"
          },
          "creationBranch": {
            "type": "string"
          },
          "portTAdawlFlag": {
            "type": "string"
          },
          "specPortAccount": {
            "type": "string"
          },
          "finalBeneficiary": {
            "type": "string"
          },
          "subscriptionFlag900": {
            "type": "string"
          },
          "subscriptionFlag910": {
            "type": "string"
          },
          "samaMsbFlag": {
            "type": "string"
          },
          "filler7": {
            "type": "string"
          },
          "accountClassification": {
            "type": "string"
          },
          "samaApprovalNumber": {
            "type": "string",
            "description": "SAMA/Compliance Division Approval no."
          },
          "approvalDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "mtFeeApplicable": {
            "type": "string"
          },
          "mtFeeAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "houseLaborIndicator": {
            "type": "string"
          },
          "linkedAccount": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "sssReferenceNumber": {
            "type": "string"
          },
          "cardLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "filler8": {
            "type": "string"
          },
          "interestType02": {
            "type": "string"
          },
          "interestCategory01": {
            "type": "string"
          },
          "checkerId": {
            "type": "string"
          },
          "statementForm": {
            "type": "string"
          },
          "paymentSupportCashCheckbox": {
            "type": "string"
          },
          "paymentSupportChequeCheckbox": {
            "type": "string"
          },
          "paymentSupportCreditCardCheckbox": {
            "type": "string"
          },
          "paymentSupportInternationalTransferCheckbox": {
            "type": "string"
          },
          "paymentSupportLocalTransferCheckbox": {
            "type": "string"
          },
          "paymentSupportInternationalN1TransferCheckbox": {
            "type": "string"
          },
          "paymentSupportOthersCheckbox": {
            "type": "string"
          },
          "paymentSupportOthers": {
            "type": "string"
          },
          "channelATMCheckbox": {
            "type": "string"
          },
          "channelCorporateCheckbox": {
            "type": "string"
          },
          "channelAlahliCorpCheckbox": {
            "type": "string"
          },
          "bankChequeCheckbox": {
            "type": "string"
          },
          "soldChequeCheckbox": {
            "type": "string"
          },
          "personalChequeCheckbox": {
            "type": "string"
          },
          "intrChequeCheckbox": {
            "type": "string"
          },
          "serviceColtnCheckbox": {
            "type": "string"
          },
          "serviceLcCheckbox": {
            "type": "string"
          },
          "serviceLgCheckbox": {
            "type": "string"
          },
          "serviceIndFactorCheckbox": {
            "type": "string"
          },
          "suppNameAddress1": {
            "type": "string"
          },
          "suppNameAddress2": {
            "type": "string"
          },
          "suppNameAddress3": {
            "type": "string"
          },
          "customerNameAddress1": {
            "type": "string"
          },
          "customerNameAddress2": {
            "type": "string"
          },
          "customerNameAddress3": {
            "type": "string"
          },
          "geoLocationAddress1": {
            "type": "string"
          },
          "geoLocationAddress2": {
            "type": "string"
          },
          "geoLocationAddress3": {
            "type": "string"
          },
          "totalOutInternalTransfer": {
            "type": "string"
          },
          "totalInInternalTransfer": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_DepositAccountAmendmentResponse": {
        "title": "tns_DepositAccountAmendmentResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_DepositAccountAmendmentSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_DepositAccountAmendmentSuccessType": {
        "title": "tns_DepositAccountAmendmentSuccessType",
        "type": "object",
        "properties": {
          "journalId": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_InquireAccountRolloverHistoryRequest": {
        "title": "tns_InquireAccountRolloverHistoryRequest",
        "type": "object",
        "properties": {
          "accountId": {
            "pattern": "([0-9]{17})|()",
            "type": "string",
            "description": "Account ID"
          },
          "moreRecordsToFollow": {
            "type": "string",
            "description": "moreRecordsToFollow"
          }
        },
        "description": ""
      },
      "tns_InquireAccountRolloverHistoryResponse": {
        "title": "tns_InquireAccountRolloverHistoryResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_inquireaccountrolloverhistorysuccesstype"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_historyDetailsType": {
        "title": "tns_historyDetailsType",
        "type": "object",
        "properties": {
          "linkedAccount": {
            "pattern": "([0-9]{17})|()",
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "accountOpenDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "maturityDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "principal": {
            "type": "string"
          },
          "maturityAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "treasuryCost": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "treasuryReference": {
            "type": "string"
          },
          "profitRate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "profitAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "rollOverOption": {
            "type": "string"
          },
          "commodityShortName": {
            "type": "string"
          },
          "commodityLongName": {
            "type": "string"
          },
          "brokerShortName": {
            "type": "string"
          },
          "brokerLongName": {
            "type": "string"
          },
          "commodityPrice": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "commodityQuantity": {
            "type": "string"
          },
          "commodityDeffPrice": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_inquireaccountrolloverhistorysuccesstype": {
        "title": "tns_inquireaccountrolloverhistorysuccesstype",
        "type": "object",
        "properties": {
          "accountId": {
            "pattern": "([0-9]{17})|()",
            "type": "string"
          },
          "moreRecordsToFollow": {
            "type": "string"
          },
          "historyDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_historyDetailsType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_InquireProductParametersRequest": {
        "title": "tns_InquireProductParametersRequest",
        "type": "object",
        "properties": {
          "effectiveDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "effectiveDate"
          },
          "institution": {
            "type": "string",
            "description": "institution"
          },
          "accountType": {
            "maxLength": 4,
            "type": "string",
            "description": "account Type"
          },
          "subCategory": {
            "type": "string",
            "description": "sub Category"
          },
          "newType": {
            "type": "string",
            "description": "new account Type"
          },
          "newCategory": {
            "type": "string",
            "description": "new category"
          },
          "newCurrency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "new Currency"
          },
          "screenStyle": {
            "type": "string",
            "description": "screen Style"
          },
          "fromInstitution": {
            "type": "string",
            "description": "from Institution"
          }
        },
        "description": ""
      },
      "tns_InquireProductParametersResponse": {
        "title": "tns_InquireProductParametersResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_inquireproductparameterssuccesstype"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_inquireproductparameterssuccesstype": {
        "title": "tns_inquireproductparameterssuccesstype",
        "type": "object",
        "properties": {
          "effectiveDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "institution": {
            "type": "string"
          },
          "system": {
            "type": "string"
          },
          "accountType": {
            "maxLength": 4,
            "type": "string"
          },
          "subCategory": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "accountPurpose": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "calendarCode": {
            "type": "string"
          },
          "minorAccount": {
            "type": "string"
          },
          "fundType": {
            "type": "string"
          },
          "autoNumberGroup": {
            "type": "string"
          },
          "islamicBank": {
            "type": "string"
          },
          "revenueSharing": {
            "type": "string"
          },
          "poolNumber": {
            "type": "string"
          },
          "anniversaryDating": {
            "type": "string"
          },
          "divTagNameEndEOFY": {
            "type": "string"
          },
          "creditInterestFrequency": {
            "type": "string"
          },
          "depositHoldDays": {
            "type": "string"
          },
          "chequeDepositDeferInterestDays": {
            "type": "string"
          },
          "nonWorkingDayInterest": {
            "type": "string"
          },
          "noticeDays": {
            "type": "string"
          },
          "installmentAccount": {
            "type": "string"
          },
          "standingOrdersAllowed": {
            "type": "string"
          },
          "ppFlag": {
            "type": "string"
          },
          "ppTempCode": {
            "type": "string"
          },
          "otherBankValFlag": {
            "type": "string"
          },
          "smsAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "phonePayments": {
            "type": "string"
          },
          "restrictTransactionPosting": {
            "type": "string"
          },
          "restrictTransactionReporting": {
            "type": "string"
          },
          "corporateAdvice": {
            "type": "string"
          },
          "creditRating": {
            "type": "string"
          },
          "reportExceedingMaximumBalance": {
            "type": "string"
          },
          "productCurrency": {
            "type": "string"
          },
          "multiCurrencyAccount": {
            "type": "string"
          },
          "passbookAccount": {
            "type": "string"
          },
          "minimumOpeningBalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "maximumOpeningBalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "minimumBalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "maximumBalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "minimumDeposit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "maximumTransactionAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "minimumWithdrawal": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "maximumCashWithdrawal": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "closeThresholdValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "defaultTransferAccount": {
            "type": "string"
          },
          "termPaymentMethod": {
            "type": "string"
          },
          "termGraceDays": {
            "type": "string"
          },
          "termPenaltyRate": {
            "type": "string"
          },
          "termBasis": {
            "type": "string"
          },
          "termBaseRatePrint": {
            "type": "string"
          },
          "nonWorkDayMat": {
            "type": "string"
          },
          "renewAccountType": {
            "type": "string"
          },
          "renewSubCategory": {
            "type": "string"
          },
          "redemptionPeriod": {
            "type": "string"
          },
          "withdrawalsAllowed": {
            "type": "string"
          },
          "termPenaltyDays": {
            "type": "string"
          },
          "maturityInstructionThreshold": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "termBreakoutAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "accountProcessing": {
            "type": "string"
          },
          "creditCGLComponent1": {
            "type": "string"
          },
          "creditCGLComponent2": {
            "type": "string"
          },
          "debitCGLComponent1": {
            "type": "string"
          },
          "debitCGLComponent2": {
            "type": "string"
          },
          "cglPosting": {
            "type": "string"
          },
          "cglCode": {
            "type": "string"
          },
          "minimumClearedBalance": {
            "type": "string"
          },
          "maximumLimitUsage": {
            "type": "string"
          },
          "averageDailyBalance": {
            "type": "string"
          },
          "latePayGraceDays": {
            "type": "string"
          },
          "minimumBookBalance": {
            "type": "string"
          },
          "repayFeeFrequency": {
            "type": "string"
          },
          "bookBalanceDay": {
            "type": "string"
          },
          "repayDays": {
            "type": "string"
          },
          "cashDepositClearingDay": {
            "type": "string"
          },
          "checkChargeAgainstBalance": {
            "type": "string"
          },
          "transactionAccountValidation": {
            "type": "string"
          },
          "availableBalanceCalculation": {
            "type": "string"
          },
          "chequeBook": {
            "type": "string"
          },
          "chequeBookType": {
            "type": "string"
          },
          "maximumChequeBooksOnOrder": {
            "type": "string"
          },
          "chequeAutoReorder": {
            "type": "string"
          },
          "overdraftFlag": {
            "type": "string"
          },
          "minimumTerm": {
            "type": "string"
          },
          "maximumTerm": {
            "type": "string"
          },
          "interestTransferSystem": {
            "type": "string"
          },
          "interestAdjustment": {
            "type": "string"
          },
          "interestPayment": {
            "type": "string"
          },
          "openIntDays": {
            "type": "string"
          },
          "accrualPeriod": {
            "type": "string"
          },
          "termInterestFrequency": {
            "type": "string"
          },
          "varyAccountRate": {
            "type": "string"
          },
          "creditSOPDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "creditEOPDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "previouscreditSOPDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "openDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "closeDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "interestMethod": {
            "type": "string"
          },
          "reinvestTermInterest": {
            "type": "string"
          },
          "minimumRate": {
            "type": "string"
          },
          "numberOfTiers": {
            "type": "string"
          },
          "baseMarginTable": {
            "type": "string"
          },
          "baseMarginRate": {
            "type": "string"
          },
          "baseMarginTier": {
            "type": "string"
          },
          "debitBaseTableName": {
            "type": "string"
          },
          "creditInterestDaysAYear": {
            "type": "string"
          },
          "debitSOPDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "debitEOPDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "debitInterestDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "previousdebitSOPDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "backdatedDaysSOP": {
            "type": "string"
          },
          "debitInterestMethod": {
            "type": "string"
          },
          "backdatedAccountOpenDays": {
            "type": "string"
          },
          "debitInterestDaysAYear": {
            "type": "string"
          },
          "debitInterestFrequency": {
            "type": "string"
          },
          "debitInterestCompoundFrequency": {
            "type": "string"
          },
          "commitBaseMarginTable": {
            "type": "string"
          },
          "commitBaseMarginRate": {
            "type": "string"
          },
          "commitBaseMarginTier": {
            "type": "string"
          },
          "excessBaseMarginTable": {
            "type": "string"
          },
          "excessBaseMarginRate": {
            "type": "string"
          },
          "excessBaseMarginTier": {
            "type": "string"
          },
          "creditBaseTableName": {
            "type": "string"
          },
          "maximumRateVariance": {
            "type": "string"
          },
          "minimumRateVariance": {
            "type": "string"
          },
          "casualBaseMarginTable": {
            "type": "string"
          },
          "casualBaseMarginRate": {
            "type": "string"
          },
          "casualBaseMarginTier": {
            "type": "string"
          },
          "debitBaseMarginTable": {
            "type": "string"
          },
          "debitBaseMarginRate": {
            "type": "string"
          },
          "debitBaseMarginTier": {
            "type": "string"
          },
          "averageMonthlyBalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "moneyMarketLadder": {
            "type": "string"
          },
          "withdrawalNotice": {
            "type": "string"
          },
          "termFixedRate": {
            "type": "string"
          },
          "variableRateHistory": {
            "type": "string"
          },
          "conformInterestMethod": {
            "type": "string"
          },
          "penaltyCalculation": {
            "type": "string"
          },
          "customerMaximumBalanceCheck": {
            "type": "string"
          },
          "expiryInterestTo": {
            "type": "string"
          },
          "minimumTermLength": {
            "type": "string"
          },
          "rolloverRate": {
            "type": "string"
          },
          "interestRoundingOff": {
            "type": "string"
          },
          "principalChangeMethod": {
            "type": "string"
          },
          "refinanceRateFlag": {
            "type": "string"
          },
          "minimumIncrementBalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "incBaseID": {
            "type": "string"
          },
          "incRateID": {
            "type": "string"
          },
          "incTierID": {
            "type": "string"
          },
          "specialGrantEligible": {
            "type": "string"
          },
          "forthNightlyDays": {
            "type": "string"
          },
          "hpoc": {
            "type": "string"
          },
          "currency1": {
            "type": "string"
          },
          "currency2": {
            "type": "string"
          },
          "minimumTotalWithdrawalAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "mudarebFee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "backDatingRestriction": {
            "type": "string"
          },
          "productBundleFlag": {
            "type": "string"
          },
          "productBundleId": {
            "type": "string"
          },
          "backDateRateChange": {
            "type": "string"
          },
          "monthlyInterestValue": {
            "type": "string"
          },
          "availableChannel1": {
            "type": "string"
          },
          "channelAccess1": {
            "type": "string"
          },
          "availableChannel2": {
            "type": "string"
          },
          "channelAccess2": {
            "type": "string"
          },
          "availableChannel3": {
            "type": "string"
          },
          "channelAccess3": {
            "type": "string"
          },
          "availableChannel4": {
            "type": "string"
          },
          "channelAccess4": {
            "type": "string"
          },
          "availableChannel5": {
            "type": "string"
          },
          "channelAccess5": {
            "type": "string"
          },
          "availableChannel6": {
            "type": "string"
          },
          "channelAccess6": {
            "type": "string"
          },
          "availableChannel7": {
            "type": "string"
          },
          "channelAccess7": {
            "type": "string"
          },
          "availableChannel8": {
            "type": "string"
          },
          "channelAccess8": {
            "type": "string"
          },
          "availableChannel9": {
            "type": "string"
          },
          "channelAccess9": {
            "type": "string"
          },
          "availableChannel10": {
            "type": "string"
          },
          "channelAccess10": {
            "type": "string"
          },
          "sweepAllowed": {
            "type": "string"
          },
          "sweepFrequency": {
            "type": "string"
          },
          "sweepBasis": {
            "type": "string"
          },
          "period1": {
            "type": "string"
          },
          "base1": {
            "type": "string"
          },
          "rate1": {
            "type": "string"
          },
          "period2": {
            "type": "string"
          },
          "base2": {
            "type": "string"
          },
          "rate2": {
            "type": "string"
          },
          "period3": {
            "type": "string"
          },
          "base3": {
            "type": "string"
          },
          "rate3": {
            "type": "string"
          },
          "period4": {
            "type": "string"
          },
          "base4": {
            "type": "string"
          },
          "rate4": {
            "type": "string"
          },
          "period5": {
            "type": "string"
          },
          "base5": {
            "type": "string"
          },
          "rate5": {
            "type": "string"
          },
          "period6": {
            "type": "string"
          },
          "base6": {
            "type": "string"
          },
          "rate6": {
            "type": "string"
          },
          "period7": {
            "type": "string"
          },
          "base7": {
            "type": "string"
          },
          "rate7": {
            "type": "string"
          },
          "period8": {
            "type": "string"
          },
          "base8": {
            "type": "string"
          },
          "rate8": {
            "type": "string"
          },
          "period9": {
            "type": "string"
          },
          "base9": {
            "type": "string"
          },
          "rate9": {
            "type": "string"
          },
          "period10": {
            "type": "string"
          },
          "base10": {
            "type": "string"
          },
          "rate10": {
            "type": "string"
          },
          "feeType1401": {
            "type": "string"
          },
          "feeType1402": {
            "type": "string"
          },
          "feeType1403": {
            "type": "string"
          },
          "feeType1404": {
            "type": "string"
          },
          "feeType41801": {
            "type": "string"
          },
          "feeType41802": {
            "type": "string"
          },
          "feeType41803": {
            "type": "string"
          },
          "feeType41804": {
            "type": "string"
          },
          "feeType811201": {
            "type": "string"
          },
          "feeType811202": {
            "type": "string"
          },
          "feeType811203": {
            "type": "string"
          },
          "feeType811204": {
            "type": "string"
          },
          "feeType1211601": {
            "type": "string"
          },
          "feeType1211602": {
            "type": "string"
          },
          "feeType1211603": {
            "type": "string"
          },
          "feeType1211604": {
            "type": "string"
          },
          "feeRedirection": {
            "type": "string"
          },
          "businessFee": {
            "type": "string"
          },
          "exemptSOFee": {
            "type": "string"
          },
          "withHoldingTaxLevel": {
            "type": "string"
          },
          "penaltyBasis": {
            "type": "string"
          },
          "penaltyInterest": {
            "type": "string"
          },
          "penaltyRate": {
            "type": "string"
          },
          "minimumMonthlyFee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "maximumAllowedWithdrawal": {
            "type": "string"
          },
          "minimumCloseBalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "bonusAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "bonusRate": {
            "type": "string"
          },
          "calculationBasis": {
            "type": "string"
          },
          "prizeDraw": {
            "type": "string"
          },
          "payFirstPeriod": {
            "type": "string"
          },
          "interestPaidToBonusAcct": {
            "type": "string"
          },
          "groupTCMProd": {
            "type": "string"
          },
          "TCMProd": {
            "type": "string"
          },
          "closureAllowed": {
            "type": "string"
          },
          "minMajFreeze": {
            "type": "string"
          },
          "setStopcheque": {
            "type": "string"
          },
          "termAccountType": {
            "type": "string"
          },
          "termSubCategory": {
            "type": "string"
          },
          "termFlag": {
            "type": "string"
          },
          "crTierPeriodTagName": {
            "type": "string"
          },
          "penaltyBaseTable": {
            "type": "string"
          },
          "penaltyRateId": {
            "type": "string"
          },
          "penaltyAmountTier": {
            "type": "string"
          },
          "penaltyPeriodTier": {
            "type": "string"
          },
          "denominatedCertificate": {
            "type": "string"
          },
          "customerLevelTranche": {
            "type": "string"
          },
          "rate": {
            "type": "string"
          },
          "penaltyDaysFlag": {
            "type": "string"
          },
          "tdBreakOutLimit": {
            "type": "string"
          },
          "shareTypeProd": {
            "type": "string"
          },
          "accountTypeDescription": {
            "type": "string"
          },
          "subCategoryDescription": {
            "type": "string"
          },
          "globalProduct": {
            "type": "string"
          },
          "inst1": {
            "type": "string"
          },
          "inst2": {
            "type": "string"
          },
          "inst3": {
            "type": "string"
          },
          "inst4": {
            "type": "string"
          },
          "inst5": {
            "type": "string"
          },
          "inst6": {
            "type": "string"
          },
          "inst7": {
            "type": "string"
          },
          "inst8": {
            "type": "string"
          },
          "inst9": {
            "type": "string"
          },
          "inst10": {
            "type": "string"
          },
          "calendarType": {
            "type": "string"
          },
          "interestExcludeAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "withdrawalBasis": {
            "type": "string"
          },
          "frequentUse": {
            "type": "string"
          },
          "prodSwitchAge": {
            "type": "string"
          },
          "affAccountProduct": {
            "type": "string"
          },
          "affAccountProduct1": {
            "type": "string"
          },
          "maximumAccountLinkAffAccount": {
            "type": "string"
          },
          "affTypeProduct": {
            "type": "string"
          },
          "maximumNumberOfAccounts": {
            "type": "string"
          },
          "minimumPeriodForPenalty": {
            "type": "string"
          },
          "termBasisForPenalty": {
            "type": "string"
          },
          "brokenPeriodPenalty": {
            "type": "string"
          },
          "interestCalculateBasis": {
            "type": "string"
          },
          "zeroBalanceFlag": {
            "type": "string"
          },
          "zeroBalanceDays": {
            "type": "string"
          },
          "unclaimedDormantClosureBalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "dormantAccountClosure": {
            "type": "string"
          },
          "bonusPayment": {
            "type": "string"
          },
          "feesPeriod": {
            "type": "string"
          },
          "feesThreshhold": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "PSRchange": {
            "type": "string"
          },
          "PERRate": {
            "type": "string"
          },
          "toleranceRatio": {
            "type": "string"
          },
          "islamicType": {
            "type": "string"
          },
          "PartBreakkAcrProf": {
            "type": "string"
          },
          "addTnBaseId": {
            "type": "string"
          },
          "addTnRateId": {
            "type": "string"
          },
          "costCentreCode": {
            "type": "string"
          },
          "costCentreParam": {
            "type": "string"
          },
          "companyCode": {
            "type": "string"
          },
          "productActive": {
            "type": "string"
          },
          "accountKeep": {
            "type": "string"
          },
          "withdrawalPeriod": {
            "type": "string"
          },
          "minimumDed": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "maximumDed": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "chargePER": {
            "type": "string"
          },
          "bonusSavings": {
            "type": "string"
          },
          "staffPSR": {
            "type": "string"
          },
          "PSRTierId": {
            "type": "string"
          },
          "sum1": {
            "type": "string"
          },
          "sum2": {
            "type": "string"
          },
          "sum3": {
            "type": "string"
          },
          "sum4": {
            "type": "string"
          },
          "sum5": {
            "type": "string"
          },
          "sum6": {
            "type": "string"
          },
          "sum7": {
            "type": "string"
          },
          "sum8": {
            "type": "string"
          },
          "sum9": {
            "type": "string"
          },
          "sum10": {
            "type": "string"
          },
          "tierType": {
            "type": "string"
          },
          "minimumBalanceEarnedInterest": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "maximumBalanceEarnedInterest": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "cutOffTime": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_PayrollTransactionsRequest": {
        "title": "tns_PayrollTransactionsRequest",
        "required": [
          "accountNumber"
        ],
        "type": "object",
        "properties": {
          "accountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_PayrollTransactionsResponse": {
        "title": "tns_PayrollTransactionsResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_PayrollTransactionsResponseSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GetAccountValidationEnquiryRequest": {
        "title": "tns_GetAccountValidationEnquiryRequest",
        "type": "object",
        "properties": {
          "accountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Account Number"
          },
          "amount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "Amount to be validated"
              }
            ]
          },
          "debitCreditFlag": {
            "type": "string",
            "description": "Debit or Credit Flag to check the validation\r\n\t\t\t\t\t\t\ton\r\n\t\t\t\t\t\t\tthe s[ecified account number"
          }
        },
        "description": ""
      },
      "tns_GetAccountValidationEnquiryResponse": {
        "title": "tns_GetAccountValidationEnquiryResponse",
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          },
          "fault": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fault_FaultType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_PayrollTransactionsResponseSuccessType": {
        "title": "tns_PayrollTransactionsResponseSuccessType",
        "type": "object",
        "properties": {
          "accountNumber": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "customerNumber": {
            "type": "string"
          },
          "blackListFlag": {
            "maxLength": 1,
            "type": "string"
          },
          "customerStatus": {
            "maxLength": 3,
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "customerIDNumber": {
            "type": "string"
          },
          "clstStatus": {
            "maxLength": 1,
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "reportedBank": {
            "maxLength": 4,
            "type": "string"
          },
          "industryCode": {
            "maxLength": 4,
            "type": "string"
          },
          "employerName": {
            "type": "string"
          },
          "releaseDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "payrollIndicatorFlag": {
            "maxLength": 1,
            "type": "string"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_transactions"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_GetDonationAccountsRequest": {
        "title": "tns_GetDonationAccountsRequest",
        "type": "object",
        "properties": {
          "institutionNumber": {
            "type": "string"
          },
          "accountReference": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_GetDonationAccountsResponse": {
        "title": "tns_GetDonationAccountsResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetDonationAccountsSucessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GetDonationAccountsSucessType": {
        "title": "tns_GetDonationAccountsSucessType",
        "type": "object",
        "properties": {
          "DonationAccountsList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetDonationAccountListType"
              }
            ]
          },
          "accountReference": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_GetDonationAccountListType": {
        "title": "tns_GetDonationAccountListType",
        "type": "object",
        "properties": {
          "DonationAccount": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_DonationAccountType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_DonationAccountType": {
        "title": "tns_DonationAccountType",
        "type": "object",
        "properties": {
          "accountId": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "englishDescription": {
            "type": "string"
          },
          "arabicDescription": {
            "type": "string"
          },
          "order": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "purpose": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_GetStandingOrdersRequest": {
        "title": "tns_GetStandingOrdersRequest",
        "type": "object",
        "properties": {
          "cif": {
            "pattern": "([0-9]){14}|([0]){1}|()",
            "type": "string"
          },
          "accountId": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "referenceNumber": {
            "type": "string"
          },
          "standingInstructionType": {
            "type": "string"
          },
          "standingOrderReferenceNumber": {
            "type": "string"
          },
          "nextRecordSet": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_nextRecordSetType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GetStandingOrdersResponse": {
        "title": "tns_GetStandingOrdersResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetStandingOrdersSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GetStandingOrderTransactionsRequest": {
        "title": "tns_GetStandingOrderTransactionsRequest",
        "type": "object",
        "properties": {
          "accountId": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "referenceNumber": {
            "type": "string"
          },
          "nextRecordSet": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_nextRecordSetType1"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GetStandingOrderTransactionsResponse": {
        "title": "tns_GetStandingOrderTransactionsResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetStandingOrderTransactionsSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "InquireAccountSignatureStatusRequestType": {
        "title": "InquireAccountSignatureStatusRequestType",
        "required": [
          "accountId"
        ],
        "type": "object",
        "properties": {
          "referenceId": {
            "type": "string",
            "description": "This is a unique reference id for the transaction. If the REF_ID is not specified in request, the server twill send a randomly generated unique id in response and the client may use it for tfurther requests that may be made during a single verification tprocess. Once the verification process in finished, client can discard this ID."
          },
          "applicationName": {
            "type": "string",
            "description": "Name of application that is requesting SigCap services"
          },
          "accountId": {
            "$ref": "../../commonschemas/schemas.json#/AccountId",
            "description": "Account number whose status is requested"
          }
        }
      },
      "InquireAccountSignatureStatusResponseType": {
        "title": "InquireAccountSignatureStatusResponseType",
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/components/schemas/InquireStatusResponseType"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        }
      },
      "InquireStatusResponseType": {
        "title": "InquireStatusResponseType",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Request Type should be set to “STATUS”"
          },
          "statusCode": {
            "type": "string",
            "description": "Status code for the account that is returned in the response"
          },
          "description": {
            "type": "string",
            "description": "Description of the status code."
          },
          "accountType": {
            "type": "string",
            "description": "This will always be “Account”."
          }
        }
      },
      "tns_StandingOrderType": {
        "title": "tns_StandingOrderType",
        "type": "object",
        "properties": {
          "cif": {
            "pattern": "([0-9]){14}|([0]){1}|()",
            "type": "string"
          },
          "fromAccountId": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "referenceNumber": {
            "type": "string"
          },
          "toAccountId": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "frequency": {
            "type": "string"
          },
          "amountToTransfer": {
            "type": "number"
          },
          "currency": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          },
          "startDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "endDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "createDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "channel": {
            "type": "string"
          },
          "categoryCode": {
            "type": "string"
          },
          "purposeCode": {
            "type": "string"
          },
          "narration": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "IBAN": {
            "type": "string",
            "description": "IBAN value if Standing Order is Local and\r\n\t\t\t\t\t\tInternational"
          },
          "ibanFlag": {
            "maxLength": 1,
            "type": "string",
            "description": "IBAN Flag\r\n\t\t\t\t\t\t1)For NCB to NCB it is \"N\"\r\n\t\t\t\t\t\t2)for local\r\n\t\t\t\t\t\tit is \"L\",\r\n\t\t\t\t\t\t3)for international is is \"I\""
          },
          "frequencyCode": {
            "maxLength": 1,
            "type": "string",
            "description": "Frequnecy Code D-Daily, M-Monthly or W-Weekly"
          },
          "recordForFNSUse": {
            "type": "string",
            "description": "Record Number of the Standing Order."
          },
          "standingOrderReferenceNumber": {
            "type": "string",
            "description": "Reference Number of Standing Order."
          },
          "investmentAccountNumber": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string",
            "description": "Investment Account Number"
          },
          "suspensionRevokeDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Suspend Revoke Date"
          },
          "suspensionStartDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Suspend Start Date"
          }
        },
        "description": ""
      },
      "tns_GetStandingOrdersSuccessType": {
        "title": "tns_GetStandingOrdersSuccessType",
        "type": "object",
        "properties": {
          "StandingOrdersList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetStandingOrdersListType"
              }
            ]
          },
          "nextRecordSet": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_nextRecordSetType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GetStandingOrdersListType": {
        "title": "tns_GetStandingOrdersListType",
        "type": "object",
        "properties": {
          "StandingOrder": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_StandingOrderType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_GetStandingOrderTransactionsSuccessType": {
        "title": "tns_GetStandingOrderTransactionsSuccessType",
        "type": "object",
        "properties": {
          "StandingOrderTransactionsList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_StandingOrderTransactionsType"
              }
            ]
          },
          "nextRecordSet": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_nextRecordSetType1"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_StandingOrderTransactionsType": {
        "title": "tns_StandingOrderTransactionsType",
        "type": "object",
        "properties": {
          "StandingOrderTransaction": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_StandingOrderTransactionType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_StandingOrderTransactionType": {
        "title": "tns_StandingOrderTransactionType",
        "type": "object",
        "properties": {
          "accountId": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "referenceNumber": {
            "type": "string"
          },
          "transactionDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "amount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "status": {
            "type": "string"
          },
          "reasonFailure": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_nextRecordSetType": {
        "title": "tns_nextRecordSetType",
        "type": "object",
        "properties": {
          "accountRef": {
            "type": "string"
          },
          "system": {
            "type": "string"
          },
          "institution": {
            "type": "string"
          },
          "processDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "recordDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "time": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_nextRecordSetType1": {
        "title": "tns_nextRecordSetType1",
        "type": "object",
        "properties": {
          "lastAccountNumber": {
            "type": "string"
          },
          "lastReferenceNumber": {
            "type": "string"
          },
          "lastProcessDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_TimeDepositAccountsRequest": {
        "title": "tns_TimeDepositAccountsRequest",
        "type": "object",
        "properties": {
          "cif": {
            "pattern": "([0-9]){14}|([0]){1}",
            "type": "string"
          },
          "depositNumber": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_TimeDepositAccountsResponse": {
        "title": "tns_TimeDepositAccountsResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_TimeDepositAccountType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_TimeDepositAccountType": {
        "title": "tns_TimeDepositAccountType",
        "required": [
          "timeDeposit"
        ],
        "type": "object",
        "properties": {
          "timeDeposit": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_TimeDepositType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_TimeDepositType": {
        "title": "tns_TimeDepositType",
        "type": "object",
        "properties": {
          "depositNumber": {
            "type": "string"
          },
          "maturityDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))[+'\\-'.'](0[0-9]|1[0-9]|2[0-3]|[0-9]):([0-5][0-9])|()",
            "type": "string"
          },
          "depositCurrency": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          },
          "availablePrincipalAmount": {
            "type": "number"
          },
          "totalPrincipalAmount": {
            "type": "number"
          },
          "counterpartyName": {
            "type": "string"
          },
          "cif": {
            "pattern": "([0-9]){14}|([0]){1}",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_AuthorisedSignatoriesRequest": {
        "title": "tns_AuthorisedSignatoriesRequest",
        "required": [
          "accountId"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "amount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "filterSignatories": {
            "type": "string"
          },
          "includeExpired": {
            "type": "string"
          },
          "includeIneffective": {
            "type": "string"
          },
          "includeCBInactive": {
            "type": "string"
          },
          "includeCBExpired": {
            "type": "string"
          },
          "includeExtraSignatoriesData": {
            "type": "string"
          },
          "includeCBSignatoriesData": {
            "type": "string"
          },
          "includeDeletedSigns": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_AuthorisedSignatoriesResponse": {
        "title": "tns_AuthorisedSignatoriesResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AuthorisedSignatoriesType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_AuthorisedSignatoriesType": {
        "title": "tns_AuthorisedSignatoriesType",
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "referenceId": {
            "type": "string"
          },
          "account": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AccountType"
              }
            ]
          },
          "signatoryList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_SignatoryListType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_AccountType": {
        "title": "tns_AccountType",
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "accountTypeDescription": {
            "type": "string"
          },
          "accountTypeCode": {
            "type": "string"
          },
          "branchCode": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_SignatoryListType": {
        "title": "tns_SignatoryListType",
        "type": "object",
        "properties": {
          "signatory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_SignatoryType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_SignatoryType": {
        "title": "tns_SignatoryType",
        "type": "object",
        "properties": {
          "signatoryName": {
            "type": "string"
          },
          "signatoryId": {
            "type": "string"
          },
          "expiryDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))[T](0[0-9]|1[0-9]|2[0-3]|[0-9])[:]([0-5][0-9])[:]([0-5][0-9])|()",
            "type": "string"
          },
          "effectiveDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))[T](0[0-9]|1[0-9]|2[0-3]|[0-9])[:]([0-5][0-9])[:]([0-5][0-9])|()",
            "type": "string"
          },
          "sponsorName": {
            "type": "string"
          },
          "relationId": {
            "type": "string"
          },
          "nationality": {
            "type": "string"
          },
          "financial": {
            "type": "string"
          },
          "signatoryTypeDescription": {
            "type": "string"
          },
          "signatoryTypeCode": {
            "type": "string"
          },
          "signatoryStatusDescription": {
            "type": "string"
          },
          "signatoryStatusCode": {
            "type": "string"
          },
          "cbId": {
            "type": "string"
          },
          "cbActive": {
            "type": "string"
          },
          "cbExpiryDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))[T](0[0-9]|1[0-9]|2[0-3]|[0-9])[:]([0-5][0-9])[:]([0-5][0-9])|()",
            "type": "string"
          },
          "cbIdType": {
            "type": "string",
            "description": "National Id type Code"
          },
          "cbIdTypeDescription": {
            "type": "string",
            "description": "National Id type description"
          },
          "mainAuthorizer": {
            "type": "string",
            "description": "Identification of Main Authorizer"
          },
          "authorizerExhibit": {
            "type": "string",
            "description": "Authorizer Exhibit"
          },
          "limit": {
            "type": "string"
          },
          "nationalityCode": {
            "type": "string"
          },
          "dob": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string"
          },
          "mobileNumber": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "cbIdPlaceOfIssue": {
            "type": "string"
          },
          "cbIssueDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))[T](0[0-9]|1[0-9]|2[0-3]|[0-9])[:]([0-5][0-9])[:]([0-5][0-9])|()",
            "type": "string"
          },
          "terms": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_termsType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_termsType": {
        "title": "tns_termsType",
        "type": "object",
        "properties": {
          "signatoryLimit": {
            "type": "string"
          },
          "instructions": {
            "type": "string"
          },
          "term": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_termType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_termType": {
        "title": "tns_termType",
        "type": "object",
        "properties": {
          "termCode": {
            "type": "string"
          },
          "termDescription": {
            "type": "string"
          },
          "termLimit": {
            "type": "string"
          },
          "termNote": {
            "type": "string"
          },
          "hasLimit": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_VerifyAuthorisedSignatoriesRequest": {
        "title": "tns_VerifyAuthorisedSignatoriesRequest",
        "required": [
          "accountId",
          "language",
          "signatoryIdType",
          "selectedSignatory"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "amount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "language": {
            "type": "string",
            "description": "Value should be EN - english, AR - arabic"
          },
          "signatoryIdType": {
            "type": "string",
            "description": "Value should be one of these SRN or SIGN_ID or\r\n\t\t\t\t\t\t\tRELID"
          },
          "selectedSignatory": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_SelectedSignatoryType"
              }
            ]
          },
          "includeRequiredSignatory": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_SelectedSignatoryType": {
        "title": "tns_SelectedSignatoryType",
        "type": "object",
        "properties": {
          "signatoryId": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_VerifyAuthorisedSignatoriesResponse": {
        "title": "tns_VerifyAuthorisedSignatoriesResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_VerifyAuthorisedSignatoriesType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_VerifyAuthorisedSignatoriesType": {
        "title": "tns_VerifyAuthorisedSignatoriesType",
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          },
          "accountId": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "signatoryIdType": {
            "type": "string"
          },
          "requiredSignatory": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RequiredSignatoryType"
              }
            ]
          },
          "transactionToken": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_RequiredSignatoryType": {
        "title": "tns_RequiredSignatoryType",
        "type": "object",
        "properties": {
          "signatoryId": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_PayrollDetailsAmendmentRequest": {
        "title": "tns_PayrollDetailsAmendmentRequest",
        "required": [
          "accountId",
          "operationMode"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Account Number"
          },
          "operationMode": {
            "maxLength": 1,
            "type": "string",
            "description": "R = Retrieve, U = Update"
          },
          "payrollFlagIndicator": {
            "maxLength": 1,
            "type": "string",
            "description": "Payroll Flag Indicator"
          },
          "specialAccountIndicator": {
            "maxLength": 1,
            "type": "string",
            "description": "Special Account Indicator"
          },
          "payrollReleaseIndicator": {
            "maxLength": 1,
            "type": "string",
            "description": "Payroll Release Indicator"
          },
          "payrollExpiryDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Payroll Expiry Date"
          },
          "payrollIssueDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Payroll Issue Date"
          },
          "siebalRequestNumber": {
            "maxLength": 30,
            "type": "string",
            "description": "Siebal Request No"
          }
        },
        "description": ""
      },
      "tns_PayrollDetailsAmendmentResponse": {
        "title": "tns_PayrollDetailsAmendmentResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_PayrollDetailsAmendmentSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_PayrollDetailsAmendmentSuccessType": {
        "title": "tns_PayrollDetailsAmendmentSuccessType",
        "type": "object",
        "properties": {
          "accountId": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string",
            "description": "Account Number"
          },
          "payrollFlagIndicator": {
            "maxLength": 1,
            "type": "string",
            "description": "Payroll Flag Indicator"
          },
          "specialAccountIndicator": {
            "maxLength": 1,
            "type": "string",
            "description": "Special Account Indicator"
          },
          "payrollReleaseIndicator": {
            "maxLength": 1,
            "type": "string",
            "description": "Payroll Release Indicator"
          },
          "payrollExpiryDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Payroll Expiry Date"
          },
          "payrollIssueDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Payroll Issue Date"
          },
          "siebalRequestNumber": {
            "maxLength": 30,
            "type": "string",
            "description": "Siebal Request No"
          }
        },
        "description": ""
      },
      "tns_RegisterAccountNotificationRequest": {
        "title": "tns_RegisterAccountNotificationRequest",
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "Account Number"
          },
          "action": {
            "type": "string",
            "description": "Action values can be\r\n\t\t\t\t\t\t\tI : Insert\r\n\t\t\t\t\t\t\tD : Delete\r\n\t\t\t\t\t\t\tE :\r\n\t\t\t\t\t\t\tInquiry"
          },
          "accountCurrency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "Account Currency"
          },
          "branchNumber": {
            "type": "string",
            "description": "Branch Number"
          },
          "clientName": {
            "type": "string",
            "description": "Client Name"
          },
          "receiverName": {
            "type": "string",
            "description": "Receiver Name"
          },
          "allowCreditDebitFlag": {
            "type": "string",
            "description": "Allow Credit Debit Flag"
          },
          "CDCMT940Flag": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_RegisterAccountNotificationResponse": {
        "title": "tns_RegisterAccountNotificationResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RegisterAccountNotificationResponseSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_RegisterAccountNotificationResponseSuccessType": {
        "title": "tns_RegisterAccountNotificationResponseSuccessType",
        "type": "object",
        "properties": {
          "accountId": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string",
            "description": "Account Number"
          },
          "accountCurrency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "Account Currency"
          },
          "clientName": {
            "type": "string",
            "description": "Client Name"
          },
          "receiverName": {
            "type": "string",
            "description": "Receiver Name"
          },
          "allowCreditDebitFlag": {
            "type": "string",
            "description": "Allow Credit Debit Flag"
          },
          "branchNumber": {
            "type": "string",
            "description": "Branch Number"
          },
          "CDCMT940Flag": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_VirtualAccountsRequest": {
        "title": "tns_VirtualAccountsRequest",
        "required": [
          "debitCreditFlag",
          "pageSize",
          "pageNumber"
        ],
        "type": "object",
        "properties": {
          "accountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Virtual Account Number"
          },
          "omniAccountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "omniMappedCode": {
            "type": "string"
          },
          "ibanAccountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "mainStatus": {
            "type": "string"
          },
          "subStatus": {
            "type": "string"
          },
          "createDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Creation Date. Not to be used. Instead Use\r\n\t\t\t\t\t\t\tcreateStartDate and createEndDate"
          },
          "createStartDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "To be used to filter between\r\n\t\t\t\t\t\t\tcreateStartDate(included) and createEndDate(excluded)"
          },
          "createEndDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "To be used to filter between\r\n\t\t\t\t\t\t\tcreateStartDate(included) and createEndDate(excluded)"
          },
          "approveDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Approve Date. Not to be used. Instead use\r\n\t\t\t\t\t\t\tapproveStartDate and approveEndDate"
          },
          "approveStartDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "To be used to filter between\r\n\t\t\t\t\t\t\tapproveStartDate(included) and approveEndDate(excluded)"
          },
          "approveEndDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "To be used to filter between\r\n\t\t\t\t\t\t\tapproveStartDate(included) and approveEndDate(excluded)"
          },
          "getBasicData": {
            "type": "string"
          },
          "accountStartSeq": {
            "type": "string"
          },
          "accountEndSeq": {
            "type": "string"
          },
          "transactionNotificationFlag": {
            "type": "string",
            "description": "Transaction Notification flag (Credit / Debit)\r\n\t\t\t\t\t\t\tPossible values Y or N, Default N"
          },
          "debitFlag": {
            "type": "string",
            "description": "Debit Flag Possible Values Y or N Default Value\r\n\t\t\t\t\t\t\tshall be Y"
          },
          "creditFlag": {
            "type": "string",
            "description": "Credit Flag Possible Values Y or N Default\r\n\t\t\t\t\t\t\tValue shall be Y"
          },
          "minimumAccountBalanceLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "Minimum Limit of the Account Balance Default\r\n\t\t\t\t\t\t\tshall be Zero"
              }
            ]
          },
          "maximumAccountBalanceLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "subscriptionFlag": {
            "type": "string",
            "description": "MT940 – Subscription flag Possible values Y or\r\n\t\t\t\t\t\t\tN, Default N"
          },
          "debitCreditFlag": {
            "type": "string",
            "description": "If BANCS / any other systems do the enquiry for\r\n\t\t\t\t\t\t\tValidating the BALANCE Check for Debit transaction, this flag\r\n\t\t\t\t\t\t\tshould sent as Y.\r\n\t\t\t\t\t\t\tPossible values as Y ,N. Default shall be N.If\r\n\t\t\t\t\t\t\tsent as Y, CMS will hold\r\n\t\t\t\t\t\t\tthe cash.Transaction+ Fee amount"
          },
          "transactionAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "pageSize": {
            "type": "string",
            "description": "Page Size, Default Shall be 500 Ex. 500\r\n\t\t\t\t\t\t\tAccounts per page"
          },
          "pageNumber": {
            "type": "string",
            "description": "It is required to send Page Number default\r\n\t\t\t\t\t\t\tvalue shall be 1"
          }
        },
        "description": "One or more filter to be used"
      },
      "tns_VirtualAccountsResponse": {
        "title": "tns_VirtualAccountsResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CMSVirtualAccountsResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CMSVirtualAccountsResponseType": {
        "title": "tns_CMSVirtualAccountsResponseType",
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "string"
          },
          "statusDescription": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "account": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_VirtualAccountType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_VirtualAccountType": {
        "title": "tns_VirtualAccountType",
        "type": "object",
        "properties": {
          "customerNumber": {
            "type": "string"
          },
          "omniAccountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "omniMappedCode": {
            "type": "string"
          },
          "accountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Virtual Account Number"
          },
          "ibanAccountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Virtual IBAN Account Number"
          },
          "englishNickName": {
            "type": "string",
            "description": "Nick Name in English"
          },
          "arabicNickName": {
            "type": "string",
            "description": "Nick Name in Arabic"
          },
          "mainStatus": {
            "type": "string"
          },
          "mainStatusDesciption": {
            "type": "string"
          },
          "subStatus": {
            "type": "string"
          },
          "subStatusDescription": {
            "type": "string"
          },
          "createUserCode": {
            "type": "string"
          },
          "createDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "updateUserCode": {
            "type": "string"
          },
          "updateDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "approveUserCode": {
            "type": "string"
          },
          "approveDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "sts01": {
            "type": "string"
          },
          "sts02": {
            "type": "string"
          },
          "aeventNumber": {
            "type": "string"
          },
          "leventNumber": {
            "type": "string"
          },
          "currency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          },
          "accountOpenDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "expiryDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "externalLinkCode1": {
            "type": "string"
          },
          "externalLinkCode2": {
            "type": "string"
          },
          "referenceNumber1": {
            "type": "string"
          },
          "referenceNumber2": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "allowedTransactions": {
            "type": "string",
            "description": "32-digit Bit Mapped Value of Allowed or Blocked\r\n\t\t\t\t\t\tTransaction Types"
          },
          "transactionNotificationFlag": {
            "type": "string",
            "description": "Transaction Notification flag (Credit / Debit)\r\n\t\t\t\t\t\tPossible values Y or N, Default N"
          },
          "debitFlag": {
            "type": "string",
            "description": "Debit Flag Possible Values Y or N Default Value\r\n\t\t\t\t\t\tshall be Y"
          },
          "creditFlag": {
            "type": "string",
            "description": "Credit Flag Possible Values Y or N Default Value\r\n\t\t\t\t\t\tshall be Y"
          },
          "minimumAccountBalanceLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "Minimum Limit of the Account Balance Default\r\n\t\t\t\t\t\tshall be Zero"
              }
            ]
          },
          "maximumAccountBalanceLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "subscriptionFlag": {
            "type": "string",
            "description": "MT940 – Subscription flag Possible values Y or\r\n\t\t\t\t\t\tN, Default N"
          },
          "accountBalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "currentHoldAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "availableBalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "transactionReturnCode": {
            "type": "string",
            "description": "Return Code for Transaction Enquiry 0000-Is\r\n\t\t\t\t\t\tPositive for any Case, Non-0000 – Shall be negative Cases"
          },
          "transactionReturnNotes": {
            "type": "string",
            "description": "Return Notes for Transaction Enquiry"
          },
          "transactionAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "feeAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "transactionTaxAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "transactionTotalAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "Transaction total Amount =transactionAmount+\r\n\t\t\t\t\t\tfeeAmount+ transactionTaxAmount"
              }
            ]
          },
          "holdReference": {
            "type": "string"
          },
          "holdStatus": {
            "type": "string",
            "description": "HOLD Status Possible Values Y or N, Y – Hold is\r\n\t\t\t\t\t\tSuccess ,N – Hold is Not Success (If N, Transactions should not be\r\n\t\t\t\t\t\tprocessed for DEBITS)"
          },
          "holdRemarks": {
            "type": "string",
            "description": "Hold Remarks / Notes"
          },
          "totalHoldAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "Total Amount Hold as part of this request"
              }
            ]
          },
          "totalCreditAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "Total Credit on the Account"
              }
            ]
          },
          "inProgressDebitAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "Total in Progress Debit Amount"
              }
            ]
          },
          "inProgressCreditAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "Total in Progress Credit Amount"
              }
            ]
          },
          "transactionReturnNotes1": {
            "type": "string",
            "description": "Return Notes1 for Transaction Enquiry"
          },
          "totalDebitAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "Total Debits on the Account"
              }
            ]
          },
          "totalNumberOfPages": {
            "type": "string",
            "description": "Total number of Pages based on the Page Size\r\n\t\t\t\t\t\t(Received from input)"
          }
        },
        "description": ""
      },
      "AccountStatusAmendmentRequestType": {
        "title": "AccountStatusAmendmentRequestType",
        "required": [
          "accountNumber",
          "operationMode"
        ],
        "type": "object",
        "properties": {
          "accountNumber": {
            "$ref": "../../commonschemas/schemas.json#/AccountId",
            "description": "Account Number 1"
          },
          "operationMode": {
            "maxLength": 1,
            "type": "string",
            "description": "R = Retrieve, U = Update"
          },
          "override": {
            "type": "boolean",
            "description": "override"
          },
          "overrideCode": {
            "type": "string",
            "description": "overrideCode"
          },
          "currentStatus": {
            "type": "string",
            "description": "Current Status"
          },
          "newStatus": {
            "type": "string",
            "description": "New Status"
          },
          "currentKYCStatus": {
            "type": "string",
            "description": "current KYC Status"
          },
          "newKYCStatus": {
            "type": "string",
            "description": "New Kyc Status"
          },
          "currentSamaStatus": {
            "type": "string",
            "description": "Current Sama Status"
          },
          "newSamaStatus": {
            "type": "string",
            "description": "New Sama Status"
          },
          "reasonAccountStatus": {
            "type": "string",
            "description": "Reason Account Status"
          },
          "reasonSamaStatus": {
            "type": "string",
            "description": "Reason Sama Status"
          },
          "reasonKYCStatus": {
            "type": "string",
            "description": "Reason KYC Status"
          },
          "kycUnfreezeDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "kyc Unfreeze Date"
          },
          "letterNumber": {
            "type": "string",
            "description": "letter Number"
          },
          "letterDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "letter Date"
          },
          "blockDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "Block Date"
          },
          "note": {
            "type": "string",
            "description": "Note"
          },
          "inacStat": {
            "maxLength": 1,
            "type": "string",
            "description": "inac Stat"
          },
          "enfBlockStatus": {
            "type": "string",
            "description": "ENF Block Status"
          },
          "ssuBlockStatus": {
            "type": "string",
            "description": "SSU Block Status"
          },
          "legalBlockStatus": {
            "type": "string",
            "description": "Legal Block Status"
          },
          "effENFBlockDate": {
           "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "Eff ENF Block Date"
          },
          "effENFBlockDateFlag": {
            "maxLength": 1,
            "type": "string",
            "description": "Eff ENF Block Date Flag"
          },
          "effSSUBlockDate": {
           "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "Eff SSU Block Date"
          },
          "effSSUBlockDateFlag": {
            "maxLength": 1,
            "type": "string",
            "description": "Eff SSU Block Date Flag"
          },
          "effLegalBlockDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "Eff Legal Block Date"
          },
          "effLegalBlockDateFlag": {
            "maxLength": 1,
            "type": "string",
            "description": "Eff Legal Block Date Flag"
          },
          "enfBlockReasonStat": {
            "type": "string",
            "description": "ENF Block Reason Stat"
          },
          "ssuBlockReasonStat": {
            "type": "string",
            "description": "SSU Block Reason Stat"
          },
          "legalBlockReasonStat": {
            "type": "string",
            "description": "Legal Block Reason Stat"
          },
          "enfStopPeriod": {
            "type": "string",
            "description": "ENF Stop Period"
          },
          "ssuStopPeriod": {
            "type": "string",
            "description": "SSU Stop Period"
          },
          "enfBlockDate": {
           "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "ENF Block Date"
          },
          "ssuBlockLetterNumber": {
            "type": "string",
            "description": "SSU Block Letter Number"
          },
          "legalBlockLetterNumber": {
            "type": "string",
            "description": "Legal Block Letter Number"
          },
          "ssuBlockLetterDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "SSU Block Lttr Date"
          },
          "legalBlockLetterDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "Legal Block Lttr Date"
          },
          "ssuBlockNote": {
            "type": "string",
            "description": "SSU Block Note"
          },
          "legalBlockNote": {
            "type": "string",
            "description": "Legal Block Note"
          },
          "lastAccountStatDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "Last Account Stat Date"
          },
          "fatcaFreeze": {
            "maxLength": 1,
            "type": "string",
            "description": "FATCA Freeze"
          },
          "workFlowFlag": {
            "maxLength": 1,
            "type": "string",
            "description": "WorkFlow Flag"
          }
        },
        "description": ""
      },
      "AccountStatusAmendmentResponseType": {
        "title": "AccountStatusAmendmentResponseType",
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/components/schemas/AccountStatusAmendmentSuccessType"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "AccountStatusAmendmentSuccessType": {
        "title": "AccountStatusAmendmentSuccessType",
        "type": "object",
        "properties": {
          "accountNumber": {
            "$ref": "../../commonschemas/schemas.json#/SalaryAccountIdOptional",
            "description": "Account Number 1"
          },
          "currentStatus": {
            "type": "string",
            "description": "Current Status"
          },
          "newStatus": {
            "type": "string",
            "description": "New Status"
          },
          "currentKYCStatus": {
            "type": "string",
            "description": "current KYC Status"
          },
          "newKYCStatus": {
            "type": "string",
            "description": "New Kyc Status"
          },
          "currentSamaStatus": {
            "type": "string",
            "description": "Current Sama Status"
          },
          "newSamaStatus": {
            "type": "string",
            "description": "New Sama Status"
          },
          "reasonAccountStatus": {
            "type": "string",
            "description": "Reason Account Status"
          },
          "reasonSamaStatus": {
            "type": "string",
            "description": "Reason Sama Status"
          },
          "reasonKYCStatus": {
            "type": "string",
            "description": "Reason KYC Status"
          },
          "kycUnfreezeDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "kyc Unfreeze Date"
          },
          "letterNumber": {
            "type": "string",
            "description": "letter Number"
          },
          "letterDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "letter Date"
          },
          "blockDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "Block Date"
          },
          "note": {
            "type": "string",
            "description": "Note"
          },
          "inacStat": {
            "maxLength": 1,
            "type": "string",
            "description": "inac Stat"
          },
          "enfBlockStatus": {
            "type": "string",
            "description": "ENF Block Status"
          },
          "ssuBlockStatus": {
            "type": "string",
            "description": "SSU Block Status"
          },
          "legalBlockStatus": {
            "type": "string",
            "description": "Legal Block Status"
          },
          "effENFBlockDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "Eff ENF Block Date"
          },
          "effENFBlockDateFlag": {
            "maxLength": 1,
            "type": "string",
            "description": "Eff ENF Block Date Flag"
          },
          "effSSUBlockDate": {
           "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "Eff SSU Block Date"
          },
          "effSSUBlockDateFlag": {
            "maxLength": 1,
            "type": "string",
            "description": "Eff SSU Block Date Flag"
          },
          "effLegalBlockDate": {
           "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "Eff Legal Block Date"
          },
          "effLegalBlockDateFlag": {
            "maxLength": 1,
            "type": "string",
            "description": "Eff Legal Block Date Flag"
          },
          "enfBlockReasonStat": {
            "type": "string",
            "description": "ENF Block Reason Stat"
          },
          "ssuBlockReasonStat": {
            "type": "string",
            "description": "SSU Block Reason Stat"
          },
          "legalBlockReasonStat": {
            "type": "string",
            "description": "Legal Block Reason Stat"
          },
          "enfStopPeriod": {
            "type": "string",
            "description": "ENF Stop Period"
          },
          "ssuStopPeriod": {
            "type": "string",
            "description": "SSU Stop Period"
          },
          "enfBlockDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "ENF Block Date"
          },
          "ssuBlockLetterNumber": {
            "type": "string",
            "description": "SSU Block Letter Number"
          },
          "legalBlockLetterNumber": {
            "type": "string",
            "description": "Legal Block Letter Number"
          },
          "ssuBlockLetterDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "SSU Block Lttr Date"
          },
          "legalBlockLetterDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "Legal Block Lttr Date"
          },
          "ssuBlockNote": {
            "type": "string",
            "description": "SSU Block Note"
          },
          "legalBlockNote": {
            "type": "string",
            "description": "Legal Block Note"
          },
          "lastAccountStatDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "Last Account Stat Date"
          },
          "highRiskAccount": {
            "maxLength": 1,
            "type": "string",
            "description": "High Risk Account"
          },
          "fatcaFreeze": {
            "maxLength": 1,
            "type": "string",
            "description": "FATCA Freeze"
          },
          "workFlowFlag": {
            "maxLength": 1,
            "type": "string",
            "description": "WorkFlow Flag"
          }
        },
        "description": ""
      },
      "tns_PaymentInquiryRequest": {
        "title": "tns_PaymentInquiryRequest",
        "required": [
          "accountId",
          "inquiryOption",
          "typeOfIncomeF",
          "typeOfIncomeR"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "inquiryOption": {
            "type": "string"
          },
          "typeOfIncomeF": {
            "type": "string"
          },
          "typeOfIncomeR": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_PaymentInquiryResponse": {
        "title": "tns_PaymentInquiryResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_PaymentInquiryResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_PaymentInquiryResponseType": {
        "title": "tns_PaymentInquiryResponseType",
        "type": "object",
        "properties": {
          "accountId": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "customerId": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_CustomerId"
              }
            ]
          },
          "AccType": {
            "type": "string"
          },
          "currency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "subStatus": {
            "type": "string"
          },
          "branch": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "productType": {
            "type": "string"
          },
          "currentBalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "availableBalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "blockAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "overDraft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "name": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "address3": {
            "type": "string"
          },
          "address4": {
            "type": "string"
          },
          "homePhone": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "segmentCode": {
            "maxLength": 4,
            "type": "string"
          },
          "programType": {
            "type": "string"
          },
          "accountOpenDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "ibanAccountNumber": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "languageCode": {
            "type": "string"
          },
          "bancsSystem": {
            "type": "string"
          },
          "country": {
            "pattern": "([A-Z]{2,2})|()",
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "accountDivisionCode": {
            "type": "string"
          },
          "accountBranchRegion": {
            "type": "string"
          },
          "programCode": {
            "type": "string"
          },
          "isStaff": {
            "type": "string"
          },
          "samaStatus": {
            "type": "string"
          },
          "kycStatus": {
            "type": "string"
          },
          "glccClassCode": {
            "type": "string"
          },
          "accountType": {
            "maxLength": 4,
            "type": "string"
          },
          "vatPercentageF": {
            "type": "string"
          },
          "techVatCdF": {
            "type": "string"
          },
          "ncbVatCdF": {
            "type": "string"
          },
          "ncbVatDescF": {
            "type": "string"
          },
          "vatPercentageR": {
            "type": "string"
          },
          "TechVatCdR": {
            "type": "string"
          },
          "NcbVatCdR": {
            "type": "string"
          },
          "NcbVatDescR": {
            "type": "string"
          },
          "idNumber": {
            "type": "string"
          },
          "idType": {
            "type": "string"
          },
          "primLangFirstName": {
            "type": "string"
          },
          "primLangSecondName": {
            "type": "string"
          },
          "primLangThirdName": {
            "type": "string"
          },
          "primLangFamilyName": {
            "type": "string"
          },
          "otherLangFirstName": {
            "type": "string"
          },
          "otherLangSecondName": {
            "type": "string"
          },
          "otherLangThirdName": {
            "type": "string"
          },
          "otherLangFamilyName": {
            "type": "string"
          },
          "yaqeenCheckFlag": {
            "type": "string"
          },
          "prefLang": {
            "type": "string"
          },
          "isSaudiNational": {
            "type": "string"
          },
          "calenderType": {
            "type": "string"
          },
          "dateOfBirth": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "corpOtherLangName": {
            "type": "string"
          },
          "customerType": {
            "type": "string"
          },
          "rmId": {
            "type": "string"
          },
          "localXfrPer": {
            "type": "string"
          },
          "intXfrPer": {
            "type": "string"
          },
          "intCat": {
            "type": "string"
          },
          "street1": {
            "type": "string",
            "description": "STREET 1"
          },
          "district1": {
            "type": "string",
            "description": "DISTRICT 1"
          },
          "city1": {
            "type": "string",
            "description": "CITY 1"
          },
          "regionCode": {
            "type": "string",
            "description": "REGION CODE"
          },
          "buildingNumber": {
            "type": "string",
            "description": "BUILDING NUMBER"
          },
          "nationVerificationFlag": {
            "type": "string",
            "description": "NATION VERIFICATION FLAG"
          },
          "mobileNumber": {
            "type": "string",
            "description": "MOBILE NUMBER"
          },
          "emailId": {
            "type": "string",
            "description": "EMAIL ID"
          },
          "ipsStlLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "IPS STL LIMIT"
              }
            ]
          },
          "ipsPtlLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "IPS PTL LIMIT"
              }
            ]
          },
          "ipsQtlLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "IPS QTL LIMIT"
              }
            ]
          },
          "customerLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "CUSTOMER LIMIT"
              }
            ]
          },
          "customerDailyLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "CUSTOMER DAILY LIMIT"
              }
            ]
          },
          "unifiedNationalNumber": {
            "type": "string",
            "description": "UNIFIED NATIONAL NUMBER(UNN)"
          },
          "legalEntity": {
            "type": "string",
            "description": "LEGAL ENTITY"
          },
          "subLegalEntity": {
            "type": "string",
            "description": "SUB LEGAL ENTITY"
          }
        },
        "description": ""
      },
      "tns_successEnquirePaymentType": {
        "title": "tns_successEnquirePaymentType",
        "type": "object",
        "properties": {
          "foundInTCSPE": {
            "type": "string"
          },
          "peTransactionNumber": {
            "type": "string"
          },
          "incomingReferenceNumber": {
            "type": "string"
          },
          "incomingRelatedReference": {
            "type": "string"
          },
          "withinBankCreditor": {
            "type": "string"
          },
          "clearingType": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "eventStatus": {
            "type": "string"
          },
          "ourReferenceNumber": {
            "type": "string"
          },
          "transactionCurrency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          },
          "transactionAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "beneficiaryBankName": {
            "type": "string"
          },
          "remitterAccountNumber": {
            "type": "string"
          },
          "remitterName": {
            "type": "string"
          },
          "remitterAddress": {
            "type": "string"
          },
          "beneficiaryAccountNumber": {
            "type": "string"
          },
          "beneficiaryAddress": {
            "type": "string"
          },
          "beneficiaryBankCode": {
            "type": "string"
          },
          "beneficiaryCif": {
            "pattern": "([0-9]){14}|([0]){1}|()",
            "type": "string",
            "description": "Beneficiary Cif"
          },
          "beneficiaryName": {
            "type": "string"
          },
          "beneficiaryType": {
            "type": "string"
          },
          "postDate": {
            "type": "string"
          },
          "journalId": {
            "type": "string"
          },
          "remitterBankCode": {
            "type": "string"
          },
          "remitterBankName": {
            "type": "string"
          },
          "senderCorrespondentBankCode": {
            "type": "string"
          },
          "senderCorrespondentBankName": {
            "type": "string"
          },
          "paymentFlag": {
            "type": "string"
          },
          "incomingMessageType": {
            "type": "string"
          },
          "orderDate": {
            "type": "string"
          },
          "correspondentBankCodePE": {
            "type": "string"
          },
          "correspondentBankNamePE": {
            "type": "string"
          },
          "referenceNumberPE": {
            "type": "string"
          },
          "valueDate": {
            "type": "string"
          },
          "errorCode": {
            "type": "string"
          },
          "errorDescription": {
            "type": "string"
          },
          "beneficiaryHomeBranch": {
            "type": "string",
            "description": "HOME BRANCH OF CUSTOMER WHERE BENEFICIARY\r\n\t\t\t\t\t\tACCOUNT CREATED"
          },
          "remitterCif": {
            "pattern": "([0-9]){14}|([0]){1}|()",
            "type": "string",
            "description": "CIF OF DEBTOR ACCOUNT."
          },
          "remitterType": {
            "type": "string",
            "description": "THIS IS TYPE OF DEBTOR ACCOUNT\r\n\t\t\t\t\t\t(INDIVIDUAL/CORPORATE).\r\n\t\t\t\t\t\t1- INDIVIDUAL\r\n\t\t\t\t\t\t2- CORPORATE"
          },
          "remitterHomeBranch": {
            "type": "string",
            "description": "HOME BRANCH OF CUSTOMER WHERE REMITTER ACCOUNT\r\n\t\t\t\t\t\tIS CREATED"
          },
          "incomingMessage": {
            "type": "string",
            "description": "COMPLETE ORIGINAL INCOMING TRANSACTIONAL MESSAGE"
          },
          "nationalIdentifier": {
            "type": "string",
            "description": "NATIONAL IDENTIFIER"
          },
          "swiftGPIReferenceNumber": {
            "type": "string",
            "description": "SWIFT GPI TRANSACTION REFERENCE NUMBER"
          },
          "cancelCode": {
            "type": "string",
            "description": "RETURN CODE/CANCEL CODE"
          },
          "cancelDescription": {
            "type": "string",
            "description": "RETURN DESCRIPTION/CANCEL DESCRIPTION"
          },
          "correspondantAccountTypeForInwardTransaction": {
            "type": "string",
            "description": "CORRESPONDANT ACCOUNT TYPE FOR INWARD\r\n\t\t\t\t\t\tTRANSACTION"
          },
          "correspondantAccountTypeForOutwardTransaction": {
            "type": "string",
            "description": "CORRESPONDANT ACCOUNT TYPE FOR OUTWARD\r\n\t\t\t\t\t\tTRANSACTION"
          },
          "instrumentId": {
            "type": "string",
            "description": "INSTRUMENT ID"
          },
          "counterAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "COUNTER AMOUNT"
              }
            ]
          },
          "counterCurrency": {
            "type": "string",
            "description": "COUNTER CURRENCY"
          },
          "exchangeRate": {
            "type": "string",
            "description": "EXCHANGE RATE"
          },
          "chargeOption": {
            "type": "string",
            "description": "CHARGE OPTION"
          },
          "chargeAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "CHARGE AMOUNT"
              }
            ]
          },
          "chargeCurrency": {
            "type": "string",
            "description": "CHARGE CURRENCY"
          },
          "chargeCounterAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "CHARGE COUNTER AMOUNT"
              }
            ]
          },
          "outgoingMessage": {
            "type": "string",
            "description": "OUTGOING MESSAGE"
          },
          "outgoingMessageType": {
            "type": "string",
            "description": "OUTGOING MESSAGE TYPE"
          },
          "settlementAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "SETTLEMENT AMOUNT"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_InquireAccountTransactionRequest": {
        "title": "tns_InquireAccountTransactionRequest",
        "required": [
          "referenceNumber"
        ],
        "type": "object",
        "properties": {
          "referenceNumber": {
            "type": "string",
            "description": "CORP/CDC Reference Number"
          },
          "accountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "cdcFlag": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_cdcFlag"
              },
              {
                "description": "Y : Cash Deposit Transactions\r\n\t\t\t\t\t\t\tN : Corporate\r\n\t\t\t\t\t\t\tAccount Transactions"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_InquireAccountTransactionResponse": {
        "title": "tns_InquireAccountTransactionResponse",
        "type": "object",
        "properties": {
          "transaction": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_InquireAccountTransactionsType"
            },
            "description": ""
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_InquireAccountTransactionsType": {
        "title": "tns_InquireAccountTransactionsType",
        "type": "object",
        "properties": {
          "processingDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string"
          },
          "postingDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string"
          },
          "postingTime": {
            "pattern": "([0-9]*)|()",
            "type": "string"
          },
          "location": {
            "maxLength": 25,
            "type": "string"
          },
          "branch": {
            "type": "string",
            "default": "0"
          },
          "tellerId": {
            "maxLength": 16,
            "type": "string"
          },
          "terminalId": {
            "type": "string"
          },
          "amount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              }
            ]
          },
          "balanceTransaction": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              }
            ]
          },
          "transactionCode": {
            "maxLength": 6,
            "type": "string"
          },
          "transactionDescription": {
            "type": "string"
          },
          "transactionExtraDescription": {
            "type": "string"
          },
          "transactionDescription4": {
            "type": "string"
          },
          "category": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "journalId": {
            "type": "string",
            "default": "0"
          },
          "promoCode": {
            "maxLength": 33,
            "type": "string"
          },
          "typeDescription": {
            "maxLength": 100,
            "type": "string"
          },
          "atmTransactionId": {
            "type": "string",
            "default": "0"
          },
          "atmTerminalId": {
            "type": "string",
            "default": "0"
          },
          "accountHolderName": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_GetAccountTypeDetailsRequest": {
        "title": "tns_GetAccountTypeDetailsRequest",
        "type": "object",
        "properties": {
          "applicationType": {
            "type": "string"
          },
          "approvedEmployeeIndicator": {
            "type": "string"
          },
          "sectorCode": {
            "type": "string"
          },
          "subSectorCode": {
            "type": "string"
          },
          "employementCode": {
            "type": "string"
          },
          "wessamType": {
            "type": "string"
          },
          "payrollFlag": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_GetAccountTypeDetailsResponse": {
        "title": "tns_GetAccountTypeDetailsResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetAccountTypeDetailsResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GetAccountTypeDetailsResponseType": {
        "title": "tns_GetAccountTypeDetailsResponseType",
        "type": "object",
        "properties": {
          "accountType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_AccountTypeDetails"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_AccountTypeDetails": {
        "title": "tns_AccountTypeDetails",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_DepositAccountActivationRequest": {
        "title": "tns_DepositAccountActivationRequest",
        "required": [
          "accountId",
          "action"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "accountOpeningReason": {
            "type": "string"
          },
          "accountType": {
            "type": "string"
          },
          "country1": {
            "pattern": "([A-Z]{2,2})|()",
            "type": "string"
          },
          "country2": {
            "pattern": "([A-Z]{2,2})|()",
            "type": "string"
          },
          "country3": {
            "pattern": "([A-Z]{2,2})|()",
            "type": "string"
          },
          "expectedTotalDeposits": {
            "type": "string"
          },
          "expectedToWithdrawals": {
            "type": "string"
          },
          "accountShortName": {
            "type": "string"
          },
          "corporateIdentifier": {
            "type": "string"
          },
          "checkerId": {
            "type": "string"
          },
          "totalMonthlyChequeDeposits": {
            "type": "string"
          },
          "totalMonthlyChequeWithdrawals": {
            "type": "string"
          },
          "totalMonthlyIncomingTransfer": {
            "type": "string",
            "description": "Total Expected Monthly Incoming\r\n\t\t\t\t\t\t\tLocal/International Transfers"
          },
          "totalMonthlyOutgoingTransfer": {
            "type": "string",
            "description": "Total Expected Monthly Incoming Outgoing\r\n\t\t\t\t\t\t\tLocal/International Transfers"
          },
          "realBeneficiaryFlag": {
            "type": "string"
          },
          "sssReferenceNumber": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_DepositAccountActivationResponse": {
        "title": "tns_DepositAccountActivationResponse",
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GetSAMBATransactionHistoryRequest": {
        "title": "tns_GetSAMBATransactionHistoryRequest",
        "required": [
          "accountNumber",
          "fromDate",
          "toDate"
        ],
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "string",
            "description": "Account Number"
          },
          "fromDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "Start date of the statement to be printed"
          },
          "toDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "End date of the statement to be printed"
          },
          "fromAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "toAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "transactionType": {
            "type": "string"
          },
          "restartRecNo": {
            "type": "string",
            "description": "Restart Record Number"
          },
          "restartAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "Restart amount"
              }
            ]
          },
          "exemptCharge": {
            "type": "string"
          },
          "dummy1": {
            "type": "string"
          },
          "dummy2": {
            "type": "string"
          },
          "dummy3": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_GetSAMBATransactionHistoryResponse": {
        "title": "tns_GetSAMBATransactionHistoryResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetSAMBATransactionHistorySuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GetSAMBATransactionHistorySuccessType": {
        "title": "tns_GetSAMBATransactionHistorySuccessType",
        "type": "object",
        "properties": {
          "accountDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetSAMBAAccountDetailsType"
              }
            ]
          },
          "transactionDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetSAMBATransactionDetailsType"
              }
            ]
          },
          "restartRecNo": {
            "type": "string",
            "description": "Restart Record Number"
          },
          "restartAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "Restart Amount"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GetSAMBAAccountDetailsType": {
        "title": "tns_GetSAMBAAccountDetailsType",
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "string",
            "description": "Account Number"
          },
          "accountTypeDescription": {
            "type": "string",
            "description": "Account Description"
          },
          "name1": {
            "type": "string",
            "description": "Name of the AccountHolder"
          },
          "name2": {
            "type": "string",
            "description": "Name of the AccountHolder"
          },
          "addressFormat": {
            "type": "string",
            "description": "Address Format"
          },
          "address1": {
            "type": "string",
            "description": "Address of the Account Holder"
          },
          "address2": {
            "type": "string",
            "description": "Address of the Account Holder"
          },
          "address3": {
            "type": "string",
            "description": "Address of the Account Holder"
          },
          "address4": {
            "type": "string",
            "description": "Address of the Account Holder"
          },
          "address5": {
            "type": "string",
            "description": "Address of the Account Holder"
          }
        },
        "description": ""
      },
      "tns_GetSAMBATransactionDetailsType": {
        "title": "tns_GetSAMBATransactionDetailsType",
        "type": "object",
        "properties": {
          "transactionDetail": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_GetSAMBATransactionDetailType"
            },
            "description": "Each Transaction"
          }
        },
        "description": ""
      },
      "tns_GetSAMBATransactionDetailType": {
        "title": "tns_GetSAMBATransactionDetailType",
        "type": "object",
        "properties": {
          "balance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "Available Balance"
              }
            ]
          },
          "credit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "Credit Balance"
              }
            ]
          },
          "debit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "Debit Balance"
              }
            ]
          },
          "type": {
            "type": "string",
            "description": "transaction type"
          },
          "description": {
            "type": "string",
            "description": "Description"
          },
          "dateTime": {
            "type": "string"
          },
          "valueDateTime": {
            "type": "string"
          },
          "sequenceNo": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": ""
      },
      "tns_MaintainDepositorRequest": {
        "title": "tns_MaintainDepositorRequest",
        "required": [
          "accountId",
          "idNo"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "The tag should contain the reference account\r\n\t\t\t\t\t\t\tfor which the external depositor need to be inserted/updated."
          },
          "idNo": {
            "type": "string",
            "description": "The Identification Document Number of the\r\n\t\t\t\t\t\t\texternal depositor."
          },
          "idType": {
            "type": "string",
            "description": "The Identification Document Type of the\r\n\t\t\t\t\t\t\texternal depositor."
          },
          "type": {
            "type": "string",
            "description": "Signatory Type of the external depositor."
          },
          "nationalityCode": {
            "type": "string",
            "description": "Unique code for the nationality that the\r\n\t\t\t\t\t\t\texternal depositor belongs to."
          },
          "idIssueDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "Gregorian date, displayed as YYYY-MM-DD that\r\n\t\t\t\t\t\t\tindicates, the date when the Identification Document was issued."
          },
          "idIssuePlace": {
            "type": "string",
            "description": "Place where the Identification Document was\r\n\t\t\t\t\t\t\tissued."
          },
          "depositorName": {
            "type": "string",
            "description": "Signatory Name as present in the WebCapture\r\n\t\t\t\t\t\t\tdatabase."
          },
          "depositorAdd1": {
            "type": "string",
            "description": "Address Line 1 for the depositor’s address."
          },
          "depositorAdd2": {
            "type": "string",
            "description": "Address Line 2 for the depositor’s address."
          },
          "idExpiryDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "The Expiry date of the Identification Document."
          },
          "contactNo": {
            "type": "string",
            "description": "Mobile Number of the external depositor."
          },
          "dateOfBirth": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "Gregorian date, displayed as YYYY-MM-DD that\r\n\t\t\t\t\t\t\tindicates the date of birth of the external depositor."
          },
          "creationDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "Date when the external depositor was created in\r\n\t\t\t\t\t\t\tthe system. It should be in format YYYY-MM-DD."
          },
          "maintainDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "Date when the external depositor was last\r\n\t\t\t\t\t\t\tmodified in the system. It should be in format YYYY-MM-DD."
          },
          "lastTellerAccess": {
            "type": "string",
            "description": "Name of the teller user who last accessed the\r\n\t\t\t\t\t\t\tcorresponding external depositor details."
          },
          "status": {
            "type": "string",
            "description": "This is the code set in WebCapture indicating\r\n\t\t\t\t\t\t\tthe status of the signatory. The default value is ‘Active’ if the\r\n\t\t\t\t\t\t\tfield is left blank in the request.\r\n\t\t\t\t\t\t\tThe values passed in the\r\n\t\t\t\t\t\t\trequest must be added in the “Signatory\r\n\t\t\t\t\t\t\tType Mapping” WebCapture\r\n\t\t\t\t\t\t\tConfiguration Forms against System ID 1\r\n\t\t\t\t\t\t\tfor Active and Deleted."
          }
        },
        "description": ""
      },
      "tns_MaintainDepositorResponse": {
        "title": "tns_MaintainDepositorResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_MaintainDepositorResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_MaintainDepositorResponseType": {
        "title": "tns_MaintainDepositorResponseType",
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "The tag contains the reference account for which\r\n\t\t\t\t\t\tthe external depositor was inserted/updated."
          },
          "idNo": {
            "type": "string",
            "description": "The Identification Document Number of the\r\n\t\t\t\t\t\texternal depositor."
          },
          "idType": {
            "type": "string",
            "description": "The Identification Document Type of the external\r\n\t\t\t\t\t\tdepositor."
          }
        },
        "description": ""
      },
      "tns_RetrieveDepositorInfoRequest": {
        "title": "tns_RetrieveDepositorInfoRequest",
        "required": [
          "accountId"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "The tag should contain the reference account\r\n\t\t\t\t\t\t\twhose external depositors need to be retrieved."
          },
          "idNo": {
            "type": "string",
            "description": "The Identification Document Number of the\r\n\t\t\t\t\t\t\texternal depositor of the corresponding account."
          },
          "idType": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_RetrieveDepositorInfoResponse": {
        "title": "tns_RetrieveDepositorInfoResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RetrieveDepositorInfoResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_RetrieveDepositorInfoResponseType": {
        "title": "tns_RetrieveDepositorInfoResponseType",
        "type": "object",
        "properties": {
          "depositor": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_RetrieveDepositorInfoDepositorType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_RetrieveDepositorInfoDepositorType": {
        "title": "tns_RetrieveDepositorInfoDepositorType",
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "The tag should contain the reference account for\r\n\t\t\t\t\t\twhich the external depositor need to be inserted/updated."
          },
          "idNo": {
            "type": "string",
            "description": "The Identification Document Number of the\r\n\t\t\t\t\t\texternal depositor."
          },
          "idType": {
            "type": "string",
            "description": "The Identification Document Type of the external\r\n\t\t\t\t\t\tdepositor."
          },
          "type": {
            "type": "string",
            "description": "Signatory Type of the external depositor."
          },
          "nationalityCode": {
            "type": "string",
            "description": "Unique code for the nationality that the\r\n\t\t\t\t\t\texternal depositor belongs to."
          },
          "idIssueDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "Gregorian date, displayed as YYYY-MM-DD that\r\n\t\t\t\t\t\tindicates, the date when the Identification Document was issued."
          },
          "idIssuePlace": {
            "type": "string",
            "description": "Place where the Identification Document was\r\n\t\t\t\t\t\tissued."
          },
          "depositorName": {
            "type": "string",
            "description": "Signatory Name as present in the WebCapture\r\n\t\t\t\t\t\tdatabase."
          },
          "depositorAdd1": {
            "type": "string",
            "description": "Address Line 1 for the depositor’s address."
          },
          "depositorAdd2": {
            "type": "string",
            "description": "Address Line 2 for the depositor’s address."
          },
          "idExpiryDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "The Expiry date of the Identification Document."
          },
          "contactNo": {
            "type": "string",
            "description": "Mobile Number of the external depositor."
          },
          "dateOfBirth": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "Gregorian date, displayed as YYYY-MM-DD that\r\n\t\t\t\t\t\tindicates the date of birth of the external depositor."
          },
          "creationDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "Date when the external depositor was created in\r\n\t\t\t\t\t\tthe system. It should be in format YYYY-MM-DD."
          },
          "maintainDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "Date when the external depositor was last\r\n\t\t\t\t\t\tmodified in the system. It should be in format YYYY-MM-DD."
          },
          "status": {
            "type": "string",
            "description": "This is the code set in WebCapture indicating\r\n\t\t\t\t\t\tthe status of the signatory.\r\n\t\t\t\t\t\tSignatory Status Mapping Code must be\r\n\t\t\t\t\t\tdefined in WebCap configuration with\r\n\t\t\t\t\t\tsystem ID 1 as A and D. A for\r\n\t\t\t\t\t\tActive and D for Mark As Deleted\r\n\t\t\t\t\t\tsignatory."
          }
        },
        "description": ""
      },
      "tns_PledgeTimeDepositAccountsRequest": {
        "title": "tns_PledgeTimeDepositAccountsRequest",
        "required": [
          "requestId",
          "collateralNumber",
          "timeDeposit"
        ],
        "type": "object",
        "properties": {
          "transactionNumber": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "collateralNumber": {
            "type": "string"
          },
          "timeDeposit": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_PledgeTimeDepositType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_PledgeTimeDepositAccountsResponse": {
        "title": "tns_PledgeTimeDepositAccountsResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_PledgeTimeDepositAccountType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_PledgeTimeDepositAccountType": {
        "title": "tns_PledgeTimeDepositAccountType",
        "type": "object",
        "properties": {
          "transactionNumber": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "collateralNumber": {
            "type": "string"
          },
          "transactionStatus": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_PledgeTimeDepositType": {
        "title": "tns_PledgeTimeDepositType",
        "required": [
          "depositNumber",
          "depositCurrency",
          "requestPledgeAmount",
          "cif"
        ],
        "type": "object",
        "properties": {
          "depositNumber": {
            "type": "string"
          },
          "depositCurrency": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          },
          "availablePrincipalAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "pledgeAmountSAR": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "requestPledgeAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "requestPledgeAmountSAR": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "cif": {
            "pattern": "([0-9]){14}|([0]){1}|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CMSAccountTransactionsListRequest": {
        "title": "tns_CMSAccountTransactionsListRequest",
        "type": "object",
        "properties": {
          "omniMappedCode": {
            "type": "string"
          },
          "accountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Virtual Account Number"
          },
          "omniAccountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "messageStartDate": {
            "type": "string"
          },
          "messageEndDate": {
            "type": "string"
          },
          "transactionStartDate": {
            "type": "string"
          },
          "transactionEndDate": {
            "type": "string"
          },
          "debitCreditFlag": {
            "type": "string"
          },
          "fromAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "toAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "returnCode": {
            "type": "string"
          },
          "mainStatus": {
            "type": "string"
          },
          "createDate": {
            "type": "string"
          },
          "createStartDate": {
            "type": "string"
          },
          "createEndDate": {
            "type": "string"
          },
          "approveDate": {
            "type": "string"
          },
          "approveStartDate": {
            "type": "string"
          },
          "approveEndDate": {
            "type": "string"
          },
          "getBasicData": {
            "type": "string"
          },
          "accountStartSeq": {
            "type": "string"
          },
          "accountEndSeq": {
            "type": "string"
          },
          "ibanAccountNumber": {
            "type": "string"
          },
          "reference1": {
            "type": "string",
            "description": "OMNI Account Number"
          },
          "reference2": {
            "type": "string",
            "description": "Source Account"
          },
          "reference3": {
            "type": "string",
            "description": "Nick Name"
          },
          "reference4": {
            "type": "string",
            "description": "Transaction Code"
          },
          "reference5": {
            "type": "string",
            "description": "Cheque No/UTI No"
          },
          "sourceReference": {
            "type": "string",
            "description": "Source Reference"
          },
          "uniqueReference": {
            "type": "string",
            "description": "Unique Reference"
          },
          "pageSize": {
            "type": "string",
            "description": "Page Size, Default Shall be 500 Ex. 500\r\n\t\t\t\t\t\t\tAccounts per page"
          },
          "pageNumber": {
            "type": "string",
            "description": "It is required to send Page Number default\r\n\t\t\t\t\t\t\tvalue shall be 1"
          }
        },
        "description": "One or more filter to be used"
      },
      "tns_CMSAccountTransactionsListResponse": {
        "title": "tns_CMSAccountTransactionsListResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_virtualAccountsListResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_virtualAccountsListResponseType": {
        "title": "tns_virtualAccountsListResponseType",
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "string"
          },
          "statusDescription": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "totalNumberOfPages": {
            "type": "string"
          },
          "transaction": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_CMSAccountTransactionListType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_CMSAccountTransactionListType": {
        "title": "tns_CMSAccountTransactionListType",
        "type": "object",
        "properties": {
          "messageID": {
            "type": "string"
          },
          "accountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Virtual Account Number"
          },
          "omniMappedCode": {
            "type": "string"
          },
          "messageDate": {
            "type": "string"
          },
          "omniAccountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "transactionDate": {
            "type": "string"
          },
          "currency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          },
          "valueDate": {
            "type": "string"
          },
          "amount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "transactionFeeAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "transactionTaxAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "transactionTotalAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              },
              {
                "description": "Transaction total Amount If Debit,\r\n\t\t\t\t\t\tTRANSACTIONAMT+ TRANSACTIONFEEAMOUNT+ TRANSACTIONTAXAMOUNT\r\n\t\t\t\t\t\tIf\r\n\t\t\t\t\t\tCredit, TRANSACTIONAMT- TRANSACTIONFEEAMOUNT-\r\n\t\t\t\t\t\tTRANSACTIONTAXAMOUNT"
              }
            ]
          },
          "debitCreditFlag": {
            "type": "string"
          },
          "debitCreditDescription": {
            "type": "string"
          },
          "mainStatus": {
            "type": "string"
          },
          "mainStatusDesciption": {
            "type": "string"
          },
          "channel": {
            "type": "string"
          },
          "requestUser": {
            "type": "string"
          },
          "omniName": {
            "type": "string"
          },
          "nickName": {
            "type": "string"
          },
          "reference1": {
            "type": "string"
          },
          "reference2": {
            "type": "string"
          },
          "reference3": {
            "type": "string"
          },
          "reference4": {
            "type": "string"
          },
          "reference5": {
            "type": "string"
          },
          "reference6": {
            "type": "string"
          },
          "sourceReference": {
            "type": "string"
          },
          "uniqueReference": {
            "type": "string"
          },
          "englishLine1": {
            "type": "string"
          },
          "englishLine2": {
            "type": "string"
          },
          "arabicLine1": {
            "type": "string"
          },
          "arabicLine2": {
            "type": "string"
          },
          "returnCode": {
            "type": "string"
          },
          "notes1": {
            "type": "string"
          },
          "notes2": {
            "type": "string"
          },
          "createUserCode": {
            "type": "string"
          },
          "createDate": {
            "type": "string"
          },
          "approveUserCode": {
            "type": "string"
          },
          "approveDate": {
            "type": "string"
          },
          "tagDetails": {
            "type": "string"
          },
          "ibanAccountNumber": {
            "type": "string"
          },
          "totalNumberOfPages": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CMSVirtualAccountCountRequest": {
        "title": "tns_CMSVirtualAccountCountRequest",
        "type": "object",
        "properties": {
          "omniMappedCode": {
            "type": "string"
          },
          "omniAccountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "cifNumber": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CMSVirtualAccountCountResponse": {
        "title": "tns_CMSVirtualAccountCountResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CMSVirtualAccountCountResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CMSVirtualAccountCountResponseType": {
        "title": "tns_CMSVirtualAccountCountResponseType",
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "string"
          },
          "statusDescription": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "numberOfVirtualAccounts": {
            "type": "string"
          },
          "lastUpdateTime": {
            "type": "string"
          }
        },
        "description": ""
      },
      "CustAcctsCumulativeBalRequestType": {
        "title": "CustAcctsCumulativeBalRequestType",
        "type": "object",
        "properties": {
          "cifNumber": {
            "$ref": "../../commonschemas/schemas.json#/ShortCIFOptional",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/CustomerAccountType"
          }
        },
        "description": ""
      },
      "CustomerAccountType": {
        "title": "CustomerAccountType",
        "type": "object",
        "properties": {
          "isDep": {
            "type": "string",
            "description": "Is Deposit --- Possible Values : Y / N"
          }
        },
        "description": ""
      },
      "CustAcctsCumulativeBalResponseType": {
        "title": "CustAcctsCumulativeBalResponseType",
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/components/schemas/CustAcctsCumulativeBalResponseSuccessType"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "CustAcctsCumulativeBalResponseSuccessType": {
        "title": "CustAcctsCumulativeBalResponseSuccessType",
        "type": "object",
        "properties": {
          "cumulativeBalance": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Cumulative Balance of all the active Omni\r\n\t\t\t\t\t\tAccounts and Current Accounts linked to a CIF"
          }
        },
        "description": ""
      },
      "tns_GetMT940OtherBankStatementRequest": {
        "title": "tns_GetMT940OtherBankStatementRequest",
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string",
            "description": "Corporate unique identifier."
          },
          "senderBankBICCode": {
            "type": "string",
            "description": "Sender bank\r\n\t\t\t\t\t\t\tBIC"
          },
          "accountId": {
            "type": "string",
            "description": "Statement account number and the Sender bank\r\n\t\t\t\t\t\t\tBIC is added"
          },
          "fromDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "From Date"
          },
          "toDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "To Date"
          }
        },
        "description": ""
      },
      "tns_GetMT940OtherBankStatementResponse": {
        "title": "tns_GetMT940OtherBankStatementResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetMT940OtherBankStatementSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "#/components/schemas/fault_FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GetMT940OtherBankStatementSuccessType": {
        "title": "tns_GetMT940OtherBankStatementSuccessType",
        "type": "object",
        "properties": {
          "senderBankBICCode": {
            "type": "string",
            "description": "Sender bank\r\n\t\t\t\t\t\tBIC"
          },
          "totalNumberOfStatements": {
            "type": "string",
            "description": "Total number of statements"
          },
          "accountStatements": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_accountStatementsType"
              },
              {
                "description": "All account statements for the mentioned\r\n\t\t\t\t\t\tcorporate ID, account number and period."
              }
            ]
          }
        },
        "description": ""
      },
      "tns_accountStatementsType": {
        "title": "tns_accountStatementsType",
        "type": "object",
        "properties": {
          "accountStatement": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_accountStatementListType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_accountStatementListType": {
        "title": "tns_accountStatementListType",
        "type": "object",
        "properties": {
          "sequenceNumber": {
            "type": "string",
            "description": "Statement Sequence number"
          },
          "recipientDateTime": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "Date and time statement received by CPS"
          },
          "transactionData": {
            "type": "string",
            "description": "Statement in RJE format base64 encoded"
          }
        },
        "description": ""
      },
      "wsse_Security": {
        "title": "wsse_Security",
        "required": [
          "UsernameToken"
        ],
        "type": "object",
        "properties": {
          "UsernameToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/wsse_UsernameToken"
              }
            ]
          }
        },
        "description": ""
      },
      "header_ServiceHeader": {
        "title": "header_ServiceHeader",
        "required": [
          "loggerContext",
          "transactionCode",
          "retryTransaction",
          "tellerId",
          "terminalId",
          "workstationId",
          "override",
          "correction",
          "supervisor",
          "supervisorId",
          "overrideCode",
          "employeeId",
          "branchId",
          "functionId",
          "channelId",
          "bancsPwd",
          "languageCode"
        ],
        "type": "object",
        "properties": {
          "loggerContext": {
            "type": "string"
          },
          "transactionCode": {
            "type": "string"
          },
          "retryTransaction": {
            "type": "boolean"
          },
          "tellerId": {
            "type": "string"
          },
          "terminalId": {
            "type": "string"
          },
          "workstationId": {
            "type": "string"
          },
          "override": {
            "type": "boolean"
          },
          "correction": {
            "type": "string"
          },
          "supervisor": {
            "type": "string"
          },
          "supervisorId": {
            "type": "string"
          },
          "overrideCode": {
            "type": "string"
          },
          "employeeId": {
            "type": "string"
          },
          "branchId": {
            "type": "string"
          },
          "functionId": {
            "type": "string"
          },
          "channelId": {
            "type": "string"
          },
          "bancsPwd": {
            "type": "string"
          },
          "languageCode": {
            "type": "string"
          },
          "authenticationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/header_authenticationType"
              },
              {
                "description": "Can be: NONE, OTP, TOKEN"
              }
            ]
          },
          "IvrTransactionID": {
            "type": "string"
          }
        },
        "description": ""
      },
      "fault_FaultType": {
        "title": "fault_FaultType",
        "required": [
          "number",
          "description"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "retryAfter": {
            "type": "string"
          },
          "system": {
            "type": "string"
          },
          "nativeError": {
            "type": "string"
          },
          "nativeDescription": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_PostalAddress": {
        "title": "Q1_PostalAddress",
        "type": "object",
        "properties": {
          "addressLine1": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string"
          },
          "city": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "region": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string"
          },
          "country": {
            "pattern": "([A-Z]{2,2})|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_Money": {
        "title": "Q1_Money",
        "required": [
          "isoCurrencyCode"
        ],
        "type": "object",
        "properties": {
          "isoCurrencyCode": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_MoneyOptional": {
        "title": "Q1_MoneyOptional",
        "required": [
          "isoCurrencyCode"
        ],
        "type": "object",
        "properties": {
          "isoCurrencyCode": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_Cursor": {
        "title": "Q1_Cursor",
        "required": [
          "position",
          "noOfRows"
        ],
        "type": "object",
        "properties": {
          "position": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "noOfRows": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          }
        },
        "description": ""
      },
      "Q1_Biller": {
        "title": "Q1_Biller",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "Q1_DocumentType": {
        "title": "Q1_DocumentType",
        "required": [
          "documentId",
          "documentSubId",
          "totalPages",
          "documentType",
          "archivedDate",
          "page"
        ],
        "type": "object",
        "properties": {
          "documentId": {
            "type": "string"
          },
          "documentSubId": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "documentType": {
            "type": "string"
          },
          "archivedDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "page": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Q1_PageType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "Q1_PageType": {
        "title": "Q1_PageType",
        "required": [
          "pageNo",
          "pageExt",
          "pageContent"
        ],
        "type": "object",
        "properties": {
          "pageNo": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "pageExt": {
            "type": "string"
          },
          "pageContent": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_BillCycle": {
        "title": "Q1_BillCycle",
        "enum": [
          "New",
          "XXX",
          "YYY"
        ],
        "type": "string",
        "description": "Valid Values : New, XXX, YYY"
      },
      "Q1_Flag": {
        "title": "Q1_Flag",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Valid Values : Y or N"
      },
      "Q1_OfferToTag": {
        "title": "Q1_OfferToTag",
        "enum": [
          "Yes",
          "No"
        ],
        "type": "string",
        "description": ""
      },
      "Q1_CustomerId": {
        "title": "Q1_CustomerId",
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_CustomerId2": {
        "title": "Q1_CustomerId2",
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_Parameter": {
        "title": "Q1_Parameter",
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_TransactionType": {
        "title": "Q1_TransactionType",
        "enum": [
          "BIANNUALCYCLE",
          "TODAY",
          "CYCLETODATE",
          "CTD"
        ],
        "type": "string",
        "description": "Valid values are BIANNUALCYCLE, TODAY,\n\t\t\t\tCYCLETODATE, CTD etc"
      },
      "Q1_BeneficiaryId": {
        "title": "Q1_BeneficiaryId",
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_DeviceDetails": {
        "title": "Q1_DeviceDetails",
        "required": [
          "machineNonce",
          "sequenceNonce",
          "machineLabel",
          "machineProperties",
          "createDate",
          "lastUsedDate",
          "expiryDate"
        ],
        "type": "object",
        "properties": {
          "machineNonce": {
            "minLength": 1,
            "type": "string"
          },
          "sequenceNonce": {
            "minLength": 1,
            "type": "string"
          },
          "machineLabel": {
            "type": "string"
          },
          "machineProperties": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MachineProperties"
              }
            ]
          },
          "createDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "lastUsedDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "expiryDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_AuthenticationDeviceDetails": {
        "title": "Q1_AuthenticationDeviceDetails",
        "required": [
          "machineNonce",
          "sequenceNonce",
          "machineLabel",
          "machineProperties"
        ],
        "type": "object",
        "properties": {
          "machineNonce": {
            "minLength": 1,
            "type": "string"
          },
          "sequenceNonce": {
            "minLength": 1,
            "type": "string"
          },
          "machineLabel": {
            "type": "string"
          },
          "machineProperties": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MachineProperties"
              }
            ]
          }
        },
        "description": ""
      },
      "Q1_MachineProperties": {
        "title": "Q1_MachineProperties",
        "required": [
          "applicationData"
        ],
        "type": "object",
        "properties": {
          "applicationData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Q1_ApplicationData"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "Q1_ApplicationData": {
        "title": "Q1_ApplicationData",
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "value": {
            "minLength": 1,
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_AuthenticationInfo": {
        "title": "Q1_AuthenticationInfo",
        "required": [
          "methods"
        ],
        "type": "object",
        "properties": {
          "methods": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Methods"
              }
            ]
          }
        },
        "description": ""
      },
      "Q1_Methods": {
        "title": "Q1_Methods",
        "required": [
          "hardToken",
          "softToken",
          "siteImage",
          "trustedPC",
          "callerId",
          "oneTimePass"
        ],
        "type": "object",
        "properties": {
          "hardToken": {
            "type": "boolean"
          },
          "softToken": {
            "type": "boolean"
          },
          "siteImage": {
            "type": "boolean"
          },
          "trustedPC": {
            "type": "boolean"
          },
          "callerId": {
            "type": "boolean"
          },
          "oneTimePass": {
            "type": "boolean"
          }
        },
        "description": ""
      },
      "Q1_TokenDetails": {
        "title": "Q1_TokenDetails",
        "required": [
          "userId",
          "userName",
          "userGroup",
          "vendorId",
          "serialNumber",
          "tokenType",
          "signatureSupported",
          "loadDate",
          "lastUsedDate"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "minLength": 1,
            "type": "string"
          },
          "userName": {
            "minLength": 1,
            "type": "string"
          },
          "userGroup": {
            "minLength": 1,
            "type": "string"
          },
          "vendorId": {
            "type": "string"
          },
          "serialNumber": {
            "type": "string"
          },
          "tokenType": {
            "type": "string"
          },
          "signatureSupported": {
            "type": "boolean"
          },
          "loadDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "lastUsedDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_AccountDetails": {
        "title": "Q1_AccountDetails",
        "required": [
          "accountId",
          "balance",
          "overdraft",
          "balanceSAR",
          "availableSAR",
          "averageLastSixMonths",
          "isoCurrencyCode",
          "division",
          "statusCode",
          "accountType",
          "glClassificationCode"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "balance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "overdraft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "balanceSAR": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "availableSAR": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "averageLastSixMonths": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "isoCurrencyCode": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          },
          "division": {
            "type": "string"
          },
          "statusCode": {
            "maxLength": 3,
            "type": "string"
          },
          "accountType": {
            "maxLength": 4,
            "type": "string"
          },
          "glClassificationCode": {
            "maxLength": 40,
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_Gender": {
        "title": "Q1_Gender",
        "enum": [
          "M",
          "F"
        ],
        "type": "string",
        "description": "Valid values are : M , F etc"
      },
      "Q1_trueOrFalseType": {
        "title": "Q1_trueOrFalseType",
        "enum": [
          "true",
          "false",
          "True",
          "False"
        ],
        "type": "string",
        "description": "Valid values are : true, false, True, False"
      },
      "Q1_trueOrFalseTypeOptional": {
        "title": "Q1_trueOrFalseTypeOptional",
        "enum": [
          "true",
          "false",
          "True",
          "False"
        ],
        "type": "string",
        "description": "Optional.\n\t\t\t\tValid values are : true, false, True,\n\t\t\t\tFalse etc"
      },
      "Q1_YorNType": {
        "title": "Q1_YorNType",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Valid values are : Y, N"
      },
      "Q1_YorNTypeOptional": {
        "title": "Q1_YorNTypeOptional",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Optional.\n\t\t\t\tValid values are : Y, N"
      },
      "Q1_contactlessIndicatorTypeOptional": {
        "title": "Q1_contactlessIndicatorTypeOptional",
        "enum": [
          "Y",
          "N",
          "V"
        ],
        "type": "string",
        "description": "Optional.\n\t\t\t\tValid values are : Y, N, V"
      },
      "Q1_CustomerChannelType": {
        "title": "Q1_CustomerChannelType",
        "enum": [
          "BOTH",
          "MOBILE",
          "AOL"
        ],
        "type": "string",
        "description": ""
      },
      "Q1_ErrorCategoryType": {
        "title": "Q1_ErrorCategoryType",
        "enum": [
          "BUSINESS",
          "SYSTEM"
        ],
        "type": "string",
        "description": ""
      },
      "Q1_CommonServiceFaultType": {
        "title": "Q1_CommonServiceFaultType",
        "required": [
          "category",
          "code",
          "message",
          "detail"
        ],
        "type": "object",
        "properties": {
          "category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_ErrorCategoryType"
              }
            ]
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_ServicesStatusType": {
        "title": "Q1_ServicesStatusType",
        "enum": [
          "ACTIVE",
          "DISABLE_USER",
          "DISABLE_ADMIN",
          "DELETED"
        ],
        "type": "string",
        "description": ""
      },
      "Q1_ServiceLevelType": {
        "title": "Q1_ServiceLevelType",
        "enum": [
          "INQUIRY",
          "FULL"
        ],
        "type": "string",
        "description": ""
      },
      "Q1_CustomerStatusType": {
        "title": "Q1_CustomerStatusType",
        "required": [
          "userId",
          "aol",
          "mobile",
          "emergencyCash"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "aol": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_AolStatusType"
              }
            ]
          },
          "mobile": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MobileStatusType"
              }
            ]
          },
          "emergencyCash": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_EmergencyCashStatus"
              }
            ]
          }
        },
        "description": ""
      },
      "Q1_AolStatusType": {
        "title": "Q1_AolStatusType",
        "required": [
          "createdBy",
          "createdDate",
          "lastLoginDate",
          "serviceLevel",
          "serviceStatus",
          "passwordRevoked"
        ],
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].[0-9])|()|(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9])",
            "type": "string"
          },
          "lastLoginDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].[0-9])|()|(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9])",
            "type": "string"
          },
          "serviceLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_ServiceLevelType"
              }
            ]
          },
          "serviceStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_ServicesStatusType"
              }
            ]
          },
          "passwordRevoked": {
            "type": "boolean"
          }
        },
        "description": ""
      },
      "Q1_MobileStatusType": {
        "title": "Q1_MobileStatusType",
        "required": [
          "registeredBy",
          "registeredDate",
          "lastLoginDate",
          "serviceLevel",
          "serviceStatus"
        ],
        "type": "object",
        "properties": {
          "registeredBy": {
            "type": "string"
          },
          "registeredDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].[0-9])|()|(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9])",
            "type": "string"
          },
          "lastLoginDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].[0-9])|()|(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9])",
            "type": "string"
          },
          "serviceLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_ServiceLevelType"
              }
            ]
          },
          "serviceStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_ServicesStatusType"
              }
            ]
          }
        },
        "description": ""
      },
      "Q1_EmergencyCashStatus": {
        "title": "Q1_EmergencyCashStatus",
        "required": [
          "registrationDate",
          "status"
        ],
        "type": "object",
        "properties": {
          "registrationDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].[0-9])|()|(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9])",
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_TransactionInfo": {
        "title": "Q1_TransactionInfo",
        "required": [
          "transactionType"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "relatedTransactionId": {
            "type": "string"
          },
          "transactionType": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_ClientInfo": {
        "title": "Q1_ClientInfo",
        "required": [
          "clientId"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_SecurityInfo": {
        "title": "Q1_SecurityInfo",
        "required": [
          "username",
          "password"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_CreationInfo": {
        "title": "Q1_CreationInfo",
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          },
          "branch": {
            "maxLength": 5,
            "type": "string"
          },
          "institution": {
            "maxLength": 3,
            "type": "string"
          },
          "teller": {
            "maxLength": 8,
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_RequestHeader": {
        "title": "Q1_RequestHeader",
        "type": "object",
        "properties": {
          "transactionInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_TransactionInfo"
              }
            ]
          },
          "clientInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_ClientInfo"
              }
            ]
          },
          "securityInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_SecurityInfo"
              }
            ]
          },
          "creationInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_CreationInfo"
              }
            ]
          }
        },
        "description": ""
      },
      "Q1_ErrorInfo": {
        "title": "Q1_ErrorInfo",
        "required": [
          "level"
        ],
        "type": "object",
        "properties": {
          "level": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_level"
              }
            ]
          },
          "code": {
            "type": "string"
          },
          "context": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_ReplyHeader": {
        "title": "Q1_ReplyHeader",
        "type": "object",
        "properties": {
          "transactionInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_TransactionInfo"
              }
            ]
          },
          "clientInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_ClientInfo"
              }
            ]
          },
          "errorInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_ErrorInfo"
              }
            ]
          }
        },
        "description": ""
      },
      "AccountAddressRequest": {
        "title": "AccountAddressRequest",
        "required": [
          "AccountAddressRequest"
        ],
        "type": "object",
        "properties": {
          "AccountAddressRequest": {
            "$ref": "#/components/schemas/tns_AccountAddressRequest"
          }
        }
      },
      "AccountAddressResponse": {
        "title": "AccountAddressResponse",
        "required": [
          "AccountAddressResponse"
        ],
        "type": "object",
        "properties": {
          "AccountAddressResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AccountAddressResponse"
              }
            ]
          }
        }
      },
      "AccountBalanceRequest": {
        "title": "AccountBalanceRequest",
        "required": [
          "AccountBalanceRequest"
        ],
        "type": "object",
        "properties": {
          "AccountBalanceRequest": {
            "$ref": "#/components/schemas/tns_AccountBalanceRequest"
          }
        }
      },
      "AccountBalanceResponse": {
        "title": "AccountBalanceResponse",
        "required": [
          "AccountBalanceResponse"
        ],
        "type": "object",
        "properties": {
          "AccountBalanceResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AccountBalanceResponse"
              }
            ]
          }
        }
      },
      "AccountDetailsRequest": {
        "title": "AccountDetailsRequest",
        "required": [
          "AccountDetailsRequest"
        ],
        "type": "object",
        "properties": {
          "AccountDetailsRequest": {
            "$ref": "#/components/schemas/AccountDetailsRequestType"
          }
        }
      },
      "AccountDetailsResponse": {
        "title": "AccountDetailsResponse",
        "required": [
          "AccountDetailsResponse"
        ],
        "type": "object",
        "properties": {
          "AccountDetailsResponse": {
            "$ref": "#/components/schemas/AccountDetailsResponseType"
          }
        }
      },
      "AccountEnquiryRequest": {
        "title": "AccountEnquiryRequest",
        "required": [
          "AccountEnquiryRequest"
        ],
        "type": "object",
        "properties": {
          "AccountEnquiryRequest": {
            "$ref": "#/components/schemas/tns_accountEnquiryInputType"
          }
        }
      },
      "AccountEnquiryResponse": {
        "title": "AccountEnquiryResponse",
        "required": [
          "AccountEnquiryResponse"
        ],
        "type": "object",
        "properties": {
          "AccountEnquiryResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_accountEnquiryOutputType"
              }
            ]
          }
        }
      },
      "AccountMandatesRequest": {
        "title": "AccountMandatesRequest",
        "required": [
          "AccountMandatesRequest"
        ],
        "type": "object",
        "properties": {
          "AccountMandatesRequest": {
            "$ref": "#/components/schemas/tns_AccountMandatesRequest"
          }
        }
      },
      "AccountMandatesResponse": {
        "title": "AccountMandatesResponse",
        "required": [
          "AccountMandatesResponse"
        ],
        "type": "object",
        "properties": {
          "AccountMandatesResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AccountMandatesResponse"
              }
            ]
          }
        }
      },
      "AccountNumberValidationRequest": {
        "title": "AccountNumberValidationRequest",
        "required": [
          "AccountNumberValidationRequest"
        ],
        "type": "object",
        "properties": {
          "AccountNumberValidationRequest": {
            "$ref": "#/components/schemas/AccountNumberValidationRequestType"
          }
        }
      },
      "AccountNumberValidationResponse": {
        "title": "AccountNumberValidationResponse",
        "required": [
          "AccountNumberValidationResponse"
        ],
        "type": "object",
        "properties": {
          "AccountNumberValidationResponse": {
            "$ref": "#/components/schemas/AccountNumberValidationResponseType"
          }
        }
      },
      "tns_AccountNumberValidationRequest": {
        "title": "tns_AccountNumberValidationRequest",
        "required": [
          "accountId"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "$ref": "../../commonschemas/schemas.json#/AccountId"
          }
        }
      },
      "AccountOwnerRequest": {
        "title": "AccountOwnerRequest",
        "required": [
          "AccountOwnerRequest"
        ],
        "type": "object",
        "properties": {
          "AccountOwnerRequest": {
            "$ref": "#/components/schemas/tns_AccountOwnerRequest"
          }
        }
      },
      "AccountOwnerResponse": {
        "title": "AccountOwnerResponse",
        "required": [
          "AccountOwnerResponse"
        ],
        "type": "object",
        "properties": {
          "AccountOwnerResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AccountOwnerResponse"
              }
            ]
          }
        }
      },
      "AccountStatusAmendmentRequest": {
        "title": "AccountStatusAmendmentRequest",
        "required": [
          "AccountStatusAmendmentRequest"
        ],
        "type": "object",
        "properties": {
          "AccountStatusAmendmentRequest": {
            "$ref": "#/components/schemas/AccountStatusAmendmentRequestType"
          }
        }
      },
      "AccountStatusAmendmentResponse": {
        "title": "AccountStatusAmendmentResponse",
        "required": [
          "AccountStatusAmendmentResponse"
        ],
        "type": "object",
        "properties": {
          "AccountStatusAmendmentResponse": {
            "$ref": "#/components/schemas/AccountStatusAmendmentResponseType"
          }
        }
      },
      "AccountStatusRequest": {
        "title": "AccountStatusRequest",
        "required": [
          "AccountStatusRequest"
        ],
        "type": "object",
        "properties": {
          "AccountStatusRequest": {
            "$ref": "#/components/schemas/tns_AccountStatusRequest"
          }
        }
      },
      "AccountStatusResponse": {
        "title": "AccountStatusResponse",
        "required": [
          "AccountStatusResponse"
        ],
        "type": "object",
        "properties": {
          "AccountStatusResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AccountStatusResponse"
              }
            ]
          }
        }
      },
      "AccountStopRequest": {
        "title": "AccountStopRequest",
        "required": [
          "AccountStopRequest"
        ],
        "type": "object",
        "properties": {
          "AccountStopRequest": {
            "$ref": "#/components/schemas/tns_AccountStopRequestType"
          }
        }
      },
      "AccountStopResponse": {
        "title": "AccountStopResponse",
        "required": [
          "AccountStopResponse"
        ],
        "type": "object",
        "properties": {
          "AccountStopResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AccountStopResponse"
              }
            ]
          }
        }
      },
      "AccountTransactionDetailsRequest": {
        "title": "AccountTransactionDetailsRequest",
        "required": [
          "AccountTransactionDetailsRequest"
        ],
        "type": "object",
        "properties": {
          "AccountTransactionDetailsRequest": {
            "$ref": "#/components/schemas/tns_AccountTransactionDetailsRequest"
          }
        }
      },
      "AccountTransactionDetailsResponse": {
        "title": "AccountTransactionDetailsResponse",
        "required": [
          "AccountTransactionDetailsResponse"
        ],
        "type": "object",
        "properties": {
          "AccountTransactionDetailsResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AccountTransactionDetailsResponse"
              }
            ]
          }
        }
      },
      "AccountTransactionsRequest": {
        "title": "AccountTransactionsRequest",
        "required": [
          "AccountTransactionsRequest"
        ],
        "type": "object",
        "properties": {
          "AccountTransactionsRequest": {
            "$ref": "#/components/schemas/AccountTransactionsRequestType"
          }
        }
      },
      "AccountTransactionsResponse": {
        "title": "AccountTransactionsResponse",
        "required": [
          "AccountTransactionsResponse"
        ],
        "type": "object",
        "properties": {
          "AccountTransactionsResponse": {
            "$ref": "#/components/schemas/AccountTransactionsResponseType"
          }
        }
      },
      "AccountTransferNotificationRequest": {
        "title": "AccountTransferNotificationRequest",
        "required": [
          "AccountTransferNotificationRequest"
        ],
        "type": "object",
        "properties": {
          "AccountTransferNotificationRequest": {
            "$ref": "#/components/schemas/tns_AccountTransferNotificationRequest"
          }
        }
      },
      "AccountTransferNotificationResponse": {
        "title": "AccountTransferNotificationResponse",
        "required": [
          "AccountTransferNotificationResponse"
        ],
        "type": "object",
        "properties": {
          "AccountTransferNotificationResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AccountTransferNotificationResponse"
              }
            ]
          }
        }
      },
      "AuthorisedSignatoriesRequest": {
        "title": "AuthorisedSignatoriesRequest",
        "required": [
          "AuthorisedSignatoriesRequest"
        ],
        "type": "object",
        "properties": {
          "AuthorisedSignatoriesRequest": {
            "$ref": "#/components/schemas/tns_AuthorisedSignatoriesRequest"
          }
        }
      },
      "AuthorisedSignatoriesResponse": {
        "title": "AuthorisedSignatoriesResponse",
        "required": [
          "AuthorisedSignatoriesResponse"
        ],
        "type": "object",
        "properties": {
          "AuthorisedSignatoriesResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AuthorisedSignatoriesResponse"
              }
            ]
          }
        }
      },
      "ChargeFeeRequest": {
        "title": "ChargeFeeRequest",
        "required": [
          "ChargeFeeRequest"
        ],
        "type": "object",
        "properties": {
          "ChargeFeeRequest": {
            "$ref": "#/components/schemas/tns_ChargeFeeRequest"
          }
        }
      },
      "ChargeFeeResponse": {
        "title": "ChargeFeeResponse",
        "required": [
          "ChargeFeeResponse"
        ],
        "type": "object",
        "properties": {
          "ChargeFeeResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ChargeFeeResponse"
              }
            ]
          }
        }
      },
      "ClaimRefundRequest": {
        "title": "ClaimRefundRequest",
        "required": [
          "ClaimRefundRequest"
        ],
        "type": "object",
        "properties": {
          "ClaimRefundRequest": {
            "$ref": "#/components/schemas/tns_ClaimRefundRequest"
          }
        }
      },
      "ClaimRefundResponse": {
        "title": "ClaimRefundResponse",
        "required": [
          "ClaimRefundResponse"
        ],
        "type": "object",
        "properties": {
          "ClaimRefundResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ClaimRefundResponse"
              }
            ]
          }
        }
      },
      "CMSAccountMaintenanceRequest": {
        "title": "CMSAccountMaintenanceRequest",
        "required": [
          "CMSAccountMaintenanceRequest"
        ],
        "type": "object",
        "properties": {
          "CMSAccountMaintenanceRequest": {
            "$ref": "#/components/schemas/CMSAccountMaintenanceRequestType"
          }
        }
      },
      "CMSAccountMaintenanceResponse": {
        "title": "CMSAccountMaintenanceResponse",
        "required": [
          "CMSAccountMaintenanceResponse"
        ],
        "type": "object",
        "properties": {
          "CMSAccountMaintenanceResponse": {
            "$ref": "#/components/schemas/CMSAccountMaintenanceResponseType"
          }
        }
      },
      "CMSAccountsRequest": {
        "title": "CMSAccountsRequest",
        "required": [
          "CMSAccountsRequest"
        ],
        "type": "object",
        "properties": {
          "CMSAccountsRequest": {
            "$ref": "#/components/schemas/CMSAccountsRequestType"
          }
        }
      },
      "CMSAccountsResponse": {
        "title": "CMSAccountsResponse",
        "required": [
          "CMSAccountsResponse"
        ],
        "type": "object",
        "properties": {
          "CMSAccountsResponse": {
            "$ref": "#/components/schemas/CMSAccountsResponseType"
          }
        }
      },
      "CMSAccountTransactionsListRequest": {
        "title": "CMSAccountTransactionsListRequest",
        "required": [
          "CMSAccountTransactionsListRequest"
        ],
        "type": "object",
        "properties": {
          "CMSAccountTransactionsListRequest": {
            "$ref": "#/components/schemas/tns_CMSAccountTransactionsListRequest"
          }
        }
      },
      "CMSAccountTransactionsListResponse": {
        "title": "CMSAccountTransactionsListResponse",
        "required": [
          "CMSAccountTransactionsListResponse"
        ],
        "type": "object",
        "properties": {
          "CMSAccountTransactionsListResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CMSAccountTransactionsListResponse"
              }
            ]
          }
        }
      },
      "CMSAccountTransactionsRequest": {
        "title": "CMSAccountTransactionsRequest",
        "required": [
          "CMSAccountTransactionsRequest"
        ],
        "type": "object",
        "properties": {
          "CMSAccountTransactionsRequest": {
            "$ref": "#/components/schemas/CMSAccountTransactionsRequestType"
          }
        }
      },
      "CMSAccountTransactionsResponse": {
        "title": "CMSAccountTransactionsResponse",
        "required": [
          "CMSAccountTransactionsResponse"
        ],
        "type": "object",
        "properties": {
          "CMSAccountTransactionsResponse": {
            "$ref": "#/components/schemas/CMSAccountTransactionsResponseType"
          }
        }
      },
      "CMSBulkAccountCreationRequest": {
        "title": "CMSBulkAccountCreationRequest",
        "required": [
          "CMSBulkAccountCreationRequest"
        ],
        "type": "object",
        "properties": {
          "CMSBulkAccountCreationRequest": {
            "$ref": "#/components/schemas/tns_CMSBulkAccountCreationRequest"
          }
        }
      },
      "CMSBulkAccountCreationResponse": {
        "title": "CMSBulkAccountCreationResponse",
        "required": [
          "CMSBulkAccountCreationResponse"
        ],
        "type": "object",
        "properties": {
          "CMSBulkAccountCreationResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CMSBulkAccountCreationResponse"
              }
            ]
          }
        }
      },
      "CMSBulkAccountUpdationRequest": {
        "title": "CMSBulkAccountUpdationRequest",
        "required": [
          "CMSBulkAccountUpdationRequest"
        ],
        "type": "object",
        "properties": {
          "CMSBulkAccountUpdationRequest": {
            "$ref": "#/components/schemas/tns_CMSBulkAccountUpdationRequest"
          }
        }
      },
      "CMSBulkAccountUpdationResponse": {
        "title": "CMSBulkAccountUpdationResponse",
        "required": [
          "CMSBulkAccountUpdationResponse"
        ],
        "type": "object",
        "properties": {
          "CMSBulkAccountUpdationResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CMSBulkAccountUpdationResponse"
              }
            ]
          }
        }
      },
      "CMSOmniAccountDetailsRequest": {
        "title": "CMSOmniAccountDetailsRequest",
        "required": [
          "CMSOmniAccountDetailsRequest"
        ],
        "type": "object",
        "properties": {
          "CMSOmniAccountDetailsRequest": {
            "$ref": "#/components/schemas/tns_CMSOmniAccountDetailsRequest"
          }
        }
      },
      "CMSOmniAccountDetailsResponse": {
        "title": "CMSOmniAccountDetailsResponse",
        "required": [
          "CMSOmniAccountDetailsResponse"
        ],
        "type": "object",
        "properties": {
          "CMSOmniAccountDetailsResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CMSOmniAccountDetailsResponse"
              }
            ]
          }
        }
      },
      "CMSOmniAccountMaintenanceRequest": {
        "title": "CMSOmniAccountMaintenanceRequest",
        "required": [
          "CMSOmniAccountMaintenanceRequest"
        ],
        "type": "object",
        "properties": {
          "CMSOmniAccountMaintenanceRequest": {
            "$ref": "#/components/schemas/tns_CMSOmniAccountMaintenanceRequest"
          }
        }
      },
      "CMSOmniAccountMaintenanceResponse": {
        "title": "CMSOmniAccountMaintenanceResponse",
        "required": [
          "CMSOmniAccountMaintenanceResponse"
        ],
        "type": "object",
        "properties": {
          "CMSOmniAccountMaintenanceResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CMSOmniAccountMaintenanceResponse"
              }
            ]
          }
        }
      },
      "CMSVirtualAccountCountRequest": {
        "title": "CMSVirtualAccountCountRequest",
        "required": [
          "CMSVirtualAccountCountRequest"
        ],
        "type": "object",
        "properties": {
          "CMSVirtualAccountCountRequest": {
            "$ref": "#/components/schemas/tns_CMSVirtualAccountCountRequest"
          }
        }
      },
      "CMSVirtualAccountCountResponse": {
        "title": "CMSVirtualAccountCountResponse",
        "required": [
          "CMSVirtualAccountCountResponse"
        ],
        "type": "object",
        "properties": {
          "CMSVirtualAccountCountResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CMSVirtualAccountCountResponse"
              }
            ]
          }
        }
      },
      "ConvertSignatureRequest": {
        "title": "ConvertSignatureRequest",
        "required": [
          "ConvertSignatureRequest"
        ],
        "type": "object",
        "properties": {
          "ConvertSignatureRequest": {
            "$ref": "#/components/schemas/tns_ConvertSignatureRequestRequestType"
          }
        }
      },
      "ConvertSignatureResponse": {
        "title": "ConvertSignatureResponse",
        "required": [
          "ConvertSignatureResponse"
        ],
        "type": "object",
        "properties": {
          "ConvertSignatureResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ConvertSignatureResponse"
              }
            ]
          }
        }
      },
      "CorporateAccountTransactionsRequest": {
        "title": "CorporateAccountTransactionsRequest",
        "required": [
          "CorporateAccountTransactionsRequest"
        ],
        "type": "object",
        "properties": {
          "CorporateAccountTransactionsRequest": {
            "$ref": "#/components/schemas/tns_CorporateAccountTransactionsRequest"
          }
        }
      },
      "CorporateAccountTransactionsResponse": {
        "title": "CorporateAccountTransactionsResponse",
        "required": [
          "CorporateAccountTransactionsResponse"
        ],
        "type": "object",
        "properties": {
          "CorporateAccountTransactionsResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CorporateAccountTransactionsResponse"
              }
            ]
          }
        }
      },
      "CreateAccountRequest": {
        "title": "CreateAccountRequest",
        "required": [
          "CreateAccountRequest"
        ],
        "type": "object",
        "properties": {
          "CreateAccountRequest": {
            "$ref": "#/components/schemas/tns_CreateAccountRequest"
          }
        }
      },
      "CreateAccountResponse": {
        "title": "CreateAccountResponse",
        "required": [
          "CreateAccountResponse"
        ],
        "type": "object",
        "properties": {
          "CreateAccountResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreateAccountResponse"
              }
            ]
          }
        }
      },
      "CreateIntegratedAccountRequest": {
        "title": "CreateIntegratedAccountRequest",
        "required": [
          "CreateIntegratedAccountRequest"
        ],
        "type": "object",
        "properties": {
          "CreateIntegratedAccountRequest": {
            "$ref": "#/components/schemas/tns_CreateIntegratedAccountRequest"
          }
        }
      },
      "CreateIntegratedAccountResponse": {
        "title": "CreateIntegratedAccountResponse",
        "required": [
          "CreateIntegratedAccountResponse"
        ],
        "type": "object",
        "properties": {
          "CreateIntegratedAccountResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreateIntegratedAccountResponse"
              }
            ]
          }
        }
      },
      "CreateSignatureRequest": {
        "title": "CreateSignatureRequest",
        "required": [
          "CreateSignatureRequest"
        ],
        "type": "object",
        "properties": {
          "CreateSignatureRequest": {
            "$ref": "#/components/schemas/tns_CreateSignatureRequestType"
          }
        }
      },
      "CreateSignatureResponse": {
        "title": "CreateSignatureResponse",
        "required": [
          "CreateSignatureResponse"
        ],
        "type": "object",
        "properties": {
          "CreateSignatureResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreateSignatureResponseType"
              }
            ]
          }
        }
      },
      "CustAcctsCumulativeBalRequest": {
        "title": "CustAcctsCumulativeBalRequest",
        "required": [
          "CustAcctsCumulativeBalRequest"
        ],
        "type": "object",
        "properties": {
          "CustAcctsCumulativeBalRequest": {
            "$ref": "#/components/schemas/CustAcctsCumulativeBalRequestType"
          }
        }
      },
      "CustAcctsCumulativeBalResponse": {
        "title": "CustAcctsCumulativeBalResponse",
        "required": [
          "CustAcctsCumulativeBalResponse"
        ],
        "type": "object",
        "properties": {
          "CustAcctsCumulativeBalResponse": {
            "$ref": "#/components/schemas/CustAcctsCumulativeBalResponseType"
          }
        }
      },
      "CustomerAccountValidationRequest": {
        "title": "CustomerAccountValidationRequest",
        "required": [
          "CustomerAccountValidationRequest"
        ],
        "type": "object",
        "properties": {
          "CustomerAccountValidationRequest": {
            "$ref": "#/components/schemas/tns_CustomerAccountValidationRequest"
          }
        }
      },
      "CustomerAccountValidationResponse": {
        "title": "CustomerAccountValidationResponse",
        "required": [
          "CustomerAccountValidationResponse"
        ],
        "type": "object",
        "properties": {
          "CustomerAccountValidationResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CustomerAccountValidationResponse"
              }
            ]
          }
        }
      },
      "CustomerStandingOrderInquiryRequest": {
        "title": "CustomerStandingOrderInquiryRequest",
        "required": [
          "CustomerStandingOrderInquiryRequest"
        ],
        "type": "object",
        "properties": {
          "CustomerStandingOrderInquiryRequest": {
            "$ref": "#/components/schemas/tns_CustomerStandingOrderInquiryType"
          }
        }
      },
      "CustomerStandingOrderInquiryResponse": {
        "title": "CustomerStandingOrderInquiryResponse",
        "required": [
          "CustomerStandingOrderInquiryResponse"
        ],
        "type": "object",
        "properties": {
          "CustomerStandingOrderInquiryResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CustomerStandingOrderInquiryResponse"
              }
            ]
          }
        }
      },
      "DeleteSignatureRequest": {
        "title": "DeleteSignatureRequest",
        "required": [
          "DeleteSignatureRequest"
        ],
        "type": "object",
        "properties": {
          "DeleteSignatureRequest": {
            "$ref": "#/components/schemas/tns_CreateSignatureRequestType"
          }
        }
      },
      "DeleteSignatureResponse": {
        "title": "DeleteSignatureResponse",
        "required": [
          "DeleteSignatureResponse"
        ],
        "type": "object",
        "properties": {
          "DeleteSignatureResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreateSignatureResponseType"
              }
            ]
          }
        }
      },
      "DepositAccountActivationRequest": {
        "title": "DepositAccountActivationRequest",
        "required": [
          "DepositAccountActivationRequest"
        ],
        "type": "object",
        "properties": {
          "DepositAccountActivationRequest": {
            "$ref": "#/components/schemas/tns_DepositAccountActivationRequest"
          }
        }
      },
      "DepositAccountActivationResponse": {
        "title": "DepositAccountActivationResponse",
        "required": [
          "DepositAccountActivationResponse"
        ],
        "type": "object",
        "properties": {
          "DepositAccountActivationResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_DepositAccountActivationResponse"
              }
            ]
          }
        }
      },
      "DepositAccountAmendmentRequest": {
        "title": "DepositAccountAmendmentRequest",
        "required": [
          "DepositAccountAmendmentRequest"
        ],
        "type": "object",
        "properties": {
          "DepositAccountAmendmentRequest": {
            "$ref": "#/components/schemas/tns_DepositAccountType"
          }
        }
      },
      "DepositAccountAmendmentResponse": {
        "title": "DepositAccountAmendmentResponse",
        "required": [
          "DepositAccountAmendmentResponse"
        ],
        "type": "object",
        "properties": {
          "DepositAccountAmendmentResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_DepositAccountAmendmentResponse"
              }
            ]
          }
        }
      },
      "DepositAccountCreationRequest": {
        "title": "DepositAccountCreationRequest",
        "required": [
          "DepositAccountCreationRequest"
        ],
        "type": "object",
        "properties": {
          "DepositAccountCreationRequest": {
            "$ref": "#/components/schemas/tns_DepositAccountCreationRequest"
          }
        }
      },
      "DepositAccountCreationResponse": {
        "title": "DepositAccountCreationResponse",
        "required": [
          "DepositAccountCreationResponse"
        ],
        "type": "object",
        "properties": {
          "DepositAccountCreationResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_DepositAccountCreationResponse"
              }
            ]
          }
        }
      },
      "DepositAccountInquiryRequest": {
        "title": "DepositAccountInquiryRequest",
        "required": [
          "DepositAccountInquiryRequest"
        ],
        "type": "object",
        "properties": {
          "DepositAccountInquiryRequest": {
            "$ref": "#/components/schemas/tns_DepositAccountInquiryRequest"
          }
        }
      },
      "DepositAccountInquiryResponse": {
        "title": "DepositAccountInquiryResponse",
        "required": [
          "DepositAccountInquiryResponse"
        ],
        "type": "object",
        "properties": {
          "DepositAccountInquiryResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_DepositAccountInquiryResponse"
              }
            ]
          }
        }
      },
      "EnquirePaymentRequest": {
        "title": "EnquirePaymentRequest",
        "required": [
          "EnquirePaymentRequest"
        ],
        "type": "object",
        "properties": {
          "EnquirePaymentRequest": {
            "$ref": "#/components/schemas/tns_EnquirePaymentRequest"
          }
        }
      },
      "EnquirePaymentResponse": {
        "title": "EnquirePaymentResponse",
        "required": [
          "EnquirePaymentResponse"
        ],
        "type": "object",
        "properties": {
          "EnquirePaymentResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_EnquirePaymentResponse"
              }
            ]
          }
        }
      },
      "FeeRequest": {
        "title": "FeeRequest",
        "required": [
          "FeeRequest"
        ],
        "type": "object",
        "properties": {
          "FeeRequest": {
            "$ref": "#/components/schemas/tns_FeeRequest"
          }
        }
      },
      "FeeResponse": {
        "title": "FeeResponse",
        "required": [
          "FeeResponse"
        ],
        "type": "object",
        "properties": {
          "FeeResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_FeeResponse"
              }
            ]
          }
        }
      },
      "GetAccountsRequest": {
        "title": "GetAccountsRequest",
        "required": [
          "GetAccountsRequest"
        ],
        "type": "object",
        "properties": {
          "GetAccountsRequest": {
            "$ref": "#/components/schemas/tns_GetAccountsRequest"
          }
        }
      },
      "GetAccountsResponse": {
        "title": "GetAccountsResponse",
        "required": [
          "GetAccountsResponse"
        ],
        "type": "object",
        "properties": {
          "GetAccountsResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetAccountsResponse"
              }
            ]
          }
        }
      },
      "GetAccountTypeDetailsRequest": {
        "title": "GetAccountTypeDetailsRequest",
        "required": [
          "GetAccountTypeDetailsRequest"
        ],
        "type": "object",
        "properties": {
          "GetAccountTypeDetailsRequest": {
            "$ref": "#/components/schemas/tns_GetAccountTypeDetailsRequest"
          }
        }
      },
      "GetAccountTypeDetailsResponse": {
        "title": "GetAccountTypeDetailsResponse",
        "required": [
          "GetAccountTypeDetailsResponse"
        ],
        "type": "object",
        "properties": {
          "GetAccountTypeDetailsResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetAccountTypeDetailsResponse"
              }
            ]
          }
        }
      },
      "GetAccountValidationEnquiryRequest": {
        "title": "GetAccountValidationEnquiryRequest",
        "required": [
          "GetAccountValidationEnquiryRequest"
        ],
        "type": "object",
        "properties": {
          "GetAccountValidationEnquiryRequest": {
            "$ref": "#/components/schemas/tns_GetAccountValidationEnquiryRequest"
          }
        }
      },
      "GetAccountValidationEnquiryResponse": {
        "title": "GetAccountValidationEnquiryResponse",
        "required": [
          "GetAccountValidationEnquiryResponse"
        ],
        "type": "object",
        "properties": {
          "GetAccountValidationEnquiryResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetAccountValidationEnquiryResponse"
              }
            ]
          }
        }
      },
      "GetDonationAccountsRequest": {
        "title": "GetDonationAccountsRequest",
        "required": [
          "GetDonationAccountsRequest"
        ],
        "type": "object",
        "properties": {
          "GetDonationAccountsRequest": {
            "$ref": "#/components/schemas/tns_GetDonationAccountsRequest"
          }
        }
      },
      "GetDonationAccountsResponse": {
        "title": "GetDonationAccountsResponse",
        "required": [
          "GetDonationAccountsResponse"
        ],
        "type": "object",
        "properties": {
          "GetDonationAccountsResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetDonationAccountsResponse"
              }
            ]
          }
        }
      },
      "GetGLAccountBalanceRequest": {
        "title": "GetGLAccountBalanceRequest",
        "required": [
          "GetGLAccountBalanceRequest"
        ],
        "type": "object",
        "properties": {
          "GetGLAccountBalanceRequest": {
            "$ref": "#/components/schemas/tns_GetGLAccountBalanceRequest"
          }
        }
      },
      "GetGLAccountBalanceResponse": {
        "title": "GetGLAccountBalanceResponse",
        "required": [
          "GetGLAccountBalanceResponse"
        ],
        "type": "object",
        "properties": {
          "GetGLAccountBalanceResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetGLAccountBalanceResponse"
              }
            ]
          }
        }
      },
      "GetMT940OtherBankStatementRequest": {
        "title": "GetMT940OtherBankStatementRequest",
        "required": [
          "GetMT940OtherBankStatementRequest"
        ],
        "type": "object",
        "properties": {
          "GetMT940OtherBankStatementRequest": {
            "$ref": "#/components/schemas/tns_GetMT940OtherBankStatementRequest"
          }
        }
      },
      "GetMT940OtherBankStatementResponse": {
        "title": "GetMT940OtherBankStatementResponse",
        "required": [
          "GetMT940OtherBankStatementResponse"
        ],
        "type": "object",
        "properties": {
          "GetMT940OtherBankStatementResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetMT940OtherBankStatementResponse"
              }
            ]
          }
        }
      },
      "GetSAMBATransactionHistoryRequest": {
        "title": "GetSAMBATransactionHistoryRequest",
        "required": [
          "GetSAMBATransactionHistoryRequest"
        ],
        "type": "object",
        "properties": {
          "GetSAMBATransactionHistoryRequest": {
            "$ref": "#/components/schemas/tns_GetSAMBATransactionHistoryRequest"
          }
        }
      },
      "GetSAMBATransactionHistoryResponse": {
        "title": "GetSAMBATransactionHistoryResponse",
        "required": [
          "GetSAMBATransactionHistoryResponse"
        ],
        "type": "object",
        "properties": {
          "GetSAMBATransactionHistoryResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetSAMBATransactionHistoryResponse"
              }
            ]
          }
        }
      },
      "GetServiceAccountStatusRequest": {
        "title": "GetServiceAccountStatusRequest",
        "required": [
          "GetServiceAccountStatusRequest"
        ],
        "type": "object",
        "properties": {
          "GetServiceAccountStatusRequest": {
            "$ref": "#/components/schemas/tns_GetServiceAccountStatusRequest"
          }
        }
      },
      "GetServiceAccountStatusResponse": {
        "title": "GetServiceAccountStatusResponse",
        "required": [
          "GetServiceAccountStatusResponse"
        ],
        "type": "object",
        "properties": {
          "GetServiceAccountStatusResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetServiceAccountStatusResponse"
              }
            ]
          }
        }
      },
      "GetStandingOrdersRequest": {
        "title": "GetStandingOrdersRequest",
        "required": [
          "GetStandingOrdersRequest"
        ],
        "type": "object",
        "properties": {
          "GetStandingOrdersRequest": {
            "$ref": "#/components/schemas/tns_GetStandingOrdersRequest"
          }
        }
      },
      "GetStandingOrdersResponse": {
        "title": "GetStandingOrdersResponse",
        "required": [
          "GetStandingOrdersResponse"
        ],
        "type": "object",
        "properties": {
          "GetStandingOrdersResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetStandingOrdersResponse"
              }
            ]
          }
        }
      },
      "GetStandingOrderTransactionsRequest": {
        "title": "GetStandingOrderTransactionsRequest",
        "required": [
          "GetStandingOrderTransactionsRequest"
        ],
        "type": "object",
        "properties": {
          "GetStandingOrderTransactionsRequest": {
            "$ref": "#/components/schemas/tns_GetStandingOrderTransactionsRequest"
          }
        }
      },
      "GetStandingOrderTransactionsResponse": {
        "title": "GetStandingOrderTransactionsResponse",
        "required": [
          "GetStandingOrderTransactionsResponse"
        ],
        "type": "object",
        "properties": {
          "GetStandingOrderTransactionsResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetStandingOrderTransactionsResponse"
              }
            ]
          }
        }
      },
      "header_authenticationType": {
        "title": "header_authenticationType",
        "enum": [
          "NONE",
          "OTP",
          "TOKEN"
        ],
        "type": "string",
        "description": ""
      },
      "IBANCreationRequest": {
        "title": "IBANCreationRequest",
        "required": [
          "IBANCreationRequest"
        ],
        "type": "object",
        "properties": {
          "IBANCreationRequest": {
            "$ref": "#/components/schemas/IBANCreationRequestType"
          }
        }
      },
      "IBANCreationResponse": {
        "title": "IBANCreationResponse",
        "required": [
          "IBANCreationResponse"
        ],
        "type": "object",
        "properties": {
          "IBANCreationResponse": {
            "$ref": "#/components/schemas/IBANCreationResponseType"
          }
        }
      },
      "InquireAccountRolloverHistoryRequest": {
        "title": "InquireAccountRolloverHistoryRequest",
        "required": [
          "InquireAccountRolloverHistoryRequest"
        ],
        "type": "object",
        "properties": {
          "InquireAccountRolloverHistoryRequest": {
            "$ref": "#/components/schemas/tns_InquireAccountRolloverHistoryRequest"
          }
        }
      },
      "InquireAccountRolloverHistoryResponse": {
        "title": "InquireAccountRolloverHistoryResponse",
        "required": [
          "InquireAccountRolloverHistoryResponse"
        ],
        "type": "object",
        "properties": {
          "InquireAccountRolloverHistoryResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InquireAccountRolloverHistoryResponse"
              }
            ]
          }
        }
      },
      "InquireAccountSignatureStatusRequest": {
        "title": "InquireAccountSignatureStatusRequest",
        "required": [
          "InquireAccountSignatureStatusRequest"
        ],
        "type": "object",
        "properties": {
          "InquireAccountSignatureStatusRequest": {
            "$ref": "#/components/schemas/InquireAccountSignatureStatusRequestType"
          }
        }
      },
      "InquireAccountSignatureStatusResponse": {
        "title": "InquireAccountSignatureStatusResponse",
        "required": [
          "InquireAccountSignatureStatusResponse"
        ],
        "type": "object",
        "properties": {
          "InquireAccountSignatureStatusResponse": {
            "$ref": "#/components/schemas/InquireAccountSignatureStatusResponseType"
          }
        }
      },
      "InquireAccountTransactionRequest": {
        "title": "InquireAccountTransactionRequest",
        "required": [
          "InquireAccountTransactionRequest"
        ],
        "type": "object",
        "properties": {
          "InquireAccountTransactionRequest": {
            "$ref": "#/components/schemas/tns_InquireAccountTransactionRequest"
          }
        }
      },
      "InquireAccountTransactionResponse": {
        "title": "InquireAccountTransactionResponse",
        "required": [
          "InquireAccountTransactionResponse"
        ],
        "type": "object",
        "properties": {
          "InquireAccountTransactionResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InquireAccountTransactionResponse"
              }
            ]
          }
        }
      },
      "InquireClosedAccountsRequest": {
        "title": "InquireClosedAccountsRequest",
        "required": [
          "InquireClosedAccountsRequest"
        ],
        "type": "object",
        "properties": {
          "InquireClosedAccountsRequest": {
            "$ref": "#/components/schemas/tns_InquireClosedAccountsRequest"
          }
        }
      },
      "InquireClosedAccountsResponse": {
        "title": "InquireClosedAccountsResponse",
        "required": [
          "InquireClosedAccountsResponse"
        ],
        "type": "object",
        "properties": {
          "InquireClosedAccountsResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InquireClosedAccountsResponse"
              }
            ]
          }
        }
      },
      "InquireProductParametersRequest": {
        "title": "InquireProductParametersRequest",
        "required": [
          "InquireProductParametersRequest"
        ],
        "type": "object",
        "properties": {
          "InquireProductParametersRequest": {
            "$ref": "#/components/schemas/tns_InquireProductParametersRequest"
          }
        }
      },
      "InquireProductParametersResponse": {
        "title": "InquireProductParametersResponse",
        "required": [
          "InquireProductParametersResponse"
        ],
        "type": "object",
        "properties": {
          "InquireProductParametersResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InquireProductParametersResponse"
              }
            ]
          }
        }
      },
      "InquireSignatureRequest": {
        "title": "InquireSignatureRequest",
        "required": [
          "InquireSignatureRequest"
        ],
        "type": "object",
        "properties": {
          "InquireSignatureRequest": {
            "$ref": "#/components/schemas/tns_InquireSignatureRequestType"
          }
        }
      },
      "InquireSignatureResponse": {
        "title": "InquireSignatureResponse",
        "required": [
          "InquireSignatureResponse"
        ],
        "type": "object",
        "properties": {
          "InquireSignatureResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InquireSignatureResponse"
              }
            ]
          }
        }
      },
      "MaintainDepositorRequest": {
        "title": "MaintainDepositorRequest",
        "required": [
          "MaintainDepositorRequest"
        ],
        "type": "object",
        "properties": {
          "MaintainDepositorRequest": {
            "$ref": "#/components/schemas/tns_MaintainDepositorRequest"
          }
        }
      },
      "MaintainDepositorResponse": {
        "title": "MaintainDepositorResponse",
        "required": [
          "MaintainDepositorResponse"
        ],
        "type": "object",
        "properties": {
          "MaintainDepositorResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_MaintainDepositorResponse"
              }
            ]
          }
        }
      },
      "MT940AccountRegistrationRequest": {
        "title": "MT940AccountRegistrationRequest",
        "required": [
          "MT940AccountRegistrationRequest"
        ],
        "type": "object",
        "properties": {
          "MT940AccountRegistrationRequest": {
            "$ref": "#/components/schemas/tns_MT940AccountRegistrationRequest"
          }
        }
      },
      "MT940AccountRegistrationResponse": {
        "title": "MT940AccountRegistrationResponse",
        "required": [
          "MT940AccountRegistrationResponse"
        ],
        "type": "object",
        "properties": {
          "MT940AccountRegistrationResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_MT940AccountRegistrationResponse"
              }
            ]
          }
        }
      },
      "MT940StatementRequest": {
        "title": "MT940StatementRequest",
        "required": [
          "MT940StatementRequest"
        ],
        "type": "object",
        "properties": {
          "MT940StatementRequest": {
            "$ref": "#/components/schemas/tns_MT940StatementRequest"
          }
        }
      },
      "MT940StatementResponse": {
        "title": "MT940StatementResponse",
        "required": [
          "MT940StatementResponse"
        ],
        "type": "object",
        "properties": {
          "MT940StatementResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_MT940StatementResponse"
              }
            ]
          }
        }
      },
      "MT942StatementRequest": {
        "title": "MT942StatementRequest",
        "required": [
          "MT942StatementRequest"
        ],
        "type": "object",
        "properties": {
          "MT942StatementRequest": {
            "$ref": "#/components/schemas/tns_MT942StatementRequest"
          }
        }
      },
      "MT942StatementResponse": {
        "title": "MT942StatementResponse",
        "required": [
          "MT942StatementResponse"
        ],
        "type": "object",
        "properties": {
          "MT942StatementResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_MT942StatementResponse"
              }
            ]
          }
        }
      },
      "MutualFundSignatureCreationRequest": {
        "title": "MutualFundSignatureCreationRequest",
        "required": [
          "MutualFundSignatureCreationRequest"
        ],
        "type": "object",
        "properties": {
          "MutualFundSignatureCreationRequest": {
            "$ref": "#/components/schemas/tns_MutualFundSignatureCreationRequest"
          }
        }
      },
      "MutualFundSignatureCreationResponse": {
        "title": "MutualFundSignatureCreationResponse",
        "required": [
          "MutualFundSignatureCreationResponse"
        ],
        "type": "object",
        "properties": {
          "MutualFundSignatureCreationResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_MutualFundSignatureCreationResponse"
              }
            ]
          }
        }
      },
      "MutualFundSignatureDeletionRequest": {
        "title": "MutualFundSignatureDeletionRequest",
        "required": [
          "MutualFundSignatureDeletionRequest"
        ],
        "type": "object",
        "properties": {
          "MutualFundSignatureDeletionRequest": {
            "$ref": "#/components/schemas/tns_MutualFundSignatureDeletionRequest"
          }
        }
      },
      "MutualFundSignatureDeletionResponse": {
        "title": "MutualFundSignatureDeletionResponse",
        "required": [
          "MutualFundSignatureDeletionResponse"
        ],
        "type": "object",
        "properties": {
          "MutualFundSignatureDeletionResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_MutualFundSignatureDeletionResponse"
              }
            ]
          }
        }
      },
      "MutualFundSignatureInquiryRequest": {
        "title": "MutualFundSignatureInquiryRequest",
        "required": [
          "MutualFundSignatureInquiryRequest"
        ],
        "type": "object",
        "properties": {
          "MutualFundSignatureInquiryRequest": {
            "$ref": "#/components/schemas/tns_MutualFundSignatureInquiryRequest"
          }
        }
      },
      "MutualFundSignatureInquiryResponse": {
        "title": "MutualFundSignatureInquiryResponse",
        "required": [
          "MutualFundSignatureInquiryResponse"
        ],
        "type": "object",
        "properties": {
          "MutualFundSignatureInquiryResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_MutualFundSignatureInquiryResponse"
              }
            ]
          }
        }
      },
      "MutualFundSignatureUpdationRequest": {
        "title": "MutualFundSignatureUpdationRequest",
        "required": [
          "MutualFundSignatureUpdationRequest"
        ],
        "type": "object",
        "properties": {
          "MutualFundSignatureUpdationRequest": {
            "$ref": "#/components/schemas/tns_MutualFundSignatureUpdationRequest"
          }
        }
      },
      "MutualFundSignatureUpdationResponse": {
        "title": "MutualFundSignatureUpdationResponse",
        "required": [
          "MutualFundSignatureUpdationResponse"
        ],
        "type": "object",
        "properties": {
          "MutualFundSignatureUpdationResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_MutualFundSignatureUpdationResponse"
              }
            ]
          }
        }
      },
      "PaymentInquiryRequest": {
        "title": "PaymentInquiryRequest",
        "required": [
          "PaymentInquiryRequest"
        ],
        "type": "object",
        "properties": {
          "PaymentInquiryRequest": {
            "$ref": "#/components/schemas/tns_PaymentInquiryRequest"
          }
        }
      },
      "PaymentInquiryResponse": {
        "title": "PaymentInquiryResponse",
        "required": [
          "PaymentInquiryResponse"
        ],
        "type": "object",
        "properties": {
          "PaymentInquiryResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_PaymentInquiryResponse"
              }
            ]
          }
        }
      },
      "PayrollDetailsAmendmentRequest": {
        "title": "PayrollDetailsAmendmentRequest",
        "required": [
          "PayrollDetailsAmendmentRequest"
        ],
        "type": "object",
        "properties": {
          "PayrollDetailsAmendmentRequest": {
            "$ref": "#/components/schemas/tns_PayrollDetailsAmendmentRequest"
          }
        }
      },
      "PayrollDetailsAmendmentResponse": {
        "title": "PayrollDetailsAmendmentResponse",
        "required": [
          "PayrollDetailsAmendmentResponse"
        ],
        "type": "object",
        "properties": {
          "PayrollDetailsAmendmentResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_PayrollDetailsAmendmentResponse"
              }
            ]
          }
        }
      },
      "PayrollTransactionsRequest": {
        "title": "PayrollTransactionsRequest",
        "required": [
          "PayrollTransactionsRequest"
        ],
        "type": "object",
        "properties": {
          "PayrollTransactionsRequest": {
            "$ref": "#/components/schemas/tns_PayrollTransactionsRequest"
          }
        }
      },
      "PayrollTransactionsResponse": {
        "title": "PayrollTransactionsResponse",
        "required": [
          "PayrollTransactionsResponse"
        ],
        "type": "object",
        "properties": {
          "PayrollTransactionsResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_PayrollTransactionsResponse"
              }
            ]
          }
        }
      },
      "PledgeTimeDepositAccountsRequest": {
        "title": "PledgeTimeDepositAccountsRequest",
        "required": [
          "PledgeTimeDepositAccountsRequest"
        ],
        "type": "object",
        "properties": {
          "PledgeTimeDepositAccountsRequest": {
            "$ref": "#/components/schemas/tns_PledgeTimeDepositAccountsRequest"
          }
        }
      },
      "PledgeTimeDepositAccountsResponse": {
        "title": "PledgeTimeDepositAccountsResponse",
        "required": [
          "PledgeTimeDepositAccountsResponse"
        ],
        "type": "object",
        "properties": {
          "PledgeTimeDepositAccountsResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_PledgeTimeDepositAccountsResponse"
              }
            ]
          }
        }
      },
      "PromoCodesRequest": {
        "title": "PromoCodesRequest",
        "required": [
          "PromoCodesRequest"
        ],
        "type": "object",
        "properties": {
          "PromoCodesRequest": {
            "$ref": "#/components/schemas/PromoCodesRequestType"
          }
        }
      },
      "PromoCodesResponse": {
        "title": "PromoCodesResponse",
        "required": [
          "PromoCodesResponse"
        ],
        "type": "object",
        "properties": {
          "PromoCodesResponse": {
            "$ref": "#/components/schemas/PromoCodesResponseType"
          }
        }
      },
      "Q1_level": {
        "title": "Q1_level",
        "enum": [
          "SUCCESS",
          "WARNING",
          "FAILURE"
        ],
        "type": "string",
        "description": ""
      },
      "RegisterAccountNotificationRequest": {
        "title": "RegisterAccountNotificationRequest",
        "required": [
          "RegisterAccountNotificationRequest"
        ],
        "type": "object",
        "properties": {
          "RegisterAccountNotificationRequest": {
            "$ref": "#/components/schemas/tns_RegisterAccountNotificationRequest"
          }
        }
      },
      "RegisterAccountNotificationResponse": {
        "title": "RegisterAccountNotificationResponse",
        "required": [
          "RegisterAccountNotificationResponse"
        ],
        "type": "object",
        "properties": {
          "RegisterAccountNotificationResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RegisterAccountNotificationResponse"
              }
            ]
          }
        }
      },
      "RetrieveDepositorInfoRequest": {
        "title": "RetrieveDepositorInfoRequest",
        "required": [
          "RetrieveDepositorInfoRequest"
        ],
        "type": "object",
        "properties": {
          "RetrieveDepositorInfoRequest": {
            "$ref": "#/components/schemas/tns_RetrieveDepositorInfoRequest"
          }
        }
      },
      "RetrieveDepositorInfoResponse": {
        "title": "RetrieveDepositorInfoResponse",
        "required": [
          "RetrieveDepositorInfoResponse"
        ],
        "type": "object",
        "properties": {
          "RetrieveDepositorInfoResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RetrieveDepositorInfoResponse"
              }
            ]
          }
        }
      },
      "SadadInquiryCollectionLinkedAccountsRequest": {
        "title": "SadadInquiryCollectionLinkedAccountsRequest",
        "required": [
          "SadadInquiryCollectionLinkedAccountsRequest"
        ],
        "type": "object",
        "properties": {
          "SadadInquiryCollectionLinkedAccountsRequest": {
            "$ref": "#/components/schemas/tns_SadadInquiryCollectionLinkedAccountsRequest"
          }
        }
      },
      "SadadInquiryCollectionLinkedAccountsResponse": {
        "title": "SadadInquiryCollectionLinkedAccountsResponse",
        "required": [
          "SadadInquiryCollectionLinkedAccountsResponse"
        ],
        "type": "object",
        "properties": {
          "SadadInquiryCollectionLinkedAccountsResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_SadadInquiryCollectionLinkedAccountsResponse"
              }
            ]
          }
        }
      },
      "SAMAStandingOrderInquiryRequest": {
        "title": "SAMAStandingOrderInquiryRequest",
        "required": [
          "SAMAStandingOrderInquiryRequest"
        ],
        "type": "object",
        "properties": {
          "SAMAStandingOrderInquiryRequest": {
            "$ref": "#/components/schemas/tns_SAMAStandingOrderInquiryType"
          }
        }
      },
      "SAMAStandingOrderInquiryResponse": {
        "title": "SAMAStandingOrderInquiryResponse",
        "required": [
          "SAMAStandingOrderInquiryResponse"
        ],
        "type": "object",
        "properties": {
          "SAMAStandingOrderInquiryResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_SAMAStandingOrderInquiryResponse"
              }
            ]
          }
        }
      },
      "ServiceEntityRedeemRequest": {
        "title": "ServiceEntityRedeemRequest",
        "required": [
          "ServiceEntityRedeemRequest"
        ],
        "type": "object",
        "properties": {
          "ServiceEntityRedeemRequest": {
            "$ref": "#/components/schemas/tns_ServiceEntityRedeemRequest"
          }
        }
      },
      "ServiceEntityRedeemResponse": {
        "title": "ServiceEntityRedeemResponse",
        "required": [
          "ServiceEntityRedeemResponse"
        ],
        "type": "object",
        "properties": {
          "ServiceEntityRedeemResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ServiceEntityRedeemResponse"
              }
            ]
          }
        }
      },
      "StandingOrderCancellationRequest": {
        "title": "StandingOrderCancellationRequest",
        "required": [
          "StandingOrderCancellationRequest"
        ],
        "type": "object",
        "properties": {
          "StandingOrderCancellationRequest": {
            "$ref": "#/components/schemas/tns_StandingOrderCancellationRequest"
          }
        }
      },
      "StandingOrderCancellationResponse": {
        "title": "StandingOrderCancellationResponse",
        "required": [
          "StandingOrderCancellationResponse"
        ],
        "type": "object",
        "properties": {
          "StandingOrderCancellationResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_StandingOrderCancellationResponse"
              }
            ]
          }
        }
      },
      "StandingOrderCreationRequest": {
        "title": "StandingOrderCreationRequest",
        "required": [
          "StandingOrderCreationRequest"
        ],
        "type": "object",
        "properties": {
          "StandingOrderCreationRequest": {
            "$ref": "#/components/schemas/tns_StandingOrderCreationRequest"
          }
        }
      },
      "StandingOrderCreationResponse": {
        "title": "StandingOrderCreationResponse",
        "required": [
          "StandingOrderCreationResponse"
        ],
        "type": "object",
        "properties": {
          "StandingOrderCreationResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_StandingOrderCreationResponse"
              }
            ]
          }
        }
      },
      "StandingOrderFeeRequest": {
        "title": "StandingOrderFeeRequest",
        "required": [
          "StandingOrderFeeRequest"
        ],
        "type": "object",
        "properties": {
          "StandingOrderFeeRequest": {
            "$ref": "#/components/schemas/tns_StandingOrderFeeRequest"
          }
        }
      },
      "StandingOrderFeeResponse": {
        "title": "StandingOrderFeeResponse",
        "required": [
          "StandingOrderFeeResponse"
        ],
        "type": "object",
        "properties": {
          "StandingOrderFeeResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_StandingOrderFeeResponse"
              }
            ]
          }
        }
      },
      "StandingOrderUpdationRequest": {
        "title": "StandingOrderUpdationRequest",
        "required": [
          "StandingOrderUpdationRequest"
        ],
        "type": "object",
        "properties": {
          "StandingOrderUpdationRequest": {
            "$ref": "#/components/schemas/tns_StandingOrderUpdationRequest"
          }
        }
      },
      "StandingOrderUpdationResponse": {
        "title": "StandingOrderUpdationResponse",
        "required": [
          "StandingOrderUpdationResponse"
        ],
        "type": "object",
        "properties": {
          "StandingOrderUpdationResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_StandingOrderUpdationResponse"
              }
            ]
          }
        }
      },
      "StatementGenerationRequest": {
        "title": "StatementGenerationRequest",
        "required": [
          "StatementGenerationRequest"
        ],
        "type": "object",
        "properties": {
          "StatementGenerationRequest": {
            "$ref": "#/components/schemas/tns_StatementGenerationRequest"
          }
        }
      },
      "StatementGenerationResponse": {
        "title": "StatementGenerationResponse",
        "required": [
          "StatementGenerationResponse"
        ],
        "type": "object",
        "properties": {
          "StatementGenerationResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_StatementGenerationResponse"
              }
            ]
          }
        }
      },
      "TimeDepositAccountsRequest": {
        "title": "TimeDepositAccountsRequest",
        "required": [
          "TimeDepositAccountsRequest"
        ],
        "type": "object",
        "properties": {
          "TimeDepositAccountsRequest": {
            "$ref": "#/components/schemas/tns_TimeDepositAccountsRequest"
          }
        }
      },
      "TimeDepositAccountsResponse": {
        "title": "TimeDepositAccountsResponse",
        "required": [
          "TimeDepositAccountsResponse"
        ],
        "type": "object",
        "properties": {
          "TimeDepositAccountsResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_TimeDepositAccountsResponse"
              }
            ]
          }
        }
      },
      "tns_accountIdentifier": {
        "title": "tns_accountIdentifier",
        "enum": [
          "DEP",
          "CTA"
        ],
        "type": "string",
        "description": ""
      },
      "AdditionalInformationType": {
        "title": "AdditionalInformationType",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": ""
      },
      "tns_autoMT202": {
        "title": "tns_autoMT202",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": ""
      },
      "tns_bankCharge": {
        "title": "tns_bankCharge",
        "enum": [
          "REM",
          "SHA",
          "BEN"
        ],
        "type": "string",
        "description": ""
      },
      "ByTransactionDateOrProcessingDateType": {
        "title": "ByTransactionDateOrProcessingDateType",
        "enum": [
          "T",
          "P"
        ],
        "type": "string",
        "description": ""
      },
      "tns_cdcFlag": {
        "title": "tns_cdcFlag",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": ""
      },
      "tns_custodianFlag": {
        "title": "tns_custodianFlag",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": ""
      },
      "tns_depositoryBank": {
        "title": "tns_depositoryBank",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": ""
      },
      "detail": {
        "title": "detail",
        "enum": [
          "N",
          "F"
        ],
        "type": "string",
        "description": ""
      },
      "tns_hasAccountDetailsUpdated": {
        "title": "tns_hasAccountDetailsUpdated",
        "enum": [
          "Yes",
          "No"
        ],
        "type": "string",
        "description": ""
      },
      "tns_incomingAccountId": {
        "title": "tns_incomingAccountId",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": ""
      },
      "isAccountValid": {
        "title": "isAccountValid",
        "enum": [
          "Yes",
          "No"
        ],
        "type": "string"
      },
      "tns_isCustomerAccountValid": {
        "title": "tns_isCustomerAccountValid",
        "enum": [
          "False",
          "True"
        ],
        "type": "string",
        "description": ""
      },
      "tns_option": {
        "title": "tns_option",
        "enum": [
          "A",
          "U",
          "D"
        ],
        "type": "string",
        "description": ""
      },
      "tns_signatureFileExchange": {
        "title": "tns_signatureFileExchange",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": ""
      },
      "tns_sort": {
        "title": "tns_sort",
        "enum": [
          "A",
          "D"
        ],
        "type": "string",
        "description": ""
      },
      "TransactionOption": {
        "title": "TransactionOption",
        "enum": [
          "A",
          "M",
          "F",
          "P",
          "H",
          "T"
        ],
        "type": "string",
        "description": ""
      },
      "tns_transactions": {
        "title": "tns_transactions",
        "type": "object",
        "properties": {
          "employerCode": {
            "maxLength": 4,
            "type": "string"
          },
          "lastTransactionDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "lastTransactionAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AmountOptional"
              }
            ]
          },
          "salaryCrName": {
            "type": "string"
          }
        },
        "description": ""
      },
      "TransactionType": {
        "title": "TransactionType",
        "enum": [
          "DB",
          "CR",
          "HO",
          "RL",
          "HR",
          "PC",
          "TC",
          "TD"
        ],
        "type": "string",
        "description": ""
      },
      "tns_type": {
        "title": "tns_type",
        "enum": [
          "CHEQUEBOOK",
          "FASTCASH",
          "FUNDTRAN",
          "ISSUEATM",
          "REISSUEATM",
          "RESETPIN",
          "SARIE",
          "STATEMENT",
          "SWIFT",
          "TOKENSOFT",
          "TOKENHARD",
          "TRUSTEDPC",
          "STCOURIERFEE",
          "THIMARFEE",
          "GOLDDEL",
          "PREPAIDMC",
          "DEEBITCARDISSUANCENOREF",
          "DEEBITCARDISSUANCEREF",
          "STATEMENTLAST1M",
          "STATEMENTLAST3M",
          "STATEMENTLAST6M",
          "STATEMENTUPTO6M",
          "CHEQUEBOOKISSUE",
          "SADADPAYMENT",
          "SAWARECHARGE",
          "IPS"
        ],
        "type": "string",
        "description": ""
      },
      "TransactionCodesRequest": {
        "title": "TransactionCodesRequest",
        "required": [
          "TransactionCodesRequest"
        ],
        "type": "object",
        "properties": {
          "TransactionCodesRequest": {
            "$ref": "#/components/schemas/TransactionCodesRequestType"
          }
        }
      },
      "TransactionCodesResponse": {
        "title": "TransactionCodesResponse",
        "required": [
          "TransactionCodesResponse"
        ],
        "type": "object",
        "properties": {
          "TransactionCodesResponse": {
            "$ref": "#/components/schemas/TransactionCodesResponseType"
          }
        }
      },
      "UpdateAccountTransactionDetailRequest": {
        "title": "UpdateAccountTransactionDetailRequest",
        "required": [
          "UpdateAccountTransactionDetailRequest"
        ],
        "type": "object",
        "properties": {
          "UpdateAccountTransactionDetailRequest": {
            "$ref": "#/components/schemas/tns_UpdateAccountTransactionDetailRequest"
          }
        }
      },
      "UpdateAccountTransactionDetailResponse": {
        "title": "UpdateAccountTransactionDetailResponse",
        "required": [
          "UpdateAccountTransactionDetailResponse"
        ],
        "type": "object",
        "properties": {
          "UpdateAccountTransactionDetailResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_UpdateAccountTransactionDetailResponse"
              }
            ]
          }
        }
      },
      "UpdateSignatureRequest": {
        "title": "UpdateSignatureRequest",
        "required": [
          "UpdateSignatureRequest"
        ],
        "type": "object",
        "properties": {
          "UpdateSignatureRequest": {
            "$ref": "#/components/schemas/tns_CreateSignatureRequestType"
          }
        }
      },
      "UpdateSignatureResponse": {
        "title": "UpdateSignatureResponse",
        "required": [
          "UpdateSignatureResponse"
        ],
        "type": "object",
        "properties": {
          "UpdateSignatureResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreateSignatureResponseType"
              }
            ]
          }
        }
      },
      "ValidateIBANRequest": {
        "title": "ValidateIBANRequest",
        "required": [
          "ValidateIBANRequest"
        ],
        "type": "object",
        "properties": {
          "ValidateIBANRequest": {
            "$ref": "#/components/schemas/tns_ValidateIBANRequest"
          }
        }
      },
      "ValidateIBANResponse": {
        "title": "ValidateIBANResponse",
        "required": [
          "ValidateIBANResponse"
        ],
        "type": "object",
        "properties": {
          "ValidateIBANResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ValidateIBANResponse"
              }
            ]
          }
        }
      },
      "VerifyAuthorisedSignatoriesRequest": {
        "title": "VerifyAuthorisedSignatoriesRequest",
        "required": [
          "VerifyAuthorisedSignatoriesRequest"
        ],
        "type": "object",
        "properties": {
          "VerifyAuthorisedSignatoriesRequest": {
            "$ref": "#/components/schemas/tns_VerifyAuthorisedSignatoriesRequest"
          }
        }
      },
      "VerifyAuthorisedSignatoriesResponse": {
        "title": "VerifyAuthorisedSignatoriesResponse",
        "required": [
          "VerifyAuthorisedSignatoriesResponse"
        ],
        "type": "object",
        "properties": {
          "VerifyAuthorisedSignatoriesResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_VerifyAuthorisedSignatoriesResponse"
              }
            ]
          }
        }
      },
      "ViewAccountDetailsRequest": {
        "title": "ViewAccountDetailsRequest",
        "required": [
          "ViewAccountDetailsRequest"
        ],
        "type": "object",
        "properties": {
          "ViewAccountDetailsRequest": {
            "$ref": "#/components/schemas/tns_ViewAccountDetailsRequest"
          }
        }
      },
      "ViewAccountDetailsResponse": {
        "title": "ViewAccountDetailsResponse",
        "required": [
          "ViewAccountDetailsResponse"
        ],
        "type": "object",
        "properties": {
          "ViewAccountDetailsResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ViewAccountDetailsResponse"
              }
            ]
          }
        }
      },
      "VirtualAccountsRequest": {
        "title": "VirtualAccountsRequest",
        "required": [
          "VirtualAccountsRequest"
        ],
        "type": "object",
        "properties": {
          "VirtualAccountsRequest": {
            "$ref": "#/components/schemas/tns_VirtualAccountsRequest"
          }
        }
      },
      "VirtualAccountsResponse": {
        "title": "VirtualAccountsResponse",
        "required": [
          "VirtualAccountsResponse"
        ],
        "type": "object",
        "properties": {
          "VirtualAccountsResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_VirtualAccountsResponse"
              }
            ]
          }
        }
      },
      "wsse_UsernameToken": {
        "title": "wsse_UsernameToken",
        "required": [
          "Username",
          "Password"
        ],
        "type": "object",
        "properties": {
          "Username": {
            "type": "string"
          },
          "Password": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_AmountOptional": {
        "oneOf": [
          {
            "type": "number"
          },
          {
            "type": "string"
          }
        ]
      },
      "Q1_AmountOptional": {
        "$ref": "#/components/schemas/tns_AmountOptional"
      }
    },
    "securitySchemes": {
      "mwsecurity": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "mwsecurity": []
    }
  ],
  "tags": [
    {
      "name": "Accounts APIs",
      "description": ""
    }
  ]
}