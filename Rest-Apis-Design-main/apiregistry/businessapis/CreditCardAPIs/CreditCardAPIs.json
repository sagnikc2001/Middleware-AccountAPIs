{
  "openapi": "3.0.3",
  "info": {
    "title": "MW CreditCard APIs",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://mw-api-3scale-apicast-staging.apps.com:443/api/creditcard"
    }
  ],
  "paths": {
    "/TransferCash": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "TransferCash",
        "operationId": "TransferCash",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/TransferCashRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/TransferCashResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/GetCreditCardDetails": {
      "post": {
        "tags": [
          "CreditCard APIs"
        ],
        "description": "retrieves credit card details",
        "operationId": "GetCreditCardDetails",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditCardDetailsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardDetailsResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardDetailsResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardDetailsResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/GetCreditCardPendingTransactions": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "GetCreditCardPendingTransactions",
        "operationId": "GetCreditCardPendingTransactions",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditCardPendingTransactionsRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreditCardPendingTransactionsResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/PayCard": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "PayCard",
        "operationId": "PayCard",
        "parameters": [
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          },
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PaymentRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PaymentResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetCashBackEarnedDetails": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "GetCashBackEarnedDetails",
        "operationId": "GetCashBackEarnedDetails",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CashBackEarnedRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CashBackEarnedResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetCashAdvanceHistory": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "GetCashAdvanceHistory",
        "operationId": "GetCashAdvanceHistory",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CashAdvanceHistoryRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CashAdvanceHistoryResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/ApproveApplication": {
      "post": {
        "tags": [
          "CreditCard APIs"
        ],
        "description": "This api is used to Approve/Decline the Credit Card Application",
        "operationId": "ApproveApplication",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditCardApplicationApproveDeclineRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardApplicationApproveDeclineResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardApplicationApproveDeclineResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardApplicationApproveDeclineResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/InquireLogo": {
      "post": {
        "tags": [
          "CreditCard APIs"
        ],
        "description": "This api is used to Inquire Logo details",
        "operationId": "InquireLogo",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditCardLogoInquiryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardLogoInquiryResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardLogoInquiryResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardLogoInquiryResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/GetStatements": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "GetStatements",
        "operationId": "GetStatements",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditCardStatementRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreditCardStatementResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/GetSupplementaryCards": {
      "post": {
        "tags": [
          "CreditCard APIs"
        ],
        "description": "This operation retirieves Supplementary Card Details",
        "operationId": "GetSupplementaryCards",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditCardSupplementaryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardSupplementaryResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardSupplementaryResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardSupplementaryResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/GetTransactions": {
      "post": {
        "tags": [
          "CreditCard APIs"
        ],
        "description": "This operation retrieves the Credit Card Transactions Details",
        "operationId": "GetTransactions",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditCardTransactionsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardTransactionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardTransactionsResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardTransactionsResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/SearchApplication": {
      "post": {
        "tags": [
          "CreditCard APIs"
        ],
        "description": "retrieves credit card Application Details",
        "operationId": "SearchApplication",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditCardApplicationSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardApplicationSearchResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardApplicationSearchResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardApplicationSearchResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/GetApplicationSummary": {
      "post": {
        "tags": [
          "CreditCard APIs"
        ],
        "description": "This operation retrieves Credit Card Application Summary Details",
        "operationId": "GetApplicationSummary",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditCardApplicationInquiryShortRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardApplicationInquiryShortResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardApplicationInquiryShortResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardApplicationInquiryShortResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/GetApplicationDetails": {
      "post": {
        "tags": [
          "CreditCard APIs"
        ],
        "description": "This operation retrieves Credit Card Application Details",
        "operationId": "GetApplicationDetails",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditCardApplicationInquiryDetailRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardApplicationInquiryDetailResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardApplicationInquiryDetailResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditCardApplicationInquiryDetailResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/GetStatementDetails": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "GetStatementDetails",
        "operationId": "GetStatementDetails",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditCardStatementDetailsRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreditCardStatementDetailsResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/InquireLIRecord": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "InquireLIRecord",
        "operationId": "InquireLIRecord",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InquireCreditCardLIRecordRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InquireCreditCardLIRecordResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/UpdateLIRecord": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "UpdateLIRecord",
        "operationId": "UpdateLIRecord",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateCreditCardLIRecordRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UpdateCreditCardLIRecordResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/RetrieveEligibilityTable": {
      "post": {
        "tags": [
          "CreditCard APIs"
        ],
        "description": "This operation is to retrieve the eligibility table",
        "operationId": "RetrieveEligibilityTable",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetrieveEligibilityTableRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveEligibilityTableResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveEligibilityTableResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RetrieveEligibilityTableResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/CreateApplication": {
      "post": {
        "tags": [
          "CreditCard APIs"
        ],
        "description": "This api is used to create credit card Application request",
        "operationId": "CreateApplication",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCreditCardApplicationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCreditCardApplicationResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCreditCardApplicationResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCreditCardApplicationResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/GetCashBackTransactions": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "GetCashBackTransactions",
        "operationId": "GetCashBackTransactions",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CashBackTransactionsRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CashBackTransactionsResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/ActivateCard": {
      "post": {
        "tags": [
          "CreditCard APIs"
        ],
        "description": "This operation activates the Credit Card",
        "operationId": "ActivateCard",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardActivateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardActivateResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardActivateResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardActivateResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/v1/BlockCard": {
      "post": {
        "tags": [
          "CreditCard APIs"
        ],
        "description": "This operation Blocks the Credit Card",
        "operationId": "BlockCard",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CardBlockRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardBlockResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardBlockResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CardBlockResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/GetMerchantStatementDetails": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "GetMerchantStatementDetails",
        "operationId": "GetMerchantStatementDetails",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/MerchantStatementDetailsRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MerchantStatementDetailsResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ChangeCreditCardPaymentMethod": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "ChangeCreditCardPaymentMethod",
        "operationId": "ChangeCreditCardPaymentMethod",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ChangeCreditCardPaymentMethodRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ChangeCreditCardPaymentMethodResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/DisplayCardPIN": {
      "post": {
        "tags": [
          "CreditCard APIs"
        ],
        "description": "this api is used to Display the Card PIN",
        "operationId": "DisplayCardPIN",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DisplayCardPINRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayCardPINResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayCardPINResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisplayCardPINResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/UpdateIDExpiryDate": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "UpdateIDExpiryDate",
        "operationId": "UpdateIDExpiryDate",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/IDExpiryDateRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/IDExpiryDateResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CreditCardOTPSMS": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "CreditCardOTPSMS",
        "operationId": "CreditCardOTPSMS",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditCardOTPSMSRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreditCardOTPSMSResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CreditCardSMSNotify": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "CreditCardSMSNotify",
        "operationId": "CreditCardSMSNotify",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditCardSMSNotifyRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreditCardSMSNotifyResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CreateCreditCardPIN": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "CreateCreditCardPIN",
        "operationId": "CreateCreditCardPIN",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateCreditCardPINRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateCreditCardPINResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetCreditCardAccountDetails": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "GetCreditCardAccountDetails",
        "operationId": "GetCreditCardAccountDetails",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetCreditCardAccountDetailsRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GetCreditCardAccountDetailsResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/UpdateCreditCardCollectionStatus": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "UpdateCreditCardCollectionStatus",
        "operationId": "UpdateCreditCardCollectionStatus",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateCreditCardCollectionStatusRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UpdateCreditCardCollectionStatusResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetCreditCardListById": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "GetCreditCardListById",
        "operationId": "GetCreditCardListById",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditCardListByIdRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreditCardListByIdResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CreditCardPrepaidApplicationInquiryDetail": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "CreditCardPrepaidApplicationInquiryDetail",
        "operationId": "CreditCardPrepaidApplicationInquiryDetail",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditCardPrepaidApplicationInquiryDetailRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreditCardPrepaidApplicationInquiryDetailResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CreditCardPrepaidApplicationCreate": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "CreditCardPrepaidApplicationCreate",
        "operationId": "CreditCardPrepaidApplicationCreate",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditCardPrepaidApplicationCreateRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreditCardPrepaidApplicationCreateResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CreditCardPrepaidApplicationUpdate": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "CreditCardPrepaidApplicationUpdate",
        "operationId": "CreditCardPrepaidApplicationUpdate",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditCardPrepaidApplicationUpdateRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreditCardPrepaidApplicationUpdateResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CreditCardSupplementaryCreate": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "CreditCardSupplementaryCreate",
        "operationId": "CreditCardSupplementaryCreate",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditCardSupplementaryCreateRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreditCardSupplementaryCreateResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CreditCardReplacement": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "CreditCardReplacement",
        "operationId": "CreditCardReplacement",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditCardReplacementRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreditCardReplacementResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ChangeCreditCardEmbossedName": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "ChangeCreditCardEmbossedName",
        "operationId": "ChangeCreditCardEmbossedName",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ChangeCreditCardEmbossedNameRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ChangeCreditCardEmbossedNameResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CreditCardApplicationUpdate": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "CreditCardApplicationUpdate",
        "operationId": "CreditCardApplicationUpdate",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditCardApplicationUpdateRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreditCardApplicationUpdateResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CreditCardPreIssue": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "CreditCardPreIssue",
        "operationId": "CreditCardPreIssue",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditCardPreIssueRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreditCardPreIssueResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/InquireUpdateHimayateeProgram": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "InquireUpdateHimayateeProgram",
        "operationId": "InquireUpdateHimayateeProgram",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/HimayateeProgramRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/HimayateeProgramResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/InquireUpdateCreditCardDeliveryMethod": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "InquireUpdateCreditCardDeliveryMethod",
        "operationId": "InquireUpdateCreditCardDeliveryMethod",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditCardDeliveryMethodRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreditCardDeliveryMethodResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/InquiryUpdatePINDeliveryMethod": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "InquiryUpdatePINDeliveryMethod",
        "operationId": "InquiryUpdatePINDeliveryMethod",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PINDeliveryMethodRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PINDeliveryMethodResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/PrintStatement": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "PrintStatement",
        "operationId": "PrintStatement",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/StatementPrintRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StatementPrintResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/UpdateKYCDetails": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "UpdateKYCDetails",
        "operationId": "UpdateKYCDetails",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/KYCUpdateDetailsRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/KYCUpdateDetailsResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ChangeCreditCardPIN": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "ChangeCreditCardPIN",
        "operationId": "ChangeCreditCardPIN",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditCardPINChangeRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreditCardPINChangeResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetActiveCreditCardListByAccount": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "GetActiveCreditCardListByAccount",
        "operationId": "GetActiveCreditCardListByAccount",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetActiveCreditCardListByAccountRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GetActiveCreditCardListByAccountResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CreditCardAddress": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "CreditCardAddress",
        "operationId": "CreditCardAddress",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditCardAddressRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreditCardAddressResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetCreditCardEligiblePaymentPlanTransactions": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "GetCreditCardEligiblePaymentPlanTransactions",
        "operationId": "GetCreditCardEligiblePaymentPlanTransactions",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetCreditCardEligiblePaymentPlanTransactionsRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GetCreditCardEligiblePaymentPlanTransactionsResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CreditCardNewPaymentPlan": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "CreditCardNewPaymentPlan",
        "operationId": "CreditCardNewPaymentPlan",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditCardNewPaymentPlanRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreditCardNewPaymentPlanResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ValidateCreditCardForReissuance": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "ValidateCreditCardForReissuance",
        "operationId": "ValidateCreditCardForReissuance",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ValidateCreditCardForReissuanceRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ValidateCreditCardForReissuanceResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CreditCardLimitUpdateCheck": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "CreditCardLimitUpdateCheck",
        "operationId": "CreditCardLimitUpdateCheck",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditCardLimitUpdateCheckRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreditCardLimitUpdateCheckResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/UpdateCreditCardLimit": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "UpdateCreditCardLimit",
        "operationId": "UpdateCreditCardLimit",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateCreditCardLimitRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UpdateCreditCardLimitResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ModifyCreditCardLinkAccount": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "ModifyCreditCardLinkAccount",
        "operationId": "ModifyCreditCardLinkAccount",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditCardLinkAccountRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreditCardLinkAccountResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ReIssueCreditCardPin": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "ReIssueCreditCardPin",
        "operationId": "ReIssueCreditCardPin",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditCardReIssuePinRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreditCardReIssuePinResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetCreditCardPayMethod": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "GetCreditCardPayMethod",
        "operationId": "GetCreditCardPayMethod",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditCardPayMethodRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreditCardPayMethodResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ReIssueCreditCard": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "ReIssueCreditCard",
        "operationId": "ReIssueCreditCard",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ReIssueCreditCardRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ReIssueCreditCardResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/UnBlockCreditCard": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "UnBlockCreditCard",
        "operationId": "UnBlockCreditCard",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UnBlockCreditCardRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UnBlockCreditCardResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetCreditCardAccountPaymentPlans": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "GetCreditCardAccountPaymentPlans",
        "operationId": "GetCreditCardAccountPaymentPlans",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetCreditCardAccountPaymentPlansRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GetCreditCardAccountPaymentPlansResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetCreditCardHistory": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "GetCreditCardHistory",
        "operationId": "GetCreditCardHistory",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetCreditCardHistoryRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GetCreditCardHistoryResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CreditCardSmsPushAndPull": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "CreditCardSmsPushAndPull",
        "operationId": "CreditCardSmsPushAndPull",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditCardSmsPushAndPullRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreditCardSmsPushAndPullResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/UpdateCreditCardPrintingStatus": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "UpdateCreditCardPrintingStatus",
        "operationId": "UpdateCreditCardPrintingStatus",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateCreditCardPrintingStatusRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UpdateCreditCardPrintingStatusResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/UpdateCreditCardApplication": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "UpdateCreditCardApplication",
        "operationId": "UpdateCreditCardApplication",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateCreditCardApplicationRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UpdateCreditCardApplicationResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/InquireCreditCardHimayateeProgram": {
      "post": {
        "tags": [
          "CreditCard APIs"
        ],
        "description": "This operation retrieves Credit Card Himayatee Program details",
        "operationId": "InquireCreditCardHimayateeProgram",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InquireCreditCardHimayateeProgramRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InquireCreditCardHimayateeProgramResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InquireCreditCardHimayateeProgramResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InquireCreditCardHimayateeProgramResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/UpdateCreditCardHimayateeProgramStatus": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "UpdateCreditCardHimayateeProgramStatus",
        "operationId": "UpdateCreditCardHimayateeProgramStatus",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateCreditCardHimayateeProgramStatusRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UpdateCreditCardHimayateeProgramStatusResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/SubscribeCreditCardHimayateeProgram": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "SubscribeCreditCardHimayateeProgram",
        "operationId": "SubscribeCreditCardHimayateeProgram",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SubscribeCreditCardHimayateeProgramRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SubscribeCreditCardHimayateeProgramResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CreditCardIssue": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "CreditCardIssue",
        "operationId": "CreditCardIssue",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditCardIssueRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreditCardIssueResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v1/GetCreditCardPendingActivation": {
      "post": {
        "tags": [
          "CreditCard APIs"
        ],
        "description": "retrieves activation pending credit card details",
        "operationId": "GetCreditCardPendingActivation",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "JWT bearer token",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "having channel details , locale",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "../../commonschemas/header.json#/ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetCreditCardPendingActivationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCreditCardPendingActivationResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCreditCardPendingActivationResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 Unauthorized Request"
          },
          "404": {
            "description": "404 API Not Found"
          },
          "405": {
            "description": "405 Method Not Allowed"
          },
          "429": {
            "description": "429 Too Many Requests"
          },
          "500": {
            "description": "500 Internal server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCreditCardPendingActivationResponse"
                }
              }
            }
          },
          "503": {
            "description": "503 Service Unavailable"
          }
        },
        "deprecated": false
      }
    },
    "/ResetPinTries": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "ResetPinTries",
        "description": "this service is used to reset the pin tires",
        "operationId": "ResetPinTries",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ResetPinTriesRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ResetPinTriesResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GenerateCreditCardNumber": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "GenerateCreditCardNumber",
        "description": "service to be used for generating the valid creditcard number",
        "operationId": "GenerateCreditCardNumber",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditCardNumberGenerationRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreditCardNumberGenerationResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/WalletToWalletTransfer": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "WalletToWalletTransfer",
        "operationId": "WalletToWalletTransfer",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/WalletToWalletTransferRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/WalletToWalletTransferResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CreditAdjustment": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "CreditAdjustment",
        "operationId": "CreditAdjustment",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditAdjustmentRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreditAdjustmentResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetCortexForexRate": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "GetCortexForexRate",
        "operationId": "GetCortexForexRate",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetCortexForexRateRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GetCortexForexRateResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/AuthenticateCreditCardPIN": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "AuthenticateCreditCardPIN",
        "description": "The generic card check validates a card including the card status, account status and optionally the card pin if specified in the request",
        "operationId": "AuthenticateCreditCardPIN",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditCardPINAuthenticationRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreditCardPINAuthenticationResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/RefundCreditCardSurplusAmount": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "RefundCreditCardSurplusAmount",
        "operationId": "RefundCreditCardSurplusAmount",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RefundCreditCardSurplusAmountRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RefundCreditCardSurplusAmountResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CreditCardAccountClosureInquiry": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "CreditCardAccountClosureInquiry",
        "operationId": "CreditCardAccountClosureInquiry",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditCardAccountClosureInquiryRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreditCardAccountClosureInquiryResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CreditCardAccountClosure": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "CreditCardAccountClosure",
        "operationId": "CreditCardAccountClosure",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditCardAccountClosureRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreditCardAccountClosureResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetCardFee": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "GetCardFee",
        "operationId": "GetCardFee",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CardFeeRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CardFeeResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetEntityList": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "GetEntityList",
        "operationId": "GetEntityList",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetEntityListRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GetEntityListResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/UpdateCreditAccountCashLimit": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "UpdateCreditAccountCashLimit",
        "operationId": "UpdateCreditAccountCashLimit",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditAccountCashLimitUpdationRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreditAccountCashLimitUpdationResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/UpdateEntityCreditLimit": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "UpdateEntityCreditLimit",
        "operationId": "UpdateEntityCreditLimit",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EntityCreditLimitUpdationRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EntityCreditLimitUpdationResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetEntityCards": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "GetEntityCards",
        "operationId": "GetEntityCards",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetEntityCardsRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GetEntityCardsResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/EntityCreditAccountsStatementsSummaryInquiry": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "EntityCreditAccountsStatementsSummaryInquiry",
        "operationId": "EntityCreditAccountsStatementsSummaryInquiry",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EntityCreditAccountsStatementsSummaryInquiryRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EntityCreditAccountsStatementsSummaryInquiryResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/EntityCreditStatementsSummaryInquiry": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "EntityCreditStatementsSummaryInquiry",
        "operationId": "EntityCreditStatementsSummaryInquiry",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EntityCreditStatementsSummaryInquiryRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EntityCreditStatementsSummaryInquiryResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/UpdateCreditCardTransactionAuthorization": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "UpdateCreditCardTransactionAuthorization",
        "description": "Authorize a transaction in the credit card system.",
        "operationId": "UpdateCreditCardTransactionAuthorization",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateCreditCardTransactionAuthorizationRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UpdateCreditCardTransactionAuthorizationResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CancelPaymentPlan": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "CancelPaymentPlan",
        "description": "Cancel a Payment Plan.",
        "operationId": "CancelPaymentPlan",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CancelPaymentRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CancelPaymentResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/RescheduleAccount": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "RescheduleAccount",
        "operationId": "RescheduleAccount",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RescheduleAccountRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/RescheduleAccountResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CheckCreditCardAnnualFeeRefundStatus": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "CheckCreditCardAnnualFeeRefundStatus",
        "operationId": "CheckCreditCardAnnualFeeRefundStatus",
        "parameters": [
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          },
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CheckCreditCardAnnualFeeRefundStatusRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CheckCreditCardAnnualFeeRefundStatusResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetWessamEligibilityDetails": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "GetWessamEligibilityDetails",
        "operationId": "GetWessamEligibilityDetails",
        "parameters": [
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          },
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetWessamEligibilityDetailsRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GetWessamEligibilityDetailsResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/UpgradeDowngradeCustomer": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "UpgradeDowngradeCustomer",
        "operationId": "UpgradeDowngradeCustomer",
        "parameters": [
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          },
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpgradeDowngradeCustomerRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UpgradeDowngradeCustomerResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/UpdateCreditCardMobileNumber": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "UpdateCreditCardMobileNumber",
        "operationId": "UpdateCreditCardMobileNumber",
        "parameters": [
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          },
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateCreditCardMobileNumberRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UpdateCreditCardMobileNumberResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetCountryList": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "GetCountryList",
        "operationId": "GetCountryList",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetCountryListRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GetCountryListResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetRiskPreferences": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "GetRiskPreferences",
        "operationId": "GetRiskPreferences",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetRiskPreferencesRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GetRiskPreferencesResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/UpdateRiskLoginCountry": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "UpdateRiskLoginCountry",
        "operationId": "UpdateRiskLoginCountry",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateRiskLoginCountryRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UpdateRiskLoginCountryResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/UpdateRiskPreferences": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "UpdateRiskPreferences",
        "operationId": "UpdateRiskPreferences",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateRiskPreferencesRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UpdateRiskPreferencesResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetReasonableLendingInformation": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "GetReasonableLendingInformation",
        "operationId": "GetReasonableLendingInformation",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetReasonableLendingInformationRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GetReasonableLendingInformationResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CreateEcommerceMerchant": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "CreateEcommerceMerchant",
        "operationId": "CreateEcommerceMerchant",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreateEcommerceMerchantRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreateEcommerceMerchantResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetEcommerceTransactions": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "GetEcommerceTransactions",
        "operationId": "GetEcommerceTransactions",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EcommerceTransactionsRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EcommerceTransactionsResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/SearchEcommerceMerchant": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "SearchEcommerceMerchant",
        "operationId": "SearchEcommerceMerchant",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/SearchEcommerceMerchantRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/SearchEcommerceMerchantResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/UpdateEcommerceMerchant": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "UpdateEcommerceMerchant",
        "operationId": "UpdateEcommerceMerchant",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EcommerceMerchantUpdationRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EcommerceMerchantUpdationResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CreditCardRefNumGeneration": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "CreditCardRefNumGeneration",
        "operationId": "CreditCardRefNumGeneration",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditCardRefNumGenerationRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreditCardRefNumGenerationResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/EnquiryOrAmendCommunication": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "EnquiryOrAmendCommunication",
        "operationId": "EnquiryOrAmendCommunication",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/EnquiryOrAmendCommunicationRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/EnquiryOrAmendCommunicationResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ManagePricingDetails": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "ManagePricingDetails",
        "operationId": "ManagePricingDetails",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ManagePricingDetailsRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ManagePricingDetailsResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetCreditCardAggregatedDetails": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "GetCreditCardAggregatedDetails",
        "operationId": "GetCreditCardAggregatedDetails",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetCreditCardAggregatedDetailsRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GetCreditCardAggregatedDetailsResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/ConvertVirtualCardToPlastic": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "ConvertVirtualCardToPlastic",
        "operationId": "ConvertVirtualCardToPlastic",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/ConvertVirtualCardToPlasticRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ConvertVirtualCardToPlasticResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GetCardVirtualDetails": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "GetCardVirtualDetails",
        "operationId": "GetCardVirtualDetails",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GetCardVirtualDetailsRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GetCardVirtualDetailsResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/GenerateKey": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "GenerateKey",
        "operationId": "GenerateKey",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/GenerateKeyRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/GenerateKeyResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/UpdateRiskCardStatus": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "UpdateRiskCardStatus",
        "operationId": "UpdateRiskCardStatus",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/UpdateRiskCardStatusRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UpdateRiskCardStatusResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/CreditCardRestrictionCheck": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "CreditCardRestrictionCheck",
        "operationId": "CreditCardRestrictionCheck",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/CreditCardRestrictionCheckRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/CreditCardRestrictionCheckResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/InquireCreditCardGenericParticulars": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "InquireCreditCardGenericParticulars",
        "description": "CreditCard Generic service for fetching details based on input",
        "operationId": "InquireCreditCardGenericParticulars",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/InquireCreditCardGenericParticularsRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/InquireCreditCardGenericParticularsResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/PayCreditCardPaymentPlan": {
      "post": {
        "tags": [
          "CreditCard APIs Stage"
        ],
        "summary": "PayCreditCardPaymentPlan",
        "description": "Service to pay the full remaining payment plan amount and close it.",
        "operationId": "PayCreditCardPaymentPlan",
        "parameters": [
          {
            "name": "Security",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/wsse_Security"
            }
          },
          {
            "name": "ServiceHeader",
            "in": "header",
            "description": "",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/header_ServiceHeader"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/PayCreditCardPaymentPlanRequest"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully retrieved the response",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/PayCreditCardPaymentPlanResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "components": {
    "schemas": {
      "tns_CashBackEarnedRequest": {
        "title": "tns_CashBackEarnedRequest",
        "required": [
          "cardId",
          "type"
        ],
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string",
            "description": "Account Identification number,(Credit Cards\r\n\t\t\t\t\t\t\tNumber (Mandatory ))"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_type"
              },
              {
                "description": "BIANNUALCYCLE, TODAY ,CYCLETODATE, CTD"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CashBackEarnedResponse": {
        "title": "tns_CashBackEarnedResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CashBackEarnedType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CashBackEarnedType": {
        "title": "tns_CashBackEarnedType",
        "type": "object",
        "properties": {
          "commonPool": {
            "type": "number",
            "description": "Common Pool",
            "default": 0.0
          },
          "partnerMarchants": {
            "type": "number",
            "description": "Partner Merchants",
            "default": 0.0
          },
          "redeemCommonPool": {
            "type": "integer",
            "description": "In case of transaction Type= CYCLETODATE, CTD",
            "format": "int32",
            "default": 0
          },
          "redeemParnerMerchants": {
            "type": "integer",
            "description": "In case of transaction Type= CYCLETODATE, CTD",
            "format": "int32",
            "default": 0
          },
          "totalRedeem": {
            "type": "integer",
            "description": "In case of transaction Type= CYCLETODATE, CTD",
            "format": "int32",
            "default": 0
          },
          "total": {
            "type": "number",
            "description": "Total",
            "default": 0.0
          }
        },
        "description": ""
      },
      "tns_CashAdvanceHistoryRequest": {
        "title": "tns_CashAdvanceHistoryRequest",
        "required": [
          "accountId"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Payroll Account Number"
          }
        },
        "description": ""
      },
      "tns_CashAdvanceHistoryResponse": {
        "title": "tns_CashAdvanceHistoryResponse",
        "type": "object",
        "properties": {
          "record": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_CashAdvanceHistoryType"
            },
            "description": ""
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CashAdvanceHistoryType": {
        "title": "tns_CashAdvanceHistoryType",
        "required": [
          "accountId",
          "customerId",
          "limit",
          "status",
          "activationDate",
          "expiryDate",
          "activationUserId",
          "activationBranchCode",
          "deactivationDate",
          "deactivationUserId",
          "deactivationBranchCode"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Payroll Account Number"
          },
          "customerId": {
            "pattern": "[a-zA-Z0-9]{14}",
            "type": "string",
            "description": "Customer Identification Number"
          },
          "limit": {
            "type": "integer",
            "description": "Ã¢â‚¬Å“Payroll Cash AdvanceÃ¢â‚¬Â facility\r\n\t\t\t\t\t\tLimit Amount",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Facility status"
          },
          "activationDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Activation Date"
          },
          "expiryDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Ã¢â‚¬Å“Payroll Cash AdvanceÃ¢â‚¬Â Expiry Date"
          },
          "activationUserId": {
            "type": "integer",
            "description": "User ID who activated the facility for the\r\n\t\t\t\t\t\tcustomer",
            "format": "int32"
          },
          "activationBranchCode": {
            "type": "integer",
            "description": "Branch Code where the facility was activated",
            "format": "int32"
          },
          "deactivationDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Deactivation Date"
          },
          "deactivationUserId": {
            "type": "integer",
            "description": "User ID who deactivated the facility",
            "format": "int32"
          },
          "deactivationBranchCode": {
            "type": "integer",
            "description": "Branch Code where the facility was deactivated",
            "format": "int32"
          }
        },
        "description": ""
      },
      "tns_PaymentRequest": {
        "title": "tns_PaymentRequest",
        "required": [
          "cardId",
          "amount",
          "shortCIF"
        ],
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string",
            "description": "Credit card ID"
          },
          "amount": {
            "type": "number",
            "description": "Payment Amount"
          },
          "fromAccountId": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string",
            "description": "From Account ID (Money to be debited)"
          },
          "shortCIF": {
            "pattern": "([0-9]){8}|([0]){1}",
            "type": "string",
            "description": "ShortCIF"
          },
          "toAccountID": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string",
            "description": "To Account ID (Money to be credited)"
          },
          "toAmount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "equivalent to Amount (in case of multi\r\n\t\t\t\t\t\t\tcurrency)"
              }
            ]
          },
          "fromCurrency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "from account currency"
          },
          "toCurrency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "To account currency"
          },
          "cardType": {
            "type": "string",
            "description": "Credit card type"
          },
          "description": {
            "type": "string",
            "description": "Transaction Description"
          },
          "paymentReferenceCode": {
            "type": "string",
            "description": "Payment reference Code"
          },
          "fxDeal": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_fxDealType"
              }
            ]
          },
          "baseCurrency": {
            "type": "string"
          },
          "baseAmount": {
            "type": "string"
          },
          "treasuryRate": {
            "type": "string"
          },
          "source": {
            "type": "string",
            "description": "Source of the payment"
          },
          "purpose": {
            "type": "string",
            "description": "Purpose of the payment"
          },
          "relationship": {
            "type": "string",
            "description": "Relationship with card holder"
          },
          "itemSource": {
            "type": "string"
          },
          "itemReferenceCode": {
            "type": "string"
          },
          "localDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "transmissionDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "transmissionTime": {
            "pattern": "([0-9]){4}|([0-9]){6}|()",
            "type": "string"
          },
          "scheduledFrequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_scheduledFrequency"
              }
            ]
          },
          "scheduledDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_fxDealType": {
        "title": "tns_fxDealType",
        "type": "object",
        "properties": {
          "dealId": {
            "type": "string",
            "description": "Deal ID"
          },
          "pnlAmount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "profit and loss amount"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_PaymentResponse": {
        "title": "tns_PaymentResponse",
        "type": "object",
        "properties": {
          "CardPayment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CardPaymentType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CardPaymentType": {
        "title": "tns_CardPaymentType",
        "type": "object",
        "properties": {
          "journalId": {
            "type": "string"
          },
          "referenceId": {
            "maxLength": 10,
            "type": "string"
          },
          "processCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_processCode"
              }
            ]
          },
          "processDescription": {
            "maxLength": 10,
            "type": "string"
          },
          "balance": {
            "type": "number",
            "default": 0.0
          },
          "amountSR": {
            "type": "number",
            "default": 0.0
          },
          "dailyTotal": {
            "type": "number",
            "default": 0.0
          },
          "dailyThirdPartyTotal": {
            "type": "number",
            "default": 0.0
          },
          "tokenReferenceId": {
            "maxLength": 10,
            "type": "string"
          },
          "creditCardAvailable": {
            "type": "number",
            "default": 0.0
          },
          "SMSNotification": {
            "type": "string"
          }
        },
        "description": ""
      },
      "CreditCardApplicationApproveDeclineRequestType": {
        "title": "CreditCardApplicationApproveDeclineRequestType",
        "required": [
          "applicationId",
          "logo",
          "requestType"
        ],
        "type": "object",
        "properties": {
          "applicationId": {
            "$ref": "../../commonschemas/schemas.json#/ApplicationId",
            "description": "Application Number"
          },
          "logo": {
            "type": "integer",
            "description": "Logo under which the customer present",
            "format": "int32"
          },
          "requestType": {
            "$ref": "#/components/schemas/requestType",
            "description": "Request Type:Ã¢â‚¬Å“AÃ¢â‚¬Â\r\n\t\t\t\t\t\t\tApproveÃ¢â‚¬Å“DÃ¢â‚¬Â Decline"
          },
          "managerCode": {
            "type": "string"
          },
          "referredTo": {
            "type": "string"
          },
          "referalReason": {
            "type": "string"
          }
        },
        "description": ""
      },
      "CreditCardApplicationApproveDeclineResponseType": {
        "title": "CreditCardApplicationApproveDeclineResponseType",
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/components/schemas/CreditCardApproveDeclineType"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "CreditCardApproveDeclineType": {
        "title": "CreditCardApproveDeclineType",
        "type": "object",
        "properties": {
          "institutionCode": {
            "type": "string",
            "description": "Institution Code",
            "default": "NCB"
          },
          "applicationTypeDetails": {
            "$ref": "#/components/schemas/TypeofApplicationDetails"
          },
          "applicationDetails": {
            "$ref": "#/components/schemas/ApplicationDetailsType"
          },
          "corporateDetails": {
            "$ref": "#/components/schemas/CorporateDetailsType"
          },
          "customerDetails": {
            "$ref": "#/components/schemas/CustomerDetailsType"
          },
          "accountDetailsList": {
            "$ref": "#/components/schemas/AccountDetails"
          },
          "cardDetailsList": {
            "$ref": "#/components/schemas/CardDetails"
          },
          "applicationId": {
            "$ref": "../../commonschemas/schemas.json#/ApplicationId"
          },
          "approveDeclineResponse": {
            "type": "string",
            "description": "Ã¢â‚¬Å“00Ã¢â‚¬Â if account setup is complete in\r\n\t\t\t\t\t\t15\r\n\t\t\t\t\t\tseconds Ã¢â‚¬Å“01Ã¢â‚¬Â if request is declined"
          },
          "approveDeclineResponseDescription": {
            "type": "string"
          },
          "errorsDecline": {
            "type": "string",
            "description": "Decline Errors"
          },
          "referredTo": {
            "type": "string"
          },
          "primaryCardName": {
            "type": "string"
          },
          "newCardNumber": {
            "$ref": "../../commonschemas/schemas.json#/EncryptedText"
          },
          "supplementaryCardName1": {
            "type": "string"
          },
          "supplementaryCardNumber1": {
            "$ref": "../../commonschemas/schemas.json#/EncryptedText"
          },
          "referralReason": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreditCardApproveDecline_OLD_Type": {
        "title": "tns_CreditCardApproveDecline_OLD_Type",
        "type": "object",
        "properties": {
          "institutionCode": {
            "type": "string",
            "description": "Institution Code",
            "default": "NCB"
          },
          "ApplicationTypeDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TypeofApplicationDetails"
              }
            ]
          },
          "ApplicationDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ApplicationDetailsType"
              }
            ]
          },
          "CorporateDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CorporateDetailsType"
              }
            ]
          },
          "CustomerDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CustomerDetailsType"
              }
            ]
          },
          "AccountDetailsList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountDetails"
              }
            ]
          },
          "CardDetailsList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CardDetails"
              }
            ]
          },
          "applicationId": {
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "approveDeclineResponse": {
            "type": "string",
            "description": "Ã¢â‚¬Å“00Ã¢â‚¬Â if account setup is complete in\r\n\t\t\t\t\t\t15\r\n\t\t\t\t\t\tseconds Ã¢â‚¬Å“01Ã¢â‚¬Â if request is declined"
          },
          "approveDeclineResponseDescription": {
            "type": "string"
          },
          "errorsDecline": {
            "type": "string",
            "description": "Decline Errors"
          },
          "referredTo": {
            "type": "string"
          },
          "primaryCardName": {
            "type": "string"
          },
          "newCardNumber": {
            "type": "string"
          },
          "supplementaryCardName1": {
            "type": "string"
          },
          "supplementaryCardNumber1": {
            "type": "string"
          },
          "referralReason": {
            "type": "string"
          }
        },
        "description": ""
      },
      "ApplicationDetailsType": {
        "title": "ApplicationDetailsType",
        "type": "object",
        "properties": {
          "externalApplicationNumber": {
            "type": "string",
            "description": "External Application Number"
          },
          "applicationStatus": {
            "type": "string",
            "description": "Application Status"
          },
          "organization": {
            "type": "string",
            "description": "Organization"
          },
          "product": {
            "type": "string",
            "description": "product"
          },
          "applicationDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "Application Date"
          },
          "applicationSource": {
            "type": "string",
            "description": "Application source"
          },
          "salesSource": {
            "type": "string",
            "description": "Sales Source"
          },
          "deliveryMethod": {
            "type": "string",
            "description": "DeliveryMethod"
          },
          "programCode": {
            "type": "string",
            "description": "ProgramCode"
          },
          "campaign": {
            "type": "string",
            "description": "Campaign"
          },
          "plastic": {
            "type": "string",
            "description": "Plastic"
          },
          "design": {
            "type": "string",
            "description": "Design"
          },
          "processStage": {
            "type": "string",
            "description": "ProcessStage"
          },
          "processStageStatus": {
            "type": "string",
            "description": "ProcessStageStatus"
          },
          "score": {
            "type": "string",
            "description": "Score"
          },
          "externalScore": {
            "type": "string",
            "description": "ExternalScore"
          },
          "requestedLimit": {
            "type": "string",
            "description": "RequestedLimit"
          },
          "suggestedLimit": {
            "type": "string",
            "description": "SuggestedLimit"
          },
          "assignedLimit": {
            "type": "string",
            "description": "Assigned Limit"
          },
          "allowedLimitList": {
            "$ref": "#/components/schemas/AllowedLimitListType",
            "description": "Allowed Limit List"
          },
          "eligibilityCheckDescription": {
            "type": "string",
            "description": "Eligibility Check Description"
          },
          "title": {
            "type": "string",
            "description": "title"
          },
          "firstName": {
            "$ref": "../../commonschemas/schemas.json#/FirstName",
            "description": "firstName"
          },
          "secondName": {
            "type": "string",
            "description": "Second Name"
          },
          "thirdName": {
            "type": "string",
            "description": "Third Name"
          },
          "lastName": {
            "type": "string",
            "description": "Last name"
          },
          "fullName": {
            "type": "string",
            "description": "Full name"
          },
          "embossName": {
            "type": "string",
            "description": "Emboss Name"
          },
          "placeofBirth": {
            "type": "string",
            "description": "Place of birth"
          },
          "localizedDateofBirth": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "Localized date of birth"
          },
          "dateofBirth": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "Date of Birth"
          },
          "age": {
            "type": "integer",
            "description": "Age",
            "format": "int32"
          },
          "gender": {
            "$ref": "../../commonschemas/schemas.json#/Gender",
            "description": "Gender"
          },
          "married": {
            "type": "string",
            "description": "Married"
          },
          "nationality": {
            "type": "string",
            "description": "Nationality"
          },
          "id": {
            "type": "string",
            "description": "Id"
          },
          "idType": {
            "type": "string",
            "description": "Id Type"
          },
          "idNumber": {
            "type": "string",
            "description": "Id Number"
          },
          "idExpirydate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "Id Expiry date"
          },
          "educationLevel": {
            "type": "string",
            "description": "Education Level"
          },
          "professionCode": {
            "type": "string",
            "description": "Profession Code"
          },
          "numberOfdependents": {
            "type": "string",
            "description": "Number Of Dependents"
          },
          "employerName": {
            "type": "string",
            "description": "EmployerName"
          },
          "employmentYears": {
            "type": "string",
            "description": "EmploymentYears"
          },
          "employmentMonths": {
            "type": "string",
            "description": "EmploymentMonths"
          },
          "employerPhoneArea": {
            "type": "string",
            "description": "EmployerPhoneArea"
          },
          "employerPhoneNumber": {
            "$ref": "../../commonschemas/schemas.json#/PhoneNumberOptional",
            "description": "EmployerPhoneNumber"
          },
          "employerPhoneExtension": {
            "type": "string",
            "description": "EmployerPhoneExtension"
          },
          "employerMobile": {
            "$ref": "../../commonschemas/schemas.json#/MobileNumberOptional",
            "description": "EmployerMobile"
          },
          "employerFaxArea": {
            "type": "string",
            "description": "EmployerFaxArea"
          },
          "employerFax": {
            "type": "string",
            "description": "EmployerFax"
          },
          "employerCity": {
            "type": "string",
            "description": "EmployerCity"
          },
          "employerAddress": {
            "type": "string",
            "description": "EmployerAddress"
          },
          "employmentActivity": {
            "type": "string",
            "description": "EmploymentActivity"
          },
          "employmentStatus": {
            "type": "string",
            "description": "EmploymentStatus"
          },
          "cif": {
            "$ref": "../../commonschemas/schemas.json#/CIFOptional",
            "description": "CIF"
          },
          "bankAccountNumber": {
            "type": "string",
            "description": "BankAccountNumber"
          },
          "currencyCode": {
            "$ref": "../../commonschemas/schemas.json#/ISOCurrencyCodeOptional",
            "description": "Currency Code"
          },
          "requestedCurrencyList": {
            "$ref": "#/components/schemas/creditCardAmountType",
            "description": "Single installment amount to be paid each month\r\n\t\t\t\t\t\tin case this option is selected to convert the transaction to\r\n\t\t\t\t\t\tpayment plan"
          },
          "creditAccountNumber": {
            "type": "string",
            "description": "CreditAccountNumber"
          },
          "accountType": {
            "$ref": "../../commonschemas/schemas.json#/AccountType",
            "description": "AccountType"
          },
          "openDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "OpenDate"
          },
          "income": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Income"
          },
          "additionalIncome": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "AdditionalIncome"
          },
          "totalIncome": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "TotalIncome"
          },
          "currentBalance": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "AccountType"
          },
          "averageBalance": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "AverageBalance"
          },
          "assetsBalance": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "AssetsBalance"
          },
          "insuranceBalance": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "InsuranceBalance"
          },
          "depositAmount": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "DepositAmount"
          },
          "guarenteeAccountNumber": {
            "type": "string",
            "description": "GuarenteeAccountNumber"
          },
          "guarenteeAmount": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "GuarenteeAmount"
          },
          "instalmentAmount": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "InstalmentAmount"
          },
          "autoDebit": {
            "type": "string",
            "description": "AutoDebit",
            "default": "1"
          },
          "paymentMethod": {
            "type": "string",
            "description": "PaymentMethod",
            "default": "M"
          },
          "billingCycle": {
            "type": "string",
            "description": "BillingCycle",
            "default": "N"
          },
          "oldIssueDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "OldIssueDate"
          },
          "otherPaymentsDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "OtherPaymentsDate"
          },
          "maximumDelinquency": {
            "type": "string",
            "description": "MaximumDelinquency"
          },
          "creditBureauDecision": {
            "type": "string",
            "description": "CreditBureauDecision"
          },
          "creditBureauUserData": {
            "type": "string",
            "description": "CreditBureauUserData"
          },
          "eCommerce": {
            "type": "string",
            "description": "ECommerce"
          },
          "numberOfCards": {
            "type": "string",
            "description": "NumberOfCards"
          },
          "otherBank": {
            "type": "string",
            "description": "OtherBank",
            "default": "0001"
          },
          "otherBankDescription": {
            "type": "string",
            "description": "OtherBankDescription"
          },
          "oldCardNumber": {
            "type": "string",
            "description": "OldCardNumber"
          },
          "insuranceProduct": {
            "type": "string",
            "description": "InsuranceProduct"
          },
          "socialCode": {
            "type": "string",
            "description": "SocialCode"
          },
          "jobGrade": {
            "type": "string",
            "description": "JobGrade"
          },
          "flags": {
            "$ref": "#/components/schemas/flagsType",
            "description": "Flag list to be updated if any. Each position\r\n\t\t\t\t\t\tindicates a specific flag"
          },
          "checkFlags": {
            "$ref": "#/components/schemas/checkFlagsType",
            "description": "Check flag list to be updated if any. Each\r\n\t\t\t\t\t\tposition indicates a specific check flag"
          },
          "maker": {
            "type": "string",
            "description": "Maker"
          },
          "checker": {
            "type": "string",
            "description": "Checker"
          },
          "userData1": {
            "type": "string",
            "description": "UserData1"
          },
          "userData2": {
            "type": "string",
            "description": "UserData2"
          },
          "userData3": {
            "type": "string",
            "description": "UserData3"
          },
          "userData4": {
            "type": "string",
            "description": "UserData4"
          },
          "userData5": {
            "type": "string",
            "description": "UserData5"
          }
        },
        "description": ""
      },
      "AllowedLimitListType": {
        "title": "AllowedLimitListType",
        "type": "object",
        "properties": {
          "allowedLimit": {
            "$ref": "#/components/schemas/allowedLimitType",
            "description": "Allowed Limit"
          }
        },
        "description": ""
      },
      "allowedLimitType": {
        "title": "allowedLimitType",
        "type": "object",
        "properties": {
          "creditLimit": {
            "type": "string",
            "description": "Selected credit limit to set for the\r\n\t\t\t\t\t\tapplication/card in case multiple ones are calculated for the\r\n\t\t\t\t\t\tapplication"
          },
          "evaluationCode": {
            "type": "string",
            "description": "Evaluation code used to calculate this limit."
          }
        },
        "description": ""
      },
      "TypeofApplicationDetails": {
        "title": "TypeofApplicationDetails",
        "type": "object",
        "properties": {
          "typeCode": {
            "type": "string",
            "description": "Type Code"
          },
          "description": {
            "type": "string",
            "description": "Description"
          },
          "additional": {
            "type": "string",
            "description": "Additional"
          },
          "corporate": {
            "type": "string",
            "description": "Corporate"
          },
          "userData": {
            "type": "string",
            "description": "User data"
          }
        },
        "description": ""
      },
      "CorporateDetailsType": {
        "title": "CorporateDetailsType",
        "type": "object",
        "properties": {
          "corCorporateCode": {
            "type": "string",
            "description": "corCorporateCode"
          },
          "corDescription": {
            "type": "string",
            "description": "Corporate Description"
          },
          "corAlternativeDescription": {
            "type": "string",
            "description": "Corporate Alternative Description"
          },
          "corEntityBusinessDescription": {
            "type": "string",
            "description": "Corporate entity business Description"
          },
          "corAlternativeEntityBusinessDescription": {
            "type": "string",
            "description": "Corporate Alternative Entity Business\r\n\t\t\t\t\t\tDescription"
          },
          "corRegistrationNumber": {
            "type": "string",
            "description": "Corporate Registrtaion Number"
          },
          "corContractStartDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "Corporate Contract Start Date"
          },
          "corContractEndDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "Corporate Contract End Date"
          }
        },
        "description": ""
      },
      "CustomerDetailsType": {
        "title": "CustomerDetailsType",
        "type": "object",
        "properties": {
          "customercode": {
            "type": "string",
            "description": "Customer Code"
          },
          "idNumber": {
            "type": "string",
            "description": "IdNumber"
          },
          "externalCustomerCode": {
            "type": "string",
            "description": "External Customer Code"
          },
          "title": {
            "type": "string",
            "description": "Title"
          },
          "firstName": {
            "$ref": "../../commonschemas/schemas.json#/FirstName",
            "description": "First Name"
          },
          "lastName": {
            "type": "string",
            "description": "Last Name"
          },
          "userData1": {
            "type": "string",
            "description": "UserData1"
          },
          "userData2": {
            "type": "string",
            "description": "UserData2"
          },
          "userData3": {
            "type": "string",
            "description": "UserData3"
          },
          "userData4": {
            "type": "string",
            "description": "UserData4"
          }
        },
        "description": ""
      },
      "AccountDetails": {
        "title": "AccountDetails",
        "type": "object",
        "properties": {
          "accInstitutionCode": {
            "type": "string",
            "description": "Account Institution Code"
          },
          "accAccountNumber": {
            "type": "string",
            "description": "Account Number"
          },
          "curCurrency": {
            "$ref": "../../commonschemas/schemas.json#/ISOCurrencyCodeOptional",
            "description": "Currency Code"
          },
          "accAccountTypeCode": {
            "$ref": "../../commonschemas/schemas.json#/AccountType",
            "description": "Account Type Code"
          },
          "accClassId": {
            "type": "string",
            "description": "Account Class Id"
          },
          "accAccountStatus": {
            "type": "string",
            "description": "Account Status"
          },
          "accVipFlag": {
            "type": "string",
            "description": "Account VIP Flag"
          },
          "accBlockedAmount": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Blocked Amount"
          },
          "accAvailableBalance": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Available Balance"
          },
          "accAvailableBalanceToSpend": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Available Balance To Spend"
          },
          "accCreditLimit": {
            "type": "string",
            "description": "CreditLimit"
          },
          "accUserData1": {
            "type": "string",
            "description": "UserData1"
          },
          "accUserData2": {
            "type": "string",
            "description": "User data2"
          },
          "accUserData3": {
            "type": "string",
            "description": "UserData3"
          },
          "accUserData4": {
            "type": "string",
            "description": "UserData4"
          },
          "accUserData5": {
            "type": "string",
            "description": "UserData5"
          }
        },
        "description": ""
      },
      "CardDetails": {
        "title": "CardDetails",
        "type": "object",
        "properties": {
          "carResponseCardIdentifier": {
            "$ref": "#/components/schemas/carResponseCardIdentifierType",
            "description": "Card Response Identifiers List"
          },
          "crdExpiryDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "Card Expiry Date"
          },
          "crdEffectiveDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "Card Effective Date"
          },
          "crdCardStatus": {
            "type": "string",
            "description": "Card Status"
          },
          "crdOldPlasticExpiryDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "Card Old Plastic Expiry Date"
          },
          "crdOldPlasticCardStatus": {
            "type": "string",
            "description": "Card Old Plastic Status"
          },
          "crdTitle": {
            "type": "string",
            "description": "Card Title"
          },
          "crdFirstName": {
            "type": "string",
            "description": "Card Firstname"
          },
          "crdLastName": {
            "type": "string",
            "description": "Card Last name"
          },
          "crdBatchNumber": {
            "type": "string",
            "description": "Card Batch number"
          },
          "crdServiceCode": {
            "type": "string",
            "description": "Card Service Code"
          },
          "crdKinship": {
            "type": "string",
            "description": "Card Kinship"
          },
          "crdLastActivity": {
            "type": "string",
            "description": "Card Last Activity"
          },
          "crdLastStatusChangeDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "Card Last Status changed date"
          },
          "crdActivationDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "Card Activation Date"
          },
          "crdDateLastIssued": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "Card Last issued date"
          },
          "crdUserData": {
            "type": "string",
            "description": "Card User data"
          },
          "crdUserData1": {
            "type": "string",
            "description": "Card User data1"
          },
          "crdUserData2": {
            "type": "string",
            "description": "Card User data"
          },
          "crdUserData3": {
            "type": "string",
            "description": "Card User data"
          },
          "crdUserData4": {
            "type": "string",
            "description": "Card User data"
          },
          "crdUserData5": {
            "type": "string",
            "description": "Card User data"
          },
          "crdMemo": {
            "type": "string",
            "description": "Card Memo"
          }
        },
        "description": ""
      },
      "carResponseCardIdentifierType": {
        "title": "carResponseCardIdentifierType",
        "type": "object",
        "properties": {
          "carMaskedPan": {
            "$ref": "../../commonschemas/schemas.json#/EncryptedText",
            "description": "Card Masked PAN"
          },
          "carVPan": {
            "$ref": "../../commonschemas/schemas.json#/EncryptedText",
            "description": "Card VPAN"
          },
          "carSeqno": {
            "type": "string",
            "description": "Card Sequence Number"
          }
        },
        "description": ""
      },
      "tns_CreditCardApproveDeclineType_old": {
        "title": "tns_CreditCardApproveDeclineType_old",
        "type": "object",
        "properties": {
          "applicationId": {
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "approveDeclineResponse": {
            "type": "string",
            "description": "Ã¢â‚¬Å“00Ã¢â‚¬Â if account setup is complete in\r\n\t\t\t\t\t\t15\r\n\t\t\t\t\t\tseconds Ã¢â‚¬Å“01Ã¢â‚¬Â if request is declined"
          },
          "approveDeclineResponseDescription": {
            "type": "string"
          },
          "errorsDecline": {
            "type": "string",
            "description": "Decline Errors"
          },
          "referredTo": {
            "type": "string"
          },
          "primaryCardName": {
            "type": "string"
          },
          "newCardNumber": {
            "type": "string"
          },
          "supplementaryCardName1": {
            "type": "string"
          },
          "supplementaryCardNumber1": {
            "type": "string"
          },
          "referralReason": {
            "type": "string"
          }
        },
        "description": ""
      },
      "CreditCardDetailsRequestType": {
        "title": "CreditCardDetailsRequestType",
        "required": [
          "cardId"
        ],
        "type": "object",
        "properties": {
          "cardId": {
            "$ref": "../../commonschemas/schemas.json#/EncryptedText",
            "description": "Only Credit Card Number is permitted"
          },
          "cardType": {
            "type": "string"
          },
          "maskBalance": {
            "type": "boolean"
          }
        },
        "description": ""
      },
      "CreditCardDetailsResponseType": {
        "title": "CreditCardDetailsResponseType",
        "type": "object",
        "properties": {
          "CardDetails": {
            "$ref": "#/components/schemas/CardDetailType"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        }
      },
      "CardDetailType": {
        "title": "CardDetailType",
        "type": "object",
        "properties": {
          "creditLimit": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "Credit Limit of the card",
            "default": 0.0
          },
          "balance": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "Balance amount",
            "default": 0.0
          },
          "authorized": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "Authorized amount",
            "default": 0.0
          },
          "creditOnline": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "Credit On line limit",
            "default": 0.0
          },
          "available": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "Available amount",
            "default": 0.0
          },
          "holderName": {
            "$ref": "../../commonschemas/schemas.json#/HolderName",
            "description": "Holder Name of the card"
          },
          "paymentType": {
            "type": "string",
            "description": "Pay Type"
          },
          "paymentTypeDescription": {
            "maxLength": 30,
            "type": "string",
            "description": "Pay Type Description"
          },
          "dueAmount": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "Due Amt to be paid",
            "default": 0.0
          },
          "accountId": {
            "$ref": "../../commonschemas/schemas.json#/AccountIdOptional",
            "description": "Bank Account Identification number"
          },
          "statementDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "Statement Date is the date on this statement recorded"
          },
          "cardId": {
            "$ref": "../../commonschemas/schemas.json#/EncryptedText",
            "description": "Card ID number"
          },
          "dueDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "Credit Limit of the card"
          },
          "paymentDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "Pay Date is the payment date"
          },
          "address": {
            "$ref": "../../commonschemas/schemas.json#/PostalAddress",
            "description": "Address1 is the address"
          },
          "statusCode": {
            "$ref": "../../commonschemas/schemas.json#/StatusCode",
            "description": "Status is the code",
            "default": "0"
          },
          "statusDescription": {
            "$ref": "../../commonschemas/schemas.json#/StatusDesc",
            "description": "Status Description is the status of the card (Stopped etc)"
          },
          "authorizationFlag": {
            "maxLength": 1,
            "type": "string",
            "description": "Authorization Flag",
            "default": "0"
          },
          "authorizationFlagDescription": {
            "type": "string",
            "description": "Authorization Flag Description"
          },
          "lastAuthorizationDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "Last Auth Date is the Authorization date"
          },
          "lastAuthorizationTime": {
            "$ref": "../../commonschemas/schemas.json#/MWTimeOptional",
            "description": "Last Auth Time is the time of Authorization recorded"
          },
          "balanceOnHand": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "BalanceOnHand",
            "default": 0
          },
          "missPaymentType": {
            "type": "string",
            "description": "Miss Pay type",
            "default": "0"
          },
          "id": {
            "maxLength": 15,
            "type": "string",
            "description": "Identification Number",
            "default": "0"
          },
          "dateOfBirth": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "Date of Birth of the customer"
          },
          "active": {
            "$ref": "../../commonschemas/schemas.json#/Active",
            "description": "Active of the card"
          },
          "increaseDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "Increase Date is the date on which this increase recorded"
          },
          "increaseBy": {
            "maxLength": 6,
            "type": "string",
            "description": "Increase By whom"
          },
          "increaseAmount": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "default": 0.0
          },
          "issueDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "Issue Date of the card"
          },
          "changeDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "Change of the Date on which this happen"
          },
          "productType": {
            "type": "string",
            "description": "Product Type (name of the product)"
          },
          "totalCreditLimit": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "Total Credit Limit",
            "default": 0.0
          },
          "memoBalance": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "Memo Balance",
            "default": 0.0
          },
          "availableLimit": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "Available limit on the card",
            "default": 0.0
          },
          "totalLoanAmount": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "Total Loan Amount",
            "default": 0.0
          },
          "earlySettlementAmount": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "Early Settlement Amount",
            "default": 0.0
          },
          "tokenReferenceId": {
            "$ref": "../../commonschemas/schemas.json#/TokenReferenceId",
            "description": "SADAD Token Reference Number",
            "default": "0"
          },
          "schedule": {
            "$ref": "#/components/schemas/ScheduleType",
            "description": "This will contain three elements named paymentType debitType and cycle"
          },
          "downPayment": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "membershipNumber": {
            "type": "string"
          },
          "ballonPayment": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "finalPaymentDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1"
          },
          "homePhone": {
            "type": "string"
          },
          "lastPaymentDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "type": "string"
          },
          "firstPaymentDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "type": "string"
          },
          "prepaidAmount": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "immediateDue": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "currentAmountDue": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "prepaidAmount + immediateDue"
          },
          "pastAmountDue": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "autoDebitFLag": {
            "type": "string"
          },
          "interest": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "IntRate*(AdvAmt-DownPayment)* (LoanTerm /12)"
          },
          "billingTerm": {
            "type": "string"
          },
          "initialTerm": {
            "type": "string"
          },
          "currentTerm": {
            "type": "string"
          },
          "remainingTerm": {
            "type": "string"
          },
          "socioProfileCode": {
            "type": "string"
          },
          "postalCode": {
            "$ref": "../../commonschemas/schemas.json#/Max16Text"
          },
          "interestRate": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "default": 0.0
          },
          "statementBalance": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "remainingCashLimit": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "installmentDue": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "default": 0.0
          },
          "profitAmount": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "endDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1"
          },
          "cardTotalCreditLimit": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "cardTotalLimitAmountToDate": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "accountBlockCode": {
            "$ref": "#/components/schemas/accountBlockCodeType"
          },
          "accountCashLimit": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "cardCashLimit": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "behaviorScore": {
            "type": "string"
          },
          "accountCashUsedAmount": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "cardCashUsedAmount": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "idExpiryDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional"
          },
          "phoneNumber": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "mobileNumber1": {
            "type": "string"
          },
          "mobileNumber2": {
            "type": "string"
          },
          "accountStatus": {
            "type": "string"
          },
          "accountStatusDescription": {
            "type": "string"
          },
          "walletAccounts": {
            "$ref": "#/components/schemas/walletAccountsType"
          },
          "repossessedFlag": {
            "type": "string"
          },
          "cardType": {
            "type": "string",
            "description": "Credit card type"
          },
          "cardLevelLimit": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Card Level Limit"
          },
          "mobilePaymentFlag": {
            "type": "string",
            "description": "Mobile Payment Flag"
          },
          "expiryDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "the expiry date of credit/prepaid cards"
          },
          "attribute1": {
            "$ref": "#/components/schemas/attribute1"
          },
          "attribute2": {
            "$ref": "#/components/schemas/attribute2"
          },
          "attribute3": {
            "$ref": "#/components/schemas/attribute3"
          },
          "attribute4": {
            "$ref": "#/components/schemas/attribute4"
          },
          "attribute5": {
            "$ref": "#/components/schemas/attribute5"
          },
          "attribute6": {
            "$ref": "#/components/schemas/attribute6"
          },
          "attribute7": {
            "$ref": "#/components/schemas/attribute7"
          },
          "attribute8": {
            "$ref": "#/components/schemas/attribute8"
          },
          "attribute9": {
            "$ref": "#/components/schemas/attribute9"
          },
          "attribute10": {
            "$ref": "#/components/schemas/attribute10"
          },
          "customerType": {
            "type": "string"
          },
          "cif": {
            "$ref": "../../commonschemas/schemas.json#/CIF"
          },
          "fullNameInEnglish": {
            "type": "string"
          },
          "fullNameInArabic": {
            "type": "string"
          },
          "countryOfBirth": {
            "type": "string"
          },
          "placeOfBirth": {
            "type": "string"
          },
          "nationality": {
            "type": "string"
          },
          "mobileNumber": {
            "type": "string"
          },
          "supplementaryBalance": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "Outstanding Balance For Supplementary Cards"
          },
          "samaStatus": {
            "type": "string"
          },
          "isPrepaid": {
            "type": "boolean",
            "description": "To identify if card is prepaid or credit"
          },
          "isPlastic": {
            "type": "boolean",
            "description": "To identify if card is plastic or vitual"
          },
          "isCashback": {
            "type": "string"
          },
          "cardTypeValue": {
            "type": "string"
          },
          "fursanMembershipNumber": {
            "type": "string"
          }
        },
        "description": ""
      },
      "walletAccountsType": {
        "title": "walletAccountsType",
        "type": "object",
        "properties": {
          "walletAccount": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/walletAccountType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "walletAccountType": {
        "title": "walletAccountType",
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "amount": {
            "$ref": "../../commonschemas/schemas.json#/MoneyOptional"
          },
          "institutionCode": {
            "type": "string"
          },
          "isDefault": {
            "type": "string"
          },
          "authorizedAmount": {
            "$ref": "../../commonschemas/schemas.json#/MoneyOptional",
            "description": "Authorized Amount"
          }
        },
        "description": ""
      },
      "accountBlockCodeType": {
        "title": "accountBlockCodeType",
        "type": "object",
        "properties": {
          "userBlockCode": {
            "type": "string"
          },
          "userBlockCodeDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional"
          },
          "systemBlockCode": {
            "type": "string"
          },
          "systemBlockCodeDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional"
          }
        },
        "description": ""
      },
      "CreditCardLogoInquiryRequestType": {
        "title": "CreditCardLogoInquiryRequestType",
        "required": [
          "logo"
        ],
        "type": "object",
        "properties": {
          "function": {
            "$ref": "#/components/schemas/function",
            "description": "C - For Create U - For Update D - For Delete,I - For Inquiry All Records A Ã¢â‚¬â€œ For Inquiry Only Active M Ã¢â‚¬â€œ For Inquiry Income Minimum Only Income Limit"
          },
          "logo": {
            "type": "integer",
            "description": "Reference Id",
            "format": "int32",
            "default": 0
          },
          "organization": {
            "type": "integer",
            "description": "Short Description",
            "format": "int32",
            "default": 0
          },
          "bin": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "productType": {
            "type": "string",
            "description": "Product Type"
          },
          "productNameEnglish": {
            "type": "string",
            "description": "Unique Id"
          },
          "productNameArabic": {
            "type": "string",
            "description": "Unique Id"
          },
          "active": {
            "$ref": "#/components/schemas/active",
            "description": "Logo Status True = Active False = Not Active"
          },
          "minimumIncome": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "Minimum Income",
            "default": 0.0
          },
          "maximumIncome": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "Maximum Income",
            "default": 0.0
          },
          "billingCycle": {
            "type": "integer",
            "description": "Billing Cycle",
            "format": "int32"
          },
          "processControl": {
            "type": "string",
            "description": "Process Control Table"
          },
          "termsAndConditionsReferenceId": {
            "$ref": "../../commonschemas/schemas.json#/TermsAndConditionsReferenceId",
            "description": "Terms And Condition Reference"
          },
          "segmentInformation": {
            "type": "string"
          },
          "wessamLastSixMonth": {
            "$ref": "#/components/schemas/wessamLastSixMonth"
          },
          "customerProgram": {
            "type": "string"
          },
          "accountId": {
            "$ref": "../../commonschemas/schemas.json#/AccountIdOptional"
          },
          "idNumber": {
            "type": "string"
          },
          "addtionalDetails": {
            "$ref": "#/components/schemas/AddtionalDetailsType"
          },
          "ppaaGosiDeduction": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "nonNCBPayrollFlag": {
            "type": "string",
            "description": "Flag to Identify the Payroll in Other Bank"
          },
          "otherDeduction": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "other Deduction"
          }
        },
        "description": ""
      },
      "CreditCardLogoInquiryResponseType": {
        "title": "CreditCardLogoInquiryResponseType",
        "type": "object",
        "properties": {
          "logo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreditCardLogoInquiryType"
            },
            "description": ""
          },
          "logoMaintained": {
            "$ref": "#/components/schemas/logoMaintained"
          },
          "calculatedIncome": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "totalMonthlyIncome": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "CreditCardLogoInquiryType": {
        "title": "CreditCardLogoInquiryType",
        "required": [
          "logoId",
          "organization",
          "bin",
          "productType",
          "productNameEnglish",
          "productNameArabic",
          "active",
          "minimumIncome",
          "maximumIncome",
          "billingCycle",
          "processControl",
          "termsAndConditionsReference",
          "dateCreated",
          "dateModified",
          "createdBy",
          "modifiedBy"
        ],
        "type": "object",
        "properties": {
          "logoId": {
            "type": "integer",
            "description": "Logo Id",
            "format": "int32",
            "default": 0
          },
          "organization": {
            "type": "integer",
            "description": "Organization Id",
            "format": "int32",
            "default": 0
          },
          "bin": {
            "type": "integer",
            "description": "Bin Id",
            "format": "int32",
            "default": 0
          },
          "productType": {
            "type": "string",
            "description": "Product Type"
          },
          "productNameEnglish": {
            "type": "string",
            "description": "Product Name English"
          },
          "productNameArabic": {
            "type": "string",
            "description": "Product Name Arabic"
          },
          "active": {
            "$ref": "#/components/schemas/active",
            "description": "Logo Status"
          },
          "minimumIncome": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "Minimum Income",
            "default": 0.0
          },
          "maximumIncome": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "Maximum Income",
            "default": 0.0
          },
          "billingCycle": {
            "type": "integer",
            "description": "Billing Cycle",
            "format": "int32",
            "default": 0
          },
          "processControl": {
            "type": "string",
            "description": "Process Control Table"
          },
          "termsAndConditionsReference": {
            "default": 0,
            "$ref": "../../commonschemas/schemas.json#/TermsAndConditionsReferenceId",
            "description": "Term And Condition Reference Id"
          },
          "dateCreated": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "Rule Creation Date (YYYYMMDD)"
          },
          "dateModified": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "Rule Modify Date (YYYYMMDD)"
          },
          "createdBy": {
            "type": "string",
            "description": "Rule Created By"
          },
          "modifiedBy": {
            "type": "string",
            "description": "Rule Modified By"
          },
          "segmentInformation": {
            "type": "string"
          },
          "wessamLastSixMonth": {
            "$ref": "../../commonschemas/schemas.json#/YorNTypeOptional"
          },
          "customerProgram": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreditCardPendingTransactionsRequest": {
        "title": "tns_CreditCardPendingTransactionsRequest",
        "required": [
          "cardId"
        ],
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string",
            "description": "Account ID Number"
          },
          "creditCardAccountId": {
            "type": "string",
            "description": "Credit Card Account Id"
          },
          "pageNumber": {
            "minimum": 0.0,
            "type": "integer",
            "description": "Page Number",
            "format": "int32",
            "default": 0
          },
          "numberOfTransactions": {
            "minimum": 0.0,
            "type": "integer",
            "description": "xAccID ?????",
            "format": "int32"
          },
          "searchLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SearchLevelType"
              },
              {
                "description": "Search level identifying which transactions\r\n\t\t\t\t\t\t\tshould be returned. If not specified, defaulted to 0."
              }
            ]
          },
          "searchFilter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_searchFilterType"
              },
              {
                "description": "Search filter to apply if any. If not\r\n\t\t\t\t\t\t\tspecified, no filter will be applied and all card/account\r\n\t\t\t\t\t\t\ttransactions will be returned"
              }
            ]
          }
        },
        "description": ""
      },
      "SearchLevelType": {
        "title": "SearchLevelType",
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "Search level identifying which transactions should\r\n\t\t\t\tbe returned. If not specified, defaulted to 0.\r\n\t\t\t\tSupported values are:\r\n\r\n\t\t\t\t0 - Search for entries on the account specified only or the card\r\n\t\t\t\tspecified only\r\n\t\t\t\t1 - Search for entries on the default account linked\r\n\t\t\t\tto the card\r\n\t\t\t\tspecified not only on the\r\n\t\t\t\tspecified card. Applicable only\r\n\t\t\t\twhen the account is not specified\r\n\t\t\t\t2 - Search for entries on all\r\n\t\t\t\taccounts linked to the card specified.\r\n\t\t\t\tApplicable only when\r\n\t\t\t\tthe\r\n\t\t\t\taccount is not specified"
      },
      "tns_CreditCardPendingTransactionsResponse": {
        "title": "tns_CreditCardPendingTransactionsResponse",
        "type": "object",
        "properties": {
          "Transaction": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_PendingTransactionType"
            },
            "description": ""
          },
          "pageDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pageDetailsType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_PendingTransactionType": {
        "title": "tns_PendingTransactionType",
        "type": "object",
        "properties": {
          "recordId": {
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "transactionId": {
            "minimum": 0.0,
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "cardId": {
            "type": "string"
          },
          "transactionDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "transactionTime": {
            "pattern": "([0-9]){4}|([0-9]){6}|()",
            "type": "string"
          },
          "currency": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          },
          "transactionAmount": {
            "type": "number",
            "default": 0.0
          },
          "amountSR": {
            "type": "number",
            "default": 0.0
          },
          "authorizationId": {
            "maxLength": 6,
            "type": "string"
          },
          "merchant": {
            "maxLength": 25,
            "type": "string"
          },
          "receivedId": {
            "maxLength": 11,
            "type": "string"
          },
          "merchantId": {
            "maxLength": 4,
            "type": "string"
          },
          "statusCode": {
            "maxLength": 3,
            "type": "string"
          },
          "billingAmount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "billingCurrencyCode": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          },
          "rejectionReason": {
            "type": "string"
          },
          "rejectionReasonText": {
            "type": "string"
          },
          "cardTypeHolderName": {
            "type": "string",
            "description": "CardType HolderName"
          },
          "creditDebit": {
            "type": "string",
            "description": "to show if transaction credit/debit\r\n\t\t\t\t\t\tC - Credit\r\n\t\t\t\t\t\tD - Debit\r\n\t\t\t\t\t\tU - Others"
          }
        },
        "description": ""
      },
      "tns_CreditCardStatementRequest": {
        "title": "tns_CreditCardStatementRequest",
        "required": [
          "accountId"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "description": "CreditCard ID"
          },
          "pageNumber": {
            "minimum": 0.0,
            "type": "integer",
            "description": "Page number",
            "format": "int32"
          },
          "numberOfTransactions": {
            "minimum": 0.0,
            "type": "integer",
            "description": "number Of Transactions",
            "format": "int32"
          }
        },
        "description": ""
      },
      "tns_CreditCardStatementResponse": {
        "title": "tns_CreditCardStatementResponse",
        "type": "object",
        "properties": {
          "record": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_CreditCardStatementType"
            },
            "description": ""
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditCardStatementType": {
        "title": "tns_CreditCardStatementType",
        "type": "object",
        "properties": {
          "recordNumber": {
            "type": "integer",
            "description": "Record Number",
            "format": "int32",
            "default": 0
          },
          "statementDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "lateDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "openBalance": {
            "type": "number",
            "default": 0.0
          },
          "dueDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "closeBalance": {
            "type": "number",
            "default": 0.0
          },
          "minimum": {
            "type": "number",
            "default": 0.0
          },
          "unpaid": {
            "type": "number",
            "default": 0.0
          },
          "overdue": {
            "type": "number",
            "default": 0.0
          }
        },
        "description": ""
      },
      "CreditCardSupplementaryRequestType": {
        "title": "CreditCardSupplementaryRequestType",
        "required": [
          "accountId"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "$ref": "../../commonschemas/schemas.json#/EncryptedText",
            "description": "CreditCard ID"
          },
          "status": {
            "type": "string",
            "description": "List of card statuses required in the response.If multiple values are required, these should be separated by -\r\n\r\n\t\t\t\t\t\t\tThe current supported cortex card statuses are the below\r\n\r\n\t\t\t\t\t\t\tValue\r\n\t\t\t\t\t\t\tDescription\r\n\t\t\t\t\t\t\t00 NORMAL\r\n\t\t\t\t\t\t\t01 PIN TRIES EXCEEDED\r\n\t\t\t\t\t\t\t02 NOT YET ISSUED\r\n\t\t\t\t\t\t\t03 CARD\r\n\t\t\t\t\t\t\tEXPIRED\r\n\t\t\t\t\t\t\t04 LOST (equivalent to block code L)\r\n\t\t\t\t\t\t\t05 STOLEN (equivalent\r\n\t\t\t\t\t\t\tto block code S)\r\n\t\t\t\t\t\t\t06 CUSTOMER CLOSE (equivalent to block code C)\r\n\t\t\t\t\t\t\t07\r\n\t\t\t\t\t\t\tBANK CANCELED\r\n\t\t\t\t\t\t\t08 FRAUD (equivalent to block code O)\r\n\t\t\t\t\t\t\t09 DAMAGED\r\n\t\t\t\t\t\t\t(equivalent to block code G)\r\n\t\t\t\t\t\t\t20 PENDING ISSUANCE (printing)\r\n\t\t\t\t\t\t\t21 CARD\r\n\t\t\t\t\t\t\tEXTRACTED (embossing file generated for bulk issuance)\r\n\t\t\t\t\t\t\t22\r\n\t\t\t\t\t\t\tEXTRACTION FAILED (embossing file generation failed for bulk\r\n\t\t\t\t\t\t\tissuance)\r\n\t\t\t\t\t\t\t23 FAILED AT BUREAU (bulk issuance printing failed)\r\n\t\t\t\t\t\t\t24\r\n\t\t\t\t\t\t\tPRINTING FAILED\r\n\t\t\t\t\t\t\t30 PENDING ACTIVATION\r\n\t\t\t\t\t\t\t40 AGGREEMENT (equivalent to\r\n\t\t\t\t\t\t\tblock code E)\r\n\t\t\t\t\t\t\t42 CLOSED BY NCB (equivalent to block code K)\r\n\t\t\t\t\t\t\t44\r\n\t\t\t\t\t\t\tFRAUD CUSTOMER REQUESTED (equivalent to block code P)\r\n\t\t\t\t\t\t\t45 CUSTOMER\r\n\t\t\t\t\t\t\tDEAD (equivalent to block code D)\r\n\t\t\t\t\t\t\t46 CHANGE PRODUCT (equivalent to\r\n\t\t\t\t\t\t\tblock code X)\r\n\t\t\t\t\t\t\t48 NOT RENEWED (equivalent to block code N)\r\n\t\t\t\t\t\t\t49 SAMA\r\n\t\t\t\t\t\t\tBLOCKED (equivalent to block code J)\r\n\t\t\t\t\t\t\t50 RISK STOPPED (equivalent\r\n\t\t\t\t\t\t\tto block code Q)\r\n\t\t\t\t\t\t\t51 FRAUD APPLICANT (equivalent to block code F)\r\n\t\t\t\t\t\t\t52 INACTIVE (equivalent to block code I)\r\n\t\t\t\t\t\t\t53 COURT JUDGEMENT\r\n\t\t\t\t\t\t\t54\r\n\t\t\t\t\t\t\tExpired ID (equivalent to block code M)\r\n\t\t\t\t\t\t\t55 RETURNED CARD\r\n\t\t\t\t\t\t\t(equivalent to block code R)\r\n\t\t\t\t\t\t\t56 CUSTOMER CANCELED (equivalent to\r\n\t\t\t\t\t\t\tblock code T)\r\n\t\t\t\t\t\t\t57 TEMP BLOCK (equivalent to block code U)\r\n\t\t\t\t\t\t\t86 PILOT\r\n\t\t\t\t\t\t\tBLOCK\r\n\t\t\t\t\t\t\t98 PURGE (equivalent to block code P)\r\n\t\t\t\t\t\t\t99 COLLECTION"
          },
          "option": {
            "$ref": "#/components/schemas/option",
            "description": "OPTION can have below values\r\n\t\t\t\t\t\t\t\"0\" - IT will get\r\n\t\t\t\t\t\t\tSupplementary Card linked with Primary Card\r\n\t\t\t\t\t\t\t\"1\" - IT will get all\r\n\t\t\t\t\t\t\tSupplementary Cards and Primary Cards based on\r\n\t\t\t\t\t\t\tAccount ID"
          }
        }
      },
      "CreditCardSupplementaryResponseType": {
        "title": "CreditCardSupplementaryResponseType",
        "type": "object",
        "properties": {
          "record": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreditCardSupplementaryType"
            }
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        }
      },
      "CreditCardSupplementaryType": {
        "title": "CreditCardSupplementaryType",
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "cardNumber": {
            "$ref": "../../commonschemas/schemas.json#/EncryptedText",
            "description": "Card No"
          },
          "creditLimit": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "Credit Limit of the card",
            "default": 0.0
          },
          "name": {
            "type": "string",
            "description": "Name of the card holder"
          },
          "statusCode": {
            "type": "string",
            "description": "Status code",
            "default": "0"
          },
          "statusDesc": {
            "type": "string",
            "description": "Status Description"
          },
          "fromDate": {
            "$ref": "#/components/schemas/CreditCardDateOptional",
            "description": "From (date yyyymm)"
          },
          "toDate": {
            "$ref": "#/components/schemas/CreditCardDateOptional",
            "description": "To (date yyyymm)"
          },
          "oppositionDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "To (date yyyymm)"
          },
          "oppositionCode": {
            "type": "string",
            "description": "Opposition Date"
          },
          "oppositionDesc": {
            "type": "string",
            "description": "Opposition Description"
          },
          "type": {
            "type": "string",
            "default": "0"
          },
          "typeDesc": {
            "type": "string",
            "description": "Type Description"
          },
          "active": {
            "maxLength": 1,
            "minLength": 0,
            "type": "string",
            "description": "Active"
          },
          "activeDesc": {
            "type": "string",
            "description": "Active Description"
          },
          "issuedDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "Issued (date yyyymmdd)"
          },
          "changedDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "Change (date yyyymmdd)"
          },
          "productType": {
            "type": "string",
            "description": "Product Type (of the card)"
          },
          "dueAmount": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "due amount of the card"
          },
          "cardBalance": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "Credit card balance"
          },
          "printStatus": {
            "type": "string",
            "description": "print status- Printed Not Printed FailPrinted Not Applicalureble Approved Force Blocked"
          },
          "lastCardExpiration": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional"
          },
          "cardAWBNumber": {
            "type": "string"
          },
          "pinAWBNumber": {
            "type": "string"
          },
          "cardTotalUsage": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "cardStatus": {
            "type": "string"
          },
          "fursanMembershipNumber": {
            "type": "string"
          }
        }
      },
      "CreditCardTransactionsRequestType": {
        "title": "CreditCardTransactionsRequestType",
        "required": [
          "accountId"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "$ref": "../../commonschemas/schemas.json#/EncryptedText",
            "description": "CreditCard ID"
          },
          "transaction": {
            "type": "integer",
            "format": "int32",
            "description": "Transaction",
            "default": 0
          },
          "pageNumber": {
            "$ref": "../../commonschemas/schemas.json#/PageNumber",
            "description": "Page Number",
            "default": 0
          },
          "searchLevel": {
            "$ref": "#/components/schemas/SearchLevelType",
            "description": "Search level identifying which transactions should be returned. If not specified, defaulted to 0."
          },
          "searchFilter": {
            "$ref": "#/components/schemas/searchFilterCreditCardTransactionsType",
            "description": "Search filter to apply if any. If not specified, no filter will be applied and all card/account transactions will be returned"
          }
        }
      },
      "CreditCardTransactionsResponseType": {
        "title": "CreditCardTransactionsResponseType",
        "type": "object",
        "properties": {
          "record": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreditCardTransactionType"
            }
          },
          "pageDetails": {
            "$ref": "#/components/schemas/pageDetailsType"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "CreditCardTransactionType": {
        "title": "CreditCardTransactionType",
        "type": "object",
        "properties": {
          "recordNumber": {
            "type": "integer",
            "description": "Record Number",
            "format": "int32",
            "default": 0
          },
          "transactionCode": {
            "type": "integer",
            "description": "Code is the transaction code",
            "format": "int32",
            "default": 0
          },
          "description": {
            "type": "string",
            "description": "Description of the transaction"
          },
          "date": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional"
          },
          "amount": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "currencyCode": {
            "$ref": "../../commonschemas/schemas.json#/ISOCurrencyCodeOptional"
          },
          "amountSR": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "merchant": {
            "$ref": "../../commonschemas/schemas.json#/Merchant"
          },
          "location": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "postingDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional"
          },
          "cardNumber": {
            "$ref": "../../commonschemas/schemas.json#/EncryptedText"
          },
          "transTime": {
            "type": "string"
          },
          "statementMissingPostingDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional"
          },
          "markup": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "exchangeRate": {
            "$ref": "../../commonschemas/schemas.json#/ExchangeRate"
          },
          "billingAmount": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "billingCurrencyCode": {
            "$ref": "../../commonschemas/schemas.json#/ISOCurrencyCodeOptional"
          },
          "cardTypeHolderName": {
            "type": "string",
            "description": "CardType HolderName"
          },
          "paymentPlanEligibility": {
            "type": "string",
            "description": "Payment plan eligibility. E-Eligible,\r\n\t\t\t\t\t\tC-Converted"
          },
          "creditDebit": {
            "type": "string",
            "description": "to show if transaction credit/debit C - Credit D\r\n\t\t\t\t\t\t- Debit U - Others"
          },
          "itemId": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_TransferCashRequest": {
        "title": "tns_TransferCashRequest",
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string",
            "description": "Card Number"
          },
          "toAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Account To"
          },
          "amount": {
            "type": "number",
            "description": "Amount",
            "default": 0.0
          },
          "fee": {
            "type": "number",
            "description": "Fee"
          },
          "shortCIF": {
            "pattern": "([0-9]){8}|([0]){1}",
            "type": "string",
            "description": "Short CIF (customer information number)"
          },
          "paymentType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/paymentType"
              },
              {
                "description": "To identify if payment is cash advance or\r\n\t\t\t\t\t\t\texcess refund(surplus amount), in case of\r\n\t\t\t\t\t\t\texcess refund fee is not\r\n\t\t\t\t\t\t\tapplicable."
              }
            ]
          },
          "fromAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "toAmount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "fromCurrency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          },
          "toCurrency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          },
          "dealID": {
            "type": "string"
          },
          "cardType": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "description": "Transaction Description"
          },
          "paymentReferenceCode": {
            "type": "string",
            "description": "Payment Reference Code"
          },
          "fxDeal": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_fxDealType"
              }
            ]
          },
          "baseCurrency": {
            "type": "string",
            "description": "Base Currency"
          },
          "baseAmount": {
            "type": "string",
            "description": "Base Amount"
          },
          "treasuryRate": {
            "type": "string",
            "description": "Treasury Rate"
          },
          "itemSource": {
            "type": "string"
          },
          "itemReferenceCode": {
            "type": "string"
          },
          "localDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "transmissionDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "transmissionTime": {
            "pattern": "([0-9]){4}|([0-9]){6}|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_TransferCashResponse": {
        "title": "tns_TransferCashResponse",
        "type": "object",
        "properties": {
          "TransferCash": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_TransferCashType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_TransferCashType": {
        "title": "tns_TransferCashType",
        "type": "object",
        "properties": {
          "journalId": {
            "type": "string",
            "description": "Journal",
            "default": "0"
          },
          "authorizationId": {
            "maxLength": 6,
            "type": "string",
            "description": "Authorization code",
            "default": "0"
          },
          "balance": {
            "type": "number",
            "description": "Balance amount",
            "default": 0.0
          }
        },
        "description": ""
      },
      "CreditCardApplicationSearchRequestType": {
        "title": "CreditCardApplicationSearchRequestType",
        "required": [
          "option",
          "value",
          "noOfPages"
        ],
        "type": "object",
        "properties": {
          "option": {
            "$ref": "#/components/schemas/option",
            "description": "One of the following values: Ã¢â‚¬Å“1Ã¢â‚¬Â\r\n\t\t\t\t\t\t\tApplication\r\n\t\t\t\t\t\t\tÃ¢â‚¬Å“2Ã¢â‚¬Â Customer name Ã¢â‚¬Å“3Ã¢â‚¬Â\r\n\t\t\t\t\t\t\tIdentification number\r\n\t\t\t\t\t\t\tÃ¢â‚¬Å“4Ã¢â‚¬Â Account number\r\n\t\t\t\t\t\t\tÃ¢â‚¬Å“5Ã¢â‚¬Â\r\n\t\t\t\t\t\t\tShort CIF"
          },
          "value": {
            "type": "string",
            "description": "The value of the option was specified in\r\n\t\t\t\t\t\t\tÃ¢â‚¬Å“OptionÃ¢â‚¬Â field"
          },
          "noOfPages": {
            "type": "integer",
            "description": "Page number of which data to be displayed",
            "format": "int32"
          },
          "noOfDays": {
            "type": "integer",
            "description": "Number of days for which application are to be\r\n\t\t\t\t\t\t\tretrieved for the customer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "pass flag, value, ex. If flag=01, value=14,\r\n\t\t\t\t\t\t\tonly return approved applications pending for printing since last\r\n\t\t\t\t\t\t\t14 days after approval, without filters return all the\r\n\t\t\t\t\t\t\tapplications."
          },
          "excludeAutoleaseApps": {
            "type": "boolean",
            "description": "If excludeAutoleaseApps=true then LOS Auto\r\n\t\t\t\t\t\t\tlease calls is not included in the searchapplication.",
            "default": false
          }
        },
        "description": ""
      },
      "CreditCardApplicationSearchResponseType": {
        "title": "CreditCardApplicationSearchResponseType",
        "type": "object",
        "properties": {
          "record": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchApplicationType"
            },
            "description": ""
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "SearchApplicationType": {
        "title": "SearchApplicationType",
        "required": [
          "transactionNumber",
          "statusCode",
          "statusDescription",
          "customerName",
          "customerIdentificationNumber",
          "applicationNumber",
          "logoId"
        ],
        "type": "object",
        "properties": {
          "transactionNumber": {
            "$ref": "../../commonschemas/schemas.json#/TransactionId",
            "description": "Number of transaction"
          },
          "statusCode": {
            "type": "string",
            "description": "Code (represents the Code of the application if\r\n\t\t\t\t\t\taccepted or declined)"
          },
          "statusDescription": {
            "type": "string",
            "description": "Description (represents the description of the\r\n\t\t\t\t\t\tapplication if accepted or declined)"
          },
          "customerName": {
            "$ref": "../../commonschemas/schemas.json#/FullName",
            "description": "Customer full name"
          },
          "customerIdentificationNumber": {
            "type": "string",
            "description": "Customer Identification Number (e.g. driving\r\n\t\t\t\t\t\tlicense number)"
          },
          "applicationNumber": {
            "type": "string",
            "description": "Application Number"
          },
          "logoId": {
            "type": "string",
            "description": "Logo under which the customer present"
          },
          "ORG": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "groupDescription": {
            "type": "string"
          },
          "limit": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Limit requested"
          },
          "maximumGlobalDBR": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Maximum Global DBR"
          },
          "maximumProductDBR": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Maximum Product DBR"
          },
          "totalEmiPF": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Total PF(Personal Finance) EMI"
          },
          "totalEmiRF": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Total RF(Residential Finance) EMI"
          },
          "totalEmiAL": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Total AL(Auto Lease) EMI"
          },
          "totalEmiCC": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Total CC(Credit Card) EMI"
          },
          "additionalApplicationDetails": {
            "$ref": "#/components/schemas/AdditionalApplicationDetailsType",
            "description": "Additional Application Details:\r\n\t\t\t\t\t\tList of additional supplementary card details added under the same\r\n\t\t\t\t\t\tapplication if exist"
          }
        },
        "description": ""
      },
      "AdditionalApplicationDetailsType": {
        "title": "AdditionalApplicationDetailsType",
        "type": "object",
        "properties": {
          "snbLoanApplicationDeatils": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SNBLoanApplicationDetailsType"
            },
            "description": "DETAILS OF SNB LOAN APPLICATION"
          },
          "nonSNBLoanApplicationDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NonSNBLoanApplicationDetailsType"
            },
            "description": "DETAILS OF NON-SNB LOAN APPLICATIONS"
          },
          "pendingLOSApplicationDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PendingLOSApplcationDetailsType"
            },
            "description": "DETAILS OF LOS PENDING APPLICATIONS"
          },
          "pendingCreditCardApplicationDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PendingCreditCardApplicationDetailsType"
            },
            "description": "DETAILS OF CC PENDING APPLICATIONS"
          }
        },
        "description": ""
      },
      "SNBLoanApplicationDetailsType": {
        "title": "SNBLoanApplicationDetailsType",
        "type": "object",
        "properties": {
          "loanIdNumber": {
            "type": "string",
            "description": "SNB LOAN ID NUMBER"
          },
          "existingEMI": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "SNB EXISTING EMI"
          },
          "existingMaxEMI": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "SNB EXISTING MAX EMI"
          },
          "emiConsidered": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "SNB EXISTING CONSIDERED EMI"
          },
          "loanAccountNumber": {
            "type": "string",
            "description": "SNB LOAN ACCOUNT NUMBER"
          },
          "loanType": {
            "type": "string",
            "description": "SNB LOAN TYPE"
          },
          "loanStatus": {
            "type": "string",
            "description": "SNB LOAN ACCOUNT STATUS"
          },
          "accountType": {
            "type": "string",
            "description": "SNB ACCOUNT TYPE"
          },
          "subType": {
            "type": "string",
            "description": "SNB SUB TYPE"
          },
          "emi1": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "SNB EMI 1"
          },
          "tenor1": {
            "type": "string",
            "description": "SNB TENOR 1"
          },
          "emi2": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "SNB EMI 2"
          },
          "tenor2": {
            "type": "string",
            "description": "SNB TENOR 2"
          },
          "emi3": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "SNB EMI 3"
          },
          "tenor3": {
            "type": "string",
            "description": "SNB TENOR 3"
          },
          "emi4": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "SNB EMI 4"
          },
          "tenor4": {
            "type": "string",
            "description": "SNB TENOR 4"
          },
          "linkedPFAccount": {
            "type": "string",
            "description": "SNB Linked PF Account"
          },
          "maturityDateForLinkedPF": {
            "type": "string",
            "description": "SNB MATURITY DATE FOR LINKED PF"
          },
          "currentEMI": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "SNB CURRENT EMI"
          },
          "globalDBRFlag": {
            "type": "string",
            "description": "SNB GLOBAL DBR FLAG"
          },
          "productDBRFlag": {
            "type": "string",
            "description": "SNB PRODUCT DBR FLAG"
          },
          "creditCardLimit": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "SNB CC LIMIT"
          },
          "creditCardLoanStatus": {
            "type": "string",
            "description": "SNB CC LOAN STATUS"
          }
        },
        "description": ""
      },
      "NonSNBLoanApplicationDetailsType": {
        "title": "NonSNBLoanApplicationDetailsType",
        "type": "object",
        "properties": {
          "loanIdNumber": {
            "type": "string",
            "description": "NON SNB LOAN ID NUMBER"
          },
          "simahCreditor": {
            "type": "string",
            "description": "Non SNB Creditor"
          },
          "simahProductType": {
            "type": "string",
            "description": "NON SNB PRODUCT TYPE"
          },
          "simahAccountNumber": {
            "type": "string",
            "description": "NON SNB ACCOUNT NUMBER"
          },
          "simahCreditLimit": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "NON SNB LOAN CREDIT LIMIT"
          },
          "simahExpiryDate": {
            "type": "string",
            "description": "NON SNB LOAN EXPIRY DATE"
          },
          "simahStatus": {
            "type": "string",
            "description": "NON SNB LOAN ACCOUNT STATUS"
          },
          "simahFrequencyOfPayments": {
            "type": "string",
            "description": "NON SNB FREQUENCY OF PAYMENTS"
          },
          "simahInstallmentAmount": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "NON SNB INSTALLMENT AMOUNT"
          },
          "simahSalaryFlag": {
            "type": "string",
            "description": "NON SNB SALARY FLAG"
          },
          "simahSummary": {
            "type": "string",
            "description": "NON SNB LOAN SUMMARY"
          },
          "simahGlobalDBRFlag": {
            "type": "string",
            "description": "NON SNB GLOBAL DBR FLAG"
          },
          "simahProductDBRFlag": {
            "type": "string",
            "description": "NON SNB PRODUCT DBR FLAG"
          }
        },
        "description": ""
      },
      "PendingLOSApplcationDetailsType": {
        "title": "PendingLOSApplcationDetailsType",
        "type": "object",
        "properties": {
          "applicationNumber": {
            "type": "string",
            "description": "PENDING LOS APPLICATION NUMBER"
          },
          "loanAmount": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "LOS PENDING APPLICATION LOAN AMOUNT"
          },
          "installmentAmount": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "LOS PENDING APPLICATION INSTALLMENT AMOUNT"
          },
          "productType": {
            "type": "string",
            "description": "LOS PENDING APPLICATION PRODUCT TYPE"
          },
          "idNumber": {
            "type": "string",
            "description": "LOS PENDING APPLICATION ID NUMBER"
          },
          "globalDBRFlag": {
            "type": "string",
            "description": "LOS PENDING GLOBAL DBR YN"
          },
          "productDBRFlag": {
            "type": "string",
            "description": "LOS PENDING PRODUCT DBR YN"
          }
        },
        "description": ""
      },
      "PendingCreditCardApplicationDetailsType": {
        "title": "PendingCreditCardApplicationDetailsType",
        "type": "object",
        "properties": {
          "applicationNumber": {
            "type": "string",
            "description": "CC PENDING APPLICATION NUMBER"
          },
          "creditLimit": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "CC PENDING APPLICATION CREDIT LIMIT"
          },
          "installmentAmount": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "CC PENDING APPLICATION INSTALLMENT AMOUNT"
          },
          "productType": {
            "type": "string",
            "description": "CC PENDING APPLICATION PRODUCT TYPE"
          },
          "paymentFrequency": {
            "type": "string",
            "description": "CC PENDING APPLICATION PAYMENT FREQUENCY"
          },
          "idNumber": {
            "type": "string",
            "description": "CC Pending Application Id Number"
          },
          "globalDBRFlag": {
            "type": "string",
            "description": "CC Pending Global DBR YN"
          },
          "productDBRFlag": {
            "type": "string",
            "description": "CC Pending Product DBR YN"
          }
        },
        "description": ""
      },
      "CreditCardApplicationInquiryShortRequestType": {
        "title": "CreditCardApplicationInquiryShortRequest",
        "required": [
          "applicationNumber",
          "logoId"
        ],
        "type": "object",
        "properties": {
          "applicationNumber": {
            "$ref": "../../commonschemas/schemas.json#/ApplicationId",
            "description": "The Application Number stored in V+ system for the card holder"
          },
          "logoId": {
            "$ref": "../../commonschemas/schemas.json#/Logo",
            "description": "Logo which the application information is being requested."
          },
          "organizationNumber": {
            "type": "integer",
            "description": "Organization Number",
            "format": "int32"
          },
          "maskBalance": {
            "type": "boolean"
          }
        },
        "description": ""
      },
      "CreditCardApplicationInquiryShortResponseType": {
        "title": "CreditCardApplicationInquiryShortResponse",
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/components/schemas/ApplicationInquiryShortType"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "ApplicationInquiryShortType": {
        "title": "ApplicationInquiryShortType",
        "type": "object",
        "properties": {
          "applicationNumber": {
            "$ref": "../../commonschemas/schemas.json#/ApplicationId",
            "description": "Application Number"
          },
          "customerName": {
            "$ref": "../../commonschemas/schemas.json#/FullName",
            "description": "Customer full name"
          },
          "customerIdentificationNumber": {
            "type": "number",
            "format": "double",
            "description": "Customer Identification Number (e.g. driving license number)",
            "default": 0
          },
          "accountId": {
            "$ref": "../../commonschemas/schemas.json#/EncryptedText",
            "description": "Bank account number (this is not the account number generated from this application)"
          },
          "receiptDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "Date the application was entered in the system"
          },
          "processStatus": {
            "type": "string",
            "description": "Process Status"
          },
          "processStatusDescription": {
            "type": "string",
            "description": "Process Status Description"
          },
          "processDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "Date on which application entered the current process (application scoring or verification or cross check est.)"
          },
          "approvalStatus": {
            "type": "string",
            "description": "Approval Status"
          },
          "approvalStatusDescription": {
            "type": "string",
            "description": "Approval Status Description"
          },
          "approvalDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "Date the application was approved or declined"
          },
          "creditCardNumber": {
            "$ref": "../../commonschemas/schemas.json#/EncryptedText",
            "description": "Primary card number generated for this application"
          },
          "productType": {
            "type": "string",
            "description": "Product Type"
          },
          "creditLimit": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "default": 0.0,
            "description": "Credit limit assigned"
          },
          "reasonCode": {
            "type": "string",
            "description": "This reason code will be populated if the application was declined"
          },
          "memo": {
            "type": "string",
            "description": "Memo"
          },
          "samaStatus": {
            "type": "string"
          }
        },
        "description": ""
      },
      "CreditCardApplicationInquiryDetailRequestType": {
        "title": "CreditCardApplicationInquiryDetailRequest",
        "type": "object",
        "properties": {
          "cif": {
            "$ref": "../../commonschemas/schemas.json#/CIF",
            "description": "Customer Unique Identification Number"
          },
          "applicationNumber": {
            "$ref": "../../commonschemas/schemas.json#/ApplicationId",
            "description": "The Application Number stored in V+ system for the card holder"
          },
          "nationalId": {
            "type": "string",
            "description": "The National ID number or the Iqama number of the customer"
          },
          "logoId": {
            "$ref": "../../commonschemas/schemas.json#/Logo",
            "description": "Logo which the application information is being requested."
          },
          "applicationIsNew": {
            "$ref": "#/components/schemas/applicationIsNew",
            "description": "To spicifiy in the application is New or not,values (Ã¢â‚¬Å“trueÃ¢â‚¬Â Ã¢â‚¬â€œ Ã¢â‚¬Å“falseÃ¢â‚¬Â)"
          }
        },
        "description": ""
      },
      "CreditCardApplicationInquiryDetailResponseType": {
        "title": "CreditCardApplicationInquiryDetailResponse",
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/components/schemas/ApplicationInquiryDetailType"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "ApplicationInquiryDetailType": {
        "title": "ApplicationInquiryDetailType",
        "type": "object",
        "properties": {
          "applicationInformation": {
            "$ref": "#/components/schemas/ApplicationInformationType"
          },
          "customerInformation": {
            "$ref": "#/components/schemas/CustomerInformationType"
          },
          "segmentInformation": {
            "$ref": "#/components/schemas/SegmentInformationType"
          },
          "residentialInformation": {
            "$ref": "#/components/schemas/ResidentialInformationType"
          },
          "mobileInformation": {
            "$ref": "#/components/schemas/MobileInformationType"
          },
          "waselInformation": {
            "$ref": "#/components/schemas/WaselInformationType"
          },
          "employerInformation": {
            "$ref": "#/components/schemas/EmployerInformationType"
          },
          "accountInformation": {
            "$ref": "#/components/schemas/AccountInformationType"
          },
          "financialInformation": {
            "$ref": "#/components/schemas/FinancialInformationType"
          },
          "supplemetaryInformation": {
            "$ref": "#/components/schemas/SupplemetaryInformationType"
          },
          "settlementInformation": {
            "$ref": "#/components/schemas/SettlementInformationType"
          },
          "otherInformation": {
            "$ref": "#/components/schemas/OtherInformationType"
          },
          "ruleInformation": {
            "$ref": "#/components/schemas/RuleInformationType"
          },
          "rejectErrorInformation": {
            "$ref": "#/components/schemas/RejectErrorInformationType"
          },
          "AdditionalInformation": {
            "$ref": "#/components/schemas/AdditionalInformationType"
          }
        },
        "description": ""
      },
      "ApplicationInformationType": {
        "title": "ApplicationInformationType",
        "type": "object",
        "properties": {
          "no": {
            "type": "string",
            "description": "Application Number for which maintenance request is received",
            "default": "0"
          },
          "status": {
            "$ref": "../../commonschemas/schemas.json#/StatusCode",
            "description": "Code (represents the Code of the application if accepted or declined)"
          },
          "statusDescription": {
            "type": "string",
            "description": "Description (represents the description of the application if accepted or declined)"
          },
          "orgNo": {
            "type": "integer",
            "description": "Organization Number",
            "format": "int32",
            "default": 0
          },
          "logo": {
            "type": "integer",
            "description": "Logo under which the customer present",
            "format": "int32",
            "default": 0
          },
          "branchNo": {
            "type": "string",
            "description": "Branch Number",
            "default": "0"
          },
          "deliveryMethod": {
            "type": "string",
            "description": "Delivery Method"
          },
          "employeeId": {
            "type": "string",
            "description": "Employee ID"
          },
          "campaignCode": {
            "type": "string",
            "description": "Campaign Code"
          },
          "channelSource": {
            "type": "string"
          },
          "channelCreate": {
            "type": "string",
            "description": "Application Channel Source Code (Ã¢â‚¬Å“TÃ¢â‚¬Â, Ã¢â‚¬Å“BÃ¢â‚¬Â, Ã¢â‚¬Å“DÃ¢â‚¬Â)"
          },
          "channelDescription": {
            "type": "string",
            "description": "Application Channel Source Description"
          },
          "pinMailerIndicator": {
            "type": "string"
          },
          "cardPIN": {
            "$ref": "#/components/schemas/PINType"
          },
          "deliveryOption": {
            "type": "string",
            "description": "SP: Saudi Post FC: Fast courier KC: Kiosk Center"
          },
          "deliveryAddress": {
            "$ref": "#/components/schemas/DeliveryAddressType"
          },
          "isPlastic": {
            "type": "boolean"
          },
          "validate": {
            "type": "boolean",
            "description": "To specify if the call is for application creation or for checking the data ."
          }
        },
        "description": ""
      },
      "CustomerInformationType": {
        "title": "CustomerInformationType",
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title Identification, e.g.: Ã¢â‚¬Å“MR, MRS,MISS, DR, HRHÃ¢â‚¬Â"
          },
          "firstName": {
            "type": "string",
            "description": "First Name"
          },
          "secondName": {
            "type": "string",
            "description": "Second Name"
          },
          "thirdName": {
            "type": "string",
            "description": "Third Name"
          },
          "familyName": {
            "type": "string",
            "description": "Family Name"
          },
          "fullName": {
            "type": "string",
            "description": "Full Name"
          },
          "embosserName": {
            "type": "string",
            "description": "Name On Card (Only English)"
          },
          "placeOfBirth": {
            "type": "string",
            "description": "Customer Place Of Birth"
          },
          "dateOfBirth": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "Customer Date Of Birth"
          },
          "age": {
            "type": "integer",
            "description": "Customer Age",
            "format": "int32",
            "default": 0
          },
          "gender": {
            "$ref": "../../commonschemas/schemas.json#/Gender",
            "description": "Customer Gender: Ã¢â‚¬Å“FÃ¢â‚¬Â if Female Ã¢â‚¬Å“MÃ¢â‚¬Â if Male"
          },
          "genderDescription": {
            "type": "string",
            "description": "Customer Gender: Ã¢â‚¬Å“FÃ¢â‚¬Â if Female  Ã¢â‚¬Å“MÃ¢â‚¬Â if Male"
          },
          "marital": {
            "type": "string",
            "description": "Customer Marital Status: Ã¢â‚¬Å“MÃ¢â‚¬Â if Married Ã¢â‚¬Å“SÃ¢â‚¬Â if Single\r\n\t\t\t\t\t\tÃ¢â‚¬Å“DÃ¢â‚¬Â if Divorced\r\n\t\t\t\t\t\tÃ¢â‚¬Å“WÃ¢â‚¬Â if\r\n\t\t\t\t\t\tWidow Ã¢â‚¬Å“NÃ¢â‚¬Â if No Response"
          },
          "maritalDescription": {
            "type": "string",
            "description": "Customer Marital Status: Ã¢â‚¬Å“MÃ¢â‚¬Â if Married Ã¢â‚¬Å“SÃ¢â‚¬Â if Single\r\n\t\t\t\t\t\tÃ¢â‚¬Å“DÃ¢â‚¬Â if Divorced\r\n\t\t\t\t\t\tÃ¢â‚¬Å“WÃ¢â‚¬Â if\r\n\t\t\t\t\t\tWidow Ã¢â‚¬Å“NÃ¢â‚¬Â if No Response"
          },
          "dependents": {
            "type": "integer",
            "description": "Customer Number Dependants",
            "format": "int32",
            "default": 0
          },
          "id": {
            "type": "string",
            "description": "Customer Identification Number",
            "default": "0"
          },
          "idDateOfExpiry": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "Customer Identification Date Of Expiration"
          },
          "nationality": {
            "type": "string",
            "description": "Customer Nationality (Short Name)"
          },
          "nationalityDescription": {
            "type": "string",
            "description": "Customer Nationality (Short Name Description)"
          },
          "nationalityCode": {
            "type": "string",
            "description": "Customer Nationality"
          },
          "occupation": {
            "type": "string",
            "description": "Customer Labor Occupation"
          },
          "occupationDescription": {
            "type": "string"
          },
          "educationLevel": {
            "type": "string",
            "description": "Customer Education Level: Ã¢â‚¬Å“PÃ¢â‚¬Â if Intermediate Ã¢â‚¬Å“HÃ¢â‚¬Â if High School Ã¢â‚¬Å“UÃ¢â‚¬Â if University Ã¢â‚¬Å“SÃ¢â‚¬Â if Post Graduate Ã¢â‚¬Å“NÃ¢â‚¬Â if Pre-intermediate"
          },
          "educationLevelDescription": {
            "type": "string",
            "description": "Customer Education Level: Ã¢â‚¬Å“PÃ¢â‚¬Â if Intermediate Ã¢â‚¬Å“HÃ¢â‚¬Â if High School Ã¢â‚¬Å“UÃ¢â‚¬Â if University Ã¢â‚¬Å“SÃ¢â‚¬Â if Post Graduate Ã¢â‚¬Å“NÃ¢â‚¬Â if Pre-intermediate"
          },
          "membershipNumber": {
            "type": "string",
            "description": "Amyali Membership Number (for ORG 007 (all logos))"
          },
          "cif": {
            "$ref": "../../commonschemas/schemas.json#/CIFOptional"
          },
          "programCode": {
            "maxLength": 3,
            "type": "string"
          }
        },
        "description": ""
      },
      "SegmentInformationType": {
        "title": "SegmentInformationType",
        "type": "object",
        "properties": {
          "Segment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/segmentType"
            },
            "description": ""
          },
          "priorityCode": {
            "type": "string",
            "description": "this is the priority Code of sagments based on specification"
          },
          "priorityCodeEnglishDesc": {
            "type": "string"
          },
          "priorityCodeArabicDesc": {
            "type": "string"
          }
        },
        "description": ""
      },
      "segmentType": {
        "title": "segmentType",
        "type": "object",
        "properties": {
          "Type": {
            "type": "string"
          },
          "EnglishDesc": {
            "type": "string"
          },
          "ArabicDesc": {
            "type": "string"
          }
        },
        "description": ""
      },
      "ResidentialInformationType": {
        "title": "ResidentialInformationType",
        "type": "object",
        "properties": {
          "addressType": {
            "type": "string",
            "description": "Customer residential address Type"
          },
          "address1": {
            "type": "string",
            "description": "Residential address line 1"
          },
          "address2": {
            "type": "string",
            "description": "Residential address line 2"
          },
          "cityCode": {
            "type": "string",
            "description": "City Code Number",
            "default": "0"
          },
          "cityDesc": {
            "type": "string",
            "description": "City Description",
            "default": "0"
          },
          "poBox": {
            "type": "integer",
            "description": "P.O Box Number",
            "format": "int32",
            "default": 0
          },
          "postalCode": {
            "type": "integer",
            "description": "Postal Code",
            "format": "int32",
            "default": 0
          },
          "ownershipType": {
            "type": "string",
            "description": "Residential Ownership Type: Ã¢â‚¬Å“CÃ¢â‚¬Â if Company Provided Ã¢â‚¬Å“LÃ¢â‚¬Â if Living with Parents Ã¢â‚¬Å“RÃ¢â‚¬Â if Tenant Ã¢â‚¬Å“OÃ¢â‚¬Â if Home Owner Ã¢â‚¬Å“XÃ¢â‚¬Â if Others"
          },
          "ownershipTypeDescription": {
            "type": "string",
            "description": "Residential Ownership Type: Ã¢â‚¬Å“CÃ¢â‚¬Â if Company Provided Ã¢â‚¬Å“LÃ¢â‚¬Â if Living with Parents Ã¢â‚¬Å“RÃ¢â‚¬Â if Tenant Ã¢â‚¬Å“OÃ¢â‚¬Â if Home Owner Ã¢â‚¬Å“XÃ¢â‚¬Â if Others"
          },
          "phoneArea": {
            "type": "string",
            "description": "House Fixed Phone Area"
          },
          "phoneNo": {
            "$ref": "../../commonschemas/schemas.json#/PhoneNumberOptional",
            "description": "House Fixed Phone Number"
          },
          "mobile": {
            "type": "string",
            "description": "Mobile Phone Number"
          },
          "fax": {
            "type": "string",
            "description": "Resident Fax Number"
          },
          "emailAddress": {
            "$ref": "../../commonschemas/schemas.json#/EmailAddressOptional",
            "description": "Email Address"
          },
          "stcServiceProvider": {
            "type": "string"
          },
          "typeOfResidency": {
            "type": "string"
          }
        },
        "description": ""
      },
      "WaselInformationType": {
        "title": "WaselInformationType",
        "type": "object",
        "properties": {
          "basicNumber": {
            "type": "integer",
            "description": "Wasel Basic Number Identification",
            "format": "int32",
            "default": 0
          },
          "street": {
            "type": "string",
            "description": "Wasel Street Name"
          },
          "district": {
            "type": "string",
            "description": "Wasel District Name"
          },
          "unit": {
            "type": "string",
            "description": "Wasel Unit Number"
          },
          "zipCode1": {
            "type": "string",
            "description": "Wasel Zip Code line 1"
          },
          "zipCode2": {
            "type": "string",
            "description": "Wasel Zip Code line 2"
          }
        },
        "description": ""
      },
      "EmployerInformationType": {
        "title": "EmployerInformationType",
        "type": "object",
        "properties": {
          "status": {
            "$ref": "../../commonschemas/schemas.json#/StatusCode",
            "description": "Applicant Employment Status Code"
          },
          "statusDescription": {
            "$ref": "../../commonschemas/schemas.json#/StatusDesc",
            "description": "Applicant Employment Status Description"
          },
          "name": {
            "type": "string",
            "description": "Employment Name"
          },
          "nameEnglish": {
            "type": "string"
          },
          "nameArabic": {
            "type": "string"
          },
          "salary": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "Monthly Salary Amount",
            "default": 0.0
          },
          "salaryIsBlock": {
            "$ref": "#/components/schemas/SalaryIsBlock",
            "description": "Salary Is Block (Ã¢â‚¬Å“trueÃ¢â‚¬Â,Ã¢â‚¬Å“falseÃ¢â‚¬Â)"
          },
          "otherIncome": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "Other Income Amount",
            "default": 0.0
          },
          "totalIncome": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "Total Monthly Income",
            "default": 0.0
          },
          "lengthOfServiceYears": {
            "type": "integer",
            "description": "Length Of Service In (Years)",
            "format": "int32",
            "default": 0
          },
          "lengthOfServiceMonths": {
            "type": "integer",
            "description": "Length Of Service In (Months)",
            "format": "int32",
            "default": 0
          },
          "phoneArea": {
            "type": "string",
            "description": "Employment Phone Area Number"
          },
          "phoneNo": {
            "$ref": "../../commonschemas/schemas.json#/PhoneNumberOptional",
            "description": "Employment Phone Number"
          },
          "phoneExt": {
            "type": "integer",
            "description": "Employment Phone Extension Number",
            "format": "int32",
            "default": 0
          },
          "cityCode": {
            "type": "integer",
            "description": "Employment City Code",
            "format": "int32",
            "default": 0
          },
          "businessAddress": {
            "type": "string"
          },
          "salaryCertificateOption": {
            "$ref": "#/components/schemas/salaryCertificateOption",
            "description": "Drop down options as 1. Salary Certificate with details 2. Salary Certificate without details 3. No Salary Certificate"
          },
          "salaryAsPerSalCertificate": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "basicSalary": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "fixedAllowances": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "deductionsAgainstSal": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "netMonthlyIncome": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "ppaaGosiDeduction": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "nonNCBPayrollFlag": {
            "type": "string",
            "description": "Flag to Identify the Payroll in Other Bank"
          },
          "documentsList": {
            "$ref": "#/components/schemas/documentsListType"
          }
        },
        "description": ""
      },
      "documentsListType": {
        "title": "documentsListType",
        "type": "object",
        "properties": {
          "documentId": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "AccountInformationType": {
        "title": "AccountInformationType",
        "type": "object",
        "properties": {
          "Account": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountType1"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "FinancialInformationType": {
        "title": "FinancialInformationType",
        "type": "object",
        "properties": {
          "investmentBalance": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "Investment Balance"
          },
          "pfaBalance": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "PFA Balance"
          },
          "wessamLastSixMonth": {
            "type": "string",
            "description": "Wessam Last Six Month"
          },
          "wessamBalance": {
            "type": "string"
          },
          "wessamSubscriptionDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "Wessam Subscription Date"
          },
          "totalAccountBalance": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "Total Amount For All Accounts"
          },
          "totalAccountAverage": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "Total Account Averages"
          },
          "calculatedIncome": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          }
        },
        "description": ""
      },
      "SupplemetaryInformationType": {
        "title": "SupplemetaryInformationType",
        "type": "object",
        "properties": {
          "embosserName": {
            "type": "string",
            "description": "Name the applicant of the supplementary card (Only English)"
          },
          "dateOfBirth": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "Date of birth for the applicant of the supplementary card"
          },
          "limit": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "Limit Amount",
            "default": 0.0
          },
          "placeOfBirth": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "idExpiryDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional"
          },
          "relationship": {
            "type": "string"
          },
          "customerType": {
            "type": "string"
          },
          "cif": {
            "type": "string"
          },
          "fullNameInArabic": {
            "type": "string"
          },
          "countryOfBirth": {
            "type": "string"
          },
          "nationality": {
            "type": "string"
          },
          "mobileNumber": {
            "type": "string"
          }
        },
        "description": ""
      },
      "SettlementInformationType": {
        "title": "SettlementInformationType",
        "type": "object",
        "properties": {
          "paymentMethod": {
            "type": "string",
            "description": "Payment Type: Ã¢â‚¬Å“FÃ¢â‚¬Â if Full Amount Ã¢â‚¬Å“MÃ¢â‚¬Â if Minimum Payment"
          },
          "billingCycle": {
            "type": "string",
            "description": "Billing Cycle"
          },
          "autoDebit": {
            "type": "string",
            "description": "Debit From Account (Y/N)"
          },
          "defaultCreditLimit": {
            "type": "string"
          },
          "pfaBasedLimit": {
            "type": "string"
          },
          "incomeBasedLimit": {
            "type": "string"
          }
        },
        "description": ""
      },
      "OtherInformationType": {
        "title": "OtherInformationType",
        "type": "object",
        "properties": {
          "internetCard": {
            "type": "string",
            "description": "Request Internet Card (Y/N)"
          },
          "insuranceProduct": {
            "type": "string",
            "description": "Insurance Product (system default is 1)"
          },
          "existingCards": {
            "type": "string",
            "description": "Existing Credit Card(Y/N)"
          },
          "amyaliFlag": {
            "type": "string",
            "description": "Amyali Flag Indicator (only for ORG 007 (all Logos)"
          },
          "productChange": {
            "type": "string",
            "description": "Product Change For Second Card"
          },
          "processControlTable": {
            "type": "string",
            "description": "Process Control Table"
          },
          "managerCode": {
            "type": "string"
          },
          "referredTo": {
            "type": "string"
          },
          "referralReason": {
            "type": "string"
          },
          "jobGrade": {
            "type": "string"
          }
        },
        "description": ""
      },
      "RuleInformationType": {
        "title": "RuleInformationType",
        "type": "object",
        "properties": {
          "Type": {
            "type": "string",
            "description": "Rule Type"
          },
          "Value": {
            "type": "string",
            "description": "Rule Value"
          },
          "IsDocumentRequired": {
            "type": "string",
            "description": "Document Required"
          },
          "AllowApplications": {
            "type": "string",
            "description": "Maximum Applications Allow"
          },
          "DocumentEnglish": {
            "type": "string",
            "description": "Document Required English"
          },
          "DocumentArabic": {
            "type": "string",
            "description": "Document Required Arabic"
          }
        },
        "description": ""
      },
      "RejectErrorInformationType": {
        "title": "RejectErrorInformationType",
        "type": "object",
        "properties": {
          "Reject": {
            "type": "string"
          },
          "Code": {
            "type": "string",
            "description": "Decline Reason Code"
          },
          "Description": {
            "type": "string",
            "description": "Decline Reason Description"
          }
        },
        "description": ""
      },
      "MobileInformationType": {
        "title": "MobileInformationType",
        "type": "object",
        "properties": {
          "Mobile": {
            "$ref": "#/components/schemas/MobileType"
          }
        },
        "description": ""
      },
      "MobileType": {
        "title": "MobileType",
        "type": "object",
        "properties": {
          "MobileNumber": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreditCardStatementDetailsRequest": {
        "title": "tns_CreditCardStatementDetailsRequest",
        "required": [
          "accountId",
          "date"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "date": {
            "pattern": "([0-9]){8}",
            "type": "string"
          },
          "pageNumber": {
            "minimum": 0.0,
            "type": "integer",
            "description": "Page number",
            "format": "int32"
          },
          "numberOfTransactions": {
            "minimum": 0.0,
            "type": "integer",
            "description": "number Of Transactions",
            "format": "int32"
          }
        },
        "description": ""
      },
      "tns_CreditCardStatementDetailsResponse": {
        "title": "tns_CreditCardStatementDetailsResponse",
        "type": "object",
        "properties": {
          "record": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_StatementDetailsType"
            },
            "description": ""
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_StatementDetailsType": {
        "title": "tns_StatementDetailsType",
        "type": "object",
        "properties": {
          "recordNumber": {
            "type": "integer",
            "description": "Record Number",
            "format": "int32",
            "default": 0
          },
          "transactionCode": {
            "maxLength": 2,
            "minLength": 2,
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "date": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "amountSR": {
            "type": "number",
            "default": 0.0
          },
          "currency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          },
          "amount": {
            "type": "number",
            "default": 0.0
          },
          "merchant": {
            "type": "string"
          },
          "loc": {
            "type": "string"
          },
          "reference": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_InquireCreditCardLIRecordRequest": {
        "title": "tns_InquireCreditCardLIRecordRequest",
        "required": [
          "cardNumber"
        ],
        "type": "object",
        "properties": {
          "cardNumber": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_InquireCreditCardLIRecordResponse": {
        "title": "tns_InquireCreditCardLIRecordResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InquireLIRecordType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_UpdateCreditCardLIRecordRequest": {
        "title": "tns_UpdateCreditCardLIRecordRequest",
        "required": [
          "cardNumber"
        ],
        "type": "object",
        "properties": {
          "cardNumber": {
            "type": "string"
          },
          "updateStatus": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_UpdateCreditCardLIRecordResponse": {
        "title": "tns_UpdateCreditCardLIRecordResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_UpdateLIRecordType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_InquireLIRecordType": {
        "title": "tns_InquireLIRecordType",
        "type": "object",
        "properties": {
          "currentLimit": {
            "type": "number"
          },
          "increaseInLimit": {
            "type": "number"
          },
          "offerExpiryDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_UpdateLIRecordType": {
        "title": "tns_UpdateLIRecordType",
        "type": "object",
        "properties": {
          "result": {
            "type": "string"
          }
        },
        "description": ""
      },
      "RetrieveEligibilityTableRequestType": {
        "title": "RetrieveEligibilityTableRequestType",
        "description": "Retrieve Eligibility Table Request Type",
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "NAME"
          }
        }
      },
      "RetrieveEligibilityTableResponseType": {
        "title": "RetrieveEligibilityTableResponseType",
        "description": "Retrieve Eligibility Table Response Type",
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/components/schemas/RetrieveTablesType"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        }
      },
      "TableType": {
        "title": "TableType",
        "description": "Table Type",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "CODE"
          },
          "englishName": {
            "type": "string",
            "description": "ENGLISHNAME"
          },
          "arabicName": {
            "type": "string",
            "description": "ARABICNAME"
          }
        }
      },
      "SegmentsType": {
        "title": "SegmentsType",
        "description": "Segments Type",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "TYPE"
          },
          "document": {
            "type": "array",
            "description": "DOCUMENT",
            "items": {
              "$ref": "#/components/schemas/TableType"
            }
          }
        }
      },
      "RelationType": {
        "title": "RelationType",
        "description": "Relation Type",
        "type": "object",
        "properties": {
          "englishName": {
            "type": "string",
            "description": "ENGLISHNAME"
          },
          "arabicName": {
            "type": "string",
            "description": "ARABICNAME"
          }
        }
      },
      "AdditionalInformationType": {
        "title": "AdditionalInformationType",
        "type": "object",
        "properties": {
          "hrmsLimit": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "requestedLimit": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "globalDBR": {
            "type": "number",
            "format": "double",
            "default": 0.0
          },
          "productNormalDBR": {
            "type": "number",
            "format": "double",
            "default": 0.0
          },
          "employmentIndicator": {
            "type": "string"
          },
          "isNCBStaff": {
            "$ref": "../../commonschemas/schemas.json#/YorNTypeOptional"
          },
          "monthlyObligation": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "houseMaidDriver": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "declaredCoreExpenses": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "otherExpenses": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "declaredMonthlyObligations": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "housingRent": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "otherDeduction": {
            "type": "string"
          },
          "fursanMembershipNumber": {
            "type": "string"
          },
          "abuFlag": {
            "type": "string",
            "description": "Master Card Automatic Billing Updater (ABU)-->0: Disable ABU Flag,1: Enable  ABU Flag"
          },
          "salesSource": {
            "type": "string"
          }
        },
        "description": ""
      },
      "CreateCreditCardApplicationRequestType": {
        "title": "CreateCreditCardApplicationRequestType",
        "type": "object",
        "properties": {
          "applicationInformation": {
            "$ref": "#/components/schemas/ApplicationInformationType"
          },
          "customerInformation": {
            "$ref": "#/components/schemas/CustomerInformationType"
          },
          "residentialInformation": {
            "$ref": "#/components/schemas/ResidentialInformationType"
          },
          "waselInformation": {
            "$ref": "#/components/schemas/WaselInformationType"
          },
          "employerInformation": {
            "$ref": "#/components/schemas/EmployerInformationType"
          },
          "accountInformation": {
            "$ref": "#/components/schemas/AccountInformationType1"
          },
          "financialInformation": {
            "$ref": "#/components/schemas/FinancialInformationType"
          },
          "supplemetaryInformation": {
            "$ref": "#/components/schemas/SupplemetaryInformationType"
          },
          "settlementInformation": {
            "$ref": "#/components/schemas/SettlementInformationType"
          },
          "otherInformation": {
            "$ref": "#/components/schemas/OtherInformationType"
          },
          "additionalInformation": {
            "$ref": "#/components/schemas/AdditionalInformationType"
          },
          "affordabilityDetailsList": {
            "$ref": "#/components/schemas/affordabilityRequestDetailsListType"
          },
          "cardDeliveryDetails": {
            "$ref": "#/components/schemas/CardDeliveryDetailsType"
          },
          "applicationStep": {
            "type": "string",
            "description": "This element identifies the step of the credit\r\n\t\t\t\t\t\t\tcard application process,\r\n\t\t\t\t\t\t\tPossible values can be\r\n\t\t\t\t\t\t\tBACHK - Before application check(BAC),\r\n\t\t\t\t\t\t\tRACHK - To perform Risk assessment check(RAC)\r\n\t\t\t\t\t\t\tSIMAH - to perfrom Simah check only\r\n\t\t\t\t\t\t\tRLEND - (Responsible Lending) To calculate eligible limit\r\n\t\t\t\t\t\t\tNEWAP - Final step to create (new) application"
          }
        },
        "description": ""
      },
      "CreateCreditCardApplicationResponseType": {
        "title": "CreateCreditCardApplicationResponseType",
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/components/schemas/CreateApplicationType"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "CreateApplicationType": {
        "title": "CreateApplicationType",
        "type": "object",
        "properties": {
          "applicationInformation": {
            "$ref": "#/components/schemas/AppInfoType"
          },
          "affordabilityDetailsList": {
            "$ref": "#/components/schemas/AffordabilityResponseDetailsListType"
          },
          "rejectErrorInformation": {
            "$ref": "#/components/schemas/ErrorInfoType"
          }
        },
        "description": ""
      },
      "AppInfoType": {
        "title": "AppInfoType",
        "type": "object",
        "properties": {
          "applicationNumber": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "statusDescription": {
            "type": "string"
          },
          "approvedLimit": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "default": 0
          },
          "PreApprovedCreditLimit": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "default": 0
          },
          "pfaBasedLimit": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "incomeBasedLimit": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "annualFee": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "dueDates": {
            "$ref": "#/components/schemas/DueDateType",
            "description": "List of Due Date"
          },
          "billingDates": {
            "$ref": "#/components/schemas/BillingDatesType",
            "description": "List of Billing Date"
          },
          "maximumGlobalDBR": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Maximum Global DBR"
          },
          "maximumProductDBR": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Maximum Product DBR"
          },
          "totalEmiPF": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Total PF(Personal Finance) EMI"
          },
          "totalEmiRF": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Total RF(Residential Finance) EMI"
          },
          "totalEmiAL": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Total AL(Auto Lease) EMI"
          },
          "totalEmiCC": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Total CC(Credit Card) EMI"
          },
          "finalExpenses": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Final Expenses"
          },
          "additionalApplicationDetails": {
            "$ref": "#/components/schemas/AdditionalApplicationDetailsType",
            "description": "Additional Application Details:\r\n\t\t\t\t\t\tList of additional supplementary card details added under the same\r\n\t\t\t\t\t\tapplication if exist"
          },
          "fursanMembershipNumber": {
            "type": "string"
          }
        },
        "description": ""
      },
      "DueDateType": {
        "title": "DueDateType",
        "type": "object",
        "properties": {
          "dueDate": {
            "type": "array",
            "items": {
              "$ref": "../../commonschemas/schemas.json#/MWDateOptional1"
            },
            "description": "Due Date"
          }
        },
        "description": ""
      },
      "BillingDatesType": {
        "title": "BillingDatesType",
        "type": "object",
        "properties": {
          "billingDate": {
            "type": "array",
            "items": {
              "$ref": "../../commonschemas/schemas.json#/MWDateOptional1"
            },
            "description": "Billing Date"
          }
        },
        "description": ""
      },
      "ErrorInfoType": {
        "title": "ErrorInfoType",
        "type": "object",
        "properties": {
          "reject": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RejectType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_CashBackTransactionsRequest": {
        "title": "tns_CashBackTransactionsRequest",
        "required": [
          "accountId",
          "transactionType"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "transactionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_transactionType2"
              },
              {
                "description": "BIANNUALCYCLE, STATEMENTDATE ,CYCLETODATE, CTD"
              }
            ]
          },
          "transcationId": {
            "type": "string"
          },
          "transaction": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "statementDate": {
            "pattern": "([0-9]){8}",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CashBackTransactionsResponse": {
        "title": "tns_CashBackTransactionsResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CashBackType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CashBackType": {
        "title": "tns_CashBackType",
        "type": "object",
        "properties": {
          "biAnnualRecord": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_BiAnnualRecordType"
            },
            "description": ""
          },
          "cycleOrStatementRecord": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_CycleOrStatementRecordType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_BiAnnualRecordType": {
        "title": "tns_BiAnnualRecordType",
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "statementDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "openingBalance": {
            "type": "number"
          },
          "patrnerMerchants": {
            "type": "string"
          },
          "commonPool": {
            "type": "string"
          },
          "redeemPartnerMerchants": {
            "type": "string"
          },
          "redeemCommonPool": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CycleOrStatementRecordType": {
        "title": "tns_CycleOrStatementRecordType",
        "type": "object",
        "properties": {
          "transactionDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "transactionDescription": {
            "type": "string"
          },
          "transactionAmount": {
            "type": "number"
          },
          "partnerMerchants": {
            "type": "string"
          },
          "cashBackType": {
            "type": "string"
          },
          "commonPool": {
            "type": "string"
          }
        },
        "description": ""
      },
      "AccountType1": {
        "title": "AccountType1",
        "type": "object",
        "properties": {
          "AccID": {
            "$ref": "../../commonschemas/schemas.json#/AccountIdOptional"
          },
          "OpenDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1"
          },
          "CurrentBalace": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "default": 0.0
          },
          "AverageSixMonth": {
            "type": "string"
          },
          "OLDCardNumber": {
            "$ref": "../../commonschemas/schemas.json#/EncryptedText"
          },
          "CIF": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "CustomerNo": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          }
        },
        "description": ""
      },
      "AccountInformationType1": {
        "title": "AccountInformationType1",
        "required": [
          "accID",
          "openDate",
          "currentBalance",
          "averageSixMonth",
          "type",
          "oldCardNumber"
        ],
        "type": "object",
        "properties": {
          "accID": {
            "$ref": "../../commonschemas/schemas.json#/AccountIdOptional"
          },
          "openDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1"
          },
          "currentBalance": {
            "$ref": "../../commonschemas/schemas.json#/Amount"
          },
          "averageSixMonth": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "oldCardNumber": {
            "$ref": "../../commonschemas/schemas.json#/EncryptedText"
          }
        },
        "description": ""
      },
      "RejectType": {
        "title": "RejectType",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": ""
      },
      "RetrieveTablesType": {
        "title": "RetrieveTablesType",
        "description": "Retrieve Tables Type",
        "type": "object",
        "properties": {
          "type": {
            "type": "array",
            "description": "TYPE",
            "items": {
              "$ref": "#/components/schemas/TableType"
            }
          },
          "segment": {
            "type": "array",
            "description": "SEGMENT",
            "items": {
              "$ref": "#/components/schemas/SegmentsType"
            }
          },
          "relation": {
            "type": "array",
            "description": "RELATION",
            "items": {
              "$ref": "#/components/schemas/RelationType"
            }
          },
          "reason": {
            "type": "array",
            "description": "REASON",
            "items": {
              "$ref": "#/components/schemas/TableType"
            }
          },
          "record": {
            "type": "array",
            "description": "RECORD",
            "items": {
              "$ref": "#/components/schemas/TableType"
            }
          }
        }
      },
      "CardActivateRequestType": {
        "title": "CardActivateRequestType",
        "required": [
          "cardId"
        ],
        "type": "object",
        "properties": {
          "cardId": {
            "$ref": "../../commonschemas/schemas.json#/EncryptedText"
          }
        },
        "description": ""
      },
      "CardActivateResponseType": {
        "title": "CardActivateResponseType",
        "type": "object",
        "properties": {
          "CardActivate": {
            "$ref": "#/components/schemas/cardActivateType"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "cardActivateType": {
        "title": "cardActivateType",
        "required": [
          "refNumber"
        ],
        "type": "object",
        "properties": {
          "refNumber": {
            "type": "string"
          }
        },
        "description": ""
      },
      "CardBlockRequestType": {
        "title": "CardBlockRequest",
        "required": [
          "cardId",
          "reason"
        ],
        "type": "object",
        "properties": {
          "cardId": {
            "$ref": "../../commonschemas/schemas.json#/EncryptedText"
          },
          "reason": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "description": "Changes to identify if card is being blocked/frozen based on uunifiedd flow discussion"
          },
          "processorTellerId": {
            "type": "string",
            "description": "ID of the Teller Processing the Action"
          },
          "processorTellerName": {
            "type": "string",
            "description": "Name of the Teller Processing the Action"
          },
          "approverTellerId": {
            "type": "string",
            "description": "ID of the Teller Approving the Action"
          },
          "approverTellerName": {
            "type": "string",
            "description": "Name of the Teller Approving the Action"
          },
          "updateTokenStatus": {
            "type": "string",
            "description": "\"Y\" in case token should be updated on block card and \"N\" in case token update need to be skipped"
          }
        },
        "description": ""
      },
      "CardBlockResponseType": {
        "title": "CardBlockResponse",
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/components/schemas/cardBlockType"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "cardBlockType": {
        "title": "CardBlockType",
        "type": "object",
        "properties": {
          "notificationMessage": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_MerchantStatementDetailsRequest": {
        "title": "tns_MerchantStatementDetailsRequest",
        "required": [
          "merchantId"
        ],
        "type": "object",
        "properties": {
          "merchantId": {
            "type": "string"
          },
          "fromDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "toDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "pageNumber": {
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "transactionNumber": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_MerchantStatementDetailsResponse": {
        "title": "tns_MerchantStatementDetailsResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_MerchantStatementType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_MerchantStatementType": {
        "title": "tns_MerchantStatementType",
        "type": "object",
        "properties": {
          "record": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_RecordTransactionType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_RecordTransactionType": {
        "title": "tns_RecordTransactionType",
        "type": "object",
        "properties": {
          "recordNumber": {
            "type": "integer",
            "format": "int32"
          },
          "merchantId": {
            "type": "string"
          },
          "transactionNumber": {
            "type": "integer",
            "format": "int32"
          },
          "merchantAccountNumber": {
            "type": "string"
          },
          "creditCardNumber": {
            "pattern": "[a-zA-Z0-9]{16}",
            "type": "string"
          },
          "transactionDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "transationType": {
            "type": "string"
          },
          "transactionDescription": {
            "type": "string"
          },
          "transactionAmount": {
            "type": "number"
          },
          "transactionsOrderIdentification": {
            "type": "string"
          }
        },
        "description": ""
      },
      "ScheduleType": {
        "title": "ScheduleType",
        "required": [
          "paymentType",
          "debitType",
          "cycle"
        ],
        "type": "object",
        "properties": {
          "paymentType": {
            "$ref": "#/components/schemas/paymentType"
          },
          "debitType": {
            "$ref": "../../commonschemas/schemas.json#/YorNType"
          },
          "cycle": {
            "maximum": 99.0,
            "minimum": 1.0,
            "type": "integer",
            "format": "int32"
          }
        },
        "description": ""
      },
      "paymentType": {
        "title": "paymentType",
        "enum": [
          "M",
          "F"
        ],
        "type": "string",
        "description": "Possible values are â€œMâ€ or â€œFâ€ (M = Minimum, F = Full)"
      },
      "CreditCardDateOptional": {
        "title": "CreditCardDateOptional",
        "type": "string",
        "pattern": "([0-9]){6}|()"
      },
      "tns_ChangeCreditCardPaymentMethodRequest": {
        "title": "tns_ChangeCreditCardPaymentMethodRequest",
        "required": [
          "cardId",
          "schedule"
        ],
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string"
          },
          "schedule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScheduleType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_ChangeCreditCardPaymentMethodResponse": {
        "title": "tns_ChangeCreditCardPaymentMethodResponse",
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "DisplayCardPINRequestType": {
        "title": "DisplayCardPINRequestType",
        "required": [
          "cardNumber"
        ],
        "type": "object",
        "properties": {
          "cardNumber": {
            "$ref": "../../commonschemas/schemas.json#/EncryptedText"
          }
        },
        "description": ""
      },
      "DisplayCardPINResponseType": {
        "title": "DisplayCardPINResponseType",
        "type": "object",
        "properties": {
          "cardPIN": {
            "$ref": "#/components/schemas/PINType"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        },
        "description": ""
      },
      "PINType": {
        "title": "PINType",
        "required": [
          "PIN"
        ],
        "type": "object",
        "properties": {
          "PIN": {
            "$ref": "../../commonschemas/schemas.json#/EncryptedText"
          }
        },
        "description": ""
      },
      "tns_IDExpiryDateRequest": {
        "title": "tns_IDExpiryDateRequest",
        "required": [
          "cardNumber",
          "IDExpiryDate"
        ],
        "type": "object",
        "properties": {
          "cardNumber": {
            "type": "string"
          },
          "IDExpiryDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_IDExpiryDateResponse": {
        "title": "tns_IDExpiryDateResponse",
        "type": "object",
        "properties": {
          "IDExpiryDate": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_IDExpiryDateType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_IDExpiryDateType": {
        "title": "tns_IDExpiryDateType",
        "required": [
          "success"
        ],
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreditCardOTPSMSRequest": {
        "title": "tns_CreditCardOTPSMSRequest",
        "required": [
          "mobileNumber",
          "creditCardNo",
          "sMSText",
          "oTPNumber",
          "preferredLanguage",
          "oTPLength",
          "keyIndicator"
        ],
        "type": "object",
        "properties": {
          "mobileNumber": {
            "type": "string"
          },
          "creditCardNo": {
            "type": "string"
          },
          "sMSText": {
            "type": "string"
          },
          "oTPNumber": {
            "type": "string"
          },
          "preferredLanguage": {
            "type": "string"
          },
          "oTPLength": {
            "type": "string"
          },
          "keyIndicator": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreditCardOTPSMSResponse": {
        "title": "tns_CreditCardOTPSMSResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardOTPSMSType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditCardOTPSMSType": {
        "title": "tns_CreditCardOTPSMSType",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardSMSOTPResponseType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditCardSMSOTPResponseType": {
        "title": "tns_CreditCardSMSOTPResponseType",
        "type": "object",
        "properties": {
          "successDescription": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreditCardSMSNotifyRequest": {
        "title": "tns_CreditCardSMSNotifyRequest",
        "required": [
          "mobileNumber",
          "creditCardNo",
          "merchantName",
          "transactionAmount",
          "transactionDate",
          "transactionTime",
          "sMSIndicator",
          "approvalNumber",
          "currency",
          "availableBalance"
        ],
        "type": "object",
        "properties": {
          "mobileNumber": {
            "type": "string"
          },
          "creditCardNo": {
            "type": "string"
          },
          "merchantName": {
            "type": "string"
          },
          "transactionAmount": {
            "type": "number"
          },
          "transactionDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "transactionTime": {
            "pattern": "([0-9]){4}|([0-9]){6}|()",
            "type": "string"
          },
          "sMSIndicator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_smsIndicatorType"
              }
            ]
          },
          "approvalNumber": {
            "type": "string"
          },
          "currency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          },
          "availableBalance": {
            "type": "number"
          }
        },
        "description": ""
      },
      "tns_smsIndicatorType": {
        "title": "tns_smsIndicatorType",
        "enum": [
          "NONE",
          "DETAILED",
          "PROMOTIONAL"
        ],
        "type": "string",
        "description": "00 NONE\r\n\t\t\t\t01 DETAILED\r\n\t\t\t\t99 PROMOTIONAL"
      },
      "tns_CreditCardSMSNotifyResponse": {
        "title": "tns_CreditCardSMSNotifyResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardSMSNotifyResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditCardSMSNotifyResponseType": {
        "title": "tns_CreditCardSMSNotifyResponseType",
        "type": "object",
        "properties": {
          "successDescription": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreateCreditCardPINResponseType": {
        "title": "tns_CreateCreditCardPINResponseType",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_successType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreateCreditCardPINType": {
        "title": "tns_CreateCreditCardPINType",
        "required": [
          "creditCardNo",
          "newPINBlock"
        ],
        "type": "object",
        "properties": {
          "creditCardNo": {
            "type": "string"
          },
          "newPINBlock": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PINType"
              }
            ]
          },
          "updatePinMailerFlag": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "This request type contains 2 params: CreditCardNo\r\n\t\t\t\tand New PIN for this particular credit card"
      },
      "tns_GetCreditCardAccountDetailsResponseType": {
        "title": "tns_GetCreditCardAccountDetailsResponseType",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetCreditCardAccountDetailsResponseSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GetCreditCardAccountDetailsRequestType": {
        "title": "tns_GetCreditCardAccountDetailsRequestType",
        "required": [
          "body"
        ],
        "type": "object",
        "properties": {
          "body": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardAccoutDetailBodyType"
              }
            ]
          }
        },
        "description": "This request type contains 2 params: CreditCardNo\r\n\t\t\t\tand New PIN for this particular credit card"
      },
      "tns_UpdateCreditCardCollectionStatusResponseType": {
        "title": "tns_UpdateCreditCardCollectionStatusResponseType",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_UpdateCreditCardCollectionStatusResponseSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_UpdateCreditCardCollectionStatusRequestType": {
        "title": "tns_UpdateCreditCardCollectionStatusRequestType",
        "required": [
          "body"
        ],
        "type": "object",
        "properties": {
          "body": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_UpdateCreditCardCollectionStatusBodyType"
              }
            ]
          }
        },
        "description": "This request type contains 2 params: CreditCardNo\r\n\t\t\t\tand New PIN for this particular credit card"
      },
      "tns_successType": {
        "title": "tns_successType",
        "type": "object",
        "properties": {
          "bankCode": {
            "type": "string"
          },
          "messageDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "messageTime": {
            "pattern": "([0-9]){4}|([0-9]){6}|()",
            "type": "string"
          },
          "messageReferenceNumber": {
            "type": "string"
          },
          "creditCardNo": {
            "type": "string"
          },
          "posEntryMode": {
            "type": "string"
          },
          "existingPINBlock": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PINType"
              }
            ]
          },
          "newPINBlock": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PINType"
              }
            ]
          },
          "pinChangeScript": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_GetCreditCardAccountDetailsResponseSuccessType": {
        "title": "tns_GetCreditCardAccountDetailsResponseSuccessType",
        "type": "object",
        "properties": {
          "body": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetCreditCardAccountDetailsResponseBodyType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_UpdateCreditCardCollectionStatusResponseSuccessType": {
        "title": "tns_UpdateCreditCardCollectionStatusResponseSuccessType",
        "type": "object",
        "properties": {
          "body": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_UpdateCreditCardCollectionStatusResponseBodyType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditCardAccoutDetailBodyType": {
        "title": "tns_CreditCardAccoutDetailBodyType",
        "required": [
          "DDAccountNumber",
          "CCAccountNumber",
          "COLFileNumber"
        ],
        "type": "object",
        "properties": {
          "DDAccountNumber": {
            "type": "string"
          },
          "CCAccountNumber": {
            "type": "string"
          },
          "COLFileNumber": {
            "type": "string"
          },
          "virtualPan": {
            "type": "string"
          },
          "clear": {
            "type": "string"
          },
          "encrypted": {
            "type": "string"
          },
          "customerCode": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_UpdateCreditCardCollectionStatusBodyType": {
        "title": "tns_UpdateCreditCardCollectionStatusBodyType",
        "required": [
          "DDAccountNumber",
          "CCAccountNumber",
          "COLFileNumber",
          "virtualPan",
          "clear",
          "encrypted",
          "customerCode",
          "newStatusCode",
          "actionDate",
          "actionAmount",
          "reviewdate",
          "reviewTime",
          "userNote"
        ],
        "type": "object",
        "properties": {
          "DDAccountNumber": {
            "type": "string"
          },
          "CCAccountNumber": {
            "type": "string"
          },
          "COLFileNumber": {
            "type": "string"
          },
          "virtualPan": {
            "type": "string"
          },
          "clear": {
            "type": "string"
          },
          "encrypted": {
            "type": "string"
          },
          "customerCode": {
            "type": "string"
          },
          "newStatusCode": {
            "type": "string"
          },
          "actionDate": {
            "type": "string"
          },
          "actionAmount": {
            "type": "string"
          },
          "reviewdate": {
            "type": "string"
          },
          "reviewTime": {
            "type": "string"
          },
          "userNote": {
            "type": "string"
          },
          "userMemo": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_GetCreditCardAccountDetailsResponseBodyType": {
        "title": "tns_GetCreditCardAccountDetailsResponseBodyType",
        "type": "object",
        "properties": {
          "accountNumberStatusCode": {
            "type": "string"
          },
          "cashAvailable": {
            "type": "string"
          },
          "behaviorScore": {
            "type": "string"
          },
          "IDNumber": {
            "type": "string"
          },
          "IDExpiryDate": {
            "type": "string"
          },
          "forsanIdNumber": {
            "type": "string"
          },
          "amyaliIdNumber": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "faxNumber": {
            "type": "string"
          },
          "mobileNumber": {
            "type": "string"
          },
          "mobileNumber2": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_UpdateCreditCardCollectionStatusResponseBodyType": {
        "title": "tns_UpdateCreditCardCollectionStatusResponseBodyType",
        "type": "object",
        "description": ""
      },
      "tns_CreditCardListByIdRequest": {
        "title": "tns_CreditCardListByIdRequest",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "pageNumber": {
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "pass flag, value, ex. If flag=01, value=14,\r\n\t\t\t\t\t\t\tonly return approved applications pending\r\n\t\t\t\t\t\t\tfor printing since last\r\n\t\t\t\t\t\t\t14 days after\r\n\t\t\t\t\t\t\tapproval, without filters return all the\r\n\t\t\t\t\t\t\tapplications."
          },
          "numberOfDays": {
            "type": "integer",
            "description": "pass flag, value, ex. If flag=01, value=14,\r\n\t\t\t\t\t\t\tonly return approved applications pending\r\n\t\t\t\t\t\t\tfor printing since last\r\n\t\t\t\t\t\t\t14 days after\r\n\t\t\t\t\t\t\tapproval, without filters return all the\r\n\t\t\t\t\t\t\tapplications.",
            "format": "int32"
          },
          "cif": {
            "pattern": "([0-9]){14}|([0]){1}|()",
            "type": "string"
          },
          "maskBalance": {
            "type": "boolean"
          }
        },
        "description": "This method is used to fetch the details of credi\r\n\t\t\t\tcard by ID and pageNumber"
      },
      "tns_CreditCardListByIdResponse": {
        "title": "tns_CreditCardListByIdResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardListByIdType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditCardListByIdType": {
        "title": "tns_CreditCardListByIdType",
        "required": [
          "uniqueId",
          "messageDate",
          "messageTime",
          "id",
          "pageNumber"
        ],
        "type": "object",
        "properties": {
          "uniqueId": {
            "type": "string"
          },
          "messageDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "messageTime": {
            "pattern": "([0-9]){4}|([0-9]){6}|()",
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "pageNumber": {
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "record": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_recordType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_recordType": {
        "title": "tns_recordType",
        "required": [
          "no",
          "orgNo",
          "logo",
          "creditCardNumber",
          "embosserName",
          "accountNumber",
          "expiryDate",
          "cardBlockCode",
          "cardBlockDate",
          "limit",
          "accountBlockCode1",
          "accountBlockDate1",
          "accountBlockCode2",
          "accountBlockDate2",
          "active",
          "cardType",
          "cardTypeDescription",
          "group",
          "groupDescription",
          "status"
        ],
        "type": "object",
        "properties": {
          "no": {
            "type": "string"
          },
          "orgNo": {
            "type": "integer",
            "format": "int32"
          },
          "logo": {
            "type": "integer",
            "format": "int32"
          },
          "creditCardNumber": {
            "type": "string"
          },
          "embosserName": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          },
          "expiryDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "cardBlockCode": {
            "type": "string"
          },
          "cardBlockDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "accountBlockCode1": {
            "type": "string"
          },
          "accountBlockDate1": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "accountBlockCode2": {
            "type": "string"
          },
          "accountBlockDate2": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "active": {
            "type": "string"
          },
          "cardType": {
            "type": "string"
          },
          "cardTypeDescription": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "groupDescription": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "statusDescription": {
            "type": "string"
          },
          "accountLimit": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "tokenReferenceId": {
            "maxLength": 10,
            "type": "string"
          },
          "balance": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "paymentDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "paymentType": {
            "type": "string"
          },
          "delinquencyLevel": {
            "type": "string"
          },
          "dueBalance": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "samaStatus": {
            "type": "string"
          },
          "accountStatus": {
            "type": "string"
          },
          "fursanMembershipNumber": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreditCardPrepaidApplicationInquiryDetailRequest": {
        "title": "tns_CreditCardPrepaidApplicationInquiryDetailRequest",
        "type": "object",
        "properties": {
          "orgNo": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "applicationNumber": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "shortCIF": {
            "pattern": "([0-9]){8}|([0]){1}|()",
            "type": "string"
          },
          "applicationIsNew": {
            "type": "boolean",
            "default": false
          }
        },
        "description": ""
      },
      "tns_CreditCardPrepaidApplicationInquiryDetailResponse": {
        "title": "tns_CreditCardPrepaidApplicationInquiryDetailResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardPrepaidApplicationInquiryDetail_Type"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_prepaidApplicationProcessingDetailsType": {
        "title": "tns_prepaidApplicationProcessingDetailsType",
        "type": "object",
        "properties": {
          "applicationStatus": {
            "type": "string",
            "description": "ApplicationStatus"
          },
          "processControl": {
            "type": "string",
            "description": "ProcessControl",
            "default": "PPD"
          },
          "processStage": {
            "type": "string",
            "description": "ProcessStage"
          },
          "processStageStatus": {
            "type": "string",
            "description": "ProcessStageStatus"
          },
          "score": {
            "type": "string",
            "description": "Score"
          },
          "externalScore": {
            "type": "string",
            "description": "ExternalScore"
          },
          "requestedLimit": {
            "type": "string",
            "description": "RequestedLimit"
          },
          "suggestedLimit": {
            "type": "string",
            "description": "SuggestedLimit"
          },
          "assignedLimit": {
            "type": "string",
            "description": "AssignedLimit",
            "default": "0"
          },
          "eligibilityCheckResult": {
            "type": "string",
            "description": "EligibilityCheckResult"
          },
          "eligibilityCheckDescription": {
            "type": "string",
            "description": "EligibilityCheckDescription"
          }
        },
        "description": ""
      },
      "tns_CreditCardPrepaidApplicationInquiryDetail_Type": {
        "title": "tns_CreditCardPrepaidApplicationInquiryDetail_Type",
        "type": "object",
        "properties": {
          "applicationInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_applicationInformation"
              }
            ]
          },
          "customerInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_customerInformation"
              }
            ]
          },
          "segmentInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_segmentInformation"
              }
            ]
          },
          "residentialInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_residentialInformation"
              }
            ]
          },
          "mobileInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_mobileInformation"
              }
            ]
          },
          "employerInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_employerInformation"
              }
            ]
          },
          "accountInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_accountInformation"
              }
            ]
          },
          "settlementInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_settlementInformation"
              }
            ]
          },
          "otherInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_otherInformation"
              }
            ]
          },
          "ruleInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ruleInformation"
              }
            ]
          },
          "rejectErrorInformation": {
            "allOf": [
              {
                "oneOf": [
                  {
                    "nullable": true
                  },
                  {
                    "$ref": "#/components/schemas/tns_rejectErrorInformation"
                  }
                ]
              }
            ]
          }
        },
        "description": ""
      },
      "tns_creditBureauChecksType": {
        "title": "tns_creditBureauChecksType",
        "type": "object",
        "properties": {
          "oldIssueDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "OldIssueDate",
            "default": "00000000"
          },
          "otherPayments": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "OtherPayments"
          },
          "maxDelinquency": {
            "type": "string",
            "description": "MaxDelinquency",
            "default": "H"
          },
          "decision": {
            "type": "string",
            "description": "Decision"
          },
          "creditBureauUserData": {
            "type": "string",
            "description": "CreditBureauUserData"
          },
          "globalDBR": {
            "type": "string",
            "description": "GlobalDBR"
          },
          "productNormalDBR": {
            "type": "string",
            "description": "ProductNormalDBR",
            "default": "H"
          },
          "employmentIndicator": {
            "type": "string",
            "description": "EmploymentIndicator"
          }
        },
        "description": ""
      },
      "affordabilityRequestDetailsListType": {
        "title": "affordabilityRequestDetailsListType",
        "type": "object",
        "properties": {
          "affordabilityDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/affordabilityRequestDetailsType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "affordabilityRequestDetailsType": {
        "title": "affordabilityRequestDetailsType",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Affordability field code"
          },
          "value": {
            "type": "string",
            "description": "Affordability field value"
          },
          "isVerified": {
            "type": "boolean",
            "description": "To specify if the affordability field is\r\n\t\t\t\t\t\tverified"
          }
        },
        "description": ""
      },
      "CardDeliveryDetailsType": {
        "title": "CardDeliveryDetailsType",
        "type": "object",
        "properties": {
          "sameDayDeliveryFlag": {
            "type": "string",
            "description": "Flag indicating if the card should be delivered in the same day or not. \n sameDayDeliveryFlag can have value - Y, - N"
          },
          "deliveryDate": {
            "$ref": "../../commonschemas/schemas.json#/DateOptional",
            "description": "Date used for card delivery to the customer Format: yyyy-MM-dd"
          },
          "deliveryTime": {
            "$ref": "../../commonschemas/schemas.json#/MWTimeOptional",
            "description": "Time used for card delivery to the customer Foramt :HHmmss \n HH is the current hour in24,MM are the minutes, SS are the seconds"
          },
          "addressType": {
            "type": "string",
            "description": "Address Type"
          }
        },
        "description": ""
      },
      "tns_CreditCardPrepaidApplicationCreateRequest": {
        "title": "tns_CreditCardPrepaidApplicationCreateRequest",
        "type": "object",
        "properties": {
          "applicationInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_prepaidApplicationInformationType"
              }
            ]
          },
          "applicationProcessingDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_prepaidApplicationProcessingDetailsType"
              }
            ]
          },
          "customerInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_prepaidCustomerInformationType"
              }
            ]
          },
          "residentialInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_prepaidResidentialInformationType"
              }
            ]
          },
          "employerInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_prepaidEmployerInformationType"
              }
            ]
          },
          "accountInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_prepaidAccountInformationType"
              }
            ]
          },
          "settlementInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_prepaidSettlementInformationType"
              }
            ]
          },
          "otherInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_prepaidOtherInformationType"
              }
            ]
          },
          "creditBureauChecks": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_creditBureauChecksType"
              }
            ]
          },
          "affordabilityDetailsList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/affordabilityRequestDetailsListType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_prepaidApplicationInformationType": {
        "title": "tns_prepaidApplicationInformationType",
        "required": [
          "orgNo",
          "logo",
          "deliveryMethod",
          "channelSource"
        ],
        "type": "object",
        "properties": {
          "institutionCode": {
            "type": "string",
            "default": "NCB"
          },
          "applicationNumber": {
            "type": "string"
          },
          "externalApplicationNumber": {
            "type": "string"
          },
          "applicationType": {
            "type": "string",
            "default": "1"
          },
          "entityCode": {
            "type": "string"
          },
          "orgNo": {
            "type": "string"
          },
          "applicationDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "branchNumber": {
            "type": "string"
          },
          "deliveryMethod": {
            "type": "string"
          },
          "deliveryBranchCode": {
            "type": "string"
          },
          "programCode": {
            "type": "string"
          },
          "campaignCode": {
            "type": "string"
          },
          "plastic": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "channelSource": {
            "type": "string"
          },
          "salesSourceCode": {
            "type": "string"
          },
          "pinMailerIndicator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_PinMailerIndicatorType"
              }
            ]
          },
          "cardPIN": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PINType"
              }
            ]
          },
          "deliveryOption": {
            "type": "string",
            "description": "SP: Saudi Post\r\n\t\t\t\t\t\tFC: Fast courier\r\n\t\t\t\t\t\tKC: Kiosk Center"
          },
          "deliveryAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DeliveryAddressType"
              }
            ]
          },
          "isPlastic": {
            "type": "boolean"
          }
        },
        "description": ""
      },
      "tns_prepaidCustomerInformationType": {
        "title": "tns_prepaidCustomerInformationType",
        "required": [
          "title",
          "firstName",
          "familyName",
          "fullName",
          "embosserName",
          "dateOfBirth",
          "age",
          "marital",
          "dependents",
          "id",
          "idDateOfExpiry",
          "nationalityCode",
          "occupation",
          "educationLevel"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "firstName": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string"
          },
          "secondName": {
            "type": "string"
          },
          "thirdName": {
            "type": "string"
          },
          "familyName": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string"
          },
          "fullName": {
            "maxLength": 75,
            "minLength": 0,
            "type": "string"
          },
          "embosserName": {
            "type": "string"
          },
          "placeOfBirth": {
            "type": "string"
          },
          "dateOfBirth": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "localizedDateOfBirth": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "age": {
            "type": "integer",
            "format": "int32"
          },
          "gender": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Gender"
              }
            ]
          },
          "marital": {
            "type": "string"
          },
          "dependents": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "idDateOfExpiry": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "nationalityCode": {
            "type": "string"
          },
          "idType": {
            "type": "string"
          },
          "occupation": {
            "type": "string"
          },
          "educationLevel": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_prepaidResidentialInformationType": {
        "title": "tns_prepaidResidentialInformationType",
        "required": [
          "commercialRegNo",
          "addressRole",
          "address1",
          "address2",
          "cityCode",
          "poBox",
          "postalCode",
          "county",
          "ownershipType",
          "phoneArea",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "commercialRegNo": {
            "type": "string"
          },
          "addressType": {
            "type": "string"
          },
          "addressType2": {
            "type": "string"
          },
          "addressRole": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "address3": {
            "type": "string"
          },
          "address4": {
            "type": "string"
          },
          "address5": {
            "type": "string"
          },
          "directions": {
            "type": "string"
          },
          "cityCode": {
            "type": "string"
          },
          "poBox": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "province": {
            "type": "string"
          },
          "territory": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "county": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "ownershipType": {
            "type": "string"
          },
          "phoneArea": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "mobileNumber": {
            "pattern": "[0-9]{9,15}|()",
            "type": "string"
          },
          "mobileNumber2": {
            "pattern": "[0-9]{9,15}|()",
            "type": "string"
          },
          "faxNumber": {
            "type": "string"
          },
          "district": {
            "type": "string"
          },
          "emailAddress": {
            "pattern": "([a-zA-Z0-9_\\-])([a-zA-Z0-9_\\-\\.]*)@(\\[((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}|((([a-zA-Z0-9\\-]+)\\.)+))([a-zA-Z]{2,}|(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\])|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_prepaidEmployerInformationType": {
        "title": "tns_prepaidEmployerInformationType",
        "required": [
          "status",
          "salary",
          "lengthOfServiceYears",
          "lengthOfServiceMonths",
          "phoneArea"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "activity": {
            "type": "string"
          },
          "salary": {
            "maxLength": 17,
            "pattern": "([0-9]){17}",
            "type": "string"
          },
          "otherIncome": {
            "maxLength": 17,
            "pattern": "([0-9]){17}|()",
            "type": "string"
          },
          "totalIncome": {
            "maxLength": 17,
            "pattern": "([0-9]){17}|()",
            "type": "string"
          },
          "lengthOfServiceYears": {
            "type": "string"
          },
          "lengthOfServiceMonths": {
            "type": "string"
          },
          "phoneArea": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "phoneExt": {
            "type": "string"
          },
          "faxArea": {
            "type": "string"
          },
          "employerAddress": {
            "type": "string"
          },
          "faxNumber": {
            "type": "string"
          },
          "cityCode": {
            "type": "string"
          },
          "mobileNumber": {
            "pattern": "[0-9]{9,15}|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_prepaidAccountInformationType": {
        "title": "tns_prepaidAccountInformationType",
        "required": [
          "accountId",
          "creditAccountNumber",
          "type"
        ],
        "type": "object",
        "properties": {
          "assetsBalance": {
            "type": "string"
          },
          "insuranceBalance": {
            "type": "string"
          },
          "cif": {
            "pattern": "([0-9]){14}|([0]){1}|()",
            "type": "string"
          },
          "accountId": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_currencyType"
              }
            ]
          },
          "requestedCurrencyList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_requestedCurrencyListType"
              },
              {
                "description": "Single installment amount to be paid each month\r\n\t\t\t\t\t\tin case this option is selected to convert the\r\n\t\t\t\t\t\ttransaction to\r\n\t\t\t\t\t\tpayment plan"
              }
            ]
          },
          "creditAccountNumber": {
            "type": "string"
          },
          "openDate": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "currentBalance": {
            "maxLength": 17,
            "pattern": "([0-9]){17}|()",
            "type": "string"
          },
          "averageSixMonth": {
            "type": "string"
          },
          "type": {
            "maxLength": 4,
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_prepaidSettlementInformationType": {
        "title": "tns_prepaidSettlementInformationType",
        "required": [
          "paymentMethod",
          "billingCycle",
          "autoDebit"
        ],
        "type": "object",
        "properties": {
          "paymentMethod": {
            "type": "string"
          },
          "billingCycle": {
            "type": "string"
          },
          "autoDebit": {
            "type": "string"
          },
          "cardDesign": {
            "type": "string"
          },
          "amountToDeposit": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_prepaidOtherInformationType": {
        "title": "tns_prepaidOtherInformationType",
        "type": "object",
        "properties": {
          "eCommerce": {
            "type": "string"
          },
          "numberOfCards": {
            "type": "string"
          },
          "bank": {
            "type": "string",
            "default": "0001"
          },
          "otherBankDescription": {
            "type": "string"
          },
          "pctId": {
            "type": "string",
            "default": "MP1"
          },
          "cardFeeOption": {
            "type": "string",
            "default": "0"
          },
          "applicationSigned": {
            "type": "string",
            "default": "Y"
          },
          "idDocProvided": {
            "type": "string",
            "default": "Y"
          },
          "sufficientFunds": {
            "type": "string",
            "default": "Y"
          },
          "depositVoucherProvided": {
            "type": "string",
            "default": "Y"
          },
          "kycProvided": {
            "type": "string",
            "default": "Y"
          },
          "phoneNoProvided": {
            "type": "string",
            "default": "Y"
          },
          "poBoxProvided": {
            "type": "string",
            "default": "Y"
          },
          "photocopyCardProvided": {
            "type": "string",
            "default": "0"
          },
          "countryAddress1": {
            "type": "string"
          },
          "countryAddress2": {
            "type": "string"
          },
          "countryCity": {
            "type": "string"
          },
          "countryPOBox": {
            "type": "string"
          },
          "countryZip": {
            "type": "string"
          },
          "countryTelephoneNo": {
            "type": "string"
          },
          "countryFax": {
            "type": "string"
          },
          "nonNCBBank": {
            "type": "string"
          },
          "statementFlag": {
            "type": "string"
          },
          "guarantyAccount": {
            "type": "string"
          },
          "guarantyAmount": {
            "type": "string"
          },
          "oldCardNumber": {
            "type": "string"
          },
          "insuranceProduct": {
            "type": "string"
          },
          "socialCode": {
            "type": "string"
          },
          "jobGrade": {
            "type": "string"
          },
          "flags": {
            "allOf": [
              {
                "$ref": "#/components/schemas/flagsType"
              },
              {
                "description": "Flag list to be updated if any. Each position\r\n\t\t\t\t\t\tindicates a specific flag"
              }
            ]
          },
          "checkFlags": {
            "allOf": [
              {
                "$ref": "#/components/schemas/checkFlagsType"
              },
              {
                "description": "Check flag list to be updated if any. Each\r\n\t\t\t\t\t\tposition indicates a specific check flag"
              }
            ]
          },
          "utilityBillProvided": {
            "type": "string",
            "default": "Y"
          },
          "regDocProvided": {
            "type": "string",
            "default": "Y"
          },
          "customerVerification": {
            "type": "string",
            "default": "Y"
          },
          "employerVerification": {
            "type": "string",
            "default": "Y"
          },
          "existingNCBCard": {
            "type": "string",
            "default": "N"
          },
          "installmentAmount": {
            "type": "string",
            "default": "0"
          },
          "wessamSixMonths": {
            "type": "string",
            "default": "N"
          },
          "applicantName": {
            "type": "string",
            "default": "0"
          },
          "applicantIDNumber": {
            "type": "string",
            "default": "0"
          },
          "applicantIDExpiryDate": {
            "type": "string",
            "default": "00000000"
          },
          "applicantPhoneNumber": {
            "type": "string",
            "default": "0"
          },
          "applicantMobileNumber": {
            "type": "string",
            "default": "0"
          },
          "applicantIDCopy": {
            "type": "string",
            "default": "0"
          },
          "maker": {
            "type": "string"
          },
          "managerCode": {
            "type": "string"
          },
          "referredTo": {
            "type": "string"
          },
          "userData2": {
            "type": "string"
          },
          "referralReason": {
            "type": "string"
          },
          "isNCBStaff": {
            "type": "string"
          },
          "fursanMembershipNumber": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreditCardPrepaidApplicationCreateResponse": {
        "title": "tns_CreditCardPrepaidApplicationCreateResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardPrepaidApplicationCreateResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditCardPrepaidApplicationCreateResponseType": {
        "title": "tns_CreditCardPrepaidApplicationCreateResponseType",
        "type": "object",
        "properties": {
          "applicationInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_applicationInformation1"
              }
            ]
          },
          "affordabilityDetailsList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AffordabilityResponseDetailsListType"
              }
            ]
          },
          "rejectInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_prepaidRejectErrorInformationType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "AffordabilityResponseDetailsListType": {
        "title": "AffordabilityResponseDetailsListType",
        "type": "object",
        "properties": {
          "affordabilityDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AffordabilityResponseDetailsType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "AffordabilityResponseDetailsType": {
        "title": "AffordabilityResponseDetailsType",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "initialValue": {
            "type": "string"
          },
          "simahValue": {
            "type": "string"
          },
          "finalValue": {
            "type": "string"
          },
          "isVerified": {
            "type": "boolean"
          }
        },
        "description": ""
      },
      "tns_prepaidRejectErrorInformationType": {
        "title": "tns_prepaidRejectErrorInformationType",
        "type": "object",
        "properties": {
          "rejectCode": {
            "type": "string"
          },
          "rejectType": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreditCardPrepaidApplicationUpdateRequest": {
        "title": "tns_CreditCardPrepaidApplicationUpdateRequest",
        "type": "object",
        "properties": {
          "applicationInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_prepaidApplicationInformationType"
              }
            ]
          },
          "customerInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_prepaidCustomerInformationType"
              }
            ]
          },
          "residentialInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_prepaidResidentialInformationType"
              }
            ]
          },
          "employerInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_prepaidEmployerInformationType"
              }
            ]
          },
          "accountInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_prepaidAccountInformationType"
              }
            ]
          },
          "settlementInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_prepaidSettlementInformationType"
              }
            ]
          },
          "otherInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_prepaidOtherInformationType"
              }
            ]
          },
          "creditBureauChecks": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_creditBureauChecksType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditCardPrepaidApplicationUpdateResponse": {
        "title": "tns_CreditCardPrepaidApplicationUpdateResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardPrepaidApplicationCreateResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditCardSupplementaryCreateRequest": {
        "title": "tns_CreditCardSupplementaryCreateRequest",
        "required": [
          "creditCardNumber",
          "embosserName",
          "dateOfBirth",
          "placeOfBirth",
          "limit",
          "fullName",
          "suppId",
          "suppIdExpiry",
          "relationship",
          "deliveryMethod",
          "pinDeliveryMethod"
        ],
        "type": "object",
        "properties": {
          "creditCardNumber": {
            "type": "string"
          },
          "embosserName": {
            "type": "string"
          },
          "dateOfBirth": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "placeOfBirth": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "fullName": {
            "maxLength": 75,
            "minLength": 0,
            "type": "string"
          },
          "suppId": {
            "type": "string"
          },
          "suppIdExpiry": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "relationship": {
            "type": "string"
          },
          "deliveryMethod": {
            "type": "string"
          },
          "pinDeliveryMethod": {
            "type": "string"
          },
          "customerType": {
            "type": "string"
          },
          "cif": {
            "type": "string"
          },
          "fullNameInArabic": {
            "type": "string"
          },
          "countryOfBirth": {
            "type": "string"
          },
          "nationality": {
            "type": "string"
          },
          "mobileNumber": {
            "type": "string"
          },
          "fursanMembership": {
            "type": "string",
            "description": "Fursan Membership number of the customer holder of primary card"
          },
          "cardSupportingDocumentList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CardSupportingDocumentListType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CardSupportingDocumentListType": {
        "title": "tns_CardSupportingDocumentListType",
        "type": "object",
        "properties": {
          "cardSupportingDocument": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_CardSupportingDocumentType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_CardSupportingDocumentType": {
        "title": "tns_CardSupportingDocumentType",
        "type": "object",
        "properties": {
          "documentType": {
            "type": "string"
          },
          "documentReference1": {
            "type": "string"
          },
          "documentExpiryDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreditCardSupplementaryCreateResponse": {
        "title": "tns_CreditCardSupplementaryCreateResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardSupplementaryCreateResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditCardSupplementaryCreateResponseType": {
        "title": "tns_CreditCardSupplementaryCreateResponseType",
        "required": [
          "messageReferenceNumber",
          "messageDate",
          "messageTime",
          "embosserName",
          "creditCardNumber"
        ],
        "type": "object",
        "properties": {
          "messageReferenceNumber": {
            "type": "string"
          },
          "messageDate": {
            "type": "string"
          },
          "messageTime": {
            "type": "string"
          },
          "embosserName": {
            "type": "string"
          },
          "creditCardNumber": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreditCardReplacementRequest": {
        "title": "tns_CreditCardReplacementRequest",
        "type": "object",
        "properties": {
          "creditCardNumber": {
            "type": "string"
          },
          "blockCode": {
            "type": "string"
          },
          "embosserName": {
            "type": "string"
          },
          "dateCardFees": {
            "type": "string"
          },
          "membershipNumber": {
            "type": "string"
          },
          "cardDeliveryMethod": {
            "type": "string"
          },
          "pinDeliveryMethod": {
            "type": "string"
          },
          "fursanMembershipNumber": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreditCardReplacementResponse": {
        "title": "tns_CreditCardReplacementResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardReplacementResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditCardReplacementResponseType": {
        "title": "tns_CreditCardReplacementResponseType",
        "required": [
          "uniqueID",
          "messageDate",
          "messageTime",
          "embosserName",
          "creditCardNumber",
          "membershipNumber",
          "plasticType"
        ],
        "type": "object",
        "properties": {
          "uniqueID": {
            "type": "string"
          },
          "messageDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "messageTime": {
            "type": "string"
          },
          "embosserName": {
            "type": "string"
          },
          "creditCardNumber": {
            "type": "string"
          },
          "membershipNumber": {
            "type": "string"
          },
          "plasticType": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreditCardChangeEmbossedNameRequest": {
        "title": "tns_CreditCardChangeEmbossedNameRequest",
        "required": [
          "creditCardNumber",
          "embosserName",
          "deliveryMethod",
          "pinDeliveryMethod"
        ],
        "type": "object",
        "properties": {
          "creditCardNumber": {
            "type": "string"
          },
          "embosserName": {
            "type": "string"
          },
          "deliveryMethod": {
            "type": "string"
          },
          "pinDeliveryMethod": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreditCardChangeEmbossedNameResponse": {
        "title": "tns_CreditCardChangeEmbossedNameResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardChangeEmbossedNameResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_ChangeCreditCardEmbossedNameRequest": {
        "title": "tns_ChangeCreditCardEmbossedNameRequest",
        "required": [
          "creditCardNumber",
          "embosserName",
          "deliveryMethod",
          "pinDeliveryMethod"
        ],
        "type": "object",
        "properties": {
          "creditCardNumber": {
            "type": "string"
          },
          "embosserName": {
            "type": "string"
          },
          "deliveryMethod": {
            "type": "string"
          },
          "pinDeliveryMethod": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_ChangeCreditCardEmbossedNameResponse": {
        "title": "tns_ChangeCreditCardEmbossedNameResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardChangeEmbossedNameResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditCardChangeEmbossedNameResponseType": {
        "title": "tns_CreditCardChangeEmbossedNameResponseType",
        "required": [
          "uniqueID",
          "messageDate",
          "messageTime",
          "creditCardNumber",
          "plasticType"
        ],
        "type": "object",
        "properties": {
          "uniqueID": {
            "type": "string"
          },
          "messageDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "messageTime": {
            "type": "string"
          },
          "creditCardNumber": {
            "type": "string"
          },
          "plasticType": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreditCardApplicationUpdateRequest": {
        "title": "tns_CreditCardApplicationUpdateRequest",
        "type": "object",
        "properties": {
          "applicationInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_cardAapplicationInformationType"
              }
            ]
          },
          "customerInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_cardCustomerInformationType"
              }
            ]
          },
          "residentialInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_cardResidentialInformationType"
              }
            ]
          },
          "waselInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_cardWaselInformationType"
              }
            ]
          },
          "employerInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_cardEmployerInformationType"
              }
            ]
          },
          "accountInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_cardAccountInformationType"
              }
            ]
          },
          "financialInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_updateFinancialInformationType"
              }
            ]
          },
          "supplemetaryInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_updateSupplemetaryInformationType"
              }
            ]
          },
          "settlementInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_cardSettlementInformationType"
              }
            ]
          },
          "otherInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_cardOtherInformationType"
              }
            ]
          },
          "additionalInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_cardAdditionalInformationType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditCardApplicationUpdateResponse": {
        "title": "tns_CreditCardApplicationUpdateResponse",
        "type": "object",
        "properties": {
          "applicationInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_cardAapplicationInformationResponseType"
              }
            ]
          },
          "rejectInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_prepaidRejectErrorInformationType"
            },
            "description": ""
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_cardAapplicationInformationType": {
        "title": "tns_cardAapplicationInformationType",
        "required": [
          "orgNo",
          "logo",
          "deliveryMethod",
          "channelSource"
        ],
        "type": "object",
        "properties": {
          "orgNo": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "number": {
            "type": "string"
          },
          "branchNumber": {
            "type": "string"
          },
          "deliveryMethod": {
            "type": "string"
          },
          "employeeId": {
            "type": "string"
          },
          "campaignCode": {
            "type": "string"
          },
          "channelSource": {
            "type": "string"
          },
          "pinMailerIndicator": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_PinMailerIndicatorType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_cardWaselInformationType": {
        "title": "tns_cardWaselInformationType",
        "type": "object",
        "properties": {
          "basicNumber": {
            "type": "integer",
            "description": "Wasel Basic Number Identification",
            "format": "int32",
            "default": 0
          },
          "street": {
            "type": "string",
            "description": "Wasel Street Name"
          },
          "district": {
            "type": "string",
            "description": "Wasel District Name"
          },
          "unit": {
            "type": "string",
            "description": "Wasel Unit Number"
          },
          "zipCode1": {
            "type": "string",
            "description": "Wasel Zip Code line 1"
          },
          "zipCode2": {
            "type": "string",
            "description": "Wasel Zip Code line 2"
          }
        },
        "description": ""
      },
      "tns_cardCustomerInformationType": {
        "title": "tns_cardCustomerInformationType",
        "required": [
          "title",
          "firstName",
          "familyName",
          "fullName",
          "embosserName",
          "dateOfBirth",
          "age",
          "marital",
          "dependents",
          "id",
          "idDateOfExpiry",
          "nationalityCode",
          "occupation",
          "educationLevel",
          "memberShipNumber"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "firstName": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string"
          },
          "secondName": {
            "type": "string"
          },
          "thirdName": {
            "type": "string"
          },
          "familyName": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string"
          },
          "fullName": {
            "maxLength": 75,
            "minLength": 0,
            "type": "string"
          },
          "embosserName": {
            "type": "string"
          },
          "placeOfBirth": {
            "type": "string"
          },
          "dateOfBirth": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "age": {
            "type": "integer",
            "format": "int32"
          },
          "gender": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Gender"
              }
            ]
          },
          "marital": {
            "type": "string"
          },
          "dependents": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "idDateOfExpiry": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "nationalityCode": {
            "type": "string"
          },
          "occupation": {
            "type": "string"
          },
          "educationLevel": {
            "type": "string"
          },
          "memberShipNumber": {
            "maxLength": 10,
            "type": "string",
            "description": "Membership Number"
          },
          "cif": {
            "pattern": "([0-9]){14}|([0]){1}",
            "type": "string"
          },
          "programCode": {
            "maxLength": 3,
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_cardResidentialInformationType": {
        "title": "tns_cardResidentialInformationType",
        "required": [
          "addressType",
          "address1",
          "address2",
          "cityCode",
          "poBox",
          "postalCode",
          "ownershipType",
          "phoneArea",
          "phoneNumber"
        ],
        "type": "object",
        "properties": {
          "addressType": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "cityCode": {
            "type": "string"
          },
          "cityDesc": {
            "type": "string"
          },
          "poBox": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "ownershipType": {
            "type": "string"
          },
          "phoneArea": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "mobileNumber": {
            "pattern": "[0-9]{9,15}|()",
            "type": "string"
          },
          "faxNumber": {
            "type": "string"
          },
          "emailAddress": {
            "pattern": "([a-zA-Z0-9_\\-])([a-zA-Z0-9_\\-\\.]*)@(\\[((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}|((([a-zA-Z0-9\\-]+)\\.)+))([a-zA-Z]{2,}|(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\])|()",
            "type": "string"
          },
          "stcServiceProvider": {
            "maxLength": 10,
            "type": "string",
            "description": "STC Service Provider"
          },
          "typeOfResidency": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_cardEmployerInformationType": {
        "title": "tns_cardEmployerInformationType",
        "required": [
          "status",
          "salary",
          "lengthOfServiceYears",
          "lengthOfServiceMonths",
          "phoneArea"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "salary": {
            "maxLength": 17,
            "pattern": "([0-9]){17}",
            "type": "string"
          },
          "otherIncome": {
            "maxLength": 17,
            "pattern": "([0-9]){17}|()",
            "type": "string"
          },
          "totalIncome": {
            "maxLength": 17,
            "pattern": "([0-9]){17}|()",
            "type": "string"
          },
          "lengthOfServiceYears": {
            "type": "string"
          },
          "lengthOfServiceMonths": {
            "type": "string"
          },
          "phoneArea": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "phoneExt": {
            "type": "string"
          },
          "cityCode": {
            "type": "string"
          },
          "businessAddress": {
            "type": "string"
          },
          "allowed": {
            "type": "string"
          },
          "evaluationCode": {
            "type": "string"
          },
          "salaryCertificateOption": {
            "allOf": [
              {
                "$ref": "#/components/schemas/salaryCertificateOption"
              }
            ]
          },
          "salaryAsPerSalCertificate": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "basicSalary": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "fixedAllowances": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "deductionsAgainstSal": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "netMonthlyIncome": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_cardAccountInformationType": {
        "title": "tns_cardAccountInformationType",
        "required": [
          "accountId",
          "type",
          "oldCardNumber"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "openDate": {
            "type": "string"
          },
          "currentBalance": {
            "maxLength": 17,
            "pattern": "([0-9]){17}|()",
            "type": "string"
          },
          "averageSixMonth": {
            "type": "string"
          },
          "type": {
            "maxLength": 4,
            "type": "string"
          },
          "oldCardNumber": {
            "type": "string",
            "description": "OLD Card Number"
          }
        },
        "description": ""
      },
      "tns_updateFinancialInformationType": {
        "title": "tns_updateFinancialInformationType",
        "required": [
          "wessamLastSixMonth"
        ],
        "type": "object",
        "properties": {
          "investmentBalance": {
            "type": "string"
          },
          "pfaBalance": {
            "type": "string"
          },
          "wessamLastSixMonth": {
            "type": "string"
          },
          "wessamBalance": {
            "type": "string"
          },
          "wessamSubscriptionDate": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_updateSupplemetaryInformationType": {
        "title": "tns_updateSupplemetaryInformationType",
        "type": "object",
        "properties": {
          "embosserName": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string"
          },
          "placeOfBirth": {
            "type": "string"
          },
          "limit": {
            "type": "string"
          },
          "fullName": {
            "maxLength": 75,
            "minLength": 0,
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "idExpiryDate": {
            "type": "string"
          },
          "relationship": {
            "type": "string"
          },
          "cif": {
            "type": "string"
          },
          "customerType": {
            "type": "string"
          },
          "fullNameInArabic": {
            "type": "string"
          },
          "countryOfBirth": {
            "type": "string"
          },
          "nationality": {
            "type": "string"
          },
          "mobileNumber": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_cardSettlementInformationType": {
        "title": "tns_cardSettlementInformationType",
        "required": [
          "paymentMethod",
          "billingCycle",
          "autoDebit"
        ],
        "type": "object",
        "properties": {
          "paymentMethod": {
            "type": "string"
          },
          "billingCycle": {
            "type": "string"
          },
          "autoDebit": {
            "type": "string"
          },
          "defaultCreditLimit": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_cardOtherInformationType": {
        "title": "tns_cardOtherInformationType",
        "required": [
          "internetCard",
          "existingCards",
          "amyaliFlag",
          "processControlTable"
        ],
        "type": "object",
        "properties": {
          "internetCard": {
            "type": "string"
          },
          "insuranceProduct": {
            "type": "string"
          },
          "existingCards": {
            "type": "string"
          },
          "amyaliFlag": {
            "type": "string"
          },
          "productChange": {
            "type": "string"
          },
          "processControlTable": {
            "type": "string"
          },
          "managerCode": {
            "type": "string"
          },
          "referredTo": {
            "type": "string"
          },
          "referralReason": {
            "type": "string"
          },
          "jobGrade": {
            "type": "string"
          },
          "fursanMembershipNumber": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_cardAdditionalInformationType": {
        "title": "tns_cardAdditionalInformationType",
        "type": "object",
        "properties": {
          "hrmsLimit": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "requestedLimit": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "globalDBR": {
            "type": "number"
          },
          "productNormalDBR": {
            "type": "number"
          },
          "employmentIndicator": {
            "type": "string"
          },
          "isNCBStaff": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_YorNTypeOptional"
              }
            ]
          },
          "monthlyObligation": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "housingRent": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "houseMaidDriver": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "declaredCoreExpenses": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "otherExpenses": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "declaredMonthlyObligations": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_PinMailerIndicatorType": {
        "title": "tns_PinMailerIndicatorType",
        "enum": [
          "M",
          "D",
          "P",
          "N"
        ],
        "type": "string",
        "description": ""
      },
      "tns_cardAapplicationInformationResponseType": {
        "title": "tns_cardAapplicationInformationResponseType",
        "required": [
          "statusDescription"
        ],
        "type": "object",
        "properties": {
          "applicationNumber": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "statusDescription": {
            "type": "string"
          },
          "approvedLimit": {
            "type": "string"
          },
          "preApprovedCreditLimit": {
            "type": "string",
            "default": "N"
          },
          "fursanMembershipNumber": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreditCardPreIssueType": {
        "title": "tns_CreditCardPreIssueType",
        "required": [
          "creditCardNumber"
        ],
        "type": "object",
        "properties": {
          "creditCardNumber": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreditCardPreIssueResponse": {
        "title": "tns_CreditCardPreIssueResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_creditCardPreIssueResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_creditCardPreIssueResponseType": {
        "title": "tns_creditCardPreIssueResponseType",
        "type": "object",
        "properties": {
          "bankCode": {
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "messageDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "messageTime": {
            "pattern": "([0-9]){4}|([0-9]){6}|()",
            "type": "string"
          },
          "messageReferenceNumber": {
            "type": "string"
          },
          "requestType": {
            "type": "integer",
            "format": "int32"
          },
          "creditCardNumber": {
            "type": "string"
          },
          "branchId": {
            "type": "string"
          },
          "cardScheme": {
            "type": "string"
          },
          "expiryDate": {
            "type": "string"
          },
          "plasticType": {
            "type": "string"
          },
          "cardEmbossedName": {
            "type": "string"
          },
          "serviceCode": {
            "type": "string"
          },
          "customerFullName": {
            "type": "string"
          },
          "customerAddress1": {
            "type": "string"
          },
          "customerAddress2": {
            "type": "string"
          },
          "xlsId": {
            "type": "string"
          },
          "xlsNetworkId": {
            "type": "string"
          },
          "xlsSequence": {
            "type": "string"
          },
          "xlsEffectiveDate": {
            "type": "string"
          },
          "xlsExpiryDate": {
            "type": "string"
          },
          "xlsIssuanceID": {
            "type": "string"
          },
          "xlsMemberDate": {
            "type": "string"
          },
          "xlsGender": {
            "type": "string"
          },
          "xlsStaff": {
            "type": "string"
          },
          "xlsMaritalStatus": {
            "type": "string"
          },
          "xlsCardProfile": {
            "type": "string"
          },
          "xlsCountry": {
            "type": "string"
          },
          "xlsScheme": {
            "type": "string"
          },
          "xlsPVT1": {
            "type": "string"
          },
          "xlsPVT2": {
            "type": "string"
          },
          "xlsPVT4": {
            "type": "string"
          },
          "xlsPVT9": {
            "type": "string"
          },
          "xlsPVT10": {
            "type": "string"
          },
          "xlsPVT11": {
            "type": "string"
          },
          "xlsPVT12": {
            "type": "string"
          },
          "xlsSAMKey": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_HimayateeProgramRequest": {
        "title": "tns_HimayateeProgramRequest",
        "required": [
          "requestType",
          "cardId"
        ],
        "type": "object",
        "properties": {
          "requestType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_requestTypeHimyatee"
              }
            ]
          },
          "cardId": {
            "type": "string"
          },
          "actionCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_actionCodeHimyatee"
              },
              {
                "description": "Ignore for Inquiry\r\n\t\t\t\t\t\t\tExpected values in this\r\n\t\t\t\t\t\t\tfield\r\n\t\t\t\t\t\t\tfor Update mode\r\n\t\t\t\t\t\t\t1 for Adding Himayati\r\n\t\t\t\t\t\t\t2 for Cancellation of\r\n\t\t\t\t\t\t\tHimayati\r\n\t\t\t\t\t\t\t3 for Upgrade from\r\n\t\t\t\t\t\t\tHimayati to Himayati\r\n\t\t\t\t\t\t\tPlus\r\n\t\t\t\t\t\t\t4 for Downgrade\r\n\t\t\t\t\t\t\tof\r\n\t\t\t\t\t\t\tHimayati Plus to\r\n\t\t\t\t\t\t\tHimayati\r\n\t\t\t\t\t\t\t5 for Adding Himayati\r\n\t\t\t\t\t\t\tPlus\r\n\t\t\t\t\t\t\t6 for\r\n\t\t\t\t\t\t\tCancellation of\r\n\t\t\t\t\t\t\tHimayati Plus\r\n\t\t\t\t\t\t\t7 for Adding Both\r\n\t\t\t\t\t\t\t8 for Cancelling\r\n\t\t\t\t\t\t\tboth"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_HimayateeProgramResponse": {
        "title": "tns_HimayateeProgramResponse",
        "type": "object",
        "properties": {
          "himayateeProgram": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InquireUpdateHimayateeProgramResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditCardDeliveryMethodRequest": {
        "title": "tns_CreditCardDeliveryMethodRequest",
        "required": [
          "requestType",
          "cardId"
        ],
        "type": "object",
        "properties": {
          "requestType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_requestTypeCreditCardDeliveryMethod"
              },
              {
                "description": "‘ICRDDLV’ for Inquiry Card Delivery Method\r\n\t\t\t\t\t\t\r\n‘UCRDDLV’ for Inquiry Card Delivery Method"
              }
            ]
          },
          "cardId": {
            "type": "string"
          },
          "deliveryCode": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreditCardDeliveryMethodResponse": {
        "title": "tns_CreditCardDeliveryMethodResponse",
        "type": "object",
        "properties": {
          "creditCardDeliveryMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InquiryUpdateCreditCardDeliveryMethodResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_PINDeliveryMethodRequest": {
        "title": "tns_PINDeliveryMethodRequest",
        "required": [
          "requestType",
          "cardId"
        ],
        "type": "object",
        "properties": {
          "requestType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_requestTypePINDeliveryMethod"
              }
            ]
          },
          "cardId": {
            "type": "string"
          },
          "deliveryMethod": {
            "type": "string",
            "description": "Value to be updated on\r\n\t\t\t\t\t\t\tDELIVERY METHOD on\r\n\t\t\t\t\t\t\tARME/02, Only to be\r\n\t\t\t\t\t\t\tused in ‘UCRDDLV’"
          }
        },
        "description": ""
      },
      "tns_PINDeliveryMethodResponse": {
        "title": "tns_PINDeliveryMethodResponse",
        "type": "object",
        "properties": {
          "pinDeliveryMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InquiryUpdatePINDeliveryMethodResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_InquireUpdateHimayateeProgramResponseType": {
        "title": "tns_InquireUpdateHimayateeProgramResponseType",
        "type": "object",
        "properties": {
          "productCode1": {
            "type": "string"
          },
          "description1": {
            "type": "string"
          },
          "status1": {
            "type": "string"
          },
          "company1": {
            "type": "string"
          },
          "productCode2": {
            "type": "string"
          },
          "description2": {
            "type": "string"
          },
          "status2": {
            "type": "string"
          },
          "company2": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_InquiryUpdateCreditCardDeliveryMethodResponseType": {
        "title": "tns_InquiryUpdateCreditCardDeliveryMethodResponseType",
        "type": "object",
        "properties": {
          "cardHolderName": {
            "type": "string"
          },
          "deliveryMethod": {
            "type": "string"
          },
          "airWaybill": {
            "type": "string"
          },
          "saudiPostShipmentNumber": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_InquiryUpdatePINDeliveryMethodResponseType": {
        "title": "tns_InquiryUpdatePINDeliveryMethodResponseType",
        "type": "object",
        "properties": {
          "cardHolderName": {
            "type": "string",
            "description": "EMBOSSED NAME 1 on ARME/02"
          },
          "deliveryMethod": {
            "type": "string"
          },
          "airWaybill": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_StatementPrintRequest": {
        "title": "tns_StatementPrintRequest",
        "required": [
          "cardId",
          "period"
        ],
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string"
          },
          "period": {
            "type": "string",
            "description": "0 for the last statement\r\n\t\t\t\t\t\t\t1 for 3 months\r\n\t\t\t\t\t\t\t2 for 6\r\n\t\t\t\t\t\t\tmonths\r\n\t\t\t\t\t\t\t3 for 9 months\r\n\t\t\t\t\t\t\t4 for 12 months"
          },
          "fee": {
            "type": "string",
            "description": "Fees will be applied if\r\n\t\t\t\t\t\t\tthis fee flag contains a\r\n\t\t\t\t\t\t\tvalid value.\r\n\t\t\t\t\t\t\tSample Format:\r\n\t\t\t\t\t\t\t0001000 for 10 SAR"
          }
        },
        "description": ""
      },
      "tns_StatementPrintResponse": {
        "title": "tns_StatementPrintResponse",
        "type": "object",
        "properties": {
          "statementPrint": {
            "type": "string"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_KYCUpdateDetailsRequest": {
        "title": "tns_KYCUpdateDetailsRequest",
        "required": [
          "cardId"
        ],
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "address3": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_KYCUpdateDetailsResponse": {
        "title": "tns_KYCUpdateDetailsResponse",
        "type": "object",
        "properties": {
          "kycUpdateDetails": {
            "type": "string"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_requestTypeHimyatee": {
        "title": "tns_requestTypeHimyatee",
        "enum": [
          "IHIMYAT",
          "UHIMAYT"
        ],
        "type": "string",
        "description": "‘IHIMYAT’ for Inquiry ‘UHIMAYT’ for Update"
      },
      "tns_actionCodeHimyatee": {
        "title": "tns_actionCodeHimyatee",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "type": "integer",
        "description": "Ignore for Inquiry\r\n\t\t\t\tExpected values in this\r\n\t\t\t\tfield for\r\n\t\t\t\tUpdate mode\r\n\t\t\t\t1 for Adding Himayati\r\n\t\t\t\t2 for Cancellation of\r\n\t\t\t\tHimayati\r\n\t\t\t\t3 for\r\n\t\t\t\tUpgrade from\r\n\t\t\t\tHimayati to Himayati\r\n\t\t\t\tPlus\r\n\t\t\t\t4 for Downgrade of\r\n\t\t\t\tHimayati Plus\r\n\t\t\t\tto\r\n\t\t\t\tHimayati\r\n\t\t\t\t5 for Adding Himayati\r\n\t\t\t\tPlus\r\n\t\t\t\t6 for Cancellation of\r\n\t\t\t\tHimayati\r\n\t\t\t\tPlus\r\n\t\t\t\t7 for Adding Both\r\n\t\t\t\t8 for Cancelling both"
      },
      "tns_requestTypePINDeliveryMethod": {
        "title": "tns_requestTypePINDeliveryMethod",
        "enum": [
          "IPINDLV",
          "UPINDLV"
        ],
        "type": "string",
        "description": "‘IPINDLV’ for Inquiry\r\n\t\t\t\t‘UPINDLV’ for Update"
      },
      "tns_requestTypeCreditCardDeliveryMethod": {
        "title": "tns_requestTypeCreditCardDeliveryMethod",
        "enum": [
          "ICRDDLV",
          "UCRDDLV"
        ],
        "type": "string",
        "description": "'ICRDDLV' for Inquiry\r\n\t\t\t\t'UCRDDLV' for Update"
      },
      "tns_requestTypeStatementPrint": {
        "title": "tns_requestTypeStatementPrint",
        "enum": [
          "STMTPSC"
        ],
        "type": "string",
        "description": "'STMTPSC'"
      },
      "tns_requestTypeKYCUpdateDetails": {
        "title": "tns_requestTypeKYCUpdateDetails",
        "enum": [
          "CHGADDR"
        ],
        "type": "string",
        "description": "'CHGADDR'"
      },
      "tns_CreditCardPINChangeRequest": {
        "title": "tns_CreditCardPINChangeRequest",
        "required": [
          "creditCardNumber",
          "existingPIN",
          "newPIN"
        ],
        "type": "object",
        "properties": {
          "creditCardNumber": {
            "pattern": "[a-zA-Z0-9]{16}",
            "type": "string",
            "description": "Encrypted Credit Card number"
          },
          "existingPIN": {
            "type": "string",
            "description": "Encrypted text of existing PIN"
          },
          "newPIN": {
            "type": "string",
            "description": "Encrypted text of new PIN"
          }
        },
        "description": ""
      },
      "tns_CreditCardPINChangeResponse": {
        "title": "tns_CreditCardPINChangeResponse",
        "type": "object",
        "properties": {
          "success": {
            "type": "string",
            "description": "Existence of this tag represents successful\r\n\t\t\t\t\t\t\toperation"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditCardIssueRequestType": {
        "title": "tns_CreditCardIssueRequestType",
        "type": "object",
        "properties": {
          "creditCardNo": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreditCardIssueResponse": {
        "title": "tns_CreditCardIssueResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardIssueResponseType"
              },
              {
                "description": "This segment would be used for success response"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditCardIssueResponseType": {
        "title": "tns_CreditCardIssueResponseType",
        "type": "object",
        "properties": {
          "bankCode": {
            "type": "string"
          },
          "messageDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "messageTime": {
            "pattern": "([0-9]){4}|([0-9]){6}|()",
            "type": "string"
          },
          "messageReferenceNumber": {
            "type": "string"
          },
          "requestType": {
            "type": "string"
          },
          "creditCardNo": {
            "pattern": "[a-zA-Z0-9]{16}",
            "type": "string"
          },
          "branchId": {
            "type": "string"
          },
          "cardScheme": {
            "type": "string"
          },
          "expiryDate": {
            "type": "string"
          },
          "pasticType": {
            "type": "string"
          },
          "cardEmbossedName": {
            "type": "string"
          },
          "serviceCode": {
            "type": "string"
          },
          "customerFullName": {
            "type": "string"
          },
          "customerAddress1": {
            "type": "string"
          },
          "customerAddress2": {
            "type": "string"
          },
          "xlsID": {
            "type": "string"
          },
          "xlsNetworkID": {
            "type": "string"
          },
          "xlsSequence": {
            "type": "string"
          },
          "xlsEffectiveDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "xlsExpiryDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "xlsIssuanceID": {
            "type": "string"
          },
          "xlsMemberDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "xlsGender": {
            "type": "string"
          },
          "xlsStaff": {
            "type": "string"
          },
          "xlsMaritalStatus": {
            "type": "string"
          },
          "xlsCardProfile": {
            "type": "string"
          },
          "xlsCountry": {
            "type": "string"
          },
          "xlsScheme": {
            "type": "string"
          },
          "xlsPVT1": {
            "type": "string"
          },
          "xlsPVT2": {
            "type": "string"
          },
          "xlsPVT4": {
            "type": "string"
          },
          "xlsPVT9": {
            "type": "string"
          },
          "xlsPVT10": {
            "type": "string"
          },
          "xlsPVT11": {
            "type": "string"
          },
          "xlsPVT12": {
            "type": "string"
          },
          "xlsSAMKey": {
            "type": "string"
          },
          "membershipNumber": {
            "type": "string"
          },
          "applicationNumber": {
            "type": "string"
          },
          "holderName": {
            "type": "string"
          },
          "dateOfAgreement": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "customerID": {
            "type": "string"
          },
          "cardLimit": {
            "type": "string"
          },
          "minimumDueAmount": {
            "type": "string"
          },
          "fxConversionFees": {
            "type": "string"
          },
          "latePaymentFees": {
            "type": "string"
          },
          "annualFees": {
            "type": "string"
          },
          "settlementDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "apr": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_GetActiveCreditCardListByAccountRequest": {
        "title": "tns_GetActiveCreditCardListByAccountRequest",
        "required": [
          "accountId"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "This is the account id of debit card with this\r\n\t\t\t\t\t\t\taccount id we need to get the id/national id and retreive active\r\n\t\t\t\t\t\t\tcredit card"
          },
          "quantity": {
            "type": "string",
            "description": "This is number of records need to fetch"
          },
          "startFrom": {
            "type": "string",
            "description": "starting index of records"
          }
        },
        "description": ""
      },
      "tns_GetActiveCreditCardListByAccountResponse": {
        "title": "tns_GetActiveCreditCardListByAccountResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetActiveCreditCardListByAccountType"
              },
              {
                "description": "This segment would be used for success response"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GetActiveCreditCardListByAccountType": {
        "title": "tns_GetActiveCreditCardListByAccountType",
        "required": [
          "numberOfRecords"
        ],
        "type": "object",
        "properties": {
          "numberOfRecords": {
            "type": "string"
          },
          "creditCards": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_creditCardsType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_creditCardsType": {
        "title": "tns_creditCardsType",
        "type": "object",
        "properties": {
          "creditCardNumber": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_CreditCardAddressRequest": {
        "title": "tns_CreditCardAddressRequest",
        "required": [
          "cardId"
        ],
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string",
            "description": "Only Credit Card Number is permitted"
          }
        },
        "description": ""
      },
      "tns_CreditCardAddressResponse": {
        "title": "tns_CreditCardAddressResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardGetAddressType"
              },
              {
                "description": "This segment would be used for success response"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditCardGetAddressType": {
        "title": "tns_CreditCardGetAddressType",
        "type": "object",
        "properties": {
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "address3": {
            "type": "string"
          },
          "mobile": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_GetCreditCardEligiblePaymentPlanTransactionsRequest": {
        "title": "tns_GetCreditCardEligiblePaymentPlanTransactionsRequest",
        "type": "object",
        "properties": {
          "getCreditCardEligiblePaymentPlanTransactionRequestDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_getCreditCardEligiblePaymentPlanTransactionDetailsType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GetCreditCardEligiblePaymentPlanTransactionsResponse": {
        "title": "tns_GetCreditCardEligiblePaymentPlanTransactionsResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetCreditCardEligblePaymentPlanTransctionsSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "ccsAccountIdentifierType": {
        "title": "ccsAccountIdentifierType",
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "string",
            "description": "Credit account number"
          },
          "institutionCode": {
            "type": "string",
            "description": "Institution Code the account belongs to"
          },
          "currencyCode": {
            "$ref": "../../commonschemas/schemas.json#/ISOCurrencyCodeOptional",
            "description": "currency code for this account "
          }
        }
      },
      "tns_ccsAccountIdentifierType1": {
        "title": "tns_ccsAccountIdentifierType1",
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "string",
            "description": "Credit account number"
          },
          "institutionCode": {
            "type": "string",
            "description": "Institution Code the account belongs to"
          },
          "currencyCode": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "currency code for this account"
          },
          "uniqueID": {
            "type": "string",
            "description": "unique id"
          }
        },
        "description": ""
      },
      "tns_pageSetupType": {
        "title": "tns_pageSetupType",
        "type": "object",
        "properties": {
          "pageSize": {
            "type": "integer",
            "description": "page size",
            "format": "int32"
          },
          "pageNumber": {
            "type": "integer",
            "description": "page number",
            "format": "int32"
          },
          "returnCount": {
            "type": "boolean",
            "description": "Specifies if pageDetails are required in the\r\n\t\t\t\t\t\tresponse. Default true, pageDetails are returned."
          }
        },
        "description": ""
      },
      "tns_getCreditCardEligiblePaymentPlanTransactionDetailsType": {
        "title": "tns_getCreditCardEligiblePaymentPlanTransactionDetailsType",
        "type": "object",
        "properties": {
          "ccsAccountIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ccsAccountIdentifierType"
              },
              {
                "description": "Whenever a service does an update/action on an\r\n\t\t\t\t\t\taccount and requires the account to be\r\n\t\t\t\t\t\tspecified, the account\r\n\t\t\t\t\t\tidentifier is used."
              }
            ]
          },
          "cardIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cardIdentifierType"
              }
            ]
          },
          "itemId": {
            "type": "string",
            "description": "Item id referencing the transaction to get the\r\n\t\t\t\t\t\tallowed payment plans for. If specified with the\r\n\t\t\t\t\t\taccount and card,\r\n\t\t\t\t\t\tit is checked to make sure it\r\n\t\t\t\t\t\tis done on this card/account. If\r\n\t\t\t\t\t\tspecified, only\r\n\t\t\t\t\t\tthe details for this transaction will be\r\n\t\t\t\t\t\treturned"
          },
          "pageSetup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_pageSetupType"
              },
              {
                "description": "the number of pages and it size is mentioned in\r\n\t\t\t\t\t\tthis tags"
              }
            ]
          },
          "offerType": {
            "type": "string"
          }
        },
        "description": ""
      },
      "pageDetailsType": {
        "title": "pageDetailsType",
        "type": "object",
        "properties": {
          "pageSize": {
            "type": "integer",
            "description": "Number of results supported in a single page.Echoed back from the request",
            "format": "int32",
            "default": 0
          },
          "totalNumberOfResults": {
            "type": "integer",
            "description": "Total number of results for the request",
            "format": "int32",
            "default": 0
          },
          "currentNumberOfResults": {
            "type": "integer",
            "description": "Current of number of results returned in the response",
            "format": "int32",
            "default": 0
          },
          "totalNumberOfPages": {
            "type": "integer",
            "description": "Total number of pages for the all results satisfying the critieria of the request",
            "format": "int32",
            "default": 0
          },
          "currentPageNumber": {
            "type": "integer",
            "description": "Current page number for the results",
            "format": "int32",
            "default": 0
          }
        },
        "description": "Details of the paging returned in the response"
      },
      "tns_GetCreditCardEligblePaymentPlanTransctionsSuccessType": {
        "title": "tns_GetCreditCardEligblePaymentPlanTransctionsSuccessType",
        "type": "object",
        "properties": {
          "getEligiblePaymentPlanTransactionsResponseDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetCreditCardEligiblePaymentPlanTransactionsResponseDetailsType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GetCreditCardEligiblePaymentPlanTransactionsResponseDetailsType": {
        "title": "tns_GetCreditCardEligiblePaymentPlanTransactionsResponseDetailsType",
        "type": "object",
        "properties": {
          "pageDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pageDetailsType"
              }
            ]
          },
          "eligibleTransactionList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_EligibleTransactionListType"
              },
              {
                "description": "Start tag for the list of transactions eligible\r\n\t\t\t\t\t\tto be converted to a payment plan."
              }
            ]
          }
        },
        "description": ""
      },
      "tns_EligibleTransactionListType": {
        "title": "tns_EligibleTransactionListType",
        "type": "object",
        "properties": {
          "eligibleTransaction": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_eligibleTransactionType"
            },
            "description": "Start tag for a single transaction that can be\r\n\t\t\t\t\t\tconverted to a payment plan"
          }
        },
        "description": ""
      },
      "tns_eligibleTransactionType": {
        "title": "tns_eligibleTransactionType",
        "type": "object",
        "properties": {
          "transactionDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_transactionDetailsType"
              },
              {
                "description": "Common credit transaction details object holding\r\n\t\t\t\t\t\tthe details of a credit card transaction."
              }
            ]
          },
          "paymentPlanOptionsList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_paymentPlanOptionsListType"
              },
              {
                "description": "Start tag for the list of available options for\r\n\t\t\t\t\t\tthe payment plan"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_transactionDetailsType": {
        "title": "tns_transactionDetailsType",
        "type": "object",
        "properties": {
          "itemId": {
            "type": "string",
            "description": "Unique id identifying the\r\n\t\t\t\t\t\tcredit transaction in\r\n\t\t\t\t\t\tCortex"
          },
          "tLogId": {
            "type": "string",
            "description": "Cortex transaction log ID identifying the\r\n\t\t\t\t\t\tfinancial transaction that generated this credit transaction. Only\r\n\t\t\t\t\t\tavailable in case the transaction is an actual financial\r\n\t\t\t\t\t\ttransaction (Purchase/Cash Withdrawal...). Not available for\r\n\t\t\t\t\t\tpayments and adjustments"
          },
          "accountNumber": {
            "type": "string",
            "description": "Credit account number the\r\n\t\t\t\t\t\ttransaction was applied\r\n\t\t\t\t\t\ton"
          },
          "billingAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/creditCardAmountType"
              },
              {
                "description": "Amount of the transaction in\r\n\t\t\t\t\t\tthe billing currency\r\n\t\t\t\t\t\t(currency of the account)"
              }
            ]
          },
          "transactionAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/creditCardAmountType"
              },
              {
                "description": "Amount of the transaction as\r\n\t\t\t\t\t\toriginally received\r\n\t\t\t\t\t\t(not\r\n\t\t\t\t\t\tnecessarily in the account\r\n\t\t\t\t\t\tcurrency)"
              }
            ]
          },
          "localDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Local date the transaction\r\n\t\t\t\t\t\twas made on"
          },
          "transmissionDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Local date the transaction\r\n\t\t\t\t\t\twas made on"
          },
          "transmissionTime": {
            "pattern": "([0-9]){4}|([0-9]){6}|()",
            "type": "string",
            "description": "Only available for actual\r\n\t\t\t\t\t\tfinancial transactions."
          },
          "systemDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Cortex System Date the\r\n\t\t\t\t\t\tcredit transaction was\r\n\t\t\t\t\t\tcreated on"
          },
          "transactionDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Date the transaction was\r\n\t\t\t\t\t\texecuted on"
          },
          "description": {
            "type": "string",
            "description": "Description of the\r\n\t\t\t\t\t\ttransaction (usually used\r\n\t\t\t\t\t\tfor\r\n\t\t\t\t\t\tthe statement)"
          },
          "transctionCode": {
            "type": "string",
            "description": "Cortex transaction code.\r\n\t\t\t\t\t\tIdentifies the type of\r\n\t\t\t\t\t\ttransaction. Only valid in\r\n\t\t\t\t\t\tcase the credit transaction\r\n\t\t\t\t\t\tis a\r\n\t\t\t\t\t\tfinancial one. To get\r\n\t\t\t\t\t\tthe list of supported\r\n\t\t\t\t\t\tvalues, please use the\r\n\t\t\t\t\t\tGetNumericDescription\r\n\t\t\t\t\t\tservice with description\r\n\t\t\t\t\t\ttype as 'tx'"
          },
          "transactionStatus": {
            "type": "string",
            "description": "Identifies the status of the\r\n\t\t\t\t\t\ttransaction. A\r\n\t\t\t\t\t\tpredefined\r\n\t\t\t\t\t\tlist of values exists of\r\n\t\t\t\t\t\twhich the below indicate\r\n\t\t\t\t\t\tthat the\r\n\t\t\t\t\t\ttransaction is not\r\n\t\t\t\t\t\tsuspended (posted or\r\n\t\t\t\t\t\teligible to be posted): - 0\r\n\t\t\t\t\t\t- not suspended - 101 -\r\n\t\t\t\t\t\tforce posted\r\n\r\n\t\t\t\t\t\tTo get the list of supported\r\n\t\t\t\t\t\tvalues and descriptions,\r\n\t\t\t\t\t\tplease use the\r\n\t\t\t\t\t\tGetNumericDescription\r\n\t\t\t\t\t\tservice with description\r\n\t\t\t\t\t\ttype as \"ccsist\""
          },
          "messageClass": {
            "type": "string",
            "description": "Identifies if the\r\n\t\t\t\t\t\ttransaction is an\r\n\t\t\t\t\t\tauthorization\r\n\t\t\t\t\t\ttransaction,\r\n\t\t\t\t\t\tfinancial, reversal…\r\n\t\t\t\t\t\tSupported values are: - 1:\r\n\t\t\t\t\t\tAuthorization Transaction -\r\n\t\t\t\t\t\t2: Financial Transaction -\r\n\t\t\t\t\t\t3: File\r\n\t\t\t\t\t\tUpdate - 4: Reversal\r\n\t\t\t\t\t\t- 5: Reconciliation - 6:\r\n\t\t\t\t\t\tReconciliation - 7:\r\n\t\t\t\t\t\tFee - 8:\r\n\t\t\t\t\t\tNetwork Management"
          },
          "functionCode": {
            "type": "string",
            "description": "Function code identifying\r\n\t\t\t\t\t\tthe function of the\r\n\t\t\t\t\t\ttransaction providing\r\n\t\t\t\t\t\tadditional details on the\r\n\t\t\t\t\t\tmessage class (i.e.\r\n\t\t\t\t\t\toriginal\r\n\t\t\t\t\t\tauthorization, repeat,\r\n\t\t\t\t\t\taddress validation...). To\r\n\t\t\t\t\t\tget the\r\n\t\t\t\t\t\tlist of supported\r\n\t\t\t\t\t\tvalues, please use the\r\n\t\t\t\t\t\tGetNumericDescription\r\n\t\t\t\t\t\tservice with description\r\n\t\t\t\t\t\ttype 'fncode'"
          },
          "pan": {
            "type": "string",
            "description": "Encrypted card number the\r\n\t\t\t\t\t\ttransaction was done.\r\n\t\t\t\t\t\tNot\r\n\t\t\t\t\t\tavailable if the transaction\r\n\t\t\t\t\t\twas done on the credit\r\n\t\t\t\t\t\taccount\r\n\t\t\t\t\t\tdirectly (i.e.\r\n\t\t\t\t\t\tauto-debit, adjustment)"
          },
          "merchantCategorycode": {
            "type": "string",
            "description": "Merchant category code of\r\n\t\t\t\t\t\tthe transaction. Only\r\n\t\t\t\t\t\tavailable for actual\r\n\t\t\t\t\t\tauth/financial transactions.\r\n\t\t\t\t\t\tTo get the list of\r\n\t\t\t\t\t\tsupported\r\n\t\t\t\t\t\tvalues, please use the\r\n\t\t\t\t\t\tGetNumericDescription\r\n\t\t\t\t\t\tservice with\r\n\t\t\t\t\t\tdescription\r\n\t\t\t\t\t\ttype as 'ab'"
          },
          "cardAcceptorId": {
            "type": "string",
            "description": "Card acceptor id of the transaction"
          },
          "acquirerId": {
            "type": "string",
            "description": "ID of the transaction acquirer"
          },
          "acquirerCountry": {
            "type": "string",
            "description": "Acquirer country code the\r\n\t\t\t\t\t\ttransaction took\r\n\t\t\t\t\t\tlocation in"
          },
          "posted": {
            "type": "boolean",
            "description": "Specifies if the transaction\r\n\t\t\t\t\t\tis posted or still\r\n\t\t\t\t\t\tpending\r\n\t\t\t\t\t\tto be posted"
          },
          "systemTraceAuditNumber": {
            "type": "string",
            "description": "System Trace Audit Number in\r\n\t\t\t\t\t\tcase available"
          },
          "retreivalReferenceNumber": {
            "type": "string",
            "description": "Retrieval reference number\r\n\t\t\t\t\t\tidentifying the\r\n\t\t\t\t\t\ttransaction\r\n\t\t\t\t\t\tfrom an acquirer"
          },
          "cardAcceptorLocation": {
            "type": "string",
            "description": "Card acceptor location"
          },
          "itemType": {
            "type": "string",
            "description": "Specifies the type of the\r\n\t\t\t\t\t\titem/transaction. A\r\n\t\t\t\t\t\tpredefined list of values\r\n\t\t\t\t\t\texists and custom items\r\n\t\t\t\t\t\tmight be created.\r\n\r\n\t\t\t\t\t\tThe pre-defined list of\r\n\t\t\t\t\t\tsupported values is the\r\n\t\t\t\t\t\tfollowing: 1-\r\n\t\t\t\t\t\tTransaction 2-\r\n\t\t\t\t\t\tCard-related fee 3-\r\n\t\t\t\t\t\tCard-related commission 4-\r\n\t\t\t\t\t\tInterest 5- Payment 6- Late\r\n\t\t\t\t\t\tpayment penalty 7- Over\r\n\t\t\t\t\t\tlimit penalty 8-\r\n\t\t\t\t\t\tCredit\r\n\t\t\t\t\t\tadjustment 9- Debit\r\n\t\t\t\t\t\tadjustment 10-\r\n\t\t\t\t\t\tAccount-related fee 11-\r\n\t\t\t\t\t\tPayment plan credit\r\n\t\t\t\t\t\tadjustment. Used to mark the\r\n\t\t\t\t\t\tmovement of an item\r\n\t\t\t\t\t\tto a\r\n\t\t\t\t\t\tpayment plan when the plan\r\n\t\t\t\t\t\tis initialized 12- Payment\r\n\t\t\t\t\t\tplan debit\r\n\t\t\t\t\t\tadjustment. The\r\n\t\t\t\t\t\tcorresponding debit to the\r\n\t\t\t\t\t\titem type ‘11’ 13- Due\r\n\t\t\t\t\t\tinstallment (Interest) 14-\r\n\t\t\t\t\t\tDue installment (principle)\r\n\t\t\t\t\t\t15- Due\r\n\t\t\t\t\t\tinstallment credit\r\n\t\t\t\t\t\tadjustment. This is the\r\n\t\t\t\t\t\tmatching credit to item\r\n\t\t\t\t\t\ttype\r\n\t\t\t\t\t\t‘14’. 16- Credit for a\r\n\t\t\t\t\t\tcancelled payment plan. This\r\n\t\t\t\t\t\tis a credit\r\n\t\t\t\t\t\tto the not due\r\n\t\t\t\t\t\tinstallment balance to mark\r\n\t\t\t\t\t\tthe cancellation of a\r\n\t\t\t\t\t\tpayment plan. 17- Debit for\r\n\t\t\t\t\t\ta cancelled payment plan.\r\n\t\t\t\t\t\tThis is a\r\n\t\t\t\t\t\tdebit to a\r\n\t\t\t\t\t\tstandard balance component\r\n\t\t\t\t\t\tof the account to mark the\r\n\t\t\t\t\t\tcancellation of a payment\r\n\t\t\t\t\t\tplan. This is the matching\r\n\t\t\t\t\t\tdebit to item\r\n\t\t\t\t\t\ttype ‘16’\r\n\r\n\t\t\t\t\t\t20 - Targeted payment\r\n\r\n\t\t\t\t\t\tTo get the full list of item\r\n\t\t\t\t\t\ttypes\r\n\t\t\t\t\t\talong with their\r\n\t\t\t\t\t\tdescription, please use the\r\n\t\t\t\t\t\tGetNumericDescription\r\n\t\t\t\t\t\tservice with the description\r\n\t\t\t\t\t\ttype as 'ccsity'"
          },
          "terminalCode": {
            "type": "string",
            "description": "Terminal code of the transaction. Only available\r\n\t\t\t\t\t\tin case the transaction was done using a terminal"
          },
          "applicationRule": {
            "type": "string",
            "description": "Specifies if the transaction\r\n\t\t\t\t\t\twas applied on the\r\n\t\t\t\t\t\tdue\r\n\t\t\t\t\t\tbalance or not due balance.\r\n\t\t\t\t\t\tSupported values: - 0 - All\r\n\t\t\t\t\t\t- N/A.\r\n\t\t\t\t\t\tApplied on both due\r\n\t\t\t\t\t\tand not due side. - 1 - Not\r\n\t\t\t\t\t\tDue Side - 2 - Due\r\n\t\t\t\t\t\tSide"
          },
          "userData": {
            "type": "string",
            "description": "Customer specific field for the transaction"
          },
          "authorizationAccountNumber": {
            "type": "string",
            "description": "First authorization account that the items was\r\n\t\t\t\t\t\tapplied. This field is only applicable to corporate accounts\r\n\t\t\t\t\t\tprocessing."
          },
          "description2": {
            "type": "string",
            "description": "Description 2 for the transaction"
          },
          "description3": {
            "type": "string",
            "description": "Description 3 for the transaction"
          },
          "maskedPan": {
            "type": "string",
            "description": "Masked pan of the card that\r\n\t\t\t\t\t\twas used for the\r\n\t\t\t\t\t\ttransaction\r\n\t\t\t\t\t\tin case any."
          },
          "itemCategory": {
            "type": "string",
            "description": "Used to categorize the\r\n\t\t\t\t\t\ttransaction. The values\r\n\t\t\t\t\t\tare\r\n\t\t\t\t\t\tcustomer specific"
          },
          "itemSource": {
            "type": "string",
            "description": "Identifier label for the source of the item. For\r\n\t\t\t\t\t\texample, 'CORTEX', 'HOST'. Either both reference code and source\r\n\t\t\t\t\t\tare specified or neither"
          },
          "referenceCode": {
            "type": "string",
            "description": "Reference code for the transaction. This is\r\n\t\t\t\t\t\tunique by source. Either both reference code and source are\r\n\t\t\t\t\t\tspecified or neither"
          },
          "creditDebit": {
            "type": "string",
            "description": "This flag indicates if the\r\n\t\t\t\t\t\ttransaction is a\r\n\t\t\t\t\t\tcredit or\r\n\t\t\t\t\t\tdebit one. In some cases,\r\n\t\t\t\t\t\twhere the transaction is\r\n\t\t\t\t\t\tsuspended or not yet posted,\r\n\t\t\t\t\t\tthe value will be U –\r\n\t\t\t\t\t\tUndefined.\r\n\t\t\t\t\t\tSupported values\r\n\t\t\t\t\t\tare:"
          }
        },
        "description": ""
      },
      "tns_paymentPlanOptionsListType": {
        "title": "tns_paymentPlanOptionsListType",
        "type": "object",
        "properties": {
          "paymentPlanOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_paymentPlanOptionsType"
            },
            "description": "Single entry for the available payment plan\r\n\t\t\t\t\t\toptions"
          }
        },
        "description": ""
      },
      "tns_paymentPlanOptionsType": {
        "title": "tns_paymentPlanOptionsType",
        "type": "object",
        "properties": {
          "numberOfInstallments": {
            "type": "integer",
            "description": "Number of installments",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of the payment plan. This should be used in\r\n\t\t\t\t\t\tthe NewPaymentPlanService to create a payment plan"
          },
          "description": {
            "type": "string",
            "description": "Description of the payment plan option"
          },
          "rateBasis": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_rateBasis"
              },
              {
                "description": "Basis of interest rate"
              }
            ]
          },
          "interestRate": {
            "type": "number",
            "description": "Interest rate % on the amount of the payment\r\n\t\t\t\t\t\tplan. It determines the interest added to the payment plan amount.\r\n\t\t\t\t\t\tFor example, if the amount of the transaction is 1000 and the rate\r\n\t\t\t\t\t\tis 5%, the interest amount will be 50 and the total amount of the\r\n\t\t\t\t\t\tplan will become 10050. If a fixed rate is specified, it will also\r\n\t\t\t\t\t\tbe added to the total amount of the plan. The percentage is always\r\n\t\t\t\t\t\tcalculated on the transaction amount"
          },
          "fixedInterestAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/creditCardAmountType"
              },
              {
                "description": "Fixed interest amount on the payment plan. It\r\n\t\t\t\t\t\tdetermines the fixed interest amount added to the payment plan\r\n\t\t\t\t\t\tamount.\r\n\r\n\t\t\t\t\t\tFor example, if the amount of the transaction is 1000 and\r\n\t\t\t\t\t\tthe fixed\r\n\t\t\t\t\t\tamount is 10, the total amount of the plan will become\r\n\t\t\t\t\t\t1010. If an\r\n\t\t\t\t\t\tinterest rate % is also configured, it will also be\r\n\t\t\t\t\t\tadded to the\r\n\t\t\t\t\t\ttotal amount of the plan."
              }
            ]
          },
          "expectedEndDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Expected end date for the payment plan assuming\r\n\t\t\t\t\t\tit's created in the\r\n\t\t\t\t\t\tcurrent system date and this option is selected\r\n\t\t\t\t\t\tto convert the\r\n\t\t\t\t\t\ttransaction to payment plan"
          },
          "singleInstallmentAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/creditCardAmountType"
              },
              {
                "description": "Single installment amount to be paid each month\r\n\t\t\t\t\t\tin case this option is selected to convert the transaction to\r\n\t\t\t\t\t\tpayment plan"
              }
            ]
          },
          "lastInstallmentAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/creditCardAmountType"
              },
              {
                "description": "Last installment amount to be paid the last\r\n\t\t\t\t\t\tmonth in case this option is selected to convert the transaction\r\n\t\t\t\t\t\tto payment plan"
              }
            ]
          },
          "singleFeeAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/creditCardAmountType"
              },
              {
                "description": "Single fee amount to be paid each month in case\r\n\t\t\t\t\t\tthis option is selected to convert the transaction to a payment\r\n\t\t\t\t\t\tplan"
              }
            ]
          },
          "lastFeeAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/creditCardAmountType"
              },
              {
                "description": "Last fee amount to be paid the last month in\r\n\t\t\t\t\t\tcase this option is selected to convert the transaction to a\r\n\t\t\t\t\t\tpayment plan"
              }
            ]
          },
          "planAmountNoFee": {
            "allOf": [
              {
                "$ref": "#/components/schemas/creditCardAmountType"
              },
              {
                "description": "The full payment plan amount without fees"
              }
            ]
          },
          "fullPlanAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/creditCardAmountType"
              },
              {
                "description": "The full payment plan amount including the fees\r\n\t\t\t\t\t\tin case this option is selected to convert the transaction to a\r\n\t\t\t\t\t\tpayment plan"
              }
            ]
          },
          "fullFeeAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/creditCardAmountType"
              },
              {
                "description": "The full fee amount added to the original\r\n\t\t\t\t\t\ttransaction amount in case this option is selected to convert the\r\n\t\t\t\t\t\ttransaction to a payment plan"
              }
            ]
          },
          "paymentPlanCode": {
            "type": "integer",
            "description": "To determine if plan is SPP/ALA DOFAAT and so.\r\n\t\t\t\t\t\t01 - Smart Payment plan (SPP)\r\n\t\t\t\t\t\t02 - ALA DOFAAT\r\n\t\t\t\t\t\tand so on.",
            "format": "int32"
          }
        },
        "description": ""
      },
      "creditCardAmountType": {
        "title": "creditCardAmountType",
        "type": "object",
        "properties": {
          "amount": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "amount",
            "default": 0.0
          },
          "currencyCode": {
            "$ref": "../../commonschemas/schemas.json#/ISOCurrencyCodeOptional",
            "description": "currency Code"
          }
        },
        "description": ""
      },
      "tns_fixedInterestAmountType": {
        "title": "tns_fixedInterestAmountType",
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "description": "amount",
            "default": 0.0
          },
          "currencyCode": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "currency Code"
          }
        },
        "description": ""
      },
      "tns_CreditCardNewPaymentPlanRequest": {
        "title": "tns_CreditCardNewPaymentPlanRequest",
        "type": "object",
        "properties": {
          "creditCardNewPaymentPlanRequestDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_NewPaymentPlanRequestDetailsType"
              },
              {
                "description": "NewPaymentPlanRequestDetails"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditCardNewPaymentPlanResponse": {
        "title": "tns_CreditCardNewPaymentPlanResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_NewpaymentPlansuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_NewPaymentPlanRequestDetailsType": {
        "title": "tns_NewPaymentPlanRequestDetailsType",
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "Action requested. Supported values are:\r\n\r\n\t\t\t\t\t\t- 1 –\r\n\t\t\t\t\t\tValidate item for payment plan - 3\r\n\t\t\t\t\t\t– Create and associate payment\r\n\t\t\t\t\t\tplan"
          },
          "itemId": {
            "type": "string",
            "description": "Identifier of the credit transaction to\r\n\t\t\t\t\t\tconvert\r\n\t\t\t\t\t\tto a payment plan. The value can\r\n\t\t\t\t\t\tbe retrieved by using the service\r\n\t\t\t\t\t\tGetEligiblePaymentPlanTransactions\r\n\t\t\t\t\t\tservice."
          },
          "skipDelinquencyCheck": {
            "type": "boolean",
            "description": "Flag to specify if the delinquency check should\r\n\t\t\t\t\t\tbe skipped. Usually an account having a configured delinquency\r\n\t\t\t\t\t\tlevel is not allowed to have a payment plan. If this flag is set\r\n\t\t\t\t\t\tto “true”, this check will be bypassed."
          },
          "paymentPlanName": {
            "type": "string",
            "description": "Name of the payment plan to use. Returned in the\r\n\t\t\t\t\t\tGetEligiblePaymentPlanTransactions service"
          },
          "numberOfInstallments": {
            "type": "integer",
            "description": "Number of installments required for the payment\r\n\t\t\t\t\t\tplan.",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "Description to be used for the new payment plan.\r\n\t\t\t\t\t\tIf not specified, defaulted by cortex"
          },
          "user": {
            "type": "string",
            "description": "User that initiated the request"
          }
        },
        "description": ""
      },
      "tns_NewpaymentPlansuccessType": {
        "title": "tns_NewpaymentPlansuccessType",
        "type": "object",
        "properties": {
          "creditCardNewPaymentPlanResponseDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_newPaymentPlanResponseDetailsType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_newPaymentPlanResponseDetailsType": {
        "title": "tns_newPaymentPlanResponseDetailsType",
        "type": "object",
        "properties": {
          "paymentPlanId": {
            "type": "string",
            "description": "Unique identifier for the newly created\r\n\t\t\t\t\t\tpayment\r\n\t\t\t\t\t\tplan in case the request\r\n\t\t\t\t\t\tspecifies to create it and the operation\r\n\t\t\t\t\t\tis successful. Not available in case the\r\n\t\t\t\t\t\trequest is only for\r\n\t\t\t\t\t\tvalidation"
          },
          "numberOfInstallments": {
            "type": "integer",
            "description": "Number of installments requested",
            "format": "int32"
          },
          "status": {
            "type": "string"
          },
          "expiryDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Specifies the date the plan expires if\r\n\t\t\t\t\t\tnot\r\n\t\t\t\t\t\tinitialized at which time it will be\r\n\t\t\t\t\t\tautomatically canceled"
          },
          "interestRate": {
            "type": "number",
            "description": "installment interestRate"
          },
          "dateLastInstallment": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Date the last installment was generated"
          },
          "transactionBillingAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_fixedInterestAmountType"
              },
              {
                "description": "Amount of the transaction being\r\n\t\t\t\t\t\tconverted to a\r\n\t\t\t\t\t\tpayment plan"
              }
            ]
          },
          "nextInstallmentAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_fixedInterestAmountType"
              },
              {
                "description": "Amount of the next/first installment"
              }
            ]
          },
          "lastInstallmentAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_fixedInterestAmountType"
              },
              {
                "description": "Last Installment amount"
              }
            ]
          },
          "singleInstallmentInterest": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_fixedInterestAmountType"
              },
              {
                "description": "Value of interest for each installment (apart\r\n\t\t\t\t\t\tfor the last installment)."
              }
            ]
          },
          "lastInstallmentInterest": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_fixedInterestAmountType"
              },
              {
                "description": "Value of the last interest to be applied."
              }
            ]
          }
        },
        "description": ""
      },
      "cardIdentifierType": {
        "title": "cardIdentifierType",
        "type": "object",
        "properties": {
          "pan": {
            "$ref": "../../commonschemas/schemas.json#/EncryptedText",
            "description": "PAN Number"
          },
          "vpan": {
            "$ref": "../../commonschemas/schemas.json#/EncryptedText",
            "description": "VPAN Number"
          },
          "sequenceNumber": {
            "type": "string",
            "description": "sequenceNumber"
          },
          "expiryDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "expiryDate expiry date of the card "
          }
        }
      },
      "responseCardIdentifierType": {
        "title": "responseCardIdentifierType",
        "type": "object",
        "properties": {
          "pan": {
            "$ref": "../../commonschemas/schemas.json#/EncryptedText",
            "description": "pan number"
          },
          "maskedPan": {
            "$ref": "../../commonschemas/schemas.json#/EncryptedText",
            "description": "Masked pan of the card that was used for the transaction in case any."
          },
          "vpan": {
            "$ref": "../../commonschemas/schemas.json#/EncryptedText",
            "description": "vpan number"
          },
          "sequenceNumber": {
            "type": "string",
            "description": "sequenceNumber"
          }
        },
        "description": ""
      },
      "tns_CreditCardLimitUpdateCheckRequest": {
        "title": "tns_CreditCardLimitUpdateCheckRequest",
        "type": "object",
        "properties": {
          "creditCardLimitUpdateCheckRequestDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_creditLimitUpdateCheckRequestDetailsType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditCardLimitUpdateCheckResponse": {
        "title": "tns_CreditCardLimitUpdateCheckResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditLimitUpdateCheckSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_creditLimitUpdateCheckRequestDetailsType": {
        "title": "tns_creditLimitUpdateCheckRequestDetailsType",
        "type": "object",
        "properties": {
          "ccsAccountIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ccsAccountIdentifierType"
              }
            ]
          },
          "cardIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cardIdentifierType"
              }
            ]
          },
          "hrCreditLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_hrCreditLimitType"
              }
            ]
          },
          "addtionalDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddtionalDetailsType"
              }
            ]
          },
          "affordabilityDetailsList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/affordabilityRequestDetailsListType"
              }
            ]
          }
        },
        "description": ""
      },
      "AddtionalDetailsType": {
        "title": "AddtionalDetailsType",
        "type": "object",
        "properties": {
          "salaryCertificateOption": {
            "$ref": "#/components/schemas/salaryCertificateOption"
          },
          "salaryAsPerSalCertificate": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Salary as per salary Certificate"
          },
          "basicSalary": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Basic Salary"
          },
          "fixedAllowances": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "deductionsAgainstSal": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Deductions against salary"
          },
          "otherIncome": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "nationalityCode": {
            "$ref": "../../commonschemas/schemas.json#/ISOCountryCodeOptional"
          },
          "dependents": {
            "type": "string"
          },
          "typeOfResidency": {
            "type": "string"
          },
          "housingRent": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "houseMaidDriver": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "declaredCoreExpenses": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "otherExpenses": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "declaredMonthlyObligations": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional"
          },
          "employmentIndicator": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreditLimitUpdateCheckSuccessType": {
        "title": "tns_CreditLimitUpdateCheckSuccessType",
        "type": "object",
        "properties": {
          "creditCardLimitUpdateCheckResponseDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_creditLimitUpdateCheckResponseDetailsType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_creditLimitUpdateCheckResponseDetailsType": {
        "title": "tns_creditLimitUpdateCheckResponseDetailsType",
        "type": "object",
        "properties": {
          "ccsAccountIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ccsAccountIdentifierType"
              },
              {
                "description": "Actual credit account details for which the\r\n\t\t\t\t\t\tallowable limit increase/decrease values are being returned"
              }
            ]
          },
          "currentCreditLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_currentCreditLimitType"
              },
              {
                "description": "Current credit limit of the account"
              }
            ]
          },
          "maximumCreditLimitIncreaseValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_maximumCreditLimitIncreaseValueType"
              },
              {
                "description": "Maximum credit limit increase value allowed for\r\n\t\t\t\t\t\tthis account. The maximum new credit limit allowed can be\r\n\t\t\t\t\t\tcalculated by adding the current credit limit to this value. If\r\n\t\t\t\t\t\tthe credit limit increase is not allowed, the amount will be\r\n\t\t\t\t\t\treturned as 0"
              }
            ]
          },
          "maximumCreditLimitDecreaseValue": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_maximumCreditLimitDecreaseValueType"
              },
              {
                "description": "Maximum credit limit decrease value allowed for\r\n\t\t\t\t\t\tthis account. The minimum new credit limit allowed can be\r\n\t\t\t\t\t\tcalculated by subtracting the current credit limit to this value.\r\n\t\t\t\t\t\tIf credit limit decrease is not allowed, the amount will be\r\n\t\t\t\t\t\treturned as 0"
              }
            ]
          },
          "finalExpenses": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Final Expenses"
              }
            ]
          },
          "affordabilityDetailsList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AffordabilityResponseDetailsListType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_currentCreditLimitType": {
        "title": "tns_currentCreditLimitType",
        "type": "object",
        "properties": {
          "amount": {
            "type": "number"
          },
          "currencyCode": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "Credit limit currency"
          }
        },
        "description": ""
      },
      "tns_maximumCreditLimitIncreaseValueType": {
        "title": "tns_maximumCreditLimitIncreaseValueType",
        "type": "object",
        "properties": {
          "amount": {
            "type": "number"
          },
          "currencyCode": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "Currency of the maximum credit limit increase\r\n\t\t\t\t\t\tvalue"
          }
        },
        "description": ""
      },
      "tns_maximumCreditLimitDecreaseValueType": {
        "title": "tns_maximumCreditLimitDecreaseValueType",
        "type": "object",
        "properties": {
          "amount": {
            "type": "number"
          },
          "currencyCode": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "Currency of the maximum credit limit decrease\r\n\t\t\t\t\t\tvalue"
          }
        },
        "description": ""
      },
      "tns_UpdateCreditCardLimitRequest": {
        "title": "tns_UpdateCreditCardLimitRequest",
        "type": "object",
        "properties": {
          "updateCreditCardLimitRequestDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_updateCreditLimitRequestDetailsType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_UpdateCreditCardLimitResponse": {
        "title": "tns_UpdateCreditCardLimitResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_UpdateCreditLimitResponseSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_updateCreditLimitRequestDetailsType": {
        "title": "tns_updateCreditLimitRequestDetailsType",
        "type": "object",
        "properties": {
          "ccsAccountIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ccsAccountIdentifierType"
              },
              {
                "description": "Credit account to update the limit for"
              }
            ]
          },
          "cardIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cardIdentifierType"
              },
              {
                "description": "Credit card to update the credit limit\r\n\t\t\t\t\t\tof its\r\n\t\t\t\t\t\tdefault account"
              }
            ]
          },
          "newCreditLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_newCreditLimitType"
              },
              {
                "description": "Money object holding the new credit\r\n\t\t\t\t\t\tlimit to set\r\n\t\t\t\t\t\tfor the account. A check is\r\n\t\t\t\t\t\tmade to confirm the credit limit\r\n\t\t\t\t\t\tcurrency is the same as the credit\r\n\t\t\t\t\t\taccount currency"
              }
            ]
          },
          "hrCreditLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_hrCreditLimitType"
              }
            ]
          },
          "forceUpdate": {
            "type": "boolean",
            "description": "Specifies if the update the credit limit\r\n\t\t\t\t\t\tshould\r\n\t\t\t\t\t\tbe forced. In case set to “true”,\r\n\t\t\t\t\t\tno checks will be done on the\r\n\t\t\t\t\t\taccount if\r\n\t\t\t\t\t\tthe limit change is allowed. Defaulted\r\n\t\t\t\t\t\tto \"false\" in case\r\n\t\t\t\t\t\tnot specified"
          },
          "user": {
            "type": "string",
            "description": "User that initiated the action. If not\r\n\t\t\t\t\t\tspecified\r\n\t\t\t\t\t\tdefaulted to “cortex”"
          },
          "description": {
            "type": "string",
            "description": "Description/memo for the credit limit\r\n\t\t\t\t\t\tupdate. If\r\n\t\t\t\t\t\tnot specified, set to a\r\n\t\t\t\t\t\tdefault value"
          },
          "requestSource": {
            "type": "string",
            "description": "Numeric value identifier the source of\r\n\t\t\t\t\t\tthe\r\n\t\t\t\t\t\taction. The value is channel\r\n\t\t\t\t\t\tspecific and will be assigned per\r\n\t\t\t\t\t\tsite."
          },
          "cycleLength": {
            "type": "string"
          },
          "dateOfCycleBegin": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "cashLimitAmount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "cashLimitNumber": {
            "type": "integer",
            "format": "int32"
          },
          "purchaseLimitAmount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "purchaseLimitNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalLimitAmount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "totalLimitNumber": {
            "type": "integer",
            "format": "int32"
          },
          "eventNotes": {
            "type": "string"
          },
          "cardType": {
            "type": "string"
          },
          "addtionalDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AddtionalDetailsType"
              }
            ]
          },
          "applicationStep": {
            "type": "string",
            "description": "This element identifies the step of the credit\r\n\t\t\t\t\t\tcard application process,\r\n\t\t\t\t\t\tPossible values can be\r\n\t\t\t\t\t\tSIMAH - to perfrom Simah check only\r\n\t\t\t\t\t\tRLEND - (Responsible Lending) To\r\n\t\t\t\t\t\tcalculate eligible limit\r\n\t\t\t\t\t\tUDATE - Final step to Update application"
          },
          "userMemoDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_userMemoDetailsType"
              }
            ]
          },
          "affordabilityDetailsList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/affordabilityRequestDetailsListType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_newCreditLimitType": {
        "title": "tns_newCreditLimitType",
        "type": "object",
        "properties": {
          "amount": {
            "type": "number"
          },
          "currencyCode": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_userMemoDetailsType": {
        "title": "tns_userMemoDetailsType",
        "type": "object",
        "properties": {
          "processorTellerId": {
            "type": "string",
            "description": "ID of the Teller Processing the Action"
          },
          "processorTellerName": {
            "type": "string",
            "description": "Name of the Teller Processing the Action"
          },
          "approverTellerId": {
            "type": "string",
            "description": "ID of the Teller Approving the Action"
          },
          "approverTellerName": {
            "type": "string",
            "description": "Name of the Teller Approving the Action"
          }
        },
        "description": ""
      },
      "tns_UpdateCreditLimitResponseSuccessType": {
        "title": "tns_UpdateCreditLimitResponseSuccessType",
        "type": "object",
        "description": ""
      },
      "tns_ValidateCreditCardForReissuanceRequest": {
        "title": "tns_ValidateCreditCardForReissuanceRequest",
        "type": "object",
        "properties": {
          "validateCreditCardForReissuanceRequestDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ValidateCardForReissuanceRequestDetailsType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_ValidateCreditCardForReissuanceResponse": {
        "title": "tns_ValidateCreditCardForReissuanceResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_successType1"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_ValidateCardForReissuanceRequestDetailsType": {
        "title": "tns_ValidateCardForReissuanceRequestDetailsType",
        "type": "object",
        "properties": {
          "institutionCode": {
            "type": "string"
          },
          "cardIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cardIdentifierType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_successType1": {
        "title": "tns_successType1",
        "type": "object",
        "properties": {
          "feeAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_fixedInterestAmountType"
              }
            ]
          },
          "newCardProduct": {
            "type": "string"
          },
          "newExpiryDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          }
        },
        "description": "Successful response."
      },
      "tns_CreditCardLinkAccountRequest": {
        "title": "tns_CreditCardLinkAccountRequest",
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string"
          },
          "bankAccountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "id": {
            "maxLength": 24,
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreditCardLinkAccountResponse": {
        "title": "tns_CreditCardLinkAccountResponse",
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditCardLinkAccountSuccessType": {
        "title": "tns_CreditCardLinkAccountSuccessType",
        "type": "object",
        "description": ""
      },
      "tns_CreditCardReIssuePinRequest": {
        "title": "tns_CreditCardReIssuePinRequest",
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreditCardReIssuePinResponse": {
        "title": "tns_CreditCardReIssuePinResponse",
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditCardPayMethodRequest": {
        "title": "tns_CreditCardPayMethodRequest",
        "required": [
          "cardId"
        ],
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string",
            "description": "Account Identification number,(Credit Cards\r\n\t\t\t\t\t\t\tNumber (Mandatory ))"
          }
        },
        "description": ""
      },
      "tns_CreditCardPayMethodResponse": {
        "title": "tns_CreditCardPayMethodResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardPayMethodResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditCardPayMethodResponseType": {
        "title": "tns_CreditCardPayMethodResponseType",
        "required": [
          "payType",
          "debitType",
          "cycle"
        ],
        "type": "object",
        "properties": {
          "payType": {
            "type": "string"
          },
          "debitType": {
            "type": "string"
          },
          "cycle": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_ReIssueCreditCardRequest": {
        "title": "tns_ReIssueCreditCardRequest",
        "required": [
          "cardId"
        ],
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string"
          },
          "action": {
            "type": "string",
            "description": "Action can have below values\r\n\r\n\t\t\t\t\t\t\tValue Description\r\n\t\t\t\t\t\t\t1\r\n\t\t\t\t\t\t\tNew Card Creation\r\n\t\t\t\t\t\t\t2 Change Product for Card\r\n\t\t\t\t\t\t\t3 Replace Lost/Stolen\r\n\t\t\t\t\t\t\tCard\r\n\t\t\t\t\t\t\t4 Replace Damaged Card\r\n\t\t\t\t\t\t\t5 Replace Card Pin\r\n\t\t\t\t\t\t\t6 Amend Card Details\r\n\t\t\t\t\t\t\t9 Force Card Renewal (Early Renewal)\r\n\t\t\t\t\t\t\t10 Renew Card"
          },
          "cardPIN": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PINType"
              }
            ]
          },
          "deliveryOption": {
            "type": "string"
          },
          "deliveryAddress": {
            "$ref": "#/components/schemas/DeliveryAddressType",
            "description": "SP: Saudi Post FC: Fast courier KC: Kiosk Center"
          },
          "isPlastic": {
            "type": "boolean"
          },
          "fursanMembership": {
            "type": "string",
            "description": "Fursan Membership number of the customer holder of primary card"
          }
        },
        "description": ""
      },
      "DeliveryAddressType": {
        "title": "DeliveryAddressType",
        "type": "object",
        "properties": {
          "buildingNumber": {
            "type": "string"
          },
          "streetName": {
            "type": "string"
          },
          "neighborhood": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          }
        },
        "description": ""
      },
      "tns_ReIssueCreditCardResponse": {
        "title": "tns_ReIssueCreditCardResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ReIssueCreditCardSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_ReIssueCreditCardSuccessType": {
        "title": "tns_ReIssueCreditCardSuccessType",
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Account Number"
          },
          "holderName": {
            "type": "string",
            "description": "HolderName: Customer Name"
          },
          "cardId": {
            "type": "string"
          },
          "statusCode": {
            "type": "string",
            "description": "Card Status Code"
          },
          "statusDescription": {
            "type": "string",
            "description": "Card Status Description"
          },
          "productType": {
            "type": "string",
            "description": "Product Type"
          },
          "cardType": {
            "type": "string",
            "description": "Card Type :\r\n\t\t\t\t\t\tP:Primary\r\n\t\t\t\t\t\tS:Secondary"
          },
          "creditLimit": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Credit Limit of the card"
              }
            ]
          },
          "cardLevelLimit": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Card Level Limit"
              }
            ]
          },
          "expiryDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "Expiry Date"
          },
          "membershipNumber": {
            "type": "string",
            "description": "Membership Number"
          },
          "embossingName": {
            "type": "string",
            "description": "Embossing name used for the card"
          }
        },
        "description": ""
      },
      "tns_UnBlockCreditCardRequest": {
        "title": "tns_UnBlockCreditCardRequest",
        "required": [
          "cardId"
        ],
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_UnBlockCreditCardResponse": {
        "title": "tns_UnBlockCreditCardResponse",
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GetCreditCardAccountPaymentPlansRequest": {
        "title": "tns_GetCreditCardAccountPaymentPlansRequest",
        "type": "object",
        "properties": {
          "getCreditCardPaymentPlansRequestDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_getCreditCardPaymentPlansRequestDetailsType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GetCreditCardAccountPaymentPlansResponse": {
        "title": "tns_GetCreditCardAccountPaymentPlansResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetCreditCardAccountPaymentPlansResponseSuccess"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_getCreditCardPaymentPlansRequestDetailsType": {
        "title": "tns_getCreditCardPaymentPlansRequestDetailsType",
        "type": "object",
        "properties": {
          "ccsAccountIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ccsAccountIdentifierType"
              },
              {
                "description": "Whenever a service does an update/action on an\r\n\t\t\t\t\t\taccount and requires the account to be\r\n\t\t\t\t\t\tspecified, the account\r\n\t\t\t\t\t\tidentifier is used."
              }
            ]
          },
          "cardIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cardIdentifierType"
              }
            ]
          },
          "requestedPaymentPlanStatusList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_requestedPaymentPlanStatusListType"
              }
            ]
          },
          "installmentPeriod": {
            "type": "string",
            "description": "Installment period of the payment plan entries\r\n\t\t\t\t\t\tto get. If not specified, no restrictions on the\r\n\t\t\t\t\t\tnumber of\r\n\t\t\t\t\t\tinstallments is applied, otherwise\r\n\t\t\t\t\t\tonly the plans having the\r\n\t\t\t\t\t\tspecified installment\r\n\t\t\t\t\t\tperiod will be returned"
          },
          "installmentStartDateRange": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ccsDateRangeType"
              },
              {
                "description": "Date range for the installment start date. If\r\n\t\t\t\t\t\tnot specified, no restrictions on the\r\n\t\t\t\t\t\tinstallment start date will\r\n\t\t\t\t\t\tbe applied"
              }
            ]
          },
          "installmentEndDateRange": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ccsDateRangeType"
              },
              {
                "description": "Date range for the installment end date. If not\r\n\t\t\t\t\t\tspecified, no restrictions on the installment\r\n\t\t\t\t\t\tend date will be\r\n\t\t\t\t\t\tapplied"
              }
            ]
          },
          "monthlyInstallmentAmountRange": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ccsAmountRangeType"
              },
              {
                "description": "Amount range for the monthly installment. If not\r\n\t\t\t\t\t\tspecified, no restrictions on the monthly\r\n\t\t\t\t\t\tpayment amount will be\r\n\t\t\t\t\t\tapplied"
              }
            ]
          },
          "pageSetup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_pageSetupType"
              },
              {
                "description": "the number of pages and it size is mentioned in\r\n\t\t\t\t\t\tthis tags"
              }
            ]
          },
          "rescheduleFlag": {
            "type": "boolean",
            "description": "Flag indicating if re-scheduled or\r\n\t\t\t\t\t\tnon-rescheduled plans are required."
          },
          "customerIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/customerIdentifierType"
              },
              {
                "description": "Identifier of the customer to inquire the plans\r\n\t\t\t\t\t\tfor. If specified but no card or account are specified, the plans\r\n\t\t\t\t\t\tlinked to the customer will be returned"
              }
            ]
          },
          "installmentsGroupingFlag": {
            "type": "boolean",
            "description": "Flag indicating if installments needs to be\r\n\t\t\t\t\t\treturned as grouping by amount and tenor for a payment plan"
          }
        },
        "description": ""
      },
      "tns_ccsDateRangeType": {
        "title": "tns_ccsDateRangeType",
        "type": "object",
        "properties": {
          "dateFrom": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "From Date"
          },
          "dateTo": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "To Date"
          }
        },
        "description": ""
      },
      "tns_ccsAmountRangeType": {
        "title": "tns_ccsAmountRangeType",
        "type": "object",
        "properties": {
          "fromAmount": {
            "type": "number",
            "default": 0.0
          },
          "toAmount": {
            "type": "number",
            "default": 0.0
          }
        },
        "description": ""
      },
      "tns_requestedPaymentPlanStatusListType": {
        "title": "tns_requestedPaymentPlanStatusListType",
        "type": "object",
        "properties": {
          "requestedPaymentPlanStatus": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_GetCreditCardAccountPaymentPlansResponseSuccess": {
        "title": "tns_GetCreditCardAccountPaymentPlansResponseSuccess",
        "type": "object",
        "properties": {
          "pageDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pageDetailsType"
              }
            ]
          },
          "accountPaymentPlanList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_accountPaymentPlanListType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_accountPaymentPlanListType": {
        "title": "tns_accountPaymentPlanListType",
        "type": "object",
        "properties": {
          "accountPaymentPlan": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_accountPaymentPlanType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_accountPaymentPlanListTypeType": {
        "title": "tns_accountPaymentPlanListTypeType",
        "type": "object",
        "properties": {
          "accountPaymentPlan": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_accountPaymentPlanTypeType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_accountPaymentPlanTypeType": {
        "title": "tns_accountPaymentPlanTypeType",
        "type": "object",
        "properties": {
          "paymentPlanId": {
            "type": "string",
            "description": "Unique id identifying the payment plan in cortex"
          },
          "institutionCode": {
            "type": "string",
            "description": "Institution code is the account linked to this\r\n\t\t\t\t\t\tpayment plan"
          },
          "accountNumber": {
            "type": "string",
            "description": "Credit account number of the payment plan"
          },
          "paymentPlanSetName": {
            "type": "string",
            "description": "Name of the set payment plan"
          },
          "paymentPlanSetDescription": {
            "type": "string",
            "description": "Payment plan set description"
          },
          "numberOfInstallments": {
            "type": "string",
            "description": "Number of installments for the payment plan"
          },
          "paymentPlanStatus": {
            "type": "string",
            "description": "Status of the payment plan. Supported values are\r\n\r\n\t\t\t\t\t\tvalue:1 Description: Pending Association\r\n\t\t\t\t\t\tvalue:2 Description:\r\n\t\t\t\t\t\tPending Initialization\r\n\t\t\t\t\t\tvalue:3 Description: Initialized\r\n\t\t\t\t\t\tvalue:4\r\n\t\t\t\t\t\tDescription: Cancelled\r\n\t\t\t\t\t\tvalue:5 Description: Completed\r\n\t\t\t\t\t\tvalue:6\r\n\t\t\t\t\t\tDescription: Deleted\r\n\t\t\t\t\t\tvalue:7 Description: Expired\r\n\t\t\t\t\t\tvalue:199\r\n\t\t\t\t\t\tDescription: Unknown Error\r\n\t\t\t\t\t\tvalue:200 Description: Pending\r\n\t\t\t\t\t\tCommodity\r\n\t\t\t\t\t\tInitialization\r\n\t\t\t\t\t\tvalue:201 Description: Initial Commodity Requested"
          },
          "rateBasis": {
            "type": "string",
            "description": "Basis of interest rate"
          },
          "interestRate": {
            "type": "number",
            "description": "Interest rate applied on the payment plan"
          },
          "itemId": {
            "type": "string",
            "description": "Reference to the credit transaction which was\r\n\t\t\t\t\t\tconverted to a payment plan"
          },
          "dateLastInstallment": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "The date the last installment was generated. Not\r\n\t\t\t\t\t\tavailable if no installments are generated yet"
          },
          "paymentPlanSource": {
            "type": "string",
            "description": "Source code identifying the source of creation\r\n\t\t\t\t\t\tof the payment plan\r\n\r\n\t\t\t\t\t\tValue Description\r\n\r\n\t\t\t\t\t\t0 Default\r\n\t\t\t\t\t\t1 Online\r\n\t\t\t\t\t\t2 CCS\r\n\t\t\t\t\t\tFinancial\r\n\t\t\t\t\t\t3 TLOG authorization\r\n\t\t\t\t\t\t4 TLOG financial\r\n\t\t\t\t\t\t5 Input\r\n\t\t\t\t\t\tFile\r\n\t\t\t\t\t\t6 Plan\r\n\t\t\t\t\t\tProgram\r\n\t\t\t\t\t\t7 Web-services authorization\r\n\t\t\t\t\t\t8 Web-services financial"
          },
          "user": {
            "type": "string",
            "description": "Id of the user that initiated the payment plan."
          },
          "creationDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "Date the payment plan was created"
          },
          "description": {
            "type": "string",
            "description": "Free form notes associated with the assignment,\r\n\t\t\t\t\t\tentered by the CORTEX user who created the plan."
          },
          "transactionLogId": {
            "type": "string",
            "description": "Cortex transaction log ID identifying the\r\n\t\t\t\t\t\tfinancial transaction that generated this\r\n\t\t\t\t\t\tpayment plan. Only\r\n\t\t\t\t\t\tavailable in case the\r\n\t\t\t\t\t\ttransaction is an actual financial\r\n\t\t\t\t\t\ttransaction\r\n\t\t\t\t\t\t(Purchase/Cash Withdrawal)."
          },
          "acquirerId": {
            "type": "string",
            "description": "ID of the transaction acquirer"
          },
          "retreivalReferenceNumber": {
            "type": "string",
            "description": "Retrieval reference number identifying the\r\n\t\t\t\t\t\ttransaction from an acquirer that was converted\r\n\t\t\t\t\t\tto payment plan"
          },
          "transctionCode": {
            "type": "string",
            "description": "Cortex transaction code. Identifies the type of\r\n\t\t\t\t\t\ttransaction. Only valid in case the credit\r\n\t\t\t\t\t\ttransaction is a\r\n\t\t\t\t\t\tfinancial one."
          },
          "billingAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              },
              {
                "description": "Amount of the transaction in the billing\r\n\t\t\t\t\t\tcurrency (currency of the account) that was\r\n\t\t\t\t\t\tconverted to payment\r\n\t\t\t\t\t\tplan"
              }
            ]
          },
          "planAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              },
              {
                "description": "Actual amount part of the billing amount that\r\n\t\t\t\t\t\twas\r\n\t\t\t\t\t\tconverted to payment plan."
              }
            ]
          },
          "nextInstallment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              },
              {
                "description": "Next installment amount to be paid"
              }
            ]
          },
          "lastInstallmentAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              },
              {
                "description": "Last installment amount to be paid"
              }
            ]
          },
          "installmentInterest": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              },
              {
                "description": "Interest on a single installment"
              }
            ]
          },
          "lastInstallmentInterest": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              },
              {
                "description": "Interest on the last installment amount"
              }
            ]
          },
          "remainingNumberOfInstallments": {
            "type": "string",
            "description": "Remaining number of installment before the plan\r\n\t\t\t\t\t\tis completed"
          },
          "initializationDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "Date the payment plan was initialized. Only\r\n\t\t\t\t\t\tavailable in case the payment plan is in initialized status"
          },
          "transactionLocalDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "Local date of the transaction that was converted\r\n\t\t\t\t\t\tto payment plan"
          },
          "cardAcceptorLocation": {
            "type": "string",
            "description": "Card acceptor location of the transaction\r\n\t\t\t\t\t\tconverted into a payment plan"
          },
          "mcc": {
            "type": "string",
            "description": "Merchant category code of the transaction. Only\r\n\t\t\t\t\t\tavailable for actual auth/financial transactions. To get the list\r\n\t\t\t\t\t\tof supported values, please use the GetNumericDescription service\r\n\t\t\t\t\t\twith description type as 'ab'"
          },
          "transactionAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              },
              {
                "description": "Original transaction amount that was converted\r\n\t\t\t\t\t\tinto a payment plan"
              }
            ]
          },
          "lastInstallmentDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "Date the last installment will be due"
          },
          "cancellationDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "Date the installment was cancelled. Only\r\n\t\t\t\t\t\tavailable in case the plan is cancelled"
          },
          "installmentChargeCalculationMethod": {
            "type": "string",
            "description": "Specifies the method used to calculate the\r\n\t\t\t\t\t\tcharge\r\n\t\t\t\t\t\ton the payment plan."
          },
          "fullPlanAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              },
              {
                "description": "Full amount of the payment plan including the\r\n\t\t\t\t\t\tfees (including the already paid installments)"
              }
            ]
          },
          "fullInstallmentFees": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              },
              {
                "description": "The full fees for the installments (including\r\n\t\t\t\t\t\tthe already paid ones)"
              }
            ]
          },
          "remainingPlanAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              },
              {
                "description": "Remaining amount to be paid. In case the plan is\r\n\t\t\t\t\t\tcanceled/deleted, this will have what the\r\n\t\t\t\t\t\tremaining amount was\r\n\t\t\t\t\t\tbefore the plan was\r\n\t\t\t\t\t\tcanceled/deleted. This amount also includes the\r\n\t\t\t\t\t\tremaining fees amount"
              }
            ]
          },
          "remainingPlanAmountNoFees": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              },
              {
                "description": "Remaining amount to be paid excluding the fees.\r\n\t\t\t\t\t\tIn case the plan is canceled/deleted, this will\r\n\t\t\t\t\t\thave what the\r\n\t\t\t\t\t\tremaining amount was before the\r\n\t\t\t\t\t\tplan was canceled/deleted."
              }
            ]
          },
          "remainingInstallmentFees": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              },
              {
                "description": "Remaining fees amount to be deducted from the\r\n\t\t\t\t\t\tcustomer. In case the plan is canceled/deleted,\r\n\t\t\t\t\t\tthis will have what\r\n\t\t\t\t\t\tthe remaining installments\r\n\t\t\t\t\t\tfees amount was before\r\n\t\t\t\t\t\tcanceling/deleting the\r\n\t\t\t\t\t\tplan"
              }
            ]
          },
          "reschedule": {
            "type": "boolean"
          }
        },
        "description": ""
      },
      "tns_accountPaymentPlanType": {
        "title": "tns_accountPaymentPlanType",
        "type": "object",
        "properties": {
          "paymentPlanId": {
            "type": "string"
          },
          "institutionCode": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          },
          "paymentPlanSetName": {
            "type": "string"
          },
          "paymentPlanSetDescription": {
            "type": "string"
          },
          "numberOfInstallments": {
            "type": "string"
          },
          "paymentPlanStatus": {
            "type": "string"
          },
          "rateBasis": {
            "type": "string"
          },
          "interestRate": {
            "type": "number"
          },
          "itemId": {
            "type": "string"
          },
          "dateLastInstallment": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "paymentPlanSource": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "creationDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "tlogId": {
            "type": "string"
          },
          "acquirerId": {
            "type": "string"
          },
          "retreivalReferenceNumber": {
            "type": "string"
          },
          "transctionCode": {
            "type": "string"
          },
          "billingAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_fixedInterestAmountType"
              }
            ]
          },
          "planAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_fixedInterestAmountType"
              },
              {
                "description": "Actual amount part of the billing amount\r\n\t\t\t\t\t\tthat was\r\n\t\t\t\t\t\tconverted to payment plan."
              }
            ]
          },
          "pan": {
            "type": "string"
          },
          "nextInstallment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_fixedInterestAmountType"
              }
            ]
          },
          "lastInstallmentAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_fixedInterestAmountType"
              }
            ]
          },
          "installmentInterest": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_fixedInterestAmountType"
              }
            ]
          },
          "lastInstallmentInterest": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_fixedInterestAmountType"
              }
            ]
          },
          "remainingNumberOfInstallments": {
            "type": "string"
          },
          "initializationDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "transactionLocalDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "cardAcceptorLocation": {
            "type": "string"
          },
          "mcc": {
            "type": "string"
          },
          "transactionAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_fixedInterestAmountType"
              }
            ]
          },
          "lastInstallmentDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "cancellationDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "maskedPan": {
            "type": "string"
          },
          "installmentChargeCalculationMethod": {
            "type": "string"
          },
          "fullPlanAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/creditCardAmountType"
              },
              {
                "description": "Full amount of the payment plan including the\r\n\t\t\t\t\t\tfees (including the already paid installments)"
              }
            ]
          },
          "fullInstallmentFees": {
            "allOf": [
              {
                "$ref": "#/components/schemas/creditCardAmountType"
              },
              {
                "description": "The full fees for the installments (including\r\n\t\t\t\t\t\tthe already paid ones)"
              }
            ]
          },
          "remainingPlanAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/creditCardAmountType"
              },
              {
                "description": "Remaining amount to be paid. In case the plan is\r\n\t\t\t\t\t\tcanceled/deleted, this will have what the\r\n\t\t\t\t\t\tremaining amount was\r\n\t\t\t\t\t\tbefore the plan was\r\n\t\t\t\t\t\tcanceled/deleted. This amount also includes the\r\n\t\t\t\t\t\tremaining fees amount"
              }
            ]
          },
          "remainingPlanAmountNoFees": {
            "allOf": [
              {
                "$ref": "#/components/schemas/creditCardAmountType"
              },
              {
                "description": "Remaining amount to be paid excluding the fees.\r\n\t\t\t\t\t\tIn case the plan is canceled/deleted, this will\r\n\t\t\t\t\t\thave what the\r\n\t\t\t\t\t\tremaining amount was before the\r\n\t\t\t\t\t\tplan was canceled/deleted."
              }
            ]
          },
          "remainingInstallmentFees": {
            "allOf": [
              {
                "$ref": "#/components/schemas/creditCardAmountType"
              },
              {
                "description": "Remaining fees amount to be deducted from the\r\n\t\t\t\t\t\tcustomer. In case the plan is canceled/deleted,\r\n\t\t\t\t\t\tthis will have what\r\n\t\t\t\t\t\tthe remaining installments\r\n\t\t\t\t\t\tfees amount was before\r\n\t\t\t\t\t\tcanceling/deleting the\r\n\t\t\t\t\t\tplan"
              }
            ]
          },
          "reschedule": {
            "type": "boolean",
            "description": "Flag indicating if the plan is a rescheduling\r\n\t\t\t\t\t\tplan"
          },
          "balloonPayment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_fixedInterestAmountType"
              },
              {
                "description": "Balloon payment"
              }
            ]
          },
          "paymentPlanSchedule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_paymentPlanScheduleType2"
              },
              {
                "description": "Payment Plan Schedule"
              }
            ]
          },
          "paymentPlanGrouped": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_PaymentPlanGroupedType"
              }
            ]
          },
          "tenorBreach": {
            "type": "boolean",
            "description": "Flag indicating if Tenor is breached (Single EMI\r\n\t\t\t\t\t\tbreached as per the\r\n\t\t\t\t\t\tmaximum eligible age)"
          },
          "paymentPlanCode": {
            "type": "integer",
            "description": "To determine if plan is SPP/ALA DOFAAT and so.\r\n\t\t\t\t\t\t01 - Smart Payment plan (SPP)\r\n\t\t\t\t\t\t02 - ALA DOFAAT\r\n\t\t\t\t\t\tand so on.",
            "format": "int32"
          }
        },
        "description": ""
      },
      "tns_PaymentPlanGroupedType": {
        "title": "tns_PaymentPlanGroupedType",
        "type": "object",
        "properties": {
          "paymentPlanGroupedEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_PaymentPlanGroupedEntryType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_PaymentPlanGroupedEntryType": {
        "title": "tns_PaymentPlanGroupedEntryType",
        "type": "object",
        "properties": {
          "paymentAmount": {
            "type": "number",
            "description": "Payment amount of this installment"
          },
          "numberOfInstallments": {
            "type": "string",
            "description": "Number of installments for this payment amount"
          }
        },
        "description": ""
      },
      "tns_GetCreditCardHistoryRequest": {
        "title": "tns_GetCreditCardHistoryRequest",
        "type": "object",
        "properties": {
          "cardIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cardIdentifierType"
              }
            ]
          },
          "shipmentNumber": {
            "type": "string"
          },
          "historyTypeList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_historyTypeListType"
              }
            ]
          },
          "startDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "endDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "pageSetup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_pageSetupType"
              },
              {
                "description": "the number of pages and it size is\r\n\t\t\t\t\t\t\tmentioned in\r\n\t\t\t\t\t\t\tthis tags"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GetCreditCardHistoryResponse": {
        "title": "tns_GetCreditCardHistoryResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_creditcardhistorysuccesstype"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_historyTypeListType": {
        "title": "tns_historyTypeListType",
        "type": "object",
        "properties": {
          "historyType": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_creditcardhistorysuccesstype": {
        "title": "tns_creditcardhistorysuccesstype",
        "type": "object",
        "properties": {
          "pageDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pageDetailsType"
              }
            ]
          },
          "cardHistoryList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_cardHistoryListType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_cardHistoryListType": {
        "title": "tns_cardHistoryListType",
        "type": "object",
        "properties": {
          "cardHistoryEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/cardHistoryEntryType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "cardHistoryEntryType": {
        "title": "cardHistoryEntryType",
        "type": "object",
        "properties": {
          "batchNumber": {
            "type": "string"
          },
          "eventType": {
            "type": "string"
          },
          "eventSource": {
            "type": "string"
          },
          "eventDateAndTime": {
            "$ref": "../../commonschemas/schemas.json#/DateTimeOptional"
          },
          "cortexSystemDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional"
          },
          "reason": {
            "type": "string"
          },
          "eventNotes": {
            "type": "string"
          },
          "feeWaiver": {
            "type": "string"
          },
          "oldStatusCode": {
            "type": "string"
          },
          "newStatusCode": {
            "type": "string"
          },
          "whySet": {
            "type": "string"
          },
          "whoSet": {
            "type": "string"
          },
          "cardExpiryDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional"
          },
          "additionalDetails": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreditCardSmsPushAndPullRequest": {
        "title": "tns_CreditCardSmsPushAndPullRequest",
        "type": "object",
        "properties": {
          "creditCardSmsPushAndPullRequestDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_creditCardSmsPushAndPullRequestDetailsType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditCardSmsPushAndPullResponse": {
        "title": "tns_CreditCardSmsPushAndPullResponse",
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_creditCardSmsPushAndPullRequestDetailsType": {
        "title": "tns_creditCardSmsPushAndPullRequestDetailsType",
        "type": "object",
        "properties": {
          "smsCardIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_smsCardIdentifierType"
              }
            ]
          },
          "action": {
            "type": "string"
          },
          "installmentOptionsDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_installmentOptionsDetailsType"
              }
            ]
          },
          "cashAdvanceDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_cashAdvanceDetailsType"
              }
            ]
          },
          "insuranceProductDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InsuranceProductDetailsType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_smsCardIdentifierType": {
        "title": "tns_smsCardIdentifierType",
        "type": "object",
        "properties": {
          "mobileNumber": {
            "type": "string"
          },
          "creditCardLastFourDigits": {
            "type": "string"
          },
          "expiryDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_installmentOptionsDetailsType": {
        "title": "tns_installmentOptionsDetailsType",
        "type": "object",
        "properties": {
          "transactionAmount": {
            "type": "number",
            "default": 0.0
          },
          "transactionIdentifier": {
            "type": "string"
          },
          "tenor": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_cashAdvanceDetailsType": {
        "title": "tns_cashAdvanceDetailsType",
        "type": "object",
        "properties": {
          "transactionAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_fixedInterestAmountType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_InsuranceProductDetailsType": {
        "title": "tns_InsuranceProductDetailsType",
        "type": "object",
        "properties": {
          "insuranceProductCode": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_UpdateCreditCardPrintingStatusRequest": {
        "title": "tns_UpdateCreditCardPrintingStatusRequest",
        "required": [
          "cardIdentifier",
          "newStatus"
        ],
        "type": "object",
        "properties": {
          "cardIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cardIdentifierType"
              }
            ]
          },
          "newStatus": {
            "type": "string"
          },
          "forceUpdate": {
            "type": "boolean"
          },
          "printingMessage": {
            "type": "string"
          },
          "requestSource": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_UpdateCreditCardPrintingStatusResponse": {
        "title": "tns_UpdateCreditCardPrintingStatusResponse",
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_UpdateCreditCardApplicationRequest": {
        "title": "tns_UpdateCreditCardApplicationRequest",
        "type": "object",
        "properties": {
          "ApplicationIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ApplicationIdentifierType"
              }
            ]
          },
          "ApplicationRequestDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ApplicationRequestDetailsType"
              }
            ]
          },
          "ApplicationProcessingDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ApplicationProcessingDetailsType"
              }
            ]
          },
          "ApplicationCustomerDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ApplicationCustomerDetailsType"
              }
            ]
          },
          "ApplicationEmploymentDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ApplicationEmploymentDetailsType"
              }
            ]
          },
          "ApplicationFinancialInformation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ApplicationFinancialInformationType"
              }
            ]
          },
          "ApplicationOtherInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ApplicationOtherInfoType"
              }
            ]
          },
          "ApplicationCreditBureauChecks": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ApplicationCreditBureauChecksType"
              }
            ]
          },
          "ApplicationAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ApplicationAddressType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_ApplicationIdentifierType": {
        "title": "tns_ApplicationIdentifierType",
        "required": [
          "institutionCode"
        ],
        "type": "object",
        "properties": {
          "institutionCode": {
            "type": "string",
            "description": "Institution Code the application belongs to"
          },
          "applicationNumber": {
            "type": "string",
            "description": "Unique application number under a specific\r\n\t\t\t\t\t\tinstitution. Mandatory in case the external application number is\r\n\t\t\t\t\t\tnot specified"
          },
          "externalApplicationNumber": {
            "type": "string",
            "description": "External Application number under a specific\r\n\t\t\t\t\t\tinstitution"
          }
        },
        "description": ""
      },
      "tns_ApplicationRequestDetailsType": {
        "title": "tns_ApplicationRequestDetailsType",
        "type": "object",
        "properties": {
          "applicationType": {
            "type": "string",
            "description": "New application type for the application. The\r\n\t\t\t\t\t\tapplication type update is based on back-end defined rules and\r\n\t\t\t\t\t\twill also depend on the application status. If the new application\r\n\t\t\t\t\t\ttype is a corporate application type and the application is not\r\n\t\t\t\t\t\talready linked to a corporate entity, the entity will need to be\r\n\t\t\t\t\t\tspecified in the request. To get the list of supported application\r\n\t\t\t\t\t\ttypes, please use the GetApplicationTypeList service"
          },
          "entityCode": {
            "type": "string",
            "description": "Unique corporate code identifying the\r\n\t\t\t\t\t\tcompany/entity to link the application to. Required in case of\r\n\t\t\t\t\t\tcorporate applications or change of the corporate entity, should\r\n\t\t\t\t\t\tbe omitted in case of non-corporate applications. To get the list\r\n\t\t\t\t\t\tof defined entities in the system"
          },
          "product": {
            "type": "string",
            "description": "Card product required for the new credit card.\r\n\t\t\t\t\t\tTo get the list of supported values, use the GetCardProductList\r\n\t\t\t\t\t\tservice. A back-end configuration is done to specify the\r\n\t\t\t\t\t\tapplication statuses for which the product update is allowed and\r\n\t\t\t\t\t\tdepends on the implementation"
          },
          "organization": {
            "type": "string",
            "description": "Organization to create the application/card\r\n\t\t\t\t\t\tunder. These values are bank specific. Cortex does not do any\r\n\t\t\t\t\t\tvalidation on this value. It is used for logging purposes and\r\n\t\t\t\t\t\tmight be used in bank specific implementations"
          },
          "branchCode": {
            "type": "string",
            "description": "New branch code to link to the application card.\r\n\t\t\t\t\t\tTo get the list of defined branch codes in Cortex, you can use the\r\n\t\t\t\t\t\tGetBranchList service"
          },
          "salesSource": {
            "type": "string",
            "description": "New sales sources for the credit\r\n\t\t\t\t\t\tcard/application. This field is used for customer specific\r\n\t\t\t\t\t\tpurposes. Cortex does not validate this field. It is used for\r\n\t\t\t\t\t\tlogging purposes only"
          },
          "deliveryMethod": {
            "type": "string",
            "description": "New delivery method for the card in case the\r\n\t\t\t\t\t\tapplication is approved. To get the list of supported value, use\r\n\t\t\t\t\t\tthe GetStringDescription service with description type as \"dlvmtd\""
          },
          "deliveryBranchCode": {
            "type": "string",
            "description": "Branch code to deliver the card to. Required in\r\n\t\t\t\t\t\tcase the delivery method is selected as branch delivery. To get\r\n\t\t\t\t\t\tthe list of defined branch codes, use the GetBranchList service"
          },
          "programCode": {
            "type": "string",
            "description": "New program code for the credit\r\n\t\t\t\t\t\tcard/application. This fields is used for customer specific\r\n\t\t\t\t\t\tpurposes. Cortex does not validate this field. It is used for\r\n\t\t\t\t\t\tlogging purposes only"
          },
          "campaign": {
            "type": "string",
            "description": "New campaign for the credit card/application.\r\n\t\t\t\t\t\tThis field is used for customer specific purposes. Cortex does not\r\n\t\t\t\t\t\tvalidate this field. It is used for logging purposes only"
          },
          "plastic": {
            "type": "string",
            "description": "New plastic to use for the credit card. This\r\n\t\t\t\t\t\tfield is used for customer specific purposes. Cortex does not\r\n\t\t\t\t\t\tvalidate this field. It is used for logging purposes only"
          },
          "design": {
            "type": "string",
            "description": "New design to use for the credit card. This\r\n\t\t\t\t\t\tfield is used for customer specific purposes. Cortex does not\r\n\t\t\t\t\t\tvalidate this field. It is used for logging purposes only"
          },
          "notes": {
            "type": "string",
            "description": "Notes entered by the operator when updating the\r\n\t\t\t\t\t\tapplication. This value is set in the history of the application.\r\n\t\t\t\t\t\tIf not specified, set to a default value \"Application Updated\""
          }
        },
        "description": ""
      },
      "tns_ApplicationProcessingDetailsType": {
        "title": "tns_ApplicationProcessingDetailsType",
        "type": "object",
        "properties": {
          "applicationStatus": {
            "type": "string",
            "description": "Status to set for the application. A back-end\r\n\t\t\t\t\t\tconfiguration exists to specify which status transitions are\r\n\t\t\t\t\t\tallowed. i.e if an application is declined, it should not be\r\n\t\t\t\t\t\tallowed to set it back to pending approval/pending decline..."
          },
          "processControl": {
            "type": "string",
            "description": "New Process control to set for the application.\r\n\t\t\t\t\t\tIt can be used/updated to change the flow the application goes\r\n\t\t\t\t\t\tthrough during the processing. To get the list of supported\r\n\t\t\t\t\t\tprocess controls, use the GetProcessControlList service"
          },
          "processStage": {
            "type": "string",
            "description": "New process stage defined under the process\r\n\t\t\t\t\t\tcontrol to start with. This can be used to skip specific\r\n\t\t\t\t\t\tprocessing if not required for an application or restart the\r\n\t\t\t\t\t\tprocessing from a specific stage. To get a list of supported\r\n\t\t\t\t\t\tprocessing stages, use the GetProcessControlList service with\r\n\t\t\t\t\t\tReturnProcessStages flag set to true"
          },
          "processStageStatus": {
            "type": "string",
            "description": "Status of the processing stage. Can be used in\r\n\t\t\t\t\t\tcase an external system did the processing for a specific stage\r\n\t\t\t\t\t\tand cortex needs to be updated with the result or to specify that\r\n\t\t\t\t\t\tthe current or specified process stage should be repeated.\r\n\t\t\t\t\t\tSupported values are:\r\n\t\t\t\t\t\t- S: Process stage successful. Specifies that\r\n\t\t\t\t\t\tthe process stage was\r\n\t\t\t\t\t\tcompleted successfully and cortex needs to\r\n\t\t\t\t\t\tcontinue processing\r\n\t\t\t\t\t\tfrom the next processing stage in case defined\r\n\t\t\t\t\t\tin the process\r\n\t\t\t\t\t\tcontrol\r\n\t\t\t\t\t\t- F: Process stage failed. Specifies that the\r\n\t\t\t\t\t\tprocess stage was\r\n\t\t\t\t\t\tcompleted with failure and cortex only needs to\r\n\t\t\t\t\t\tlog the\r\n\t\t\t\t\t\tapplication\r\n\t\t\t\t\t\t- R: Process stage needs to be repeated. Cortex\r\n\t\t\t\t\t\twill attempt to\r\n\t\t\t\t\t\trepeat the specified process stage and continue the\r\n\t\t\t\t\t\tflow in case\r\n\t\t\t\t\t\tdefined"
          },
          "externalScore": {
            "type": "string",
            "description": "Score calculated by an external system and that\r\n\t\t\t\t\t\tneeds to be logged by cortex. This value is not overwritten even\r\n\t\t\t\t\t\tif cortex is configured to do the scoring. The value can be used\r\n\t\t\t\t\t\tin the rule engine for other purposes"
          },
          "requestedLimit": {
            "type": "string",
            "description": "Specifies the credit limit requested by the\r\n\t\t\t\t\t\tcustomer. This does not necessarily mean that this limit will be\r\n\t\t\t\t\t\tassigned for the card. It can be used by the rule engine for limit\r\n\t\t\t\t\t\tassignment"
          },
          "suggestedLimit": {
            "type": "string",
            "description": "Specifies the limit suggested by the operator to\r\n\t\t\t\t\t\tthe applicant or by an external system. This does not necessarily\r\n\t\t\t\t\t\tmean that this limit will be assigned for the card. It can be used\r\n\t\t\t\t\t\tby the rule engine for limit assignment"
          },
          "allowedLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/allowedLimitType"
              },
              {
                "description": "Allowed limit selected for the application. Used\r\n\t\t\t\t\t\tin case the application has multiple allowed values calculated and\r\n\t\t\t\t\t\tthe requesting channel is selecting one"
              }
            ]
          },
          "eligibilityCheckResult": {
            "type": "string",
            "description": "Eligibility check result in case the eligibility\r\n\t\t\t\t\t\tcheck is done by an external system. In case cortex is configured\r\n\t\t\t\t\t\tto do the eligibility check, this value is overwritten by the\r\n\t\t\t\t\t\tresult generated by Cortex."
          },
          "eligibilityCheckDescription": {
            "type": "string",
            "description": "Description of the eligibility check result in\r\n\t\t\t\t\t\tcase the eligibility check is done by an external system. In case\r\n\t\t\t\t\t\tcortex is configured to do the eligibility check, this value is\r\n\t\t\t\t\t\toverwritten by the result generated by cortex"
          }
        },
        "description": ""
      },
      "tns_ApplicationCustomerDetailsType": {
        "title": "tns_ApplicationCustomerDetailsType",
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Customer title"
          },
          "firstName": {
            "type": "string",
            "description": "Customer First Name"
          },
          "secondName": {
            "type": "string",
            "description": "Customer Second Name"
          },
          "thirdName": {
            "type": "string",
            "description": "Customer third name"
          },
          "lastName": {
            "type": "string",
            "description": "Customer Last Name"
          },
          "fullName": {
            "type": "string",
            "description": "Customer Full name"
          },
          "embossName": {
            "type": "string",
            "description": "Embossing name to use for the card in case the\r\n\t\t\t\t\t\tapplication is approved and a card created"
          },
          "placeOfBirth": {
            "type": "string",
            "description": "Customer place of birth in case available"
          },
          "dateOfBirth": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Gregorian customer date of birth"
          },
          "localizedDateOfBirth": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Date of birth in alternative/localized date of\r\n\t\t\t\t\t\tbirth."
          },
          "age": {
            "type": "string",
            "description": "Customer age."
          },
          "gender": {
            "type": "string",
            "description": "Customer Gender. Supported values: - M: Male -\r\n\t\t\t\t\t\tF: Female - U: Unknown"
          },
          "married": {
            "type": "string",
            "description": "Customer marital status. Supported values are: -\r\n\t\t\t\t\t\tS: Single - M: Married - D: Divorced - W:\r\n\t\t\t\t\t\tWidowed - U: Unknown"
          },
          "nationality": {
            "type": "string",
            "description": "Customer nationality in numeric ISO country\r\n\t\t\t\t\t\tcode. To get the list of supported ISO country\r\n\t\t\t\t\t\tcodes, use the\r\n\t\t\t\t\t\tGetCountryList service"
          },
          "idType": {
            "type": "string",
            "description": "ID type presented by the customer. To get the\r\n\t\t\t\t\t\tlist of supported values, use the\r\n\t\t\t\t\t\tGetStringDescription service with\r\n\t\t\t\t\t\tdescription\r\n\t\t\t\t\t\ttype as \"idtype\""
          },
          "idNumber": {
            "type": "string",
            "description": "Id Number of the customer"
          },
          "idExpiryDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "ID expiry date."
          },
          "educationLevel": {
            "type": "string",
            "description": "Education level of the customer. The usage of\r\n\t\t\t\t\t\tthis field is customer specific. Cortex does not\r\n\t\t\t\t\t\tvalidate the value\r\n\t\t\t\t\t\tof this field. It's saved for\r\n\t\t\t\t\t\tlogging purposes and can be used in\r\n\t\t\t\t\t\tthe rule\r\n\t\t\t\t\t\tengine"
          },
          "professionCode": {
            "type": "string",
            "description": "Profession code of the customer. To get the list\r\n\t\t\t\t\t\tof supported values for this field, use the\r\n\t\t\t\t\t\tGetNumericDescription\r\n\t\t\t\t\t\tservice with description\r\n\t\t\t\t\t\ttype as \"pr\""
          },
          "numberOfDependents": {
            "type": "string",
            "description": "Number of dependents for the customer."
          }
        },
        "description": ""
      },
      "tns_ApplicationEmploymentDetailsType": {
        "title": "tns_ApplicationEmploymentDetailsType",
        "type": "object",
        "properties": {
          "employerName": {
            "type": "string",
            "description": "Customer title"
          },
          "employmentYears": {
            "type": "string",
            "description": "Customer First Name"
          },
          "employmentMonths": {
            "type": "string",
            "description": "Customer Second Name"
          },
          "employerPhoneArea": {
            "type": "string",
            "description": "Customer third name"
          },
          "employerPhoneNumber": {
            "type": "string",
            "description": "Customer Last Name"
          },
          "employerPhoneExtension": {
            "type": "string",
            "description": "Customer Full name"
          },
          "employerMobile": {
            "type": "string",
            "description": "Embossing name to use for the card in case the\r\n\t\t\t\t\t\tapplication is approved and a card created"
          },
          "employerFaxArea": {
            "type": "string",
            "description": "Customer place of birth in case available"
          },
          "employerFax": {
            "type": "string",
            "description": "Gregorian customer date of birth"
          },
          "employerCity": {
            "type": "string",
            "description": "Date of birth in alternative/localized date of\r\n\t\t\t\t\t\tbirth."
          },
          "employerAddress": {
            "type": "string",
            "description": "Customer age."
          },
          "employmentActivity": {
            "type": "string",
            "description": "Customer Gender. Supported values:\r\n\t\t\t\t\t\t- M: Male\r\n\t\t\t\t\t\t- F:\r\n\t\t\t\t\t\tFemale\r\n\t\t\t\t\t\t- U: Unknown"
          }
        },
        "description": ""
      },
      "tns_ApplicationFinancialInformationType": {
        "title": "tns_ApplicationFinancialInformationType",
        "type": "object",
        "properties": {
          "cif": {
            "type": "string",
            "description": "Customer identifier in the bank. This field is\r\n\t\t\t\t\t\tused to identify if the customer already exists and gather\r\n\t\t\t\t\t\thistorical details required for rule processing. It is available\r\n\t\t\t\t\t\tin the update to allow setting it in case not set or updating it\r\n\t\t\t\t\t\tin case of errors"
          },
          "bankAccountNumber": {
            "type": "string",
            "description": "Bank account number used for auto-debit in case\r\n\t\t\t\t\t\trequired or as reference to identify a customer in the core\r\n\t\t\t\t\t\tbanking system"
          },
          "currencyCode": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "Currency Code of the main debit account. The\r\n\t\t\t\t\t\tsame currency is used for all amounts specified in this request\r\n\t\t\t\t\t\tand for the newly created credit account. To get the list of\r\n\t\t\t\t\t\tsupported ISO currency codes, use the GetCurrencyList service"
          },
          "creditAccountNumber": {
            "type": "string",
            "description": "Credit account number in case the number is\r\n\t\t\t\t\t\tbeing generated by an external system."
          },
          "accountType": {
            "type": "string",
            "description": "Account type of the new credit account to be\r\n\t\t\t\t\t\tcreated. Depending on the implementation, the usage of this field\r\n\t\t\t\t\t\tmight vary. Please validate the usage with an FIS officer. In case\r\n\t\t\t\t\t\tthe field is used to refer to the credit account type, you can get\r\n\t\t\t\t\t\tthe list of allowed values using the GetAccountTypeList service"
          },
          "openDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Account open date."
          },
          "income": {
            "type": "number",
            "description": "Income of the customer."
          },
          "additionalIncome": {
            "type": "number",
            "description": "Additional income for the customer"
          },
          "totalIncome": {
            "type": "number",
            "description": "Total income of the customer."
          },
          "currentBalance": {
            "type": "number",
            "description": "Current balance of the customer."
          },
          "averageBalance": {
            "type": "number",
            "description": "Average balance of the customer for a bank\r\n\t\t\t\t\t\tspecific period. It's up to the bank to determine the period used."
          },
          "assetsBalance": {
            "type": "number",
            "description": "Assets equivalent balance."
          },
          "insuranceBalance": {
            "type": "number",
            "description": "Insurance balance of the customer."
          },
          "depositAmount": {
            "type": "number",
            "description": "Deposit amount placed/reserved by the customer\r\n\t\t\t\t\t\tin case any."
          },
          "guarenteeAccountNumber": {
            "type": "string",
            "description": "Account number used for guarantee in case."
          },
          "guarenteeAmount": {
            "type": "number",
            "description": "Amount specified by the customer as guarantee"
          },
          "instalmentAmount": {
            "type": "number",
            "description": "Installment amount specified by the customer.\r\n\t\t\t\t\t\tUsed for logging purposes only and can be used in the rule engine"
          },
          "autoDebit": {
            "type": "string",
            "description": "Specifies if auto-debit should be applied for\r\n\t\t\t\t\t\tthe payments for the due amount. Allowed values:\r\n\t\t\t\t\t\t- Y – Yes\r\n\t\t\t\t\t\t- N – No"
          },
          "paymentMethod": {
            "type": "string",
            "description": "Specifies the payment method for the customer\r\n\t\t\t\t\t\t(full or minimum due). To get the list of supported values, use\r\n\t\t\t\t\t\tthe GetNumericDescription service with description type as \"paym\""
          },
          "billingCycle": {
            "type": "string",
            "description": "Billing cycle to link the new credit account to.\r\n\t\t\t\t\t\tTo get the list of supported values, use the GetBillingCycleList\r\n\t\t\t\t\t\tservice. A back-end configuration is available that specifies for\r\n\t\t\t\t\t\twhich application statuses the cycle can be changed. i.e. for an\r\n\t\t\t\t\t\tapproved application, the cycle update is not allowed"
          }
        },
        "description": ""
      },
      "tns_ApplicationOtherInfoType": {
        "title": "tns_ApplicationOtherInfoType",
        "type": "object",
        "properties": {
          "eCommerce": {
            "type": "string",
            "description": "Specifies if the card can be used for\r\n\t\t\t\t\t\te-commerce."
          },
          "numberOfCards": {
            "type": "string",
            "description": "Number of cards the customer has in the bank."
          },
          "otherBank": {
            "type": "string",
            "description": "Specifies if the customer has cards in another\r\n\t\t\t\t\t\tbank."
          },
          "otherBankDescription": {
            "type": "string",
            "description": "Description of the other bank the customer has\r\n\t\t\t\t\t\tcards in, in case available."
          },
          "oldCardNumber": {
            "type": "string",
            "description": "Old credit card number in case the customer\r\n\t\t\t\t\t\talready had one."
          },
          "insuranceProduct": {
            "type": "string",
            "description": "Insurance product in case requested by the\r\n\t\t\t\t\t\tcustomer."
          },
          "socialCode": {
            "type": "string",
            "description": "Social code categorizing the customer. To get\r\n\t\t\t\t\t\tthe list of supported values, use the GetStringDescription service\r\n\t\t\t\t\t\twith description type \"socio\""
          },
          "jobGrade": {
            "type": "string",
            "description": "Job grade of the customer."
          },
          "flags": {
            "allOf": [
              {
                "$ref": "#/components/schemas/flagsType"
              },
              {
                "description": "Flag list to be updated if any. Each position\r\n\t\t\t\t\t\tindicates a specific flag"
              }
            ]
          },
          "checkFlags": {
            "allOf": [
              {
                "$ref": "#/components/schemas/checkFlagsType"
              },
              {
                "description": "Check flag list to be updated if any. Each\r\n\t\t\t\t\t\tposition indicates a specific check flag"
              }
            ]
          },
          "maker": {
            "type": "string",
            "description": "User that initiated the application update."
          },
          "checker": {
            "type": "string",
            "description": "User that approved the application update."
          },
          "referredTo": {
            "type": "string",
            "description": "Specifies if the application has been referred\r\n\t\t\t\t\t\tto another department."
          },
          "referralReason": {
            "type": "string",
            "description": "Reason the application was referred to another\r\n\t\t\t\t\t\tdepartment"
          },
          "userData1": {
            "type": "string",
            "description": "Customer specific data 1. Used for customer\r\n\t\t\t\t\t\tspecific purposes. To get the usage of this field, please validate\r\n\t\t\t\t\t\twith an FIS officer"
          },
          "userData2": {
            "type": "string",
            "description": "Customer specific data 2. Used for customer\r\n\t\t\t\t\t\tspecific purposes. To get the usage of this field, please validate\r\n\t\t\t\t\t\twith an FIS officer"
          },
          "userData3": {
            "type": "string",
            "description": "Customer specific data 3. Used for customer\r\n\t\t\t\t\t\tspecific purposes. To get the usage of this field, please validate\r\n\t\t\t\t\t\twith an FIS officer"
          },
          "userData4": {
            "type": "string",
            "description": "Customer specific data 4. Used for customer\r\n\t\t\t\t\t\tspecific purposes. To get the usage of this field, please validate\r\n\t\t\t\t\t\twith an FIS officer"
          },
          "userData5": {
            "type": "string",
            "description": "Customer specific data 5. Used for customer\r\n\t\t\t\t\t\tspecific purposes. To get the usage of this field, please validate\r\n\t\t\t\t\t\twith an FIS officer"
          }
        },
        "description": ""
      },
      "flagsType": {
        "title": "flagsType",
        "type": "object",
        "properties": {
          "flag": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/flagType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "flagType": {
        "title": "flagType",
        "type": "object",
        "properties": {
          "position": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "description": ""
      },
      "checkFlagsType": {
        "title": "checkFlagsType",
        "type": "object",
        "properties": {
          "checkFlag": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/checkFlagType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "checkFlagType": {
        "title": "checkFlagType",
        "type": "object",
        "properties": {
          "position": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_ApplicationCreditBureauChecksType": {
        "title": "tns_ApplicationCreditBureauChecksType",
        "type": "object",
        "properties": {
          "oldIssueDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Old card issue date in case available. If not\r\n\t\t\t\t\t\tspecified, defaulted to cortex never date 31-Aug-2263"
          },
          "otherPaymentsDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Old card issue date in case available. If not\r\n\t\t\t\t\t\tspecified, defaulted to cortex never date 31-Aug-2263"
          },
          "maximumDelinquency": {
            "type": "string",
            "description": "Maximum delinquency reported by the credit\r\n\t\t\t\t\t\tbureau for the customer. If not specified, defaulted to spaces"
          },
          "creditBureauDecision": {
            "type": "string",
            "description": "Credit bureau decision indicating if the\r\n\t\t\t\t\t\tapplication should be approved or not. This value can be used in\r\n\t\t\t\t\t\tthe rule engine and eligibility checks"
          },
          "CreditBureauUserData": {
            "type": "string",
            "description": "Customer specific data for the credit bureau\r\n\t\t\t\t\t\tchecks for customer specific usage"
          }
        },
        "description": ""
      },
      "tns_ApplicationAddressType": {
        "title": "tns_ApplicationAddressType",
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string",
            "description": "The maximum length is 64 when using the master\r\n\t\t\t\t\t\taddress module. For the contact mechanism address, the maximum\r\n\t\t\t\t\t\tlength is 40"
          },
          "addressLine2": {
            "type": "string",
            "description": "The maximum length is 64 when using the master\r\n\t\t\t\t\t\taddress module. For the contact mechanism address, the maximum\r\n\t\t\t\t\t\tlength is 40"
          },
          "addressLine3": {
            "type": "string",
            "description": "The maximum length is 64 when using the master\r\n\t\t\t\t\t\taddress module. For the contact mechanism address, the maximum\r\n\t\t\t\t\t\tlength is 40"
          },
          "addressLine4": {
            "type": "string",
            "description": "The maximum length is 64 when using the master\r\n\t\t\t\t\t\taddress module. For the contact mechanism address, the maximum\r\n\t\t\t\t\t\tlength is 40"
          },
          "addressLine5": {
            "type": "string",
            "description": "Address Line 5. Only applicable for contact\r\n\t\t\t\t\t\tmechanism module, ignored in case the master address module is\r\n\t\t\t\t\t\tused"
          },
          "directions": {
            "type": "string",
            "description": "Address directions. Only applicable for contact\r\n\t\t\t\t\t\tmechanism module, ignored in case the master address module is\r\n\t\t\t\t\t\tused"
          },
          "city": {
            "type": "string",
            "description": "The maximum length of this field is 32 if the\r\n\t\t\t\t\t\tmaster address module is used, 40 in case of contact mechanism\r\n\t\t\t\t\t\tmodule is used"
          },
          "postalCode": {
            "type": "string",
            "description": "The maximum length of this field is 24 if the\r\n\t\t\t\t\t\tmaster address module is used, 10 in case of contact mechanism\r\n\t\t\t\t\t\tmodule is used"
          },
          "province": {
            "type": "string",
            "description": "Address province. Only applicable for the\r\n\t\t\t\t\t\tcontact mechanism address"
          },
          "territory": {
            "type": "string",
            "description": "Address territory. Only applicable for the\r\n\t\t\t\t\t\tcontact mechanism address"
          },
          "state": {
            "type": "string",
            "description": "Address State. Only applicable for the contact\r\n\t\t\t\t\t\tmechanism address"
          },
          "region": {
            "type": "string",
            "description": "Address region. Only applicable for the contact\r\n\t\t\t\t\t\tmechanism address"
          },
          "county": {
            "type": "string",
            "description": "Address county. Only applicable for the contact\r\n\t\t\t\t\t\tmechanism address"
          },
          "country": {
            "type": "string",
            "description": "Country numeric ISO Code. To get the list of\r\n\t\t\t\t\t\tsupported country code values, use the GetCountryList service."
          },
          "phone1": {
            "type": "string",
            "description": "Phone number 1 (usually used for the mobile\r\n\t\t\t\t\t\tnumber). Only applicable for the \"master address\" module"
          },
          "phone2": {
            "type": "string",
            "description": "Phone number 2. Only applicable for the \"master\r\n\t\t\t\t\t\taddress\" module"
          },
          "extension": {
            "type": "string",
            "description": "Phone number extension. Only applicable for the\r\n\t\t\t\t\t\t“master address\" module"
          },
          "email": {
            "type": "string",
            "description": "Email. Only applicable for the \"master address\"\r\n\t\t\t\t\t\tmodule"
          },
          "fax": {
            "type": "string",
            "description": "Fax. Only applicable for the \"master address\"\r\n\t\t\t\t\t\tmodule"
          },
          "district": {
            "type": "string",
            "description": "Address district. Only applicable for the\r\n\t\t\t\t\t\t\"master address\" module."
          },
          "poBox": {
            "type": "string",
            "description": "P.O. Box. Only applicable for the \"master\r\n\t\t\t\t\t\taddress\" module."
          },
          "ownershipType": {
            "type": "string",
            "description": "Address ownership. Only applicable for the\r\n\t\t\t\t\t\t\"master address\" module. To get the list of supported values, use\r\n\t\t\t\t\t\tthe GetStringDescription service with description type addown"
          },
          "userData1": {
            "type": "string",
            "description": "Customer specific data 2. Used for customer\r\n\t\t\t\t\t\tspecific purposes. Only applicable for the \"master address\" module"
          },
          "userData2": {
            "type": "string",
            "description": "Customer specific data 2. Used for customer\r\n\t\t\t\t\t\tspecific purposes. Only applicable for the \"master address\" module"
          },
          "addressRole": {
            "type": "string",
            "description": "Address role. As each customer or card can have\r\n\t\t\t\t\t\tmultiple addresses, this field will identify if the address is the\r\n\t\t\t\t\t\tmain address or other logging purpose address.\r\n\r\n\t\t\t\t\t\tCurrent supported\r\n\t\t\t\t\t\tvalues are:\r\n\t\t\t\t\t\t- 0 - Main address. This address is actually used\r\n\t\t\t\t\t\tfor\r\n\t\t\t\t\t\tany communication\r\n\t\t\t\t\t\t- 1 - Other address. This address is only used\r\n\t\t\t\t\t\tfor logging purposes"
          }
        },
        "description": ""
      },
      "tns_UpdateCreditCardApplicationResponse": {
        "title": "tns_UpdateCreditCardApplicationResponse",
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "InquireCreditCardHimayateeProgramRequestType": {
        "title": "InquireCreditCardHimayateeProgramRequestType",
        "type": "object",
        "properties": {
          "InquireCreditCardHimayateeProgramRequestDetails": {
            "$ref": "#/components/schemas/InquireCreditCardHimayateeProgramRequestDetailsType"
          }
        }
      },
      "InquireCreditCardHimayateeProgramResponseType": {
        "title": "InquireCreditCardHimayateeProgramResponse",
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/components/schemas/inquirecreditcardmiayateeprogramresponsetype"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        }
      },
      "InquireCreditCardHimayateeProgramRequestDetailsType": {
        "title": "InquireCreditCardHimayateeProgramRequestDetailsType",
        "type": "object",
        "properties": {
          "ccsAccountIdentifier": {
            "$ref": "#/components/schemas/ccsAccountIdentifierType",
            "description": "Whenever a service does an update/action on an account and requires the account to be specified, the account identifier is used."
          },
          "cardIdentifier": {
            "$ref": "#/components/schemas/cardIdentifierType",
            "description": "Any service with an operation on a card expects the Card Identifier to get the card. Either PAN or VPAN need to be specified. The sequence number can be skipped and will be defaulted to 0. The card expiry date can be used to identify which card plastic is required. In case not specified, the latest card with the specified PAN or VPAN will be taken into consideration."
          }
        }
      },
      "inquirecreditcardmiayateeprogramresponsetype": {
        "title": "inquirecreditcardmiayateeprogramresponsetype",
        "type": "object",
        "properties": {
          "ccsAccountIdentifier": {
            "$ref": "#/components/schemas/ccsAccountIdentifierType",
            "description": " Whenever a service does an update/action on an account and requires the account to be specified, the account identifier is used. "
          },
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "count"
          },
          "insuranceProductList": {
            "$ref": "#/components/schemas/insuranceProductListType"
          }
        }
      },
      "insuranceProductListType": {
        "title": "insuranceProductListType",
        "type": "object",
        "properties": {
          "insuranceProduct": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/insuranceProductType"
            }
          }
        }
      },
      "insuranceProductType": {
        "title": "insuranceProductType",
        "type": "object",
        "properties": {
          "accountInsuranceId": {
            "type": "string",
            "description": "accountInsuranceId"
          },
          "code": {
            "type": "string",
            "description": "code"
          },
          "description": {
            "type": "string",
            "description": "description"
          },
          "activeFlag": {
            "type": "integer",
            "format": "int32",
            "description": "activeFlag"
          },
          "statusCode": {
            "type": "string",
            "description": "statusCode"
          },
          "lastStatusChangeDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional"
          },
          "cancelReason": {
            "type": "string",
            "description": "cancelReason"
          },
          "cancelDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "cancelDate"
          },
          "effectiveDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "effectiveDate"
          },
          "dateLastBilled": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "dateLastBilled"
          },
          "amountLastBilled": {
            "$ref": "../../commonschemas/schemas.json#/Amount",
            "description": "amountLastBilled"
          }
        }
      },
      "tns_UpdateCreditCardHimayateeProgramStatusRequest": {
        "title": "tns_UpdateCreditCardHimayateeProgramStatusRequest",
        "type": "object",
        "properties": {
          "UpdateCreditCardHimayateeProgramStatusRequestDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_UpdateCreditCardHimayateeProgramStatusRequestDetailsType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_UpdateCreditCardHimayateeProgramStatusResponse": {
        "title": "tns_UpdateCreditCardHimayateeProgramStatusResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_UpdateCreditCardHimayateeProgramStatusResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_UpdateCreditCardHimayateeProgramStatusRequestDetailsType": {
        "title": "tns_UpdateCreditCardHimayateeProgramStatusRequestDetailsType",
        "type": "object",
        "properties": {
          "accountInsuranceId": {
            "type": "string",
            "description": "accountInsuranceId"
          },
          "statusCode": {
            "type": "string",
            "description": "statusCode"
          },
          "cancelReason": {
            "type": "string",
            "description": "cancelReason"
          }
        },
        "description": ""
      },
      "tns_UpdateCreditCardHimayateeProgramStatusResponseType": {
        "title": "tns_UpdateCreditCardHimayateeProgramStatusResponseType",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "status"
          }
        },
        "description": ""
      },
      "tns_SubscribeCreditCardHimayateeProgramRequest": {
        "title": "tns_SubscribeCreditCardHimayateeProgramRequest",
        "type": "object",
        "properties": {
          "SubscribeCreditCardHimayateeProgramRequestDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_SubscribeCreditCardHimayateeProgramRequestDetailsType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_SubscribeCreditCardHimayateeProgramResponse": {
        "title": "tns_SubscribeCreditCardHimayateeProgramResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_Subscribecreditcardhimayateeprogramresponsetype"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_SubscribeCreditCardHimayateeProgramRequestDetailsType": {
        "title": "tns_SubscribeCreditCardHimayateeProgramRequestDetailsType",
        "type": "object",
        "properties": {
          "ccsAccountIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ccsAccountIdentifierType"
              },
              {
                "description": "Whenever a service does an update/action on an\r\n\t\t\t\t\t\taccount and requires the account to be specified,\r\n\t\t\t\t\t\tthe account\r\n\t\t\t\t\t\tidentifier is used."
              }
            ]
          },
          "cardIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cardIdentifierType"
              },
              {
                "description": "Any service with an operation on a card expects\r\n\t\t\t\t\t\tthe Card Identifier to get the card.\r\n\t\t\t\t\t\tEither PAN or VPAN need to be\r\n\t\t\t\t\t\tspecified. The sequence number can be\r\n\t\t\t\t\t\tskipped and will be defaulted\r\n\t\t\t\t\t\tto 0. The card expiry date can be\r\n\t\t\t\t\t\tused to identify which card\r\n\t\t\t\t\t\tplastic is required. In case not\r\n\t\t\t\t\t\tspecified, the latest card with\r\n\t\t\t\t\t\tthe specified PAN or VPAN will be\r\n\t\t\t\t\t\ttaken into consideration."
              }
            ]
          },
          "code": {
            "type": "string",
            "description": "code"
          },
          "effectiveDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "effectiveDate"
          },
          "cancelOthers": {
            "type": "string",
            "description": "cancelOthers"
          }
        },
        "description": ""
      },
      "tns_Subscribecreditcardhimayateeprogramresponsetype": {
        "title": "tns_Subscribecreditcardhimayateeprogramresponsetype",
        "type": "object",
        "properties": {
          "accountInsuranceId": {
            "type": "string"
          }
        },
        "description": ""
      },
      "GetCreditCardPendingActivationRequestType": {
        "title": "GetCreditCardPendingActivationRequestType",
        "type": "object",
        "properties": {
          "GetPendingActivationCardsRequestDetails": {
            "$ref": "#/components/schemas/GetPendingActivationCardsRequestDetailsType",
            "description": "GetPendingActivationCardsRequestDetails"
          }
        },
        "description": ""
      },
      "GetPendingActivationCardsRequestDetailsType": {
        "title": "GetPendingActivationCardsRequestDetailsType",
        "type": "object",
        "properties": {
          "customerIdentifier": {
            "$ref": "#/components/schemas/customerIdentifierType"
          },
          "accountIdentifier": {
            "$ref": "#/components/schemas/ccsAccountIdentifierType",
            "description": "Whenever a service does an update/action on an account and requires the account to be specified, the account identifier is used."
          },
          "cardIdentifier": {
            "$ref": "#/components/schemas/cardIdentifierType"
          },
          "returnPrintingEventDetails": {
            "type": "boolean",
            "description": "Specifies if the printing event details are required in the response (date/time/additional data/user if any...). In case not specified, defaulted to false"
          },
          "printingMethodFilter": {
            "$ref": "#/components/schemas/printingMethodFilter",
            "description": "Used to specify if only the bulk issuance, instant issuance or both cards are required. If not specified, both bulk and instant issuance cards are returned"
          }
        },
        "description": ""
      },
      "customerIdentifierType": {
        "title": "customerIdentifierType",
        "type": "object",
        "properties": {
          "idNumber": {
            "type": "string",
            "description": "ID Number of the customer"
          },
          "customerCode": {
            "type": "string",
            "description": "Cortex customer code"
          },
          "externalCustomerCode": {
            "type": "string",
            "description": "External Customer code. Usually holds the Bank's CIF"
          },
          "institutionCode": {
            "type": "string",
            "description": "Institution code the customer belongs to"
          }
        },
        "description": ""
      },
      "GetCreditCardPendingActivationResponseDetailsType": {
        "title": "GetCreditCardPendingActivationResponseDetailsType",
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/components/schemas/GetCreditCardPendingActivationResponseType"
          },
          "fault": {
            "$ref": "../../commonschemas/fault.json#/FaultType"
          }
        }
      },
      "GetCreditCardPendingActivationResponseType": {
        "title": "GetCreditCardPendingActivationResponseType",
        "type": "object",
        "properties": {
          "count": {
            "type": "string"
          },
          "pendingActivationCardList": {
            "$ref": "#/components/schemas/PendingActivationCardListType"
          }
        },
        "description": ""
      },
      "PendingActivationCardListType": {
        "title": "PendingActivationCardListType",
        "type": "object",
        "properties": {
          "pendingActivationCard": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PendingActivationCardType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "PendingActivationCardType": {
        "title": "PendingActivationCardType",
        "required": [
          "cardDetails"
        ],
        "type": "object",
        "properties": {
          "cardDetails": {
            "$ref": "#/components/schemas/cardDetailsType"
          },
          "cardHistoryDetails": {
            "$ref": "#/components/schemas/cardHistoryEntryType"
          }
        },
        "description": ""
      },
      "cardDetailsType": {
        "title": "cardDetailsType",
        "type": "object",
        "properties": {
          "responseCardIdentifier": {
            "$ref": "#/components/schemas/responseCardIdentifierType"
          },
          "expiryDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "Card expiry date"
          },
          "effectiveDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "Effective date of the card"
          },
          "cardStatus": {
            "type": "string",
            "description": "Status of the card. To get the list of supported values, use the GetCardStatusList service"
          },
          "oldPlasticExpiryDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional",
            "description": "Old plastic card expiry in case an old plastic exists (in case of renewal)"
          },
          "oldPlasticCardStatus": {
            "type": "string",
            "description": "Old plastic card status in case an old plastic exists (in case of renewal). To get the list of supported values, use the GetCardStatusList service"
          },
          "embossingName": {
            "type": "string",
            "description": "Embossing name used for the card"
          },
          "title": {
            "type": "string",
            "description": "Card holder title"
          },
          "firstName": {
            "type": "string",
            "description": "Card holder first name"
          },
          "lastName": {
            "type": "string",
            "description": "Card holder last name"
          },
          "additional": {
            "type": "string",
            "description": "Specifies if this is a primary or additional card"
          },
          "batchNumber": {
            "type": "string",
            "description": "Batch number the card is added to"
          },
          "serviceCode": {
            "type": "string",
            "description": "Service code of the card"
          },
          "kinship": {
            "type": "string",
            "description": "Relationship to the primary card in case this is an additional card"
          },
          "userData": {
            "type": "string",
            "description": "Customer specific data. Used for customer specific purposes"
          },
          "userData1": {
            "type": "string",
            "description": "Customer specific data 1. Used for customer specific purposes"
          },
          "userData2": {
            "type": "string",
            "description": "Customer specific data 2. Used for customer specific purposes"
          },
          "userData3": {
            "type": "string",
            "description": "Customer specific data 3. Used for customer specific purposes"
          },
          "userData4": {
            "type": "string",
            "description": "Customer specific data 4. Used for customer specific purposes"
          },
          "userData5": {
            "type": "string",
            "description": "Customer specific data 5. Used for customer specific purposes"
          }
        },
        "description": ""
      },
      "tns_PinTriesResetRequest": {
        "title": "tns_PinTriesResetRequest",
        "type": "object",
        "properties": {
          "cardIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cardIdentifierType"
              }
            ]
          },
          "pinType": {
            "type": "string",
            "description": "values can be as below\r\n\t\t\t\t\t\t\t1-Default PIN (used at\r\n\t\t\t\t\t\t\tATM and POS)\r\n\t\t\t\t\t\t\t2-Secondary PIN (can be used as Mobile Pin)"
          }
        },
        "description": ""
      },
      "tns_PinTriesResetResponse": {
        "title": "tns_PinTriesResetResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_pintriesresponsesuccess"
              },
              {
                "description": "success"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              },
              {
                "description": "fault"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_pintriesresponsesuccess": {
        "title": "tns_pintriesresponsesuccess",
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "status"
          }
        },
        "description": ""
      },
      "tns_searchFilterType": {
        "title": "tns_searchFilterType",
        "type": "object",
        "properties": {
          "messageClassList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_messageClassListType"
              }
            ]
          },
          "actionCodeList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_actionCodeListType"
              }
            ]
          },
          "excludeActionCodeList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_actionCodeListType"
              }
            ]
          },
          "includeOnlyPending": {
            "type": "boolean",
            "description": "Specifies if only pending transactions are\r\n\t\t\t\t\t\trequired in the response. Defaulted to false if\r\n\t\t\t\t\t\tnot specified."
          },
          "includeOnlyCompleted": {
            "type": "boolean",
            "description": "Specifies if only completed transactions are\r\n\t\t\t\t\t\trequired in the response. Defaulted to false if\r\n\t\t\t\t\t\tnot specified"
          },
          "transactionSearchOrder": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TransactionSearchOrderType"
              },
              {
                "description": "Specifies the order in which the transactions\r\n\t\t\t\t\t\tshould be returned. In case not specified, date\r\n\t\t\t\t\t\tlocal desc is used\r\n\t\t\t\t\t\tby default"
              }
            ]
          },
          "fromDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Specifies Declines Transactions from date"
          },
          "toDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Specifies Declines Transactions To date"
          },
          "fromAmount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Specifies Transactions from Amount"
              }
            ]
          },
          "toAmount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Specifies Transactions To Amount"
              }
            ]
          },
          "transactionMethod": {
            "type": "string",
            "description": "Specifies Transactions Type credit/debit\r\n\t\t\t\t\t\t(in/out)"
          },
          "transactionType": {
            "type": "string",
            "description": "Specifies Transactions Type POS, Online etc.\r\n\t\t\t\t\t\t(Code to retrieved from Cortex)"
          },
          "transactionStatus": {
            "type": "string",
            "description": "Specifies Transactions Status Pending, Declined,\r\n\t\t\t\t\t\tand approved (Code to retrieved from Cortex)"
          }
        },
        "description": ""
      },
      "searchFilterCreditCardTransactionsType": {
        "title": "searchFilterCreditCardTransactionsType",
        "type": "object",
        "properties": {
          "includeOnlyPosted": {
            "type": "boolean",
            "description": "Specifies if only posted transactions are required or not. If not specified, both posted\r\n\t\t\t\t\t\tand pending\r\n\t\t\t\t\t\ttransactions are returned."
          },
          "transactionSearchOrder": {
            "$ref": "#/components/schemas/TransactionSearchOrderType",
            "description": "Specifies the order in which the transactions should be returned. In case not specified, date local desc is used by default"
          },
          "excludeItemTypeList": {
            "$ref": "#/components/schemas/excludeItemTypeListType"
          },
          "fromDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "Specifies Transactions from date"
          },
          "toDate": {
            "$ref": "../../commonschemas/schemas.json#/MWDateOptional1",
            "description": "Specifies Transactions to date"
          },
          "fromAmount": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Specifies Transactions from Amount"
          },
          "toAmount": {
            "$ref": "../../commonschemas/schemas.json#/AmountOptional",
            "description": "Specifies Transactions to Amount"
          },
          "transactionsMethod": {
            "type": "string",
            "description": "Specifies Transactions Type credit/debit (in/out)"
          },
          "transactionsType": {
            "type": "string",
            "description": "Specifies Transactions Type POS, Online etc.(Code to retrieved from Cortex)"
          }
        }
      },
      "excludeItemTypeListType": {
        "title": "excludeItemTypeListType",
        "type": "object",
        "properties": {
          "itemType": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "tns_messageClassListType": {
        "title": "tns_messageClassListType",
        "required": [
          "messageClass"
        ],
        "type": "object",
        "properties": {
          "messageClass": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_messageClass"
            },
            "description": "Individual message class to include in the\r\n\t\t\t\t\t\tsearch.\r\n\t\t\t\t\t\t1 - Authorization\r\n\t\t\t\t\t\t2 - Financial\r\n\t\t\t\t\t\t3 - File Update\r\n\t\t\t\t\t\t4 - Reversal\r\n\t\t\t\t\t\tof Chargeback\r\n\t\t\t\t\t\t5 - Reconciliation\r\n\t\t\t\t\t\t6 - Administrative\r\n\t\t\t\t\t\t7 - Fee\r\n\t\t\t\t\t\tCollection\r\n\t\t\t\t\t\t8 - Network Management"
          }
        },
        "description": ""
      },
      "tns_actionCodeListType": {
        "title": "tns_actionCodeListType",
        "required": [
          "actionCode"
        ],
        "type": "object",
        "properties": {
          "actionCode": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_actionCodeType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_actionCodeType": {
        "title": "tns_actionCodeType",
        "enum": [
          0,
          1,
          2,
          9
        ],
        "type": "integer",
        "description": "Individual action code to include in the search.\r\n\t\t\t\tSupported values\r\n\r\n\t\t\t\t0 - Approved 1 - Declined No Pick Up 2 -\r\n\t\t\t\tDeclined\r\n\t\t\t\tWith Pick Up 9 - System Error"
      },
      "TransactionSearchOrderType": {
        "title": "TransactionSearchOrderType",
        "type": "object",
        "properties": {
          "dateLocalAsc": {
            "type": "boolean",
            "description": "Specifies that the transactions should\r\n\t\t\t\t\t\tbe ordered\r\n\t\t\t\t\t\tby local date ascending\r\n\t\t\t\t\t\t(oldest to newest). Should be skipped in\r\n\t\t\t\t\t\tcase date local desc is specified"
          },
          "dateLocalDesc": {
            "type": "boolean",
            "description": "Specifies that the transactions should\r\n\t\t\t\t\t\tbe ordered\r\n\t\t\t\t\t\tby local date descending\r\n\t\t\t\t\t\t(newest to oldest). Should be skipped in\r\n\t\t\t\t\t\tcase date local asc is specified"
          },
          "timeLocalAsc": {
            "type": "boolean",
            "description": "Specifies that the transactions should\r\n\t\t\t\t\t\tbe ordered\r\n\t\t\t\t\t\tby local time ascending\r\n\t\t\t\t\t\t(oldest to newest). Should be skipped in\r\n\t\t\t\t\t\tcase time local desc is specified"
          },
          "timeLocalDesc": {
            "type": "boolean",
            "description": "Specifies that the transactions should be\r\n\t\t\t\t\t\tordered by local time descending (newest to oldest).\r\n\t\t\t\t\t\tShould be\r\n\t\t\t\t\t\tskipped in case time local asc is specified"
          }
        }
      },
      "tns_requestedCurrencyListType": {
        "title": "tns_requestedCurrencyListType",
        "type": "object",
        "properties": {
          "currency": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_currencyType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_currencyType": {
        "title": "tns_currencyType",
        "type": "object",
        "properties": {
          "currencyCode": {
            "type": "string"
          },
          "alphaCode": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreditCardNumberGenerationRequest": {
        "title": "tns_CreditCardNumberGenerationRequest",
        "type": "object",
        "properties": {
          "bin": {
            "type": "integer",
            "format": "int32",
            "default": 0
          }
        },
        "description": ""
      },
      "tns_CreditCardNumberGenerationResponse": {
        "title": "tns_CreditCardNumberGenerationResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardNumberGenerationResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditCardNumberGenerationResponseType": {
        "title": "tns_CreditCardNumberGenerationResponseType",
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreditTransactionAction": {
        "title": "tns_CreditTransactionAction",
        "enum": [
          "C",
          "P",
          "U"
        ],
        "type": "string",
        "description": "Action for a new credit transaction.\r\n\t\t\t\tDefaulted to C\r\n\t\t\t\t- Create only if not\r\n\t\t\t\tspecified"
      },
      "tns_priorityCodeType": {
        "title": "tns_priorityCodeType",
        "type": "object",
        "properties": {
          "EnglishDesc": {
            "type": "string"
          },
          "ArabicDesc": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_WalletToWalletTransferRequest": {
        "title": "tns_WalletToWalletTransferRequest",
        "type": "object",
        "properties": {
          "cardAcceptorId": {
            "type": "string",
            "description": "cardAcceptorId"
          },
          "action": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditTransactionAction"
              }
            ]
          },
          "cardId": {
            "type": "string",
            "description": "pan number"
          },
          "fromAccountCurrency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "Currency of the account to transfer the amount\r\n\t\t\t\t\t\t\tfrom. The transfer amount should be expressed\r\n\t\t\t\t\t\t\tin this currency.\r\n\t\t\t\t\t\t\tThe card should have an\r\n\t\t\t\t\t\t\taccount with this currency linked to it\r\n\t\t\t\t\t\t\totherwise the request is rejected. If multiple\r\n\t\t\t\t\t\t\taccounts with this\r\n\t\t\t\t\t\t\tcurrency are linked to the\r\n\t\t\t\t\t\t\tcard (which should never be the case\r\n\t\t\t\t\t\t\tfor\r\n\t\t\t\t\t\t\tmulti-currency accounts), the request is also\r\n\t\t\t\t\t\t\trejected"
          },
          "toAccountCurrency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "Currency of the account to transfer the amount\r\n\t\t\t\t\t\t\tto. The transfer amount should be expressed in\r\n\t\t\t\t\t\t\tthis currency. The\r\n\t\t\t\t\t\t\tcard should have an account\r\n\t\t\t\t\t\t\twith this currency linked to it\r\n\t\t\t\t\t\t\totherwise the\r\n\t\t\t\t\t\t\trequest is rejected. If multiple accounts with\r\n\t\t\t\t\t\t\tthis\r\n\t\t\t\t\t\t\tcurrency are linked ot the card (which\r\n\t\t\t\t\t\t\tshould never be the case\r\n\t\t\t\t\t\t\tfor multi-currency\r\n\t\t\t\t\t\t\taccounts), the request is also rejected"
          },
          "transferAmount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Transfer amount expressed in the from currency"
              }
            ]
          },
          "itemSource": {
            "maxLength": 8,
            "minLength": 1,
            "type": "string",
            "description": "Source system the transaction was received\r\n\t\t\t\t\t\t\tfrom. If specified, the ItemReferenceCode\r\n\t\t\t\t\t\t\tshould also be\r\n\t\t\t\t\t\t\tspecified. If both are\r\n\t\t\t\t\t\t\tspecified, Cortex will validate for\r\n\t\t\t\t\t\t\tduplicate\r\n\t\t\t\t\t\t\ttransactions using the source and reference\r\n\t\t\t\t\t\t\tcode"
          },
          "itemReferenceCode": {
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "description": "Reference number for the transaction from the\r\n\t\t\t\t\t\t\tsource system. This should be an ever unique\r\n\t\t\t\t\t\t\tnumber from the\r\n\t\t\t\t\t\t\tsource system. In case already\r\n\t\t\t\t\t\t\texisting with the same ItemSource,\r\n\t\t\t\t\t\t\tthe request\r\n\t\t\t\t\t\t\twill be rejected. Mandatory in case the\r\n\t\t\t\t\t\t\tItemSource is\r\n\t\t\t\t\t\t\tspecified"
          },
          "description": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Description to add for the transaction. This\r\n\t\t\t\t\t\t\tdescription is used in statements and\r\n\t\t\t\t\t\t\tinquiries. If not specified,\r\n\t\t\t\t\t\t\tset to a default\r\n\t\t\t\t\t\t\tvalue"
          },
          "additionalTransferDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_MultiCurrencyCreditAccountTransferAdditionalDetailsType"
              },
              {
                "description": "Holds additional information of the transaction"
              }
            ]
          },
          "skipNotifications": {
            "type": "boolean",
            "description": "Specifies if notifications should be skipped in\r\n\t\t\t\t\t\t\tcase configured for this type of item.\r\n\t\t\t\t\t\t\tDefaulted to false if not\r\n\t\t\t\t\t\t\tspecified"
          },
          "returnFullDetails": {
            "type": "boolean",
            "description": "Specifies if full details of the account are\r\n\t\t\t\t\t\t\trequired to be returned in the response.\r\n\t\t\t\t\t\t\tDefaulted to true in case\r\n\t\t\t\t\t\t\tnot specified"
          },
          "checkAvailableBalance": {
            "type": "boolean",
            "description": "Specifies if available balance should be\r\n\t\t\t\t\t\t\tchecked for the account in case of debit items.\r\n\t\t\t\t\t\t\tIf set to true and\r\n\t\t\t\t\t\t\tthe account does not have\r\n\t\t\t\t\t\t\tenough balance (including authorized\r\n\t\t\t\t\t\t\tamount),\r\n\t\t\t\t\t\t\tthe request is rejected. Defaulted to false if\r\n\t\t\t\t\t\t\tnot\r\n\t\t\t\t\t\t\tspecified"
          },
          "forexDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_forexDetails_Type1"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_MultiCurrencyCreditAccountTransferAdditionalDetailsType": {
        "title": "tns_MultiCurrencyCreditAccountTransferAdditionalDetailsType",
        "type": "object",
        "properties": {
          "dateLocal": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Local date of the transaction. If\r\n\t\t\t\t\t\tnot specified,\r\n\t\t\t\t\t\tdefaulted to the current cortex local\r\n\t\t\t\t\t\tdate"
          },
          "transmissionDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Date the transaction was\r\n\t\t\t\t\t\ttransmitted from the\r\n\t\t\t\t\t\tsource system. If not specified,\r\n\t\t\t\t\t\tdefaulted to the current date"
          },
          "transmissionTime": {
            "pattern": "([0-9]){4}|([0-9]){6}|()",
            "type": "string",
            "description": "Time the transaction was\r\n\t\t\t\t\t\ttransmitted from the\r\n\t\t\t\t\t\tsource system. If not specified,\r\n\t\t\t\t\t\tdefaulted to the current system\r\n\t\t\t\t\t\ttime"
          },
          "systemDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Cortex system date the transaction\r\n\t\t\t\t\t\tshould be\r\n\t\t\t\t\t\tposted in. If not specified, defaulted to\r\n\t\t\t\t\t\tthe current system date"
          },
          "acquirerCountry": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_countryType"
              },
              {
                "description": "Acquiring country in case\r\n\t\t\t\t\t\tavailable"
              }
            ]
          },
          "cardAcceptorLocation": {
            "maxLength": 64,
            "minLength": 1,
            "type": "string",
            "description": "Card acceptor\r\n\t\t\t\t\t\tlocation"
          }
        },
        "description": ""
      },
      "tns_countryType": {
        "title": "tns_countryType",
        "type": "object",
        "properties": {
          "countryCode": {
            "maxLength": 3,
            "minLength": 3,
            "type": "string",
            "description": "Numeric ISO code identifying the\r\n\t\t\t\t\t\tcountry"
          }
        },
        "description": "Identifier for a country. Can be either\r\n\t\t\t\tthe ISO\r\n\t\t\t\tnumeric code or ISO Alpha Code"
      },
      "tns_WalletToWalletTransferResponse": {
        "title": "tns_WalletToWalletTransferResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AccountDetailsWTWT"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_AccountDetailsWTWT": {
        "title": "tns_AccountDetailsWTWT",
        "type": "object",
        "properties": {
          "fromCreditAccountDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditAccountDetailsType"
              },
              {
                "description": "Credit account the transfer was\r\n\t\t\t\t\t\tdone from in case\r\n\t\t\t\t\t\tfound or derived successfully. Only\r\n\t\t\t\t\t\treturned in case\r\n\t\t\t\t\t\tReturnFullDetails is set to true in\r\n\t\t\t\t\t\tthe request"
              }
            ]
          },
          "toCreditAccountDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditAccountDetailsType"
              },
              {
                "description": "Credit account the transfer was\r\n\t\t\t\t\t\tdone to in case\r\n\t\t\t\t\t\tfound or derived successfully. Only\r\n\t\t\t\t\t\treturned in case\r\n\t\t\t\t\t\tReturnFullDetails is set to true in\r\n\t\t\t\t\t\tthe request"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditAccountDetailsType": {
        "title": "tns_CreditAccountDetailsType",
        "type": "object",
        "properties": {
          "accountNumber": {
            "maxLength": 28,
            "minLength": 1,
            "type": "string",
            "description": "Account number identifying an account\r\n\t\t\t\t\t\tunder a\r\n\t\t\t\t\t\tspecific institution"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_currencyType"
              },
              {
                "description": "Reference to the Common Currency\r\n\t\t\t\t\t\tIdentifier\r\n\t\t\t\t\t\tObject holding the details of the account\r\n\t\t\t\t\t\tcurrency. All amounts\r\n\t\t\t\t\t\tunder the credit account are\r\n\t\t\t\t\t\texpressed in this currency"
              }
            ]
          },
          "effectiveOTB": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Effective open to buy for the account\r\n\t\t\t\t\t\tincluding\r\n\t\t\t\t\t\tthe authorization/blocked amount. This is mainly\r\n\t\t\t\t\t\tcalculated using\r\n\t\t\t\t\t\tthe formula (credit limit) - (balance) +\r\n\t\t\t\t\t\t(surplus) - (authorized\r\n\t\t\t\t\t\tamount)"
              }
            ]
          },
          "surplus": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Surplus amount - amount paid above the\r\n\t\t\t\t\t\tcredit\r\n\t\t\t\t\t\tlimit. This amount DOES NOT include any pending\r\n\t\t\t\t\t\tauthorization\r\n\t\t\t\t\t\tamount (or blocked amount). Any debit on the\r\n\t\t\t\t\t\taccount will use the\r\n\t\t\t\t\t\tamount from the surplus if available\r\n\t\t\t\t\t\totherwise the balance is\r\n\t\t\t\t\t\tupdated"
              }
            ]
          },
          "posted": {
            "type": "boolean",
            "description": "Specifies if the transaction is posted\r\n\t\t\t\t\t\tor still\r\n\t\t\t\t\t\tpending to be posted"
          }
        },
        "description": ""
      },
      "tns_hrCreditLimitType": {
        "title": "tns_hrCreditLimitType",
        "type": "object",
        "properties": {
          "amount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "currencyCode": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreditAdjustmentRequest": {
        "title": "tns_CreditAdjustmentRequest",
        "type": "object",
        "properties": {
          "action": {
            "type": "string"
          },
          "ccsAccountIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ccsAccountIdentifierType1"
              },
              {
                "description": "Whenever a service does an\r\n\t\t\t\t\t\t\tupdate/action on an\r\n\t\t\t\t\t\t\taccount and\r\n\t\t\t\t\t\t\trequires the account to be\r\n\t\t\t\t\t\t\tspecified, the account\r\n\t\t\t\t\t\t\tidentifier is\r\n\t\t\t\t\t\t\tused."
              }
            ]
          },
          "cardIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cardIdentifierType"
              }
            ]
          },
          "accountDerivationMethod": {
            "type": "string"
          },
          "itemType": {
            "type": "string"
          },
          "transactionAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/creditCardAmountType"
              }
            ]
          },
          "billingAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/creditCardAmountType"
              }
            ]
          },
          "applyRule": {
            "type": "string"
          },
          "itemSource": {
            "type": "string"
          },
          "itemReferenceCode": {
            "type": "string"
          },
          "userData": {
            "type": "string"
          },
          "componentCode": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "description2": {
            "type": "string"
          },
          "description3": {
            "type": "string"
          },
          "itemCategory": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_itemCategoryType"
              }
            ]
          },
          "additionalTransactionDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_additionalTransactionDetailsType"
              }
            ]
          },
          "forexDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ForexDetailsType"
              }
            ]
          },
          "skipNotifications": {
            "type": "string"
          },
          "updateAccountCashLimit": {
            "type": "string"
          },
          "updateCardLimitOnPayment": {
            "type": "string"
          },
          "returnFullDetails": {
            "type": "string"
          },
          "checkAvailableBalance": {
            "type": "string"
          },
          "doRiskChecks": {
            "type": "string",
            "description": "Specifies if additional risk checks\r\n\t\t\t\t\t\t\tshould be\r\n\t\t\t\t\t\t\tdone on the payment."
          },
          "externalAccountDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ExternalAccountDetailsType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditAdjustmentResponse": {
        "title": "tns_CreditAdjustmentResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditAdjustmentSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_additionalTransactionDetailsType": {
        "title": "tns_additionalTransactionDetailsType",
        "type": "object",
        "properties": {
          "localDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "transmissionDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "transmissionTime": {
            "pattern": "([0-9]){4}|([0-9]){6}|()",
            "type": "string"
          },
          "systemDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "settlementDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "transactionDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "transactionCode": {
            "type": "string"
          },
          "messageClass": {
            "type": "string"
          },
          "functionCode": {
            "type": "string"
          },
          "merchantCategoryCode": {
            "type": "string"
          },
          "cardAcceptorId": {
            "type": "string"
          },
          "acquirerId": {
            "type": "string"
          },
          "acquirerCountry": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_countryType"
              }
            ]
          },
          "systemTraceAuditNumber": {
            "type": "string"
          },
          "retreivalReferenceNumber": {
            "type": "string"
          },
          "cardAcceptorLocation": {
            "type": "string"
          },
          "acquirerFinancialEntity": {
            "type": "string"
          },
          "issuerFinancialEntity": {
            "type": "string"
          },
          "terminalCode": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_ForexDetailsType": {
        "title": "tns_ForexDetailsType",
        "type": "object",
        "properties": {
          "forexReferenceCode": {
            "type": "string"
          },
          "conversionRate": {
            "type": "number"
          },
          "markUpPercentage": {
            "type": "number"
          }
        },
        "description": ""
      },
      "tns_NewCreditAccountDetailsType": {
        "title": "tns_NewCreditAccountDetailsType",
        "type": "object",
        "properties": {
          "institutionCode": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          },
          "currency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          },
          "chargeProfileCode": {
            "type": "string"
          },
          "ccsScheme": {
            "type": "string"
          },
          "userData1": {
            "type": "string"
          },
          "userData2": {
            "type": "string"
          },
          "allowedCashPercentage": {
            "type": "string"
          },
          "creditLimit": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "balance": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "totalAmountUsed": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "currentCycleBalance": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "previousCycleBalance": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "oldCyclesBalance": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "statementBalance": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "openToBuy": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "effectiveOpenToBuy": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "surplus": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "effectiveSurplus": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "payments": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "delinquencyLevel": {
            "type": "string"
          },
          "minimumPayment": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "previousBalance": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "previousMinimumPayment": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "previousSurplus": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "consecutiveLatePayments": {
            "type": "string"
          },
          "cycleCode": {
            "type": "string"
          },
          "cyclePhase": {
            "type": "string"
          },
          "lastCashMovementDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "debits": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "credits": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "dueBalance": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "notDueBalance": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "lastPaymentDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "installmentBalance": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "previousInstallmentBalance": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "lastSatisfiedPayByDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "componentBalanceDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_componentBalanceDetailsType"
            },
            "description": ""
          },
          "creditCycleDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_creditCycleDetailsType"
              }
            ]
          },
          "dueAgeDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_dueAgeDetailsType"
            },
            "description": ""
          },
          "directDebitDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_directDebitDetailsType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_componentBalanceDetailsType": {
        "title": "tns_componentBalanceDetailsType",
        "type": "object",
        "properties": {
          "componentCode": {
            "type": "string"
          },
          "componentBalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ComponentBalanceType"
              }
            ]
          },
          "dueComponentBalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ComponentBalanceType"
              }
            ]
          },
          "notDueComponentBalance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ComponentBalanceType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_creditCycleDetailsType": {
        "title": "tns_creditCycleDetailsType",
        "type": "object",
        "properties": {
          "institutionCode": {
            "type": "string"
          },
          "cycleCode": {
            "type": "string"
          },
          "cycleDay": {
            "type": "string"
          },
          "dateCycleStart": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "dateCycleEnd": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "statementDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "graceDaysOffset": {
            "type": "string"
          },
          "dueDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_dueAgeDetailsType": {
        "title": "tns_dueAgeDetailsType",
        "type": "object",
        "properties": {
          "cycle": {
            "type": "string"
          },
          "dateCycleStarted": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "dueDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "dueAmount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "overLimitAmount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_directDebitDetailsType": {
        "title": "tns_directDebitDetailsType",
        "type": "object",
        "properties": {
          "paymentMethod": {
            "type": "string"
          },
          "directDebitAccountNumber": {
            "type": "string"
          },
          "currency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          },
          "directDebitPurgeDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_ComponentBalanceType": {
        "title": "tns_ComponentBalanceType",
        "type": "object",
        "properties": {
          "fullBalance": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "currentCycleBalance": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "previousCycleBalance": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "oldCycleBalance": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditAdjustmentTransactionDetailsType": {
        "title": "tns_CreditAdjustmentTransactionDetailsType",
        "type": "object",
        "properties": {
          "itemId": {
            "type": "string",
            "description": "Unique id identifying the\r\n\t\t\t\t\t\tcredit transaction in\r\n\t\t\t\t\t\tCortex"
          },
          "tLogId": {
            "type": "string",
            "description": "Cortex transaction log ID\r\n\t\t\t\t\t\tidentifying the\r\n\t\t\t\t\t\tfinancial\r\n\t\t\t\t\t\ttransaction that generated\r\n\t\t\t\t\t\tthis credit transaction.\r\n\t\t\t\t\t\tOnly\r\n\t\t\t\t\t\tavailable in case the\r\n\t\t\t\t\t\ttransaction is an actual\r\n\t\t\t\t\t\tfinancial transaction\r\n\t\t\t\t\t\t(Purchase/Cash\r\n\t\t\t\t\t\tWithdrawal...). Not\r\n\t\t\t\t\t\tavailable for payments and\r\n\t\t\t\t\t\tadjustments"
          },
          "accountNumber": {
            "type": "string",
            "description": "Credit account number the\r\n\t\t\t\t\t\ttransaction was applied\r\n\t\t\t\t\t\ton"
          },
          "cardIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cardIdentifierType"
              }
            ]
          },
          "billingAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/creditCardAmountType"
              },
              {
                "description": "Amount of the transaction in\r\n\t\t\t\t\t\tthe billing currency\r\n\t\t\t\t\t\t(currency of the account)"
              }
            ]
          },
          "transactionAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/creditCardAmountType"
              },
              {
                "description": "Amount of the transaction as\r\n\t\t\t\t\t\toriginally received\r\n\t\t\t\t\t\t(not\r\n\t\t\t\t\t\tnecessarily in the account\r\n\t\t\t\t\t\tcurrency)"
              }
            ]
          },
          "localDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Local date the transaction\r\n\t\t\t\t\t\twas made on"
          },
          "transmissionDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Local date the transaction\r\n\t\t\t\t\t\twas made on"
          },
          "transmissionTime": {
            "pattern": "([0-9]){4}|([0-9]){6}|()",
            "type": "string",
            "description": "Only available for actual\r\n\t\t\t\t\t\tfinancial transactions."
          },
          "systemDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Cortex System Date the\r\n\t\t\t\t\t\tcredit transaction was\r\n\t\t\t\t\t\tcreated on"
          },
          "statementDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "transactionDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Date the transaction was\r\n\t\t\t\t\t\texecuted on"
          },
          "description": {
            "type": "string",
            "description": "Description of the\r\n\t\t\t\t\t\ttransaction (usually used\r\n\t\t\t\t\t\tfor\r\n\t\t\t\t\t\tthe statement)"
          },
          "transctionCode": {
            "type": "string",
            "description": "Cortex transaction code.\r\n\t\t\t\t\t\tIdentifies the type of\r\n\t\t\t\t\t\ttransaction. Only valid in\r\n\t\t\t\t\t\tcase the credit transaction\r\n\t\t\t\t\t\tis a\r\n\t\t\t\t\t\tfinancial one. To get\r\n\t\t\t\t\t\tthe list of supported\r\n\t\t\t\t\t\tvalues, please use the\r\n\t\t\t\t\t\tGetNumericDescription\r\n\t\t\t\t\t\tservice with description\r\n\t\t\t\t\t\ttype as 'tx'"
          },
          "transactionStatus": {
            "type": "string",
            "description": "Identifies the status of the\r\n\t\t\t\t\t\ttransaction. A\r\n\t\t\t\t\t\tpredefined\r\n\t\t\t\t\t\tlist of values exists of\r\n\t\t\t\t\t\twhich the below indicate\r\n\t\t\t\t\t\tthat the\r\n\t\t\t\t\t\ttransaction is not\r\n\t\t\t\t\t\tsuspended (posted or\r\n\t\t\t\t\t\teligible to be posted): - 0\r\n\t\t\t\t\t\t- not suspended - 101 -\r\n\t\t\t\t\t\tforce posted\r\n\r\n\t\t\t\t\t\tTo get the list of supported\r\n\t\t\t\t\t\tvalues and descriptions,\r\n\t\t\t\t\t\tplease use the\r\n\t\t\t\t\t\tGetNumericDescription\r\n\t\t\t\t\t\tservice with description\r\n\t\t\t\t\t\ttype as \"ccsist\""
          },
          "messageClass": {
            "type": "string",
            "description": "Identifies if the\r\n\t\t\t\t\t\ttransaction is an\r\n\t\t\t\t\t\tauthorization\r\n\t\t\t\t\t\ttransaction,\r\n\t\t\t\t\t\tfinancial, reversal…\r\n\t\t\t\t\t\tSupported values are: - 1:\r\n\t\t\t\t\t\tAuthorization Transaction -\r\n\t\t\t\t\t\t2: Financial Transaction -\r\n\t\t\t\t\t\t3: File\r\n\t\t\t\t\t\tUpdate - 4: Reversal\r\n\t\t\t\t\t\t- 5: Reconciliation - 6:\r\n\t\t\t\t\t\tReconciliation - 7:\r\n\t\t\t\t\t\tFee - 8:\r\n\t\t\t\t\t\tNetwork Management"
          },
          "functionCode": {
            "type": "string",
            "description": "Function code identifying\r\n\t\t\t\t\t\tthe function of the\r\n\t\t\t\t\t\ttransaction providing\r\n\t\t\t\t\t\tadditional details on the\r\n\t\t\t\t\t\tmessage class (i.e.\r\n\t\t\t\t\t\toriginal\r\n\t\t\t\t\t\tauthorization, repeat,\r\n\t\t\t\t\t\taddress validation...). To\r\n\t\t\t\t\t\tget the\r\n\t\t\t\t\t\tlist of supported\r\n\t\t\t\t\t\tvalues, please use the\r\n\t\t\t\t\t\tGetNumericDescription\r\n\t\t\t\t\t\tservice with description\r\n\t\t\t\t\t\ttype 'fncode'"
          },
          "merchantCategorycode": {
            "type": "string",
            "description": "Merchant category code of\r\n\t\t\t\t\t\tthe transaction. Only\r\n\t\t\t\t\t\tavailable for actual\r\n\t\t\t\t\t\tauth/financial transactions.\r\n\t\t\t\t\t\tTo get the list of\r\n\t\t\t\t\t\tsupported\r\n\t\t\t\t\t\tvalues, please use the\r\n\t\t\t\t\t\tGetNumericDescription\r\n\t\t\t\t\t\tservice with\r\n\t\t\t\t\t\tdescription\r\n\t\t\t\t\t\ttype as 'ab'"
          },
          "cardAcceptorId": {
            "type": "string",
            "description": "Card acceptor id of the\r\n\t\t\t\t\t\ttransaction"
          },
          "acquirerId": {
            "type": "string",
            "description": "ID of the transaction\r\n\t\t\t\t\t\tacquirer"
          },
          "acquirerCountry": {
            "type": "string",
            "description": "Acquirer country code the\r\n\t\t\t\t\t\ttransaction took\r\n\t\t\t\t\t\tlocation in"
          },
          "countryDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_countryDetailsType"
              }
            ]
          },
          "posted": {
            "type": "boolean",
            "description": "Specifies if the transaction\r\n\t\t\t\t\t\tis posted or still\r\n\t\t\t\t\t\tpending\r\n\t\t\t\t\t\tto be posted"
          },
          "systemTraceAuditNumber": {
            "type": "string",
            "description": "System Trace Audit Number in\r\n\t\t\t\t\t\tcase available"
          },
          "retreivalReferenceNumber": {
            "type": "string",
            "description": "Retrieval reference number\r\n\t\t\t\t\t\tidentifying the\r\n\t\t\t\t\t\ttransaction\r\n\t\t\t\t\t\tfrom an acquirer"
          },
          "cardAcceptorLocation": {
            "type": "string",
            "description": "Card acceptor location"
          },
          "itemType": {
            "type": "string",
            "description": "Specifies the type of the\r\n\t\t\t\t\t\titem/transaction. A\r\n\t\t\t\t\t\tpredefined list of values\r\n\t\t\t\t\t\texists and custom items\r\n\t\t\t\t\t\tmight be created.\r\n\r\n\t\t\t\t\t\tThe pre-defined list of\r\n\t\t\t\t\t\tsupported values is the\r\n\t\t\t\t\t\tfollowing: 1-\r\n\t\t\t\t\t\tTransaction 2-\r\n\t\t\t\t\t\tCard-related fee 3-\r\n\t\t\t\t\t\tCard-related commission 4-\r\n\t\t\t\t\t\tInterest 5- Payment 6- Late\r\n\t\t\t\t\t\tpayment penalty 7- Over\r\n\t\t\t\t\t\tlimit penalty 8-\r\n\t\t\t\t\t\tCredit\r\n\t\t\t\t\t\tadjustment 9- Debit\r\n\t\t\t\t\t\tadjustment 10-\r\n\t\t\t\t\t\tAccount-related fee 11-\r\n\t\t\t\t\t\tPayment plan credit\r\n\t\t\t\t\t\tadjustment. Used to mark the\r\n\t\t\t\t\t\tmovement of an item\r\n\t\t\t\t\t\tto a\r\n\t\t\t\t\t\tpayment plan when the plan\r\n\t\t\t\t\t\tis initialized 12- Payment\r\n\t\t\t\t\t\tplan debit\r\n\t\t\t\t\t\tadjustment. The\r\n\t\t\t\t\t\tcorresponding debit to the\r\n\t\t\t\t\t\titem type ‘11’ 13- Due\r\n\t\t\t\t\t\tinstallment (Interest) 14-\r\n\t\t\t\t\t\tDue installment (principle)\r\n\t\t\t\t\t\t15- Due\r\n\t\t\t\t\t\tinstallment credit\r\n\t\t\t\t\t\tadjustment. This is the\r\n\t\t\t\t\t\tmatching credit to item\r\n\t\t\t\t\t\ttype\r\n\t\t\t\t\t\t‘14’. 16- Credit for a\r\n\t\t\t\t\t\tcancelled payment plan. This\r\n\t\t\t\t\t\tis a credit\r\n\t\t\t\t\t\tto the not due\r\n\t\t\t\t\t\tinstallment balance to mark\r\n\t\t\t\t\t\tthe cancellation of a\r\n\t\t\t\t\t\tpayment plan. 17- Debit for\r\n\t\t\t\t\t\ta cancelled payment plan.\r\n\t\t\t\t\t\tThis is a\r\n\t\t\t\t\t\tdebit to a\r\n\t\t\t\t\t\tstandard balance component\r\n\t\t\t\t\t\tof the account to mark the\r\n\t\t\t\t\t\tcancellation of a payment\r\n\t\t\t\t\t\tplan. This is the matching\r\n\t\t\t\t\t\tdebit to item\r\n\t\t\t\t\t\ttype ‘16’\r\n\r\n\t\t\t\t\t\t20 - Targeted payment\r\n\r\n\t\t\t\t\t\tTo get the full list of item\r\n\t\t\t\t\t\ttypes\r\n\t\t\t\t\t\talong with their\r\n\t\t\t\t\t\tdescription, please use the\r\n\t\t\t\t\t\tGetNumericDescription\r\n\t\t\t\t\t\tservice with the description\r\n\t\t\t\t\t\ttype as 'ccsity'"
          },
          "terminalCode": {
            "type": "string",
            "description": "Terminal code of the\r\n\t\t\t\t\t\ttransaction. Only available\r\n\t\t\t\t\t\tin case the transaction was\r\n\t\t\t\t\t\tdone using a terminal"
          },
          "applicationRule": {
            "type": "string",
            "description": "Specifies if the transaction\r\n\t\t\t\t\t\twas applied on the\r\n\t\t\t\t\t\tdue\r\n\t\t\t\t\t\tbalance or not due balance.\r\n\t\t\t\t\t\tSupported values: - 0 - All\r\n\t\t\t\t\t\t- N/A.\r\n\t\t\t\t\t\tApplied on both due\r\n\t\t\t\t\t\tand not due side. - 1 - Not\r\n\t\t\t\t\t\tDue Side - 2 - Due\r\n\t\t\t\t\t\tSide"
          },
          "userData": {
            "type": "string",
            "description": "Customer specific field for\r\n\t\t\t\t\t\tthe transaction"
          },
          "authorizationAccountNumber": {
            "type": "string",
            "description": "First authorization account\r\n\t\t\t\t\t\tthat the items was\r\n\t\t\t\t\t\tapplied.\r\n\t\t\t\t\t\tThis field is only\r\n\t\t\t\t\t\tapplicable to corporate\r\n\t\t\t\t\t\taccounts\r\n\t\t\t\t\t\tprocessing."
          },
          "description2": {
            "type": "string",
            "description": "Description 2 for the\r\n\t\t\t\t\t\ttransaction"
          },
          "description3": {
            "type": "string",
            "description": "Description 3 for the\r\n\t\t\t\t\t\ttransaction"
          },
          "itemCategory": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_itemCategoryType"
              },
              {
                "description": "Used to categorize the\r\n\t\t\t\t\t\ttransaction. The values\r\n\t\t\t\t\t\tare\r\n\t\t\t\t\t\tcustomer specific"
              }
            ]
          },
          "itemSource": {
            "type": "string",
            "description": "Identifier label for the\r\n\t\t\t\t\t\tsource of the item. For\r\n\t\t\t\t\t\texample, 'CORTEX', 'HOST'.\r\n\t\t\t\t\t\tEither both reference code\r\n\t\t\t\t\t\tand source are\r\n\t\t\t\t\t\tspecified or\r\n\t\t\t\t\t\tneither"
          },
          "referenceCode": {
            "type": "string",
            "description": "Reference code for the\r\n\t\t\t\t\t\ttransaction. This is\r\n\t\t\t\t\t\tunique\r\n\t\t\t\t\t\tby source. Either both\r\n\t\t\t\t\t\treference code and source\r\n\t\t\t\t\t\tare specified\r\n\t\t\t\t\t\tor neither"
          },
          "creditDebit": {
            "type": "string",
            "description": "This flag indicates if the\r\n\t\t\t\t\t\ttransaction is a\r\n\t\t\t\t\t\tcredit or\r\n\t\t\t\t\t\tdebit one. In some cases,\r\n\t\t\t\t\t\twhere the transaction is\r\n\t\t\t\t\t\tsuspended or not yet posted,\r\n\t\t\t\t\t\tthe value will be U –\r\n\t\t\t\t\t\tUndefined.\r\n\t\t\t\t\t\tSupported values\r\n\t\t\t\t\t\tare:"
          },
          "creditTransactionMarkup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditTransactionMarkupType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_countryDetailsType": {
        "title": "tns_countryDetailsType",
        "type": "object",
        "properties": {
          "isoCode": {
            "type": "string"
          },
          "alpha2": {
            "type": "string"
          },
          "alpha3": {
            "type": "string"
          },
          "defaultCurrency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          },
          "descriptionDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_descriptionDetailsType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_descriptionDetailsType": {
        "title": "tns_descriptionDetailsType",
        "type": "object",
        "properties": {
          "language": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_itemCategoryType": {
        "title": "tns_itemCategoryType",
        "type": "object",
        "properties": {
          "categoryCode": {
            "type": "string"
          },
          "localeDescriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_localeDescriptionsType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_localeDescriptionsType": {
        "title": "tns_localeDescriptionsType",
        "type": "object",
        "properties": {
          "locale": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreditTransactionMarkupType": {
        "title": "tns_CreditTransactionMarkupType",
        "type": "object",
        "properties": {
          "minimumMarkupAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/creditCardAmountType"
              }
            ]
          },
          "markupPercentage": {
            "type": "number"
          },
          "markupAmount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "conversionRate": {
            "type": "number"
          }
        },
        "description": ""
      },
      "tns_CreditAdjustmentSuccessType": {
        "title": "tns_CreditAdjustmentSuccessType",
        "type": "object",
        "properties": {
          "creditAccountDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_NewCreditAccountDetailsType"
              }
            ]
          },
          "transactionDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditAdjustmentTransactionDetailsType"
              }
            ]
          },
          "commissionTransactionDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_CreditAdjustmentTransactionDetailsType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_GetCortexForexRateType": {
        "title": "tns_GetCortexForexRateType",
        "type": "object",
        "properties": {
          "institutionCode": {
            "type": "string"
          },
          "fromAmount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "fromCurrency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          },
          "toCurrency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_GetCortexForexRateResponse": {
        "title": "tns_GetCortexForexRateResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_successType2"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_successType2": {
        "title": "tns_successType2",
        "type": "object",
        "properties": {
          "fromAmount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "toAmount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "fromCurrency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          },
          "toCurrency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          },
          "conversionRateWithMarkUp": {
            "type": "string"
          },
          "conversionRateWithOutMarkUp": {
            "type": "string"
          },
          "markupPercentage": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_forexDetails_Type1": {
        "title": "tns_forexDetails_Type1",
        "type": "object",
        "properties": {
          "forexReferenceCode": {
            "type": "string"
          },
          "conversionRate": {
            "type": "string"
          },
          "markupPercentage": {
            "type": "string"
          },
          "dealId": {
            "type": "string"
          },
          "pnlAmount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditCardPINAuthenticationRequest": {
        "title": "tns_CreditCardPINAuthenticationRequest",
        "required": [
          "cardNumber"
        ],
        "type": "object",
        "properties": {
          "cardNumber": {
            "type": "string",
            "description": "Encrypted CreditCard Number"
          },
          "PIN": {
            "type": "string",
            "description": "Encrypted pin"
          }
        },
        "description": ""
      },
      "tns_CreditCardPINAuthenticationResponse": {
        "title": "tns_CreditCardPINAuthenticationResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_success"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_RefundCreditCardSurplusAmountRequest": {
        "title": "tns_RefundCreditCardSurplusAmountRequest",
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "Post and update Authorization Balance"
          },
          "cardNumber": {
            "type": "string",
            "description": "Card to apply the transfer on"
          },
          "itemType": {
            "type": "string",
            "description": "Debit Adjustment"
          },
          "surplusAmountToTransfer": {
            "type": "number",
            "description": "Amount to transfer. This value should not\r\n\t\t\t\t\t\t\texceed the surplus of the account"
          },
          "surplusAmountCurrency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "Amount to transfer. This value should not\r\n\t\t\t\t\t\t\texceed the surplus of the account"
          },
          "applyRule": {
            "type": "string",
            "description": "Apply on not due side"
          },
          "itemSource": {
            "type": "string",
            "description": "Channel source, used to validate duplicate\r\n\t\t\t\t\t\t\trequests"
          },
          "itemReferenceCode": {
            "type": "string",
            "description": "Unique reference for the transfer used for the\r\n\t\t\t\t\t\t\tduplicate check. This should be an ever unique value"
          },
          "componentCode": {
            "type": "string",
            "description": "Purchase component so that the 30% limit cash\r\n\t\t\t\t\t\t\tis not affected"
          },
          "description": {
            "type": "string",
            "description": "Description of the transfer (free text)"
          },
          "categoryCode": {
            "type": "string",
            "description": "Transaction code for cash transfer"
          },
          "transmissionDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Date the request was sent by the originating\r\n\t\t\t\t\t\t\tsystem"
          },
          "transmissionTime": {
            "pattern": "([0-9]){4}|([0-9]){6}|()",
            "type": "string",
            "description": "Time the request was sent by the originating\r\n\t\t\t\t\t\t\tsystem"
          },
          "transactionCode": {
            "type": "string",
            "description": "Cash"
          },
          "messageClass": {
            "type": "string",
            "description": "Financial"
          },
          "functionCode": {
            "type": "string",
            "description": "Original Financial"
          },
          "acquirerCountry": {
            "type": "string",
            "description": "Acquiring country"
          },
          "acquirerFinancialEntity": {
            "type": "string",
            "description": "This is used to identify the source and apply\r\n\t\t\t\t\t\t\tthe surplus rules"
          },
          "issuerFinancialEntity": {
            "type": "string",
            "description": "Issuer financial entity"
          },
          "skipNotifications": {
            "type": "string",
            "description": "In case notification is required to be checked"
          },
          "accountNumber": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string",
            "description": "Current account number to transfer the amount\r\n\t\t\t\t\t\t\tto"
          },
          "accountCurrency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "Currency of the current account to transfer the\r\n\t\t\t\t\t\t\tamount to"
          },
          "promoCode": {
            "type": "string",
            "description": "Can be used to set the promo code"
          },
          "accountAction": {
            "type": "string",
            "description": "Current account number to transfer the amount\r\n\t\t\t\t\t\t\tto"
          }
        },
        "description": ""
      },
      "tns_RefundCreditCardSurplusAmountResponse": {
        "title": "tns_RefundCreditCardSurplusAmountResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RefundCreditCardSurplusAmountResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_RefundCreditCardSurplusAmountResponseType": {
        "title": "tns_RefundCreditCardSurplusAmountResponseType",
        "type": "object",
        "properties": {
          "referenceId": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreditCardAccountClosureInquiryResponse": {
        "title": "tns_CreditCardAccountClosureInquiryResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CCAccountClosureSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditCardAccountClosureInquiryRequestType": {
        "title": "tns_CreditCardAccountClosureInquiryRequestType",
        "type": "object",
        "properties": {
          "customerIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/customerIdentifierType"
              }
            ]
          },
          "cardIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cardIdentifierType"
              }
            ]
          },
          "accountIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ccsAccountIdentifierType"
              }
            ]
          },
          "accountStatusFilterList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_accountStatusFilterListType"
              }
            ]
          },
          "maskBalance": {
            "type": "boolean"
          }
        },
        "description": ""
      },
      "tns_accountStatusFilterListType": {
        "title": "tns_accountStatusFilterListType",
        "type": "object",
        "properties": {
          "accountStatusFilter": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Account Status for which to get the inquiry\r\n\t\t\t\t\t\tdetails"
          }
        },
        "description": ""
      },
      "tns_CCAccountClosureSuccessType": {
        "title": "tns_CCAccountClosureSuccessType",
        "type": "object",
        "properties": {
          "customerId": {
            "type": "string",
            "description": "Customer ID/ CIF"
          },
          "customerIdType": {
            "type": "string",
            "description": "Customer ID Type"
          },
          "customerName": {
            "type": "string",
            "description": "Customer Name"
          },
          "accountDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_accountDetailsType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_accountDetailsType": {
        "title": "tns_accountDetailsType",
        "type": "object",
        "properties": {
          "singleAccountDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_singleAccountDetailsType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_singleAccountDetailsType": {
        "title": "tns_singleAccountDetailsType",
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string",
            "description": "Card Id"
          },
          "statusCode": {
            "type": "string",
            "description": "Status Code"
          },
          "statusDescription": {
            "type": "string",
            "description": "Status Description"
          },
          "unclaimedOrAbandondBalanceInSAR": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Account's Unclaimed or Abandoned Balance in SAR"
              }
            ]
          },
          "unclaimedOrAbandondBalanceInFC": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Account's Unclaimed or Abandoned Balance in\r\n\t\t\t\t\t\tForeign Currency"
              }
            ]
          },
          "currency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "Currency"
          },
          "lastStatusChangedDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Last account status changed date"
          },
          "unclaimedOrAbandondBGL": {
            "type": "string",
            "description": "Unclaimed or abandoned BGL"
          },
          "collectedBranch": {
            "type": "string",
            "description": "Collected Branch"
          },
          "collectedDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Collected Date"
          },
          "paymentAmountInSAR": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Payment Amount in SAR"
              }
            ]
          },
          "paymentStatus": {
            "type": "string",
            "description": "Payment Status"
          },
          "dateAccountLastUsed": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "issueDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "currentStatus": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreditCardAccountClosureResponse": {
        "title": "tns_CreditCardAccountClosureResponse",
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditCardAccountClosureType": {
        "title": "tns_CreditCardAccountClosureType",
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ccsAccountIdentifierType"
              }
            ]
          },
          "cardIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cardIdentifierType"
              }
            ]
          },
          "closureBalance": {
            "type": "string",
            "description": "Closure Balance"
          },
          "closureSurplus": {
            "type": "string",
            "description": "Closure Surplus"
          },
          "source": {
            "type": "string"
          },
          "referenceNumber": {
            "type": "string",
            "description": "Reference Number"
          },
          "userData": {
            "type": "string",
            "description": "User Data"
          },
          "description": {
            "type": "string",
            "description": "Description"
          },
          "description2": {
            "type": "string",
            "description": "Description 2"
          },
          "description3": {
            "type": "string",
            "description": "Description 3"
          },
          "itemCategory": {
            "type": "string",
            "description": "Item category"
          },
          "acquirerFinancialEntity": {
            "type": "string",
            "description": "acquirer Financial Entity"
          },
          "issuerFinancialEntity": {
            "type": "string",
            "description": "Issuer Financial Entity"
          },
          "user": {
            "type": "string",
            "description": "User"
          },
          "memo": {
            "type": "string",
            "description": "Memo"
          },
          "externalNumber": {
            "type": "string",
            "description": "External Number"
          }
        },
        "description": ""
      },
      "tns_CardFeeRequest": {
        "title": "tns_CardFeeRequest",
        "required": [
          "transferType",
          "action",
          "cardNumber",
          "itemType"
        ],
        "type": "object",
        "properties": {
          "transferType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_transferType"
              }
            ]
          },
          "action": {
            "type": "string",
            "description": "Action for a new credit transaction"
          },
          "cardNumber": {
            "type": "string",
            "description": "Card Number"
          },
          "accountDerivationMethod": {
            "type": "string",
            "description": "Specifies the method to use to\r\n\t\t\t\t\t\t\tderive the\r\n\t\t\t\t\t\t\taccount to apply the\r\n\t\t\t\t\t\t\ttransaction on if the card is\r\n\t\t\t\t\t\t\tspecified and\r\n\t\t\t\t\t\t\tthe account is not."
          },
          "itemType": {
            "type": "string",
            "description": "Specifies the type of the\r\n\t\t\t\t\t\t\titem/transaction. A\r\n\t\t\t\t\t\t\tpredefined list\r\n\t\t\t\t\t\t\tof values exists and custom items\r\n\t\t\t\t\t\t\tmight be created."
          },
          "fromAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/creditCardAmountType"
              },
              {
                "description": "From Amount"
              }
            ]
          },
          "toAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/creditCardAmountType"
              },
              {
                "description": "To Amount"
              }
            ]
          },
          "applyRule": {
            "type": "string",
            "description": "Specifies if the transaction should\r\n\t\t\t\t\t\t\tbe applied\r\n\t\t\t\t\t\t\ton the due balance or not\r\n\t\t\t\t\t\t\tdue balance of the account."
          },
          "itemSource": {
            "type": "string",
            "description": "Source system the transaction was\r\n\t\t\t\t\t\t\treceived from.\r\n\t\t\t\t\t\t\tIf specified, the\r\n\t\t\t\t\t\t\tItemReferenceCode should also be\r\n\t\t\t\t\t\t\tspecified. If\r\n\t\t\t\t\t\t\tboth are specified,\r\n\t\t\t\t\t\t\tCortex will validate for duplicate\r\n\t\t\t\t\t\t\ttransactions using the source and\r\n\t\t\t\t\t\t\treference code."
          },
          "itemReferenceCode": {
            "type": "string",
            "description": "Reference number for the payment\r\n\t\t\t\t\t\t\tfrom the source\r\n\t\t\t\t\t\t\tsystem. This should\r\n\t\t\t\t\t\t\tbe an ever unique number from the\r\n\t\t\t\t\t\t\tsource\r\n\t\t\t\t\t\t\tsystem. In case already\r\n\t\t\t\t\t\t\texisting with the same ItemSource,\r\n\t\t\t\t\t\t\tthe\r\n\t\t\t\t\t\t\trequest will be rejected.\r\n\t\t\t\t\t\t\tMandatory in case the ItemSource is\r\n\t\t\t\t\t\t\tspecified"
          },
          "componentCode": {
            "type": "string",
            "description": "Component code to apply the\r\n\t\t\t\t\t\t\ttransaction on. A\r\n\t\t\t\t\t\t\tcomponent\r\n\t\t\t\t\t\t\trepresents a balance (i.e. cash\r\n\t\t\t\t\t\t\tbalance, purchase\r\n\t\t\t\t\t\t\tbalance...).\r\n\t\t\t\t\t\t\tComponents definition is customer\r\n\t\t\t\t\t\t\tspecific."
          },
          "description": {
            "type": "string",
            "description": "Description to add for the payment.\r\n\t\t\t\t\t\t\tThis\r\n\t\t\t\t\t\t\tdescription is used in\r\n\t\t\t\t\t\t\tstatements and inquiries."
          },
          "fromCategoryCode": {
            "type": "string",
            "description": "send below value according to txn type\r\n\t\t\t\t\t\t\tA2W - 800\r\n\t\t\t\t\t\t\tW2A - 806\r\n\t\t\t\t\t\t\tW2W - 808"
          },
          "toCategoryCode": {
            "type": "string",
            "description": "send below value according to txn type\r\n\t\t\t\t\t\t\tW2W - 810"
          },
          "additionalTransactionDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_additionalTransactionDetailsType"
              }
            ]
          },
          "skipNotifications": {
            "type": "string",
            "description": "Specifies if notifications should be\r\n\t\t\t\t\t\t\tskipped or\r\n\t\t\t\t\t\t\tnot."
          },
          "updateAccountCashLimit": {
            "type": "string",
            "description": "Specifies if the account cash limit\r\n\t\t\t\t\t\t\tshould be\r\n\t\t\t\t\t\t\tupdated in case the item\r\n\t\t\t\t\t\t\tis posted and affected the cash\r\n\t\t\t\t\t\t\tbalance."
          },
          "updateCardLimitOnPayment": {
            "type": "string",
            "description": "Specifies if the card limits should\r\n\t\t\t\t\t\t\tbe updated\r\n\t\t\t\t\t\t\tin case this is a payment\r\n\t\t\t\t\t\t\titem. Defaulted to false if not\r\n\t\t\t\t\t\t\tspecified."
          },
          "returnFullDetails": {
            "type": "string",
            "description": "Depending if account details are\r\n\t\t\t\t\t\t\tbeing taken\r\n\t\t\t\t\t\t\tfrom the response , if\r\n\t\t\t\t\t\t\tnot needed this should be set to\r\n\t\t\t\t\t\t\tfalse for\r\n\t\t\t\t\t\t\tbetter performance"
          },
          "checkAvailableBalance": {
            "type": "string",
            "description": "Specifies if available balance\r\n\t\t\t\t\t\t\tshould be checked\r\n\t\t\t\t\t\t\tfor the account in\r\n\t\t\t\t\t\t\tcase of debit items. If set to true\r\n\t\t\t\t\t\t\tand the\r\n\t\t\t\t\t\t\taccount does not have enough\r\n\t\t\t\t\t\t\tbalance (including authorized amount\r\n\t\t\t\t\t\t\tand applicable fees if any), the\r\n\t\t\t\t\t\t\trequest is rejected."
          },
          "doRiskChecks": {
            "type": "string",
            "description": "Specifies if additional risk checks\r\n\t\t\t\t\t\t\tshould be\r\n\t\t\t\t\t\t\tdone on the payment."
          },
          "externalAccountDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ExternalAccountDetailsType"
              },
              {
                "description": "External account details are used for either:\r\n\t\t\t\t\t\t\tLogging purposes\r\n\t\t\t\t\t\t\tValidation\r\n\t\t\t\t\t\t\tIntegration with external systems\r\n\t\t\t\t\t\t\t(requires customization)"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CardFeeResponse": {
        "title": "tns_CardFeeResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_success1"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_ExternalAccountDetailsType": {
        "title": "tns_ExternalAccountDetailsType",
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "L - Log only - the details will only be\r\n\t\t\t\t\t\tlogged\r\n\t\t\t\t\t\tfor reporting purposes V - Log\r\n\t\t\t\t\t\tand validate - the details will be\r\n\t\t\t\t\t\tlogged after validating that the account\r\n\t\t\t\t\t\tnumber specified is the\r\n\t\t\t\t\t\tsame as the\r\n\t\t\t\t\t\tdirect debit account number linked to\r\n\t\t\t\t\t\tthe credit account\r\n\t\t\t\t\t\tP - Post to external\r\n\t\t\t\t\t\taccount immediately - an attempt to\r\n\t\t\t\t\t\tdebit the\r\n\t\t\t\t\t\texternal account is done on\r\n\t\t\t\t\t\tthe spot regardless if the end of day\r\n\t\t\t\t\t\tprocessing is running or the item is not\r\n\t\t\t\t\t\tposted in Cortex. U - Post\r\n\t\t\t\t\t\tto external\r\n\t\t\t\t\t\taccount immediately and updated the\r\n\t\t\t\t\t\tblocked amount in\r\n\t\t\t\t\t\tCortex. A - Post to\r\n\t\t\t\t\t\texternal account only when the item in\r\n\t\t\t\t\t\tCortex is\r\n\t\t\t\t\t\tposted."
          },
          "accountNumber": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string",
            "description": "Source or destination account for the\r\n\t\t\t\t\t\titem.\r\n\t\t\t\t\t\tMandatory for all actions except L\r\n\t\t\t\t\t\t- Log only."
          },
          "accountCurrency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "Currency of the external account"
          },
          "userData1": {
            "type": "string",
            "description": "Customer specific data"
          }
        },
        "description": ""
      },
      "tns_GetEntityListRequest": {
        "title": "tns_GetEntityListRequest",
        "type": "object",
        "properties": {
          "entityListDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_entityListDetailsType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GetEntityListResponse": {
        "title": "tns_GetEntityListResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_entityListSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_entityListDetailsType": {
        "title": "tns_entityListDetailsType",
        "type": "object",
        "properties": {
          "institutionCode": {
            "type": "string",
            "description": "Institution code for which the entities are\r\n\t\t\t\t\t\trequired"
          },
          "entityCode": {
            "type": "string",
            "description": "Entity code to get the details for. In case not\r\n\t\t\t\t\t\tspecified, all entities defined in the system\r\n\t\t\t\t\t\tunder the specified\r\n\t\t\t\t\t\tinstitution will be returned"
          },
          "parentEntityCode": {
            "type": "string",
            "description": "Code of the parent entity. Can be used to\r\n\t\t\t\t\t\tretreive all childs of a specific entity"
          },
          "additionalData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_additionalDataType"
              },
              {
                "description": "Used to limit the data returned in the response\r\n\t\t\t\t\t\tin case not required"
              }
            ]
          },
          "pageSetup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_pageSetupType"
              },
              {
                "description": "Paging required. In case entity code is\r\n\t\t\t\t\t\tspecified, page number 1 is only allowed"
              }
            ]
          },
          "entityRegistrationNumberList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_EntityRegistrationNumberListType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_EntityRegistrationNumberListType": {
        "title": "tns_EntityRegistrationNumberListType",
        "type": "object",
        "properties": {
          "entityRegistrationNumber": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Single requested Registration Number"
          }
        },
        "description": ""
      },
      "tns_additionalDataType": {
        "title": "tns_additionalDataType",
        "type": "object",
        "properties": {
          "returnAccounts": {
            "type": "boolean",
            "description": "Specifies if the entity accounts should be\r\n\t\t\t\t\t\treturned in the response. Defaulted to false in case not specified"
          },
          "returnAddresses": {
            "type": "boolean",
            "description": "Specifies if the entity addresses should be\r\n\t\t\t\t\t\treturned in the response. Defaulted to false in case not specified"
          },
          "returnAllowedProducts": {
            "type": "boolean",
            "description": "Specifies if the entity allowed products should\r\n\t\t\t\t\t\tbe\r\n\t\t\t\t\t\treturned in the response. Defaulted to false in case not\r\n\t\t\t\t\t\tspecified"
          },
          "returnContacts": {
            "type": "boolean",
            "description": "Specifies if the entity contacts should be\r\n\t\t\t\t\t\treturned in the response. Defaulted to false in case not specified"
          },
          "returnFinancialRules": {
            "type": "boolean",
            "description": "Specifies if the entity financial rules should\r\n\t\t\t\t\t\tbe\r\n\t\t\t\t\t\treturned in the response. Defaulted to false in case not\r\n\t\t\t\t\t\tspecified"
          },
          "returnIssuingRules": {
            "type": "boolean",
            "description": "Specifies if the entity issuing rules should be\r\n\t\t\t\t\t\treturned in the response. Defaulted to false in case not specified"
          }
        },
        "description": ""
      },
      "tns_additionalDataType1": {
        "title": "tns_additionalDataType1",
        "type": "object",
        "properties": {
          "returnAccountDetails": {
            "type": "boolean",
            "description": "Specifies if account details should be returned.\r\n\t\t\t\t\t\tDefaulted to false if not specified"
          },
          "returnExtendedAccountDetails": {
            "type": "boolean",
            "description": "Specifies if account details should be returned.\r\n\t\t\t\t\t\tDefaulted to false if not specified"
          },
          "returnExtendedCardDetails": {
            "type": "boolean",
            "description": "Specifies if account details should be returned.\r\n\t\t\t\t\t\tDefaulted to false if not specified"
          },
          "returnCustomerDetails": {
            "type": "boolean",
            "description": "Specifies if customer details should be\r\n\t\t\t\t\t\treturned.\r\n\t\t\t\t\t\tDefaulted to false if not specified"
          },
          "returnCustomerAddressDetails": {
            "type": "boolean",
            "description": "Specifies if customer address details should be\r\n\t\t\t\t\t\treturned.\r\n\t\t\t\t\t\tDefaulted to false if not specified"
          },
          "returnCardAddressDetails": {
            "type": "boolean",
            "description": "Specifies if card address details should be\r\n\t\t\t\t\t\treturned.\r\n\t\t\t\t\t\tDefaulted to false if not specified"
          },
          "returnCardProductDetails": {
            "type": "boolean",
            "description": "Specifies if card product details should be\r\n\t\t\t\t\t\treturned.\r\n\t\t\t\t\t\tDefaulted to false if not specified"
          },
          "returnCardStatusDetails": {
            "type": "boolean",
            "description": "Specifies if card status details should be\r\n\t\t\t\t\t\treturned.\r\n\t\t\t\t\t\tDefaulted to false if not specified"
          }
        },
        "description": ""
      },
      "tns_entityListSuccessType": {
        "title": "tns_entityListSuccessType",
        "type": "object",
        "properties": {
          "pageDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pageDetailsType"
              },
              {
                "description": "Page details with the results returned. Returned\r\n\t\t\t\t\t\tin case the page setup in the request does not specify to skip the\r\n\t\t\t\t\t\tcount"
              }
            ]
          },
          "entityList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_entityListType"
              },
              {
                "description": "List of entities in case found"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_entityListType": {
        "title": "tns_entityListType",
        "type": "object",
        "properties": {
          "entity": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_entityType"
            },
            "description": "Institution code the entity belongs to"
          }
        },
        "description": ""
      },
      "tns_entityType": {
        "title": "tns_entityType",
        "type": "object",
        "properties": {
          "institutionCode": {
            "type": "string",
            "description": "Institution code the entity belongs to"
          },
          "entityCode": {
            "type": "string",
            "description": "Unique code identifying the entity in cortex"
          },
          "description": {
            "type": "string",
            "description": "Description of the entity"
          },
          "alternativeDescription": {
            "type": "string",
            "description": "Alternative description of the entity in case\r\n\t\t\t\t\t\tdefined"
          },
          "businessDescription": {
            "type": "string",
            "description": "Description of the business of the entity"
          },
          "alternativeBusinessDescription": {
            "type": "string",
            "description": "Alternative business description of the entity\r\n\t\t\t\t\t\tin\r\n\t\t\t\t\t\tcase defined"
          },
          "type": {
            "type": "string",
            "description": "Type of the entity"
          },
          "segment": {
            "type": "string",
            "description": "Segment of the entity"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_statusType"
              },
              {
                "description": "Status of the entity"
              }
            ]
          },
          "statusDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Last date the status of the application was\r\n\t\t\t\t\t\tupdated"
          },
          "riskLevel": {
            "type": "string",
            "description": "Risk level of the entity"
          },
          "registrationNumber": {
            "type": "string",
            "description": "Registration Number of the entity"
          },
          "contractStartDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Date the contract starts with this entity"
          },
          "contractExpiryDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Date the contract expires with this entity"
          },
          "economicActivity": {
            "type": "string",
            "description": "Economic activity of the entity"
          },
          "parentEntityCode": {
            "type": "string",
            "description": "Code of the parent entity in case the entity\r\n\t\t\t\t\t\tlevel is child"
          },
          "accountList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_accountListType"
              },
              {
                "description": "List of accounts defined for this entity if any\r\n\t\t\t\t\t\tand if specified in the request"
              }
            ]
          },
          "addressList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_addressListType"
              },
              {
                "description": "List of addresses the entity is linked to"
              }
            ]
          },
          "allowedProductList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_allowedProductListType"
              },
              {
                "description": "Allowed card products that can be created under\r\n\t\t\t\t\t\tthis entity"
              }
            ]
          },
          "contactList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_contactListType"
              },
              {
                "description": "Contact list for the entity"
              }
            ]
          },
          "financialRules": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_financialRulesType"
              },
              {
                "description": "Financial rules defined for the entity"
              }
            ]
          },
          "issuingRules": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_issuingRulesType"
              },
              {
                "description": "Issuance rules defined for the entity"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_addressListType": {
        "title": "tns_addressListType",
        "type": "object",
        "properties": {
          "address": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_addresstType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_addresstType": {
        "title": "tns_addresstType",
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string",
            "description": "Address Line 1"
          },
          "addressLine2": {
            "type": "string",
            "description": "Address Line 2"
          },
          "addressLine3": {
            "type": "string",
            "description": "Address Line 3"
          },
          "addressLine4": {
            "type": "string",
            "description": "Address Line 4"
          },
          "addressLine5": {
            "type": "string",
            "description": "Address Line 5. Only applicable for contact\r\n\t\t\t\t\t\tmechanism module, ignored in case the master address module is\r\n\t\t\t\t\t\tused"
          },
          "directions": {
            "type": "string",
            "description": "Address directions. Only applicable for contact\r\n\t\t\t\t\t\tmechanism module, ignored in case the master address module is\r\n\t\t\t\t\t\tused"
          },
          "city": {
            "type": "string",
            "description": "Address City."
          },
          "postalCode": {
            "type": "string",
            "description": "Address postal code"
          },
          "province": {
            "type": "string",
            "description": "Address province. Only applicable for the\r\n\t\t\t\t\t\tcontact\r\n\t\t\t\t\t\tmechanism address"
          },
          "territory": {
            "type": "string",
            "description": "Address territory. Only applicable for the\r\n\t\t\t\t\t\tcontact mechanism address"
          },
          "state": {
            "type": "string",
            "description": "Address State. Only applicable for the\r\n\t\t\t\t\t\tcontact\r\n\t\t\t\t\t\tmechanism address"
          },
          "region": {
            "type": "string",
            "description": "Address region. Only applicable for the contact\r\n\t\t\t\t\t\tmechanism address"
          },
          "county": {
            "type": "string",
            "description": "Address county. Only applicable for the contact\r\n\t\t\t\t\t\tmechanism address"
          },
          "country": {
            "type": "string",
            "description": "Country numeric ISO Code. To get the list of\r\n\t\t\t\t\t\tsupported country code values, use the GetCountryList service. To\r\n\t\t\t\t\t\tget the list of defined ISO currency codes, use the GetCountryList\r\n\t\t\t\t\t\tservice"
          },
          "countryDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_countryDetailsType"
              },
              {
                "description": "Country Details"
              }
            ]
          },
          "phone1": {
            "type": "string",
            "description": "Phone number 1 (usually used for the mobile\r\n\t\t\t\t\t\tnumber). Only applicable for the \"master address\" module"
          },
          "phone2": {
            "type": "string",
            "description": "Phone number 2. Only applicable for the \"master\r\n\t\t\t\t\t\taddress\" module"
          },
          "extension": {
            "type": "string",
            "description": "Phone number extension. Only applicable for the\r\n\t\t\t\t\t\t\"master\r\n\t\t\t\t\t\taddress\" module"
          },
          "email": {
            "type": "string",
            "description": "Email. Only applicable for the \"master address\"\r\n\t\t\t\t\t\tmodule"
          },
          "fax": {
            "type": "string",
            "description": "Fax. Only applicable for the \"master address\"\r\n\t\t\t\t\t\tmodule"
          },
          "district": {
            "type": "string",
            "description": "Address district. Only applicable for the\r\n\t\t\t\t\t\t\"master\r\n\t\t\t\t\t\taddress\" module."
          },
          "poBox": {
            "type": "string",
            "description": "P.O. Box. Only applicable for the\r\n\t\t\t\t\t\t\"master\r\n\t\t\t\t\t\taddress\"\r\n\t\t\t\t\t\tmodule."
          },
          "ownershipType": {
            "type": "string",
            "description": "Address ownership. Only applicable for the\r\n\t\t\t\t\t\t\"master address\" module. To get the list of supported values, use\r\n\t\t\t\t\t\tthe GetStringDescription service with description type addown"
          },
          "userData1": {
            "type": "string",
            "description": "Customer specific data 2. Used for customer\r\n\t\t\t\t\t\tspecific purposes. Only applicable for the \"master address\" module"
          },
          "userData2": {
            "type": "string",
            "description": "Customer specific data 2. Used for customer\r\n\t\t\t\t\t\tspecific purposes. Only applicable for the \"master address\" module"
          },
          "addressRole": {
            "type": "string",
            "description": "Address role. As each customer or card can have\r\n\t\t\t\t\t\tmultiple addresses, this field will identify if the address is the\r\n\t\t\t\t\t\tmain address or other logging purpose address."
          }
        },
        "description": ""
      },
      "tns_allowedProductListType": {
        "title": "tns_allowedProductListType",
        "type": "object",
        "properties": {
          "allowedProduct": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_allowedProductType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_allowedProductType": {
        "title": "tns_allowedProductType",
        "type": "object",
        "properties": {
          "cardProduct": {
            "type": "string"
          },
          "default": {
            "type": "string"
          },
          "allowedLoanAmountList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_allowedLoanAmountListType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_contactListType": {
        "title": "tns_contactListType",
        "type": "object",
        "properties": {
          "contact": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_contactType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_contactType": {
        "title": "tns_contactType",
        "type": "object",
        "properties": {
          "salutation": {
            "type": "string",
            "description": "Salutation of the contact person"
          },
          "firstName": {
            "type": "string",
            "description": "First name of the contact person"
          },
          "middleName": {
            "type": "string",
            "description": "Middle name of the contact person"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of the contact person"
          },
          "professionTitle": {
            "type": "string",
            "description": "Professional title of the contact person"
          },
          "phone1": {
            "type": "string",
            "description": "Phone 1 of the contact person"
          },
          "phoneExtension": {
            "type": "string",
            "description": "Phone 1 extension of the contact person"
          },
          "phone2": {
            "type": "string",
            "description": "Phone 2 of the contact person"
          },
          "mobile": {
            "type": "string",
            "description": "Mobile number of the contact person"
          },
          "fax": {
            "type": "string",
            "description": "Fax of the contact person"
          },
          "email": {
            "type": "string",
            "description": "email address of the contact person"
          },
          "role": {
            "type": "string",
            "description": "Specifies the role of the contact as an entity\r\n\t\t\t\t\t\tmight have multiple contacts"
          }
        },
        "description": ""
      },
      "tns_financialRulesType": {
        "title": "tns_financialRulesType",
        "type": "object",
        "properties": {
          "allowLoading": {
            "type": "string",
            "description": "Specifies if loading is allowed for cards under.\r\n\t\t\t\t\t\t(deprecated,\r\n\t\t\t\t\t\tthe account risk is the new module using for\r\n\t\t\t\t\t\trestricting the laod)\r\n\t\t\t\t\t\tthis entity"
          },
          "loadingCycle": {
            "type": "string",
            "description": "Number of days constituting a loading cycle for\r\n\t\t\t\t\t\twhich a maximum amount and count of account load are allowed.\r\n\t\t\t\t\t\tAny 0\r\n\t\t\t\t\t\tor negative value means no cycle is required and the maximum\r\n\t\t\t\t\t\tloading amount and count defined will be always used (deprecated,\r\n\t\t\t\t\t\tthe account risk is the new module using for restricting the laod)"
          },
          "maximumLoadingAmount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Maximum amount allowed to be loaded to an\r\n\t\t\t\t\t\taccount\r\n\t\t\t\t\t\tin a loading cycle. Any 0 or negative value means no limit\r\n\t\t\t\t\t\tis\r\n\t\t\t\t\t\trequired. (deprecated,\r\n\t\t\t\t\t\tthe account risk is the new module using\r\n\t\t\t\t\t\tfor\r\n\t\t\t\t\t\trestricting the laod)"
              }
            ]
          },
          "maximumLoadingCount": {
            "type": "string",
            "description": "Maximum number of load operations allowed to be\r\n\t\t\t\t\t\tfor the account in a loading cycle. Any 0 or negative value means\r\n\t\t\t\t\t\tno limit is required. (deprecated,\r\n\t\t\t\t\t\tthe account risk is the new\r\n\t\t\t\t\t\tmodule\r\n\t\t\t\t\t\tusing for\r\n\t\t\t\t\t\trestricting the laod)"
          },
          "allowLoadFromDifferentEntity": {
            "type": "string",
            "description": "Specifies if loading the card from a different\r\n\t\t\t\t\t\tentity (other than the parent) is allowed"
          },
          "allowUnload": {
            "type": "string",
            "description": "Specifies if unload (closing the account and\r\n\t\t\t\t\t\tretreiving the balance) is allowed for accounts under this entity"
          },
          "allowStatementGeneration": {
            "type": "string",
            "description": "Specifies if statement generation is allowed for\r\n\t\t\t\t\t\taccounts under this entity"
          },
          "defaultAccountType": {
            "type": "string",
            "description": "Default account type to be used for accounts\r\n\t\t\t\t\t\tcreated under this entity. To get the list of supported account\r\n\t\t\t\t\t\ttypes, use the GetAccountTypeList service"
          },
          "applyFeeAfter": {
            "type": "string",
            "description": "Number of days after which an entity fee should\r\n\t\t\t\t\t\tbe applied (fee on the entity and not on the cardholder). 0 means\r\n\t\t\t\t\t\tit should be applied on the same date -1 means last day of the\r\n\t\t\t\t\t\tweek,\r\n\t\t\t\t\t\t-2 means last day of the month. Any positive value means the\r\n\t\t\t\t\t\tfee should be applied after the specified number of days"
          }
        },
        "description": ""
      },
      "tns_issuingRulesType": {
        "title": "tns_issuingRulesType",
        "type": "object",
        "properties": {
          "cardValidityPeriod": {
            "type": "string",
            "description": "Specifies the validity period in months to use\r\n\t\t\t\t\t\tfor deriving the card expiry date for a card under this entity. If\r\n\t\t\t\t\t\tset to -1, the validity of the card product will be used instead"
          },
          "allowSupplementary": {
            "type": "string",
            "description": "Specifies if supplementary cards are allowed to\r\n\t\t\t\t\t\tbe created for cards under this entity"
          },
          "defaultCardStatus": {
            "type": "string",
            "description": "Default card status to use for newly created\r\n\t\t\t\t\t\tcards under this entity. To get the list of supported card\r\n\t\t\t\t\t\tstatuses, use the GetCardStatusList service"
          },
          "defaultAccountStatus": {
            "type": "string",
            "description": "Default account status to use for newly created\r\n\t\t\t\t\t\taccounts under this entity. To get the list of supported account\r\n\t\t\t\t\t\tstatuses, use the GetAccountStatusList service"
          },
          "bureauCheckRequired": {
            "type": "string",
            "description": "Specifies if bureau check should be done for\r\n\t\t\t\t\t\tcards being created under this entity. The actual bureau check is\r\n\t\t\t\t\t\tbank dependent and the company they have a contract with"
          },
          "documentGracePeriod": {
            "type": "string",
            "description": "Grace period given to the customer to provide\r\n\t\t\t\t\t\tall\r\n\t\t\t\t\t\trequired documentation before canceleing the account and card.\r\n\t\t\t\t\t\tThe\r\n\t\t\t\t\t\tvalue -1 means no restriction"
          },
          "allowReIssuance": {
            "type": "string",
            "description": "Specifies if re-issuance for cards under this\r\n\t\t\t\t\t\tentity (replacing a lost or stolen card, new card number\r\n\t\t\t\t\t\tgenerated) is allowed"
          },
          "allowReplacement": {
            "type": "string",
            "description": "Specifies if replacement for cards under this\r\n\t\t\t\t\t\tentity (replacing a damaged card, same card number is used) is\r\n\t\t\t\t\t\tallowed"
          },
          "allowRenewal": {
            "type": "string",
            "description": "Specifies if renewal is allowed for cards under\r\n\t\t\t\t\t\tthis entity. in case set to false, cards under this entity will\r\n\t\t\t\t\t\tnever be renewed"
          },
          "allowPinMailer": {
            "type": "string",
            "description": "Specifies if pin mailer generation for cards\r\n\t\t\t\t\t\tunder this entity is allowed"
          },
          "minimumReIssuanceValidity": {
            "type": "string",
            "description": "Used to control the expiry date generation for\r\n\t\t\t\t\t\tcards being re-issued (new card number). This is the minimum\r\n\t\t\t\t\t\tvalidity a card being\r\n\t\t\t\t\t\tre-issued should have so that the new card\r\n\t\t\t\t\t\thas the same expiry\r\n\t\t\t\t\t\tdate as the previous one. If the card has a\r\n\t\t\t\t\t\tvalidity less than this one, a new expiry date will be calculated\r\n\t\t\t\t\t\tbased on the validity date configured"
          },
          "minimumReplacementValidity": {
            "type": "string",
            "description": "Used to control the expiry date generation for\r\n\t\t\t\t\t\tcards being replaced (same card number). This is the minimum\r\n\t\t\t\t\t\tvalidity a card being\r\n\t\t\t\t\t\treplaced should have so that the new card\r\n\t\t\t\t\t\thas\r\n\t\t\t\t\t\tthe same expiry\r\n\t\t\t\t\t\tdate as the previous one. If the card has a\r\n\t\t\t\t\t\tvalidity less than this one, a new expiry date will be calculated\r\n\t\t\t\t\t\tbased on the validity date configured"
          },
          "renewalPostExpiryDays": {
            "type": "string",
            "description": "Number of days after the card is already expired\r\n\t\t\t\t\t\tit will still be considered for renewal. This is mainly used to\r\n\t\t\t\t\t\tre-consider cards for renewal in case it was skipped due to an\r\n\t\t\t\t\t\tinvalid account status for example at that time"
          },
          "renewalPreExpiryDays": {
            "type": "string",
            "description": "Number of days before the card expires\r\n\t\t\t\t\t\tafter\r\n\t\t\t\t\t\twhich\r\n\t\t\t\t\t\tthe card will considered for renewal."
          },
          "earlyRenewalDays": {
            "type": "string",
            "description": "Number of days before the card expires\r\n\t\t\t\t\t\tafter\r\n\t\t\t\t\t\twhich\r\n\t\t\t\t\t\tthe card can be forcedly (early) renewed"
          }
        },
        "description": ""
      },
      "tns_CreditAccountCashLimitUpdationRequest": {
        "title": "tns_CreditAccountCashLimitUpdationRequest",
        "type": "object",
        "properties": {
          "ccsAccountIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ccsAccountIdentifierType"
              },
              {
                "description": "Credit account to update the cash limit for.\r\n\t\t\t\t\t\t\tNot\r\n\t\t\t\t\t\t\trequired in case the card is specified. If both card and\r\n\t\t\t\t\t\t\taccount\r\n\t\t\t\t\t\t\tare specified, a check is done to make sure they are\r\n\t\t\t\t\t\t\tlinked. If\r\n\t\t\t\t\t\t\tonly card specified, the default account of the card is\r\n\t\t\t\t\t\t\tused"
              }
            ]
          },
          "cardIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cardIdentifierType"
              },
              {
                "description": "Credit card to update the cash limit of its\r\n\t\t\t\t\t\t\tdefault account. Not required in case the account is specified.\r\n\t\t\t\t\t\t\tIf\r\n\t\t\t\t\t\t\tboth card and account are specified, a check is done to make\r\n\t\t\t\t\t\t\tsure\r\n\t\t\t\t\t\t\tboth are linked"
              }
            ]
          },
          "newCashLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              },
              {
                "description": "New cash limit to set for the account. Should\r\n\t\t\t\t\t\t\tbe\r\n\t\t\t\t\t\t\tskipped\r\n\t\t\t\t\t\t\tin case the percentage is set. Required in case the\r\n\t\t\t\t\t\t\tpercentage is not specified"
              }
            ]
          },
          "newCashPercentage": {
            "type": "string",
            "description": "New Cash limit percentage to set for the\r\n\t\t\t\t\t\t\taccount.\r\n\t\t\t\t\t\t\tRequired in case new cash limit is not specified. Should\r\n\t\t\t\t\t\t\tbe\r\n\t\t\t\t\t\t\tskipped if the cash limit is specified"
          },
          "forceUpdate": {
            "type": "boolean",
            "description": "Specifies if the update the cash limit should\r\n\t\t\t\t\t\t\tbe\r\n\t\t\t\t\t\t\tforced. In case set to true, no checks will be done on the\r\n\t\t\t\t\t\t\taccount\r\n\t\t\t\t\t\t\tif the limit change is allowed. Defaulted to false in case\r\n\t\t\t\t\t\t\tnot\r\n\t\t\t\t\t\t\tspecified"
          },
          "skipCurrentUsageCheck": {
            "type": "boolean",
            "description": "Specifies if the check on the current usage\r\n\t\t\t\t\t\t\tshould be skipped. If set to false and the current usage of the\r\n\t\t\t\t\t\t\taccount becomes more than the allowed limit, the request will be\r\n\t\t\t\t\t\t\trejected. If not specified, defaulted to false"
          },
          "updateCmsLimitsInstantly": {
            "type": "boolean",
            "description": "Specifies if the effective CMS limits should be\r\n\t\t\t\t\t\t\tupdated immediately. If set to false, the limits will be updated\r\n\t\t\t\t\t\t\tat EOD. If not specified, defaulted to true"
          },
          "user": {
            "type": "string",
            "description": "User that initiated the action. In case not\r\n\t\t\t\t\t\t\tspecified, defaulted to \"cortex\""
          },
          "description": {
            "type": "string",
            "description": "Description or reason for the status update. In\r\n\t\t\t\t\t\t\tcase not specified, set to a default value"
          }
        },
        "description": ""
      },
      "tns_CreditAccountCashLimitUpdationResponse": {
        "title": "tns_CreditAccountCashLimitUpdationResponse",
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_EntityCreditLimitUpdationRequest": {
        "title": "tns_EntityCreditLimitUpdationRequest",
        "type": "object",
        "properties": {
          "entityCode": {
            "type": "string",
            "description": "Unique code identifying the entity to update\r\n\t\t\t\t\t\t\tthe limit for."
          },
          "accountNumber": {
            "type": "string",
            "description": "Entity account number to update the credit\r\n\t\t\t\t\t\t\tlimit for. If not specified, the default\r\n\t\t\t\t\t\t\taccount of the entity\r\n\t\t\t\t\t\t\twill have the limit\r\n\t\t\t\t\t\t\tupdated."
          },
          "newCreditLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              },
              {
                "description": "New credit limit to set for the entity\r\n\t\t\t\t\t\t\taccount.\r\n\t\t\t\t\t\t\tA check is made to confirm the\r\n\t\t\t\t\t\t\tcredit limit currency is the same\r\n\t\t\t\t\t\t\tas the\r\n\t\t\t\t\t\t\taccount currency"
              }
            ]
          },
          "forceUpdate": {
            "type": "boolean",
            "description": "Specifies if the update of the credit limit\r\n\t\t\t\t\t\t\tshould be forced. In case set to true, no\r\n\t\t\t\t\t\t\tchecks will be done on\r\n\t\t\t\t\t\t\tthe account if the\r\n\t\t\t\t\t\t\tlimit change is allowed. Defaulted to false\r\n\t\t\t\t\t\t\tin\r\n\t\t\t\t\t\t\tcase not specified"
          },
          "user": {
            "type": "string",
            "description": "User that initiated the action. In case not\r\n\t\t\t\t\t\t\tspecified, defaulted to \"cortex\""
          },
          "description": {
            "type": "string",
            "description": "Description or reason for the credit limit\r\n\t\t\t\t\t\t\tupdate. In case not specified, set to a\r\n\t\t\t\t\t\t\tdefault value"
          },
          "requestSource": {
            "type": "string",
            "description": "Numeric value identifier the source of the\r\n\t\t\t\t\t\t\taction. The value is channel specific and\r\n\t\t\t\t\t\t\twill be assigned per\r\n\t\t\t\t\t\t\tsite."
          },
          "institutionCode": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_EntityCreditLimitUpdationResponse": {
        "title": "tns_EntityCreditLimitUpdationResponse",
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_statusType": {
        "title": "tns_statusType",
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "string",
            "description": "Unique code identifying the entity status under\r\n\t\t\t\t\t\tthe institution the entity is defined under"
          },
          "description": {
            "type": "string",
            "description": "Description of the entity status"
          },
          "canceled": {
            "type": "boolean",
            "description": "Specifies if an entity having this status is\r\n\t\t\t\t\t\tconsidered as canceled"
          }
        },
        "description": ""
      },
      "tns_accountListType": {
        "title": "tns_accountListType",
        "type": "object",
        "properties": {
          "account": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_accountType2"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_accountType2": {
        "title": "tns_accountType2",
        "required": [
          "accountNumber",
          "currency",
          "accountType",
          "balance",
          "creditLimit",
          "default"
        ],
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "string",
            "description": "Account Number"
          },
          "currency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "Currency code used for this entity account"
          },
          "accountType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_accountTypeType"
              },
              {
                "description": "Account type of this entity account"
              }
            ]
          },
          "balance": {
            "type": "number",
            "description": "Current balance of this entity account. Note:\r\n\t\t\t\t\t\tthis value may not be accurate depending on the synchronization\r\n\t\t\t\t\t\twith the core banking system"
          },
          "creditLimit": {
            "type": "number",
            "description": "Credit limit of this entity account."
          },
          "default": {
            "type": "boolean",
            "description": "Specifies if this account is the default for the\r\n\t\t\t\t\t\tentity or not"
          }
        },
        "description": ""
      },
      "tns_accountTypeType": {
        "title": "tns_accountTypeType",
        "type": "object",
        "properties": {
          "typeCode": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_allowedLoanAmountListType": {
        "title": "tns_allowedLoanAmountListType",
        "type": "object",
        "properties": {
          "allowedLoanAmount": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Q1_Money"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_ccsAccountIdentifierType2": {
        "title": "tns_ccsAccountIdentifierType2",
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "string",
            "description": "Credit account number"
          },
          "institutionCode": {
            "type": "string",
            "description": "Institution Code the account belongs to"
          },
          "currencyCode": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "currency code for this account"
          }
        },
        "description": ""
      },
      "tns_GetEntityCardsRequest": {
        "title": "tns_GetEntityCardsRequest",
        "type": "object",
        "properties": {
          "entityCode": {
            "type": "string",
            "description": "Entity code to get the details for.\r\n\t\t\t\t\t\t\tMandatory if\r\n\t\t\t\t\t\t\tthe parent entity code is not\r\n\t\t\t\t\t\t\tspecified"
          },
          "parentEntityCode": {
            "type": "string",
            "description": "Entity code to get the details for.\r\n\t\t\t\t\t\t\tMandatory if\r\n\t\t\t\t\t\t\tthe entity code is not\r\n\t\t\t\t\t\t\tspecified. If specified and the entity code\r\n\t\t\t\t\t\t\tis not, all cards belonging to the parent\r\n\t\t\t\t\t\t\tentity and/or any child\r\n\t\t\t\t\t\t\tentity will be\r\n\t\t\t\t\t\t\treturned"
          },
          "cardIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cardIdentifierType"
              },
              {
                "description": "Credit card to inquire insurance products\r\n\t\t\t\t\t\t\tfor.\r\n\t\t\t\t\t\t\tNot required in case the account is\r\n\t\t\t\t\t\t\tspecified. If both card and\r\n\t\t\t\t\t\t\taccount are\r\n\t\t\t\t\t\t\tspecified, a check is done to make sure both\r\n\t\t\t\t\t\t\tare linked"
              }
            ]
          },
          "additionalData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_additionalDataType1"
              },
              {
                "description": "Used to limit the data returned in the\r\n\t\t\t\t\t\t\tresponse\r\n\t\t\t\t\t\t\tin case not required. If not\r\n\t\t\t\t\t\t\tspecified, all details specified by\r\n\t\t\t\t\t\t\tit will\r\n\t\t\t\t\t\t\tnot be returned"
              }
            ]
          },
          "searchFilter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_searchFilterType1"
              },
              {
                "description": "Filter for the cards to be returned. If not\r\n\t\t\t\t\t\t\tspecified, all cards will be returned"
              }
            ]
          },
          "pageSetup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_pageSetupType"
              },
              {
                "description": "Paging required. In case entity code is\r\n\t\t\t\t\t\t\tspecified, page number 1 is only allowed"
              }
            ]
          },
          "institutionCode": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_GetEntityCardsResponse": {
        "title": "tns_GetEntityCardsResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_getEntityCardsSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_searchFilterType1": {
        "title": "tns_searchFilterType1",
        "type": "object",
        "properties": {
          "cardProductList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_cardProductListType"
            },
            "description": ""
          },
          "classIdList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_classIdListType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_getEntityCardsSuccessType": {
        "title": "tns_getEntityCardsSuccessType",
        "type": "object",
        "properties": {
          "pageDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pageDetailsType"
              }
            ]
          },
          "entityCardDetailsList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_entityCardDetailsListType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_entityCardDetailsListType": {
        "title": "tns_entityCardDetailsListType",
        "type": "object",
        "properties": {
          "entityCardDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_entityCardDetailsType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_entityCardDetailsType": {
        "title": "tns_entityCardDetailsType",
        "type": "object",
        "properties": {
          "cardDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_cardDetails1"
              },
              {
                "description": "Details the card created for the application in\r\n\t\t\t\t\t\tcase any"
              }
            ]
          },
          "linkedAccountsList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_linkedAccountsListType"
              },
              {
                "description": "List of account identifiers linked to the card"
              }
            ]
          },
          "customerDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CustomerDetailsType2"
              },
              {
                "description": "Customer details in case requested and found"
              }
            ]
          },
          "customerAddressList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_addressListType"
              },
              {
                "description": "List of customer addresses in case requested"
              }
            ]
          },
          "cardAddressList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_addressListType"
              },
              {
                "description": "List of customer addresses in case requested"
              }
            ]
          },
          "cardProduct": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_cardProductType"
              }
            ]
          },
          "cardStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_cardStatusType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_cardStatusType": {
        "title": "tns_cardStatusType",
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "string",
            "description": "Unique status code identifying the card status\r\n\t\t\t\t\t\tin\r\n\t\t\t\t\t\tCortex"
          },
          "description": {
            "type": "string",
            "description": "Description of the card status in English"
          },
          "actionCode": {
            "type": "string",
            "description": "Action code used for transactions on cards\r\n\t\t\t\t\t\thaving\r\n\t\t\t\t\t\tthis status."
          },
          "responseCode": {
            "type": "string",
            "description": "Response code used for transactions on cards\r\n\t\t\t\t\t\thaving this status. The list of supported values can be\r\n\t\t\t\t\t\tretreived\r\n\t\t\t\t\t\tby using the GetNumericDescription service with the\r\n\t\t\t\t\t\tDescriptionTag\r\n\t\t\t\t\t\tas r0 for the response codes supported for\r\n\t\t\t\t\t\tActionCode 0, r1 for the\r\n\t\t\t\t\t\tresponse codes supported for ActionCode 1\r\n\t\t\t\t\t\tand r2 for the response\r\n\t\t\t\t\t\tcodes supported for ActionCode 3"
          },
          "canceled": {
            "type": "boolean",
            "description": "Specifies if a card having this status is\r\n\t\t\t\t\t\tconsidered as canceled"
          }
        },
        "description": ""
      },
      "tns_cardDetails1": {
        "title": "tns_cardDetails1",
        "type": "object",
        "properties": {
          "responseCardIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/responseCardIdentifierType"
              },
              {
                "description": "Card Response Identifiers List"
              }
            ]
          },
          "expiryDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Card Expiry Date"
          },
          "effectiveDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Card Effective Date"
          },
          "cardStatus": {
            "type": "string",
            "description": "Card Status"
          },
          "oldPlasticExpiryDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Card Old Plastic Expiry Date"
          },
          "oldPlasticCardStatus": {
            "type": "string",
            "description": "Card Old Plastic Status"
          },
          "embossingName": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "description": "Card Title"
          },
          "firstName": {
            "type": "string",
            "description": "Card Firstname"
          },
          "lastName": {
            "type": "string",
            "description": "Card Last name"
          },
          "additional": {
            "type": "string"
          },
          "batchNumber": {
            "type": "string",
            "description": "Card Batch number"
          },
          "serviceCode": {
            "type": "string",
            "description": "Card Service Code"
          },
          "kinship": {
            "type": "string",
            "description": "Card Kinship"
          },
          "dateOfBirth": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "lastActivity": {
            "type": "string",
            "description": "Card Last Activity"
          },
          "lastStatusChangeDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Card Last Status changed date"
          },
          "activationDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Card Activation Date"
          },
          "dateLastIssued": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Card Last issued date"
          },
          "userData": {
            "type": "string",
            "description": "Card User data"
          },
          "userData1": {
            "type": "string",
            "description": "Card User data1"
          },
          "userData2": {
            "type": "string",
            "description": "Card User data"
          },
          "userData3": {
            "type": "string",
            "description": "Card User data"
          },
          "userData4": {
            "type": "string",
            "description": "Card User data"
          },
          "userData5": {
            "type": "string",
            "description": "Card User data"
          },
          "memo": {
            "type": "string",
            "description": "Card Memo"
          }
        },
        "description": ""
      },
      "tns_linkedAccountsListType": {
        "title": "tns_linkedAccountsListType",
        "type": "object",
        "properties": {
          "linkedAccount": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_linkedAccountType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_linkedAccountType": {
        "title": "tns_linkedAccountType",
        "type": "object",
        "properties": {
          "accountIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ccsAccountIdentifierType2"
              }
            ]
          },
          "isDefault": {
            "type": "boolean"
          },
          "accountDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AccountDetails1"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_AccountDetails1": {
        "title": "tns_AccountDetails1",
        "type": "object",
        "properties": {
          "institutionCode": {
            "type": "string",
            "description": "Account Institution Code"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account Number"
          },
          "curCurrency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "Currency Code"
          },
          "accountTypeCode": {
            "maxLength": 4,
            "type": "string",
            "description": "Account Type Code"
          },
          "classId": {
            "type": "string",
            "description": "Account Class Id"
          },
          "accountStatus": {
            "type": "string",
            "description": "Account Status"
          },
          "vipFlag": {
            "type": "string",
            "description": "Account VIP Flag"
          },
          "blockedAmount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Blocked Amount"
              }
            ]
          },
          "availableBalance": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Available Balance"
              }
            ]
          },
          "availableBalanceToSpend": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Available Balance To Spend"
              }
            ]
          },
          "creditLimit": {
            "type": "string",
            "description": "CreditLimit"
          },
          "userData1": {
            "type": "string",
            "description": "UserData1"
          },
          "userData2": {
            "type": "string",
            "description": "User data2"
          },
          "userData3": {
            "type": "string",
            "description": "UserData3"
          },
          "userData4": {
            "type": "string",
            "description": "UserData4"
          },
          "userData5": {
            "type": "string",
            "description": "UserData5"
          }
        },
        "description": ""
      },
      "tns_cardProductType": {
        "title": "tns_cardProductType",
        "type": "object",
        "properties": {
          "institutionCode": {
            "type": "string"
          },
          "productCode": {
            "type": "string",
            "description": "Unique code identifying the card product in\r\n\t\t\t\t\t\tCortex"
          },
          "description": {
            "type": "string",
            "description": "Description of the card product in English"
          },
          "bin": {
            "type": "string",
            "description": "Bin the card product belongs to"
          },
          "deniedServices": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_TransactionTypeListType"
              },
              {
                "description": "List of denied services for this card product"
              }
            ]
          },
          "localeDescriptionsList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CtxLocaleDescriptionList"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_transactionType": {
        "title": "tns_transactionType",
        "type": "object",
        "properties": {
          "transactionCode": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_EntityCreditAccountsStatementsSummaryInquiryRequest": {
        "title": "tns_EntityCreditAccountsStatementsSummaryInquiryRequest",
        "type": "object",
        "properties": {
          "entityCode": {
            "type": "string",
            "description": "Entity code to get the statement summary for."
          },
          "ccsAccountIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ccsAccountIdentifierType2"
              },
              {
                "description": "Credit account to inquire statements for. If\r\n\t\t\t\t\t\t\tspecified, only statement summary entries for this account will\r\n\t\t\t\t\t\t\tbe\r\n\t\t\t\t\t\t\treturned. It is also validated if linked to the specified\r\n\t\t\t\t\t\t\tentity"
              }
            ]
          },
          "cardIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cardIdentifierType"
              },
              {
                "description": "Credit card to inquire statement summary\r\n\t\t\t\t\t\t\tentries\r\n\t\t\t\t\t\t\tfor. If specified and the account is not, only the default\r\n\t\t\t\t\t\t\taccount\r\n\t\t\t\t\t\t\tof this card will have the statement summary returned.\r\n\t\t\t\t\t\t\tChecked if\r\n\t\t\t\t\t\t\tlinked to the specified entity"
              }
            ]
          },
          "dateCycleEnd": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "The cycle end date for the statement/statements\r\n\t\t\t\t\t\t\trequired. If not specified, no restriction on the cycle end date\r\n\t\t\t\t\t\t\twill be applicable"
          },
          "excludeChildEntityStatements": {
            "type": "boolean",
            "description": "Specifies if the child entity statements should\r\n\t\t\t\t\t\t\tbe excluded in case this is a parent entity specified. Defaulted\r\n\t\t\t\t\t\t\tto false if not specified"
          },
          "pageSetup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_pageSetupType"
              }
            ]
          },
          "orderByCycleEndDateAscending": {
            "type": "boolean",
            "description": "Specifies if the results should be order by the\r\n\t\t\t\t\t\t\tcycle ending date ascending (oldest to newest). If set to false\r\n\t\t\t\t\t\t\tor\r\n\t\t\t\t\t\t\tnot specified, the results will be order by cycle end date\r\n\t\t\t\t\t\t\tdescending (newest to oldest)"
          }
        },
        "description": ""
      },
      "tns_EntityCreditAccountsStatementsSummaryInquiryResponse": {
        "title": "tns_EntityCreditAccountsStatementsSummaryInquiryResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_EntityCreditAccountsStatementsSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_EntityCreditAccountsStatementsSuccessType": {
        "title": "tns_EntityCreditAccountsStatementsSuccessType",
        "type": "object",
        "properties": {
          "pageDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pageDetailsType"
              },
              {
                "description": "Page details with the results returned. Returned\r\n\t\t\t\t\t\tin case the page setup in the request does not specify to skip the\r\n\t\t\t\t\t\tcount"
              }
            ]
          },
          "creditAccountStatementSummaryList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_creditAccountStatementSummaryListType"
              },
              {
                "description": "List of statement summary entries received"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_creditAccountStatementSummaryListType": {
        "title": "tns_creditAccountStatementSummaryListType",
        "type": "object",
        "properties": {
          "creditAccountStatementSummaryEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_creditAccountStatementSummaryEntryType"
            },
            "description": "Single statement summary entry"
          }
        },
        "description": ""
      },
      "tns_creditAccountStatementSummaryEntryType": {
        "title": "tns_creditAccountStatementSummaryEntryType",
        "type": "object",
        "properties": {
          "corporateDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_corporateDetailsType2"
              },
              {
                "description": "Corporate details of the entity the account\r\n\t\t\t\t\t\tbelongs to (can be that of a child entity if the account is linked\r\n\t\t\t\t\t\tto a child entity)"
              }
            ]
          },
          "creditAccountDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_creditAccountDetailsType2"
              },
              {
                "description": "Details of the account the statement belongs to\r\n\t\t\t\t\t\tat the time of the statement.\r\n\t\t\t\t\t\tNote that the component balance\r\n\t\t\t\t\t\tdetails and direct debit rule will\r\n\t\t\t\t\t\talways be empty for this tag"
              }
            ]
          },
          "statementSummary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_statementEntryType"
              },
              {
                "description": "Individual statement summary"
              }
            ]
          },
          "loyaltyStatementSummary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_loyaltyStatementSummaryType"
              },
              {
                "description": "Summary of the loyalty for this account in case\r\n\t\t\t\t\t\tthe loyalty module is enabled. The availability of this field\r\n\t\t\t\t\t\tdepends per implementation"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_creditAccountDetailsType2": {
        "title": "tns_creditAccountDetailsType2",
        "type": "object",
        "properties": {
          "institutionCode": {
            "type": "string",
            "description": "Institution code the account belongs to"
          },
          "accountNumber": {
            "type": "string",
            "description": "Account number identifying an account under a\r\n\t\t\t\t\t\tspecific institution"
          },
          "currency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "Reference to the Common Currency Identifier\r\n\t\t\t\t\t\tObject holding the details of the account currency. All amounts\r\n\t\t\t\t\t\tunder the credit account are expressed in this currency"
          },
          "chargeProfileCode": {
            "type": "string",
            "description": "Charge profile the account belongs to."
          },
          "ccsScheme": {
            "type": "string",
            "description": "Credit Scheme the account belongs to."
          },
          "userData1": {
            "type": "string",
            "description": "Customer specific user data. Used for custom\r\n\t\t\t\t\t\tdata"
          },
          "userData2": {
            "type": "string",
            "description": "Customer specific user data 2. Used for custom\r\n\t\t\t\t\t\tdata"
          },
          "allowedCashPercentage": {
            "type": "string",
            "description": "Percentage of the credit limit allowed to be\r\n\t\t\t\t\t\tused\r\n\t\t\t\t\t\tfor cash transactions. If not specified, it means there is no\r\n\t\t\t\t\t\trestriction on cash transactions."
          },
          "creditLimit": {
            "type": "number",
            "description": "Credit Limit assigned for the account."
          },
          "balance": {
            "type": "number",
            "description": "Current balance used by the account. This\r\n\t\t\t\t\t\tbalance\r\n\t\t\t\t\t\tDOES NOT include any pending authorization amount (or\r\n\t\t\t\t\t\tblocked\r\n\t\t\t\t\t\tamount)"
          },
          "totalAmountUsed": {
            "type": "number",
            "description": "Current balance used by the account including\r\n\t\t\t\t\t\tthe\r\n\t\t\t\t\t\tauthorized/blocked amount"
          },
          "currentCycleBalance": {
            "type": "number",
            "description": "Balance used in the current cycle. This balance\r\n\t\t\t\t\t\tis updated as payments are made"
          },
          "previousCycleBalance": {
            "type": "number",
            "description": "Balance used in the previous cycle. This balance\r\n\t\t\t\t\t\tis updated as payments are made"
          },
          "oldCyclesBalance": {
            "type": "number",
            "description": "Balances used in old cycles (2 cycles and\r\n\t\t\t\t\t\tabove).\r\n\t\t\t\t\t\tThis balance is updated as payments are made"
          },
          "statementBalance": {
            "type": "number",
            "description": "Balance used in the previous and old cycles\r\n\t\t\t\t\t\t(effectively the previous cycle balance + old cycle balance)"
          },
          "OTB": {
            "type": "number",
            "description": "Open to buy for the account. This is mainly\r\n\t\t\t\t\t\tcalculated using the formula (credit limit) - (balance) +\r\n\t\t\t\t\t\t(surplus). The amount does not take into consideration the\r\n\t\t\t\t\t\tauthorization\r\n\t\t\t\t\t\tamount"
          },
          "effectiveOTB": {
            "type": "number",
            "description": "Effective open to buy for the account including\r\n\t\t\t\t\t\tthe authorization/blocked amount. This is mainly calculated using\r\n\t\t\t\t\t\tthe formula (credit limit) - (balance) + (surplus) - (authorized\r\n\t\t\t\t\t\tamount)"
          },
          "surplus": {
            "type": "number",
            "description": "Surplus amount - amount paid above the credit\r\n\t\t\t\t\t\tlimit. This amount DOES NOT include any pending authorization\r\n\t\t\t\t\t\tamount (or blocked amount). Any debit on the account will use the\r\n\t\t\t\t\t\tamount from the surplus if available otherwise the balance is\r\n\t\t\t\t\t\tupdated"
          },
          "effectiveSurplus": {
            "type": "number",
            "description": "Effective surplus amount excluding the\r\n\t\t\t\t\t\tauthorization amount in case any"
          },
          "payments": {
            "type": "number",
            "description": "Amount of payments done so far in the current\r\n\t\t\t\t\t\tcycle"
          },
          "delinquencyLevel": {
            "type": "string",
            "description": "Delinquency level of the account which\r\n\t\t\t\t\t\tidentifies\r\n\t\t\t\t\t\tif the account has any pending payments. The delinquency\r\n\t\t\t\t\t\tcalculation is implementation specific as there are multiple\r\n\t\t\t\t\t\tmethods available (configured by charge profile). Cortex supports\r\n\t\t\t\t\t\tup to delinquency level 6"
          },
          "minimumPayment": {
            "type": "number",
            "description": "Minimum payment requested from the customer for\r\n\t\t\t\t\t\tthe current cycle. This field is for information only. Even if the\r\n\t\t\t\t\t\tcustomer does a payment, it is not updated. The DueBalance field\r\n\t\t\t\t\t\twill hold the remaining due balance on the account for the current\r\n\t\t\t\t\t\tcycle"
          },
          "previousBalance": {
            "type": "number",
            "description": "Balance of the account at the end of the\r\n\t\t\t\t\t\tprevious\r\n\t\t\t\t\t\tcycle. This field is for information purpose and is not\r\n\t\t\t\t\t\tupdated\r\n\t\t\t\t\t\tuntil the next cycle"
          },
          "previousMinimumPayment": {
            "type": "number",
            "description": "Minimum payment requested from the customer for\r\n\t\t\t\t\t\tthe previous cycle. This field is for information purpose only."
          },
          "previousSurplus": {
            "type": "number",
            "description": "Surplus of the account at the end of the\r\n\t\t\t\t\t\tprevious\r\n\t\t\t\t\t\tcycle. For information purposes only"
          },
          "consecutiveLatePayments": {
            "type": "string",
            "description": "Number of consecutive late payments on the\r\n\t\t\t\t\t\taccounts (consecutive number of cycles where the due amount was\r\n\t\t\t\t\t\tnot paid)"
          },
          "cycleCode": {
            "type": "string",
            "description": "Code identifying the cycle the account belongs\r\n\t\t\t\t\t\tto"
          },
          "cyclePhase": {
            "type": "string",
            "description": "Indicates in which phase the account is\r\n\t\t\t\t\t\tcurrently\r\n\t\t\t\t\t\tin. Also can indicate if the account is canceled or in\r\n\t\t\t\t\t\tcollection.\r\n\t\t\t\t\t\tTo get the full list of allowed values, use the\r\n\t\t\t\t\t\tGetNumericDescription service with tag 'ccscyc'. Main supported\r\n\t\t\t\t\t\tvalues are the following:\r\n\t\t\t\t\t\t- -1: Account No Yet Activated\r\n\t\t\t\t\t\t- 0: None\r\n\t\t\t\t\t\t-\r\n\t\t\t\t\t\t1: After Cycle End, Before Pay By Date (due date)\r\n\t\t\t\t\t\t- 2: After Pay By\r\n\t\t\t\t\t\tDate (due date)\r\n\t\t\t\t\t\t- 3: After End of Cycle\r\n\t\t\t\t\t\t- 100: Pre-Collection - to\r\n\t\t\t\t\t\tbe moved to collection on next end of cycle\r\n\t\t\t\t\t\t- 101: In collection\r\n\t\t\t\t\t\t-\r\n\t\t\t\t\t\t102: Pre-canceled - to be moved to canceled on next end of cycle\r\n\t\t\t\t\t\t-\r\n\t\t\t\t\t\t103: Account canceled (Statements will no longer be generated and\r\n\t\t\t\t\t\tno processing done on the account)"
          },
          "lastCashMovementDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Last date there was a cash movement (any cash\r\n\t\t\t\t\t\toperation - payment or usage) on the account"
          },
          "debits": {
            "type": "number",
            "description": "Total amount of debits done during this cycle"
          },
          "credits": {
            "type": "number",
            "description": "Total amount of credits done during this cycle"
          },
          "dueBalance": {
            "type": "number",
            "description": "Balance due for this cycle. This is the actual\r\n\t\t\t\t\t\tamount due to be paid by the customer before the due date. This\r\n\t\t\t\t\t\tamount actually changes when a payment is done"
          },
          "notDueBalance": {
            "type": "number",
            "description": "Total not due balance of the account. In case a\r\n\t\t\t\t\t\tpayment is done and the account doesn't have a due balance, this\r\n\t\t\t\t\t\tfield will be updated"
          },
          "lastPaymentDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Date the last payment was received on. Not\r\n\t\t\t\t\t\tavailable if the account does not have any payment done yet"
          },
          "installmentBalance": {
            "type": "number",
            "description": "Balance converted to payment plans. This field\r\n\t\t\t\t\t\tis\r\n\t\t\t\t\t\tfor information only and only updated each end of cycle when a\r\n\t\t\t\t\t\tnew\r\n\t\t\t\t\t\tinstallment is due."
          },
          "previousInstallmentBalance": {
            "type": "string",
            "description": "Installment balance of the account at the end of\r\n\t\t\t\t\t\tthe previous cycle. For information purpose only"
          },
          "lastSatisfiedPayByDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Last date the pay by date was satisfied (dues\r\n\t\t\t\t\t\twere paid on or before the pay by date)"
          },
          "componentBalanceDetailsList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_componentBalanceDetailsListType"
              },
              {
                "description": "Balance breakdown by component. Each component\r\n\t\t\t\t\t\tidentifies a type of amount (i.e. cash, fees, purchase)"
              }
            ]
          },
          "creditCycleDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_creditCycleDetailsType"
              },
              {
                "description": "Cycle details the account belongs to. Only\r\n\t\t\t\t\t\treturned in case requested"
              }
            ]
          },
          "dueAgeDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_dueAgeDetailsType1"
              },
              {
                "description": "Due age details in case requested"
              }
            ]
          },
          "directDebitDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_directDebitDetailsType"
              },
              {
                "description": "Direct debit details in case requested"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_statementSummaryEntryType": {
        "title": "tns_statementSummaryEntryType",
        "type": "object",
        "properties": {
          "numberOfAccounts": {
            "type": "string"
          },
          "statementSummary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_statementEntryType"
              }
            ]
          },
          "loyaltyStatementSummary": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_loyaltyStatementSummaryType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_statementEntryType": {
        "title": "tns_statementEntryType",
        "type": "object",
        "properties": {
          "statementId": {
            "type": "string",
            "description": "Unique id identifying the statement entry"
          },
          "creditLimit": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              },
              {
                "description": "Credit limit of the account at the time of\r\n\t\t\t\t\t\tstatement generation"
              }
            ]
          },
          "currency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string",
            "description": "Reference to the Common Currency Identifier\r\n\t\t\t\t\t\tObject holding the details of the account currency. All amounts\r\n\t\t\t\t\t\tunder this statement entry are expressed in this currency"
          },
          "credits": {
            "type": "number",
            "description": "Sum of all credit transactions done on the\r\n\t\t\t\t\t\taccount during this statement cycle"
          },
          "debits": {
            "type": "number",
            "description": "Sum of all debit transactions done on the\r\n\t\t\t\t\t\taccount\r\n\t\t\t\t\t\tduring this statement cycle"
          },
          "payments": {
            "type": "number",
            "description": "Sum of all payment amounts done on the account\r\n\t\t\t\t\t\tduring this statement cycle"
          },
          "closingBalance": {
            "type": "number",
            "description": "Balance of the account at the date the cycle\r\n\t\t\t\t\t\tended"
          },
          "previousBalance": {
            "type": "number",
            "description": "Previous balance of the account (at the start of\r\n\t\t\t\t\t\tthe current cycle, end of the previous cycle)"
          },
          "dateBegin": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Date the cycle for this statement began"
          },
          "dateEnd": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Date the cycle for this statement ended"
          },
          "dueDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Due date for this statement"
          },
          "dateStatement": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Date the physical statement gets/got generated\r\n\t\t\t\t\t\tfor this cycle"
          },
          "minimumPayment": {
            "type": "number",
            "description": "Minimum amount to pay for this cycle"
          },
          "delinquencyLevel": {
            "type": "string",
            "description": "Delinquency level of the account at the end of\r\n\t\t\t\t\t\tcycle which identifies if the account has any pending payments.\r\n\t\t\t\t\t\tThe delinquency calculation is implementation specific as there\r\n\t\t\t\t\t\tare multiple methods available (configured by charge profile).\r\n\t\t\t\t\t\tCortex supports up to delinquency level 6"
          },
          "overdueCount": {
            "type": "string",
            "description": "Number of cycles overdue at the end of cycle\r\n\t\t\t\t\t\t(number of missed payment)"
          },
          "component0Balance": {
            "type": "number",
            "description": "Balance of the account in component 0 at the end\r\n\t\t\t\t\t\tof cycle"
          },
          "component1Balance": {
            "type": "number",
            "description": "Balance of the account in component 1 at the end\r\n\t\t\t\t\t\tof cycle"
          },
          "component2Balance": {
            "type": "number",
            "description": "Balance of the account in component 2 at the end\r\n\t\t\t\t\t\tof cycle"
          },
          "component3Balance": {
            "type": "number",
            "description": "Balance of the account in component 3 at the end\r\n\t\t\t\t\t\tof cycle"
          },
          "component4Balance": {
            "type": "number",
            "description": "Balance of the account in component 4 at the end\r\n\t\t\t\t\t\tof cycle"
          },
          "component5Balance": {
            "type": "number",
            "description": "Balance of the account in component 5 at the end\r\n\t\t\t\t\t\tof cycle"
          },
          "component6Balance": {
            "type": "number",
            "description": "Balance of the account in component 6 at the end\r\n\t\t\t\t\t\tof cycle"
          },
          "component7Balance": {
            "type": "number",
            "description": "Balance of the account in component 7 at the end\r\n\t\t\t\t\t\tof cycle"
          },
          "component8Balance": {
            "type": "number",
            "description": "Balance of the account in component 8 at the end\r\n\t\t\t\t\t\tof cycle"
          },
          "component9Balance": {
            "type": "number",
            "description": "Balance of the account in component 9 at the end\r\n\t\t\t\t\t\tof cycle"
          },
          "component10Balance": {
            "type": "number",
            "description": "Balance of the account in component 10 at the\r\n\t\t\t\t\t\tend\r\n\t\t\t\t\t\tof cycle"
          },
          "component11Balance": {
            "type": "number",
            "description": "Balance of the account in component 11 at the\r\n\t\t\t\t\t\tend\r\n\t\t\t\t\t\tof cycle"
          },
          "component12Balance": {
            "type": "number",
            "description": "Balance of the account in component 12 at the\r\n\t\t\t\t\t\tend\r\n\t\t\t\t\t\tof cycle"
          },
          "component13Balance": {
            "type": "number",
            "description": "Balance of the account in component 13 at the\r\n\t\t\t\t\t\tend\r\n\t\t\t\t\t\tof cycle"
          },
          "component14Balance": {
            "type": "number",
            "description": "Balance of the account in component 14 at the\r\n\t\t\t\t\t\tend\r\n\t\t\t\t\t\tof cycle"
          },
          "debitAjustments": {
            "type": "number",
            "description": "Sum of all debit adjustment amounts done during\r\n\t\t\t\t\t\tthis statement cycle"
          },
          "creditAjustments": {
            "type": "number",
            "description": "Sum of all credit adjustment amounts done during\r\n\t\t\t\t\t\tthis statement cycle"
          },
          "surplus": {
            "type": "number",
            "description": "Surplus of the account at the end of cycle of\r\n\t\t\t\t\t\tthis statement"
          },
          "balanceDue": {
            "type": "number",
            "description": "Due balance of the account at the end of cycle\r\n\t\t\t\t\t\tof\r\n\t\t\t\t\t\tthis statement"
          },
          "balanceNotDue": {
            "type": "number",
            "description": "Not due balance of the account at the end of\r\n\t\t\t\t\t\tcycle of this statement"
          },
          "previousSurplus": {
            "type": "number",
            "description": "Surplus of the account at the start of the cycle\r\n\t\t\t\t\t\tof this statement"
          },
          "previousMinimumPayment": {
            "type": "number",
            "description": "Minimum payment requested from the customer for\r\n\t\t\t\t\t\tthe previous cycle (start of this cycle, end of the previous one)"
          }
        },
        "description": ""
      },
      "tns_loyaltyStatementSummaryType": {
        "title": "tns_loyaltyStatementSummaryType",
        "type": "object",
        "properties": {
          "statementId": {
            "type": "string",
            "description": "Unique id identifying the statement entry"
          },
          "statementDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Date of the statement generation"
          },
          "pointsAdded": {
            "type": "number",
            "description": "Number of points added for this statement"
          },
          "pointsExpired": {
            "type": "number",
            "description": "Number of points expired for this statement"
          },
          "pointsCanceled": {
            "type": "number",
            "description": "Number of points canceled for this statement"
          },
          "pointsRedeemed": {
            "type": "number",
            "description": "Number of points redeemed for this statement"
          },
          "pointsEquivalent": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              },
              {
                "description": "Equivalent amount for the points in case of\r\n\t\t\t\t\t\tcash-back loyalty"
              }
            ]
          },
          "closingBalance": {
            "type": "number",
            "description": "Closing number of points at the statement\r\n\t\t\t\t\t\tgeneration date"
          }
        },
        "description": ""
      },
      "tns_EntityCreditStatementsSummaryInquiryRequest": {
        "title": "tns_EntityCreditStatementsSummaryInquiryRequest",
        "type": "object",
        "properties": {
          "entityCode": {
            "type": "string",
            "description": "Entity code to get the statement summary\r\n\t\t\t\t\t\t\tfor."
          },
          "dateCycleEnd": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "The cycle end date for the\r\n\t\t\t\t\t\t\tstatement/statements\r\n\t\t\t\t\t\t\trequired. If not\r\n\t\t\t\t\t\t\tspecified, no restriction on the cycle end\r\n\t\t\t\t\t\t\tdate\r\n\t\t\t\t\t\t\twill be applicable"
          },
          "excludeChildEntityStatements": {
            "type": "boolean",
            "description": "Specifies if the child entity statements\r\n\t\t\t\t\t\t\tshould\r\n\t\t\t\t\t\t\tbe excluded in case this is a parent\r\n\t\t\t\t\t\t\tentity specified. Defaulted\r\n\t\t\t\t\t\t\tto false if not\r\n\t\t\t\t\t\t\tspecified"
          },
          "pageSetup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_pageSetupType"
              }
            ]
          },
          "orderByCycleEndDateAscending": {
            "type": "boolean",
            "description": "Specifies if the results should be order by\r\n\t\t\t\t\t\t\tthe\r\n\t\t\t\t\t\t\tcycle ending date ascending (oldest to\r\n\t\t\t\t\t\t\tnewest). If set to false or\r\n\t\t\t\t\t\t\tnot specified,\r\n\t\t\t\t\t\t\tthe results will be order by cycle end date\r\n\t\t\t\t\t\t\tdescending (newest to oldest)"
          },
          "institutionCode": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_EntityCreditStatementsSummaryInquiryResponse": {
        "title": "tns_EntityCreditStatementsSummaryInquiryResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_EntityCreditStatementsSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_creditStatementSummaryListType": {
        "title": "tns_creditStatementSummaryListType",
        "type": "object",
        "properties": {
          "statementSummaryEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_statementSummaryEntryType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_corporateDetailsType2": {
        "title": "tns_corporateDetailsType2",
        "type": "object",
        "properties": {
          "corporateCode": {
            "type": "string",
            "description": "Corporate Code"
          },
          "description": {
            "type": "string",
            "description": "Corporate Description"
          },
          "alternativeDescription": {
            "type": "string",
            "description": "Corporate Alternative Description"
          },
          "entityBusinessDescription": {
            "type": "string",
            "description": "Corporate entity business Description"
          },
          "alternativeEntityBusinessDescription": {
            "type": "string",
            "description": "Corporate Alternative Entity Business\r\n\t\t\t\t\t\tDescription"
          },
          "registrationNumber": {
            "type": "string",
            "description": "Corporate Registrtaion Number"
          },
          "contractStartDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Corporate Contract Start Date"
          },
          "contractEndDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Corporate Contract End Date"
          }
        },
        "description": ""
      },
      "tns_cardProductListType": {
        "title": "tns_cardProductListType",
        "type": "object",
        "properties": {
          "cardProduct": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_classIdListType": {
        "title": "tns_classIdListType",
        "type": "object",
        "properties": {
          "classId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": ""
      },
      "tns_EntityCreditStatementsSuccessType": {
        "title": "tns_EntityCreditStatementsSuccessType",
        "type": "object",
        "properties": {
          "pageDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pageDetailsType"
              }
            ]
          },
          "corporateDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_corporateDetailsType2"
              }
            ]
          },
          "creditStatementSummaryList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_creditStatementSummaryListType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_componentBalanceDetailsListType": {
        "title": "tns_componentBalanceDetailsListType",
        "type": "object",
        "properties": {
          "componentBalanceDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_componentBalanceDetailsType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_dueAgeDetailsType1": {
        "title": "tns_dueAgeDetailsType1",
        "type": "object",
        "properties": {
          "dueAgeCycleEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_dueAgeDetailsType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_CtxLocaleDescriptionList": {
        "title": "tns_CtxLocaleDescriptionList",
        "type": "object",
        "properties": {
          "ctxLocaleDescriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_localeDescriptionsType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_TransactionTypeListType": {
        "title": "tns_TransactionTypeListType",
        "type": "object",
        "properties": {
          "transactionType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_transactionType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_descriptionList": {
        "title": "tns_descriptionList",
        "type": "object",
        "properties": {
          "description": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_descriptionDetailsType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_UpdateCreditCardTransactionAuthorizationRequest": {
        "title": "tns_UpdateCreditCardTransactionAuthorizationRequest",
        "type": "object",
        "properties": {
          "cardIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cardIdentifierType"
              }
            ]
          },
          "authorizationParameterPosition": {
            "type": "string",
            "description": "Card Authorization Parameter Position"
          },
          "authorizationParameterValue": {
            "type": "string",
            "description": "Authorization Parameter Value\r\n\t\t\t\t\t\t\tSpecifies if the\r\n\t\t\t\t\t\t\tupdate card status should be forced."
          }
        },
        "description": ""
      },
      "tns_UpdateCreditCardTransactionAuthorizationResponse": {
        "title": "tns_UpdateCreditCardTransactionAuthorizationResponse",
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CancelPaymentRequest": {
        "title": "tns_CancelPaymentRequest",
        "type": "object",
        "properties": {
          "ccsAccountIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ccsAccountIdentifierType1"
              }
            ]
          },
          "cardIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cardIdentifierType"
              }
            ]
          },
          "paymentPlanId": {
            "type": "string",
            "description": "Payment Plan ID"
          },
          "description": {
            "maxLength": 128,
            "type": "string",
            "description": "Description To Be Used For The Cancellation"
          },
          "user": {
            "maxLength": 15,
            "type": "string",
            "description": "User Initiated this Request"
          },
          "componentCode": {
            "type": "string",
            "description": "Component Code To Move The Payment Plan Amount"
          }
        },
        "description": ""
      },
      "tns_CancelPaymentResponse": {
        "title": "tns_CancelPaymentResponse",
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_RescheduleAccountRequest": {
        "title": "tns_RescheduleAccountRequest",
        "type": "object",
        "properties": {
          "validate": {
            "type": "boolean",
            "description": "Specifies if this is only for validation, If\r\n\t\t\t\t\t\t\tset to true, the plans will not be created and only the details\r\n\t\t\t\t\t\t\treturned as it would be\r\n\t\t\t\t\t\t\tin case created."
          },
          "accountRescheduleEntryList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AccountRescheduleEntryListType"
              },
              {
                "description": "Account Rescheduled Entry List"
              }
            ]
          },
          "description": {
            "maxLength": 128,
            "type": "string",
            "description": "Description to be used for the new rescheduling\r\n\t\t\t\t\t\t\tplan."
          },
          "user": {
            "maxLength": 15,
            "type": "string",
            "description": "User that initiated the request"
          },
          "externalReference": {
            "maxLength": 512,
            "type": "string",
            "description": "External Reference (i.e. ticket number)"
          }
        },
        "description": ""
      },
      "tns_AccountRescheduleEntryListType": {
        "title": "tns_AccountRescheduleEntryListType",
        "type": "object",
        "properties": {
          "accountRescheduleEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_AccountRescheduleEntryType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_accountRescheduleEntryList": {
        "title": "tns_accountRescheduleEntryList",
        "type": "object",
        "properties": {
          "accountRescheduleEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_AccountRescheduleEntryType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_AccountRescheduleEntryType": {
        "title": "tns_AccountRescheduleEntryType",
        "type": "object",
        "properties": {
          "ccsAccountIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ccsAccountIdentifierType1"
              }
            ]
          },
          "cardIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/cardIdentifierType"
              }
            ]
          },
          "paymentPlanName": {
            "type": "string",
            "description": "Payment Plan Name"
          },
          "numberOfInstallments": {
            "type": "integer",
            "description": "Number Of Installments",
            "format": "int32"
          },
          "singlePaymentAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              },
              {
                "description": "Single Payment Amount"
              }
            ]
          },
          "balloonPayment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              },
              {
                "description": "Balloon Payment"
              }
            ]
          },
          "overrideSinglePaymentAmountEntryList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_OverrideSinglePaymentAmountEntryListType"
              },
              {
                "description": "Single Payment Override List"
              }
            ]
          },
          "customerAgeMonths": {
            "type": "integer",
            "description": "Number Of Installments",
            "format": "int32"
          }
        },
        "description": ""
      },
      "tns_OverrideSinglePaymentAmountEntryListType": {
        "title": "tns_OverrideSinglePaymentAmountEntryListType",
        "type": "object",
        "properties": {
          "overrideSinglePaymentAmountEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_OverrideSinglePaymentAmountEntryType"
            },
            "description": "Individual override amount"
          }
        },
        "description": ""
      },
      "tns_OverrideSinglePaymentAmountEntryType": {
        "title": "tns_OverrideSinglePaymentAmountEntryType",
        "type": "object",
        "properties": {
          "startDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "Start date of the override single payment amount"
          },
          "endDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "End date of the override single payment amount"
          },
          "overrideAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              },
              {
                "description": "Override amount for the specified period"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_RescheduleAccountResponse": {
        "title": "tns_RescheduleAccountResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RescheduleAccountSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_RescheduleAccountSuccessType": {
        "title": "tns_RescheduleAccountSuccessType",
        "type": "object",
        "properties": {
          "paymentPlanEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_PaymentPlanEntryType"
            },
            "description": "Individual override amount"
          }
        },
        "description": ""
      },
      "tns_PaymentPlanEntryType": {
        "title": "tns_PaymentPlanEntryType",
        "type": "object",
        "properties": {
          "paymentPlanId": {
            "type": "string",
            "description": "Payment Plan ID"
          },
          "institutionCode": {
            "maxLength": 4,
            "type": "string",
            "description": "Institution code the account linked to this\r\n\t\t\t\t\t\tpayment plan is defined under"
          },
          "accountNumber": {
            "maxLength": 28,
            "type": "string",
            "description": "Credit Account Number For The Payment Plan"
          },
          "cardIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/responseCardIdentifierType"
              },
              {
                "description": "Pan/Card details which was used for the\r\n\t\t\t\t\t\ttransaction converted to installment in case any"
              }
            ]
          },
          "paymentPlanSetName": {
            "maxLength": 4,
            "type": "string",
            "description": "Set Payment Plan Name"
          },
          "paymentPlanSetDescription": {
            "maxLength": 64,
            "type": "string",
            "description": "Set Payment Plan Description"
          },
          "numberOfInstallments": {
            "type": "integer",
            "description": "Number of installments for the payment plan",
            "format": "int32"
          },
          "paymentPlanStatus": {
            "type": "string",
            "description": "Status of the payment plan.\r\n\r\n\t\t\t\t\t\tSupported values\r\n\t\t\t\t\t\tDescription\r\n\r\n\t\t\t\t\t\t1 Pending Association\r\n\t\t\t\t\t\t2 Pending Initialization\r\n\t\t\t\t\t\t3\r\n\t\t\t\t\t\tInitialized\r\n\t\t\t\t\t\t4 Cancelled\r\n\t\t\t\t\t\t5 Completed\r\n\t\t\t\t\t\t6 Deleted"
          },
          "rateBasis": {
            "type": "string",
            "description": "Basis of interest rate\r\n\r\n\t\t\t\t\t\tSupported values\r\n\t\t\t\t\t\tDescription\r\n\r\n\t\t\t\t\t\tD Daily\r\n\t\t\t\t\t\tM Monthly(30 days)\r\n\t\t\t\t\t\tY Annual (365 days)\r\n\t\t\t\t\t\ty Annual\r\n\t\t\t\t\t\t(360 days)\r\n\t\t\t\t\t\tA True Annual (366 days for leap years / 365 days for no\r\n\t\t\t\t\t\tleap\r\n\t\t\t\t\t\tyears)"
          },
          "interestRate": {
            "type": "number",
            "description": "Interest rate For Payment Plan"
          },
          "itemId": {
            "type": "string",
            "description": "Reference to the credit transaction which was\r\n\t\t\t\t\t\tconverted to a payment plan"
          },
          "dateLastInstallment": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "The date the last installment was generated"
          },
          "paymentPlanSource": {
            "type": "string",
            "description": "Payment Plan Source\r\n\r\n\t\t\t\t\t\tSupported values Description\r\n\r\n\t\t\t\t\t\t0 Default\r\n\t\t\t\t\t\t1 Online\r\n\t\t\t\t\t\t2 CCS Financial\r\n\t\t\t\t\t\t3 TLOG Authorization\r\n\t\t\t\t\t\t4 TLOG\r\n\t\t\t\t\t\tFinancial\r\n\t\t\t\t\t\t5 Input File\r\n\t\t\t\t\t\t6 Plan Program\r\n\t\t\t\t\t\t7 Web-Services authorization\r\n\t\t\t\t\t\t8\r\n\t\t\t\t\t\tWeb-Services financial\r\n\t\t\t\t\t\t98 Account Re-scheduling\r\n\t\t\t\t\t\t99 Other sources"
          },
          "user": {
            "maxLength": 15,
            "type": "string",
            "description": "Id of the user that initiated the payment plan."
          },
          "creationDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "Payment Plan Creation Date"
          },
          "description": {
            "maxLength": 128,
            "type": "string",
            "description": "Description."
          },
          "transactionLogId": {
            "type": "string",
            "description": "identifying the financial transaction that\r\n\t\t\t\t\t\tgenerated\r\n\t\t\t\t\t\tthis payment plan. Only available in case the transaction\r\n\t\t\t\t\t\tis an actual\r\n\t\t\t\t\t\tfinancial transaction (Purchase/Cash Withdrawal...)."
          },
          "acquirerId": {
            "maxLength": 11,
            "type": "string",
            "description": "ID of the transaction acquirer"
          },
          "retreivalReferenceNumber": {
            "maxLength": 12,
            "type": "string",
            "description": "Retrieval reference number identifying the\r\n\t\t\t\t\t\ttransaction from an acquirer that\r\n\t\t\t\t\t\twas converted to payment plan"
          },
          "transctionCode": {
            "type": "string",
            "description": "Identifies the type of transaction. Only valid\r\n\t\t\t\t\t\tin\r\n\t\t\t\t\t\tcase the credit transaction is a financial one."
          },
          "billingAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              },
              {
                "description": "Amount of the transaction in the billing\r\n\t\t\t\t\t\tcurrency (currency of the account)\r\n\t\t\t\t\t\tthat was converted to payment\r\n\t\t\t\t\t\tplan"
              }
            ]
          },
          "planAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              },
              {
                "description": "Actual amount part of the billing amount that\r\n\t\t\t\t\t\twas converted to payment\r\n\t\t\t\t\t\tplan. This is not necessarily equal to the\r\n\t\t\t\t\t\tbilling amount as sometimes,\r\n\t\t\t\t\t\twhen the customer has a balance less\r\n\t\t\t\t\t\tthan the billing amount, only\r\n\t\t\t\t\t\ta\r\n\t\t\t\t\t\tpartial amount of the billing amount\r\n\t\t\t\t\t\tis converted to installments"
              }
            ]
          },
          "nextInstallment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              },
              {
                "description": "Next installment amount to be paid excluding the\r\n\t\t\t\t\t\tinterest/fee."
              }
            ]
          },
          "lastInstallmentAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              },
              {
                "description": "Last installment amount to be paid excluding the\r\n\t\t\t\t\t\tinterest/fee."
              }
            ]
          },
          "installmentInterest": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              },
              {
                "description": "Interest on a single installment"
              }
            ]
          },
          "lastInstallmentInterest": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              },
              {
                "description": "Interest on the last installment amount"
              }
            ]
          },
          "remainingNumberOfInstallments": {
            "type": "string",
            "description": "Remaining number of installment before the plan\r\n\t\t\t\t\t\tis completed"
          },
          "initializationDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "Date the payment plan was initialized."
          },
          "transactionLocalDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "Local date of the transaction that was converted\r\n\t\t\t\t\t\tto payment plan"
          },
          "cardAcceptorLocation": {
            "maxLength": 64,
            "type": "string",
            "description": "Card acceptor location"
          },
          "mcc": {
            "type": "string",
            "description": "Merchant category code , Only available for\r\n\t\t\t\t\t\tactual\r\n\t\t\t\t\t\tauth/financial transactions."
          },
          "transactionAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              },
              {
                "description": "Original transaction amount that was converted\r\n\t\t\t\t\t\tinto a payment plan"
              }
            ]
          },
          "lastInstallmentDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "Date the last installment will be due"
          },
          "cancellationDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "Date the installment was cancelled, Only\r\n\t\t\t\t\t\tavailable in case the plan is\r\n\t\t\t\t\t\tcancelled"
          },
          "installmentChargeCalculationMethod": {
            "type": "string",
            "description": "Installment Charge Calculation Method\r\n\t\t\t\t\t\tSupported\r\n\t\t\t\t\t\tvalues Description\r\n\r\n\t\t\t\t\t\t1 Add on interest\r\n\t\t\t\t\t\t2 Fixed charge\r\n\t\t\t\t\t\t3 Payment Plan\r\n\t\t\t\t\t\tSchedule\r\n\t\t\t\t\t\t4 Percentage on full amount"
          },
          "fullPlanAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              },
              {
                "description": "Full amount of the payment plan including the\r\n\t\t\t\t\t\tfees (including the already\r\n\t\t\t\t\t\tpaid installments)"
              }
            ]
          },
          "fullInstallmentFees": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              },
              {
                "description": "The full fees for the installments (including\r\n\t\t\t\t\t\tthe already paid ones)"
              }
            ]
          },
          "remainingPlanAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              },
              {
                "description": "Remaining amount to be paid."
              }
            ]
          },
          "remainingPlanAmountNoFees": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              },
              {
                "description": "Remaining amount to be paid excluding the fees."
              }
            ]
          },
          "remainingInstallmentFees": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              },
              {
                "description": "Remaining Installment Fees"
              }
            ]
          },
          "reschedule": {
            "type": "boolean",
            "description": "Flag indicating if the plan is a rescheduling\r\n\t\t\t\t\t\tplan"
          },
          "balloonPayment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              },
              {
                "description": "Balloon payment"
              }
            ]
          },
          "paymentPlanSchedule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_PaymentPlanScheduleType"
              },
              {
                "description": "Balloon payment"
              }
            ]
          },
          "tenorBreach": {
            "type": "boolean",
            "description": "Flag indicating if Tenor is breached (Single EMI\r\n\t\t\t\t\t\tbreached as per the\r\n\t\t\t\t\t\tmaximum eligible age)"
          }
        },
        "description": ""
      },
      "tns_PaymentPlanScheduleType": {
        "title": "tns_PaymentPlanScheduleType",
        "type": "object",
        "properties": {
          "paymentPlanScheduleEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_PaymentPlanScheduleEntryType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_PaymentPlanScheduleEntryType": {
        "title": "tns_PaymentPlanScheduleEntryType",
        "type": "object",
        "properties": {
          "installmentNumber": {
            "type": "string",
            "description": "Installment number"
          },
          "expectedDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "Date the installment will be expected"
          },
          "paymentAmount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Payment amount of this installment"
              }
            ]
          },
          "applicableRate": {
            "type": "number",
            "description": "Applicable interest rate"
          },
          "outstandingPaymentPlanAmount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Outstanding plan amount"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_paymentPlanScheduleType2": {
        "title": "tns_paymentPlanScheduleType2",
        "type": "object",
        "properties": {
          "paymentPlanScheduleEntry": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_paymentPlanScheduleEntryType2"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_paymentPlanScheduleEntryType2": {
        "title": "tns_paymentPlanScheduleEntryType2",
        "type": "object",
        "properties": {
          "installmentNumber": {
            "type": "string",
            "description": "Installment number"
          },
          "expectedDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Date the installment will be expected"
          },
          "paymentAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/creditCardAmountType"
              },
              {
                "description": "Payment amount of this installment"
              }
            ]
          },
          "applicableRate": {
            "type": "number",
            "description": "Applicable interest rate"
          },
          "outstandingPaymentPlanAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/creditCardAmountType"
              },
              {
                "description": "Outstanding plan amount"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CustomerDetailsType2": {
        "title": "tns_CustomerDetailsType2",
        "type": "object",
        "properties": {
          "customercode": {
            "type": "string",
            "description": "Customer Code"
          },
          "idNumber": {
            "type": "string",
            "description": "IdNumber"
          },
          "externalCustomerCode": {
            "type": "string",
            "description": "External Customer Code"
          },
          "title": {
            "type": "string",
            "description": "Title"
          },
          "firstName": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "First Name"
          },
          "lastName": {
            "type": "string",
            "description": "Last Name"
          },
          "dateOfBirth": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "userData1": {
            "type": "string",
            "description": "UserData1"
          },
          "userData2": {
            "type": "string",
            "description": "UserData2"
          },
          "userData3": {
            "type": "string",
            "description": "UserData3"
          },
          "userData4": {
            "type": "string",
            "description": "UserData4"
          }
        },
        "description": ""
      },
      "tns_CheckCreditCardAnnualFeeRefundStatusRequest": {
        "title": "tns_CheckCreditCardAnnualFeeRefundStatusRequest",
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string"
          },
          "segmentChangeDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CheckCreditCardAnnualFeeRefundStatusResponse": {
        "title": "tns_CheckCreditCardAnnualFeeRefundStatusResponse",
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GetWessamEligibilityDetailsRequest": {
        "title": "tns_GetWessamEligibilityDetailsRequest",
        "type": "object",
        "properties": {
          "cif": {
            "pattern": "([0-9]){14}|([0]){1}|()",
            "type": "string"
          },
          "accountId": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_GetWessamEligibilityDetailsResponse": {
        "title": "tns_GetWessamEligibilityDetailsResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_WessamEligibilityType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_WessamEligibilityType": {
        "title": "tns_WessamEligibilityType",
        "type": "object",
        "properties": {
          "joiningDate": {
            "pattern": "((0[1-9])|([12][0-9])|(3[01]))/((0[1-9])|(1[012]))/((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))|()",
            "type": "string"
          },
          "WessamCodingDate": {
            "pattern": "((0[1-9])|([12][0-9])|(3[01]))/((0[1-9])|(1[012]))/((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))|()",
            "type": "string"
          },
          "accountNumber": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "customerNumber": {
            "type": "string"
          },
          "blackListFlag": {
            "maxLength": 1,
            "type": "string"
          },
          "customerStatus": {
            "maxLength": 3,
            "type": "string"
          },
          "customerName": {
            "type": "string"
          },
          "customerIDNumber": {
            "type": "string"
          },
          "clstStatus": {
            "maxLength": 1,
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "reportedBank": {
            "maxLength": 4,
            "type": "string"
          },
          "industryCode": {
            "maxLength": 4,
            "type": "string"
          },
          "employerName": {
            "type": "string"
          },
          "releaseDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "payrollIndicatorFlag": {
            "maxLength": 1,
            "type": "string"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_transactions"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_UpgradeDowngradeCustomerRequest": {
        "title": "tns_UpgradeDowngradeCustomerRequest",
        "required": [
          "cif",
          "flag"
        ],
        "type": "object",
        "properties": {
          "cif": {
            "pattern": "([0-9]){14}|([0]){1}",
            "type": "string"
          },
          "flag": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_flag"
              },
              {
                "description": "M for Flagging or N for deflagging"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_UpgradeDowngradeCustomerResponse": {
        "title": "tns_UpgradeDowngradeCustomerResponse",
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_UpdateCreditCardMobileNumberRequest": {
        "title": "tns_UpdateCreditCardMobileNumberRequest",
        "required": [
          "cardNumber",
          "mobileNumber",
          "addressLevel",
          "city",
          "addressRole"
        ],
        "type": "object",
        "properties": {
          "cardNumber": {
            "type": "string",
            "description": "Credit Card Number"
          },
          "mobileNumber": {
            "pattern": "[0-9]{9,15}|()",
            "type": "string",
            "description": "Mobile Number to be updated"
          },
          "addressLevel": {
            "type": "string",
            "description": "Specifies if the address should be set/updated\r\n\t\t\t\t\t\t\tfor the customer or card."
          },
          "action": {
            "type": "string",
            "description": "Specifies additional actions to be done for the\r\n\t\t\t\t\t\t\trequest."
          },
          "city": {
            "type": "string",
            "description": "Address City"
          },
          "addressRole": {
            "type": "string",
            "description": "Address role. As each customer or card can have\r\n\t\t\t\t\t\t\tmultiple addresses, this field will identify\r\n\t\t\t\t\t\t\tif the address is the\r\n\t\t\t\t\t\t\tmain address or other logging purpose\r\n\t\t\t\t\t\t\taddress."
          }
        },
        "description": ""
      },
      "tns_UpdateCreditCardMobileNumberResponse": {
        "title": "tns_UpdateCreditCardMobileNumberResponse",
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GetCountryListRequest": {
        "title": "tns_GetCountryListRequest",
        "type": "object",
        "properties": {
          "pageSetup": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_pageSetupType"
              },
              {
                "description": "the number of pages and it size is\r\n\t\t\t\t\t\t\tmentioned in\r\n\t\t\t\t\t\t\tthis tags"
              }
            ]
          },
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CountryType2"
              }
            ]
          },
          "language": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CountryType2": {
        "title": "tns_CountryType2",
        "type": "object",
        "properties": {
          "alphaCode": {
            "type": "string",
            "description": "ISO Alpha Code identifying the country"
          },
          "countryCode": {
            "type": "string",
            "description": "Numeric ISO code identifying the country"
          }
        },
        "description": "Identifier for a country. Can be either\r\n\t\t\t\tthe ISO\r\n\t\t\t\tnumeric code or ISO Alpha Code"
      },
      "tns_GetCountryListResponse": {
        "title": "tns_GetCountryListResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetCountryListSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GetCountryListSuccessType": {
        "title": "tns_GetCountryListSuccessType",
        "type": "object",
        "properties": {
          "pageDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/pageDetailsType"
              }
            ]
          },
          "countryList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CountryListType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CountryListType": {
        "title": "tns_CountryListType",
        "type": "object",
        "properties": {
          "countryDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_countryDetailsType2"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_countryDetailsType2": {
        "title": "tns_countryDetailsType2",
        "type": "object",
        "properties": {
          "isoCode": {
            "type": "string"
          },
          "alpha3": {
            "type": "string"
          },
          "alpha2": {
            "type": "string"
          },
          "defaultCurrency": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          },
          "countryName": {
            "type": "string",
            "description": "Country name"
          },
          "countryNameArabic": {
            "type": "string",
            "description": "Country name in Arabic"
          }
        },
        "description": ""
      },
      "tns_GetRiskPreferencesRequest": {
        "title": "tns_GetRiskPreferencesRequest",
        "type": "object",
        "properties": {
          "customerIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/customerIdentifierType"
              },
              {
                "description": "Customer to get the risk preferences for"
              }
            ]
          },
          "cardIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CardIdentifierType2"
              },
              {
                "description": "Card to get the risk preferences for"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CardIdentifierType2": {
        "title": "tns_CardIdentifierType2",
        "type": "object",
        "properties": {
          "pan": {
            "type": "string",
            "description": "Clear or Encrypted Card Number."
          }
        },
        "description": ""
      },
      "tns_GetRiskPreferencesResponse": {
        "title": "tns_GetRiskPreferencesResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetRiskPreferencesSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GetRiskPreferencesSuccessType": {
        "title": "tns_GetRiskPreferencesSuccessType",
        "type": "object",
        "properties": {
          "riskPreferences": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RiskPreferencesType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_RiskPreferencesType": {
        "title": "tns_RiskPreferencesType",
        "type": "object",
        "properties": {
          "riskPreference": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_RiskPreferenceType2"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_RiskPreferenceType2": {
        "title": "tns_RiskPreferenceType2",
        "type": "object",
        "properties": {
          "pan": {
            "type": "string",
            "description": "Card having the risk preferences for"
          },
          "cardType": {
            "type": "string",
            "description": "Card Type"
          },
          "restrictionPeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ccsDateRangeType"
              },
              {
                "description": "Period during which the restriction applies"
              }
            ]
          },
          "countryRestrictions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RestrictionType"
              },
              {
                "description": "Restrictions for the countries"
              }
            ]
          },
          "mccRestrictions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RestrictionType"
              },
              {
                "description": "Restrictions on MCCs"
              }
            ]
          },
          "transactionTypeRestrictions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RestrictionType"
              },
              {
                "description": "Restrictions on Transaction Types"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_RestrictionType": {
        "title": "tns_RestrictionType",
        "type": "object",
        "properties": {
          "allAllowed": {
            "type": "boolean",
            "description": "Specifies if any entry value is allowed"
          },
          "noneAllowed": {
            "type": "boolean",
            "description": "Specifies if all entry values are restricted"
          },
          "allowedList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AllowedListType"
              },
              {
                "description": "List of allowed entries"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_AllowedListType": {
        "title": "tns_AllowedListType",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Single short value"
          }
        },
        "description": ""
      },
      "tns_UpdateRiskLoginCountryRequest": {
        "title": "tns_UpdateRiskLoginCountryRequest",
        "type": "object",
        "properties": {
          "cardIdentifiers": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CardIdentifiersType"
              },
              {
                "description": "Card list to update login country for"
              }
            ]
          },
          "country": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CountryType2"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CardIdentifiersType": {
        "title": "tns_CardIdentifiersType",
        "type": "object",
        "properties": {
          "cardIdentifier": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_CardIdentifierType2"
            },
            "description": "Card identifier to update login country for"
          }
        },
        "description": ""
      },
      "tns_UpdateRiskLoginCountryResponse": {
        "title": "tns_UpdateRiskLoginCountryResponse",
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_UpdateRiskPreferencesRequest": {
        "title": "tns_UpdateRiskPreferencesRequest",
        "type": "object",
        "properties": {
          "cardIdentifiers": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CardIdentifiersType"
              },
              {
                "description": "Card to update risk preferences for"
              }
            ]
          },
          "customerIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/customerIdentifierType"
              },
              {
                "description": "Customer to update risk preferences for"
              }
            ]
          },
          "riskPreference": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RiskPreferenceType"
              },
              {
                "description": "Restriction to add/update/delete"
              }
            ]
          },
          "action": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_action"
              },
              {
                "description": "Action to be performed"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_UpdateRiskPreferencesResponse": {
        "title": "tns_UpdateRiskPreferencesResponse",
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_RiskPreferenceType": {
        "title": "tns_RiskPreferenceType",
        "type": "object",
        "properties": {
          "restrictionPeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ccsDateRangeType"
              },
              {
                "description": "Period during which the restriction applies"
              }
            ]
          },
          "countryRestrictions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RestrictionType"
              },
              {
                "description": "Restrictions for the countries"
              }
            ]
          },
          "mccRestrictions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RestrictionType"
              },
              {
                "description": "Restrictions on MCCs"
              }
            ]
          },
          "transactionTypeRestrictions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RestrictionType"
              },
              {
                "description": "Restrictions on Transaction Types"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GetReasonableLendingInformationRequest": {
        "title": "tns_GetReasonableLendingInformationRequest",
        "type": "object",
        "properties": {
          "cif": {
            "pattern": "([0-9]){14}|([0]){1}|()",
            "type": "string",
            "description": "Customer Unique Identification Number"
          }
        },
        "description": ""
      },
      "tns_GetReasonableLendingInformationResponse": {
        "title": "tns_GetReasonableLendingInformationResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetReasonableLendingInformationDetails"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GetReasonableLendingInformationDetails": {
        "title": "tns_GetReasonableLendingInformationDetails",
        "type": "object",
        "properties": {
          "otherExpenses": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Other Expenses"
              }
            ]
          },
          "fixedAllowance": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Fixed Allowance"
              }
            ]
          },
          "housingRent": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Housing Rent"
              }
            ]
          },
          "houseMaidDriver": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "House Maid Driver"
              }
            ]
          },
          "declaredCoreExpenses": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Declared Core Expenses"
              }
            ]
          },
          "declaredMonthlyObligation": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Declared Monthly Obligation"
              }
            ]
          },
          "salaryBasedCertificate": {
            "type": "string",
            "description": "Salary Based Certificate"
          },
          "salaryCertificate": {
            "type": "string",
            "description": "Salary Certificate"
          },
          "deductions": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Deductions"
              }
            ]
          },
          "basicSalary": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Basic Salary"
              }
            ]
          },
          "dependents": {
            "type": "string",
            "description": "Number Of Dependents"
          },
          "typeOfResidency": {
            "maxLength": 5,
            "minLength": 0,
            "type": "string",
            "description": "Type Of Residency"
          },
          "fursanMembershipNumber": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreateEcommerceMerchantRequest": {
        "title": "tns_CreateEcommerceMerchantRequest",
        "type": "object",
        "properties": {
          "merchantAccountNumber": {
            "type": "string",
            "description": "Merchant Account Number"
          },
          "merchantEnglishName": {
            "type": "string",
            "description": "Merchant English Name"
          },
          "merchantArabicName": {
            "type": "string",
            "description": "Merchant Arabic Name"
          },
          "terminalCityName": {
            "type": "string",
            "description": "Terminal City Name"
          },
          "terminalAddress": {
            "type": "string",
            "description": "Terminal Address"
          },
          "phone": {
            "type": "string",
            "description": "Phone"
          },
          "fax": {
            "type": "string",
            "description": "FAX"
          },
          "contactFirstName": {
            "type": "string",
            "description": "Contact First Name"
          },
          "contactLastName": {
            "type": "string",
            "description": "Contact Last Name"
          },
          "mobile1": {
            "type": "string",
            "description": "Mobile1"
          },
          "mobile2": {
            "type": "string",
            "description": "Mobile2"
          },
          "emailAddress1": {
            "pattern": "([a-zA-Z0-9_\\-])([a-zA-Z0-9_\\-\\.]*)@(\\[((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}|((([a-zA-Z0-9\\-]+)\\.)+))([a-zA-Z]{2,}|(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\])|()",
            "type": "string",
            "description": "Email Address1"
          },
          "emailAddress2": {
            "pattern": "([a-zA-Z0-9_\\-])([a-zA-Z0-9_\\-\\.]*)@(\\[((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}|((([a-zA-Z0-9\\-]+)\\.)+))([a-zA-Z]{2,}|(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\])|()",
            "type": "string",
            "description": "Email Address2"
          },
          "technicalContactFirstName": {
            "type": "string",
            "description": "Technical Contact FirstName"
          },
          "technicalContactLastName": {
            "type": "string",
            "description": "Technical Contact LastName"
          },
          "technicalMobile": {
            "type": "string",
            "description": "Technical Mobile"
          },
          "technicalEmailAddress": {
            "type": "string",
            "description": "Technical Email Address"
          },
          "numberOfTerminals": {
            "type": "integer",
            "description": "Number of terminals assigned to this merchant.\r\n\t\t\t\t\t\t\t0 - No terminal will be assigned\r\n\t\t\t\t\t\t\t1 - One terminal will be assigned\r\n\t\t\t\t\t\t\tfor this merchant",
            "format": "int32"
          },
          "terminalList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_TerminalListType"
              },
              {
                "description": "List of terminals to attach to this\r\n\t\t\t\t\t\t\tmerchant"
              }
            ]
          },
          "mcc": {
            "type": "string",
            "description": "MCC"
          },
          "pobox": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "POBOX"
          },
          "postalCode": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "Postal Code"
          },
          "madaCommissionPercentage": {
            "type": "number",
            "description": "Mada Commission Percentage"
          },
          "madaFlatCommission": {
            "type": "number",
            "description": "Mada Flat Commission"
          },
          "madaCapRate": {
            "type": "number",
            "description": "Mada CapRate"
          },
          "creditCommissionPercentage": {
            "type": "number",
            "description": "Credit Commission Percentage"
          },
          "creditCommissionFlat": {
            "type": "number",
            "description": "Credit Commission Flat"
          },
          "terminalType": {
            "type": "string",
            "description": "Terminal Type"
          },
          "cashBack": {
            "type": "boolean",
            "description": "CashBack"
          },
          "createdByUser": {
            "type": "string",
            "description": "Created By User"
          },
          "ticketNumber": {
            "type": "string",
            "description": "Ticket Number"
          },
          "description": {
            "type": "string",
            "description": "Description"
          },
          "shopArabicName": {
            "type": "string",
            "description": "Shop Arabic Name"
          },
          "shopEnglishName": {
            "type": "string",
            "description": "Shop English Name"
          },
          "commercialRegisterNumber": {
            "type": "string",
            "description": "Commercial Register Number"
          },
          "commercialRegisterNumberExpiryDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Commercial Register Number Expiry Date"
          },
          "parentMerchantNumber": {
            "type": "string",
            "description": "Retailer Id of Parent Merchant"
          },
          "terminalArabicAddress": {
            "type": "string",
            "description": "Terminal Arabic Address"
          },
          "cardTypes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CardType"
              },
              {
                "description": "Card Types"
              }
            ]
          },
          "url": {
            "type": "string",
            "description": "URL"
          },
          "paymentTypeKey": {
            "type": "string",
            "description": "Payment Type Key"
          },
          "pspKy": {
            "type": "string",
            "description": "PSPKy"
          },
          "setupFee": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Setup Fee"
              }
            ]
          },
          "monthlyFee": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Monthly Fee"
              }
            ]
          },
          "gatewayKy": {
            "type": "string",
            "description": "GatewayKy"
          }
        },
        "description": ""
      },
      "tns_CardType": {
        "title": "tns_CardType",
        "type": "object",
        "properties": {
          "cardType": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Card Type"
          }
        },
        "description": ""
      },
      "tns_TerminalListType": {
        "title": "tns_TerminalListType",
        "type": "object",
        "properties": {
          "terminalId": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Terminal Id"
          }
        },
        "description": ""
      },
      "tns_CreateEcommerceMerchantResponse": {
        "title": "tns_CreateEcommerceMerchantResponse",
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_EcommerceTransactionsRequest": {
        "title": "tns_EcommerceTransactionsRequest",
        "type": "object",
        "properties": {
          "cardTypeList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CardType"
              },
              {
                "description": "List of card types"
              }
            ]
          },
          "transactionFromAmount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Transaction FromAmount"
              }
            ]
          },
          "transactionToAmount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Transaction ToAmount"
              }
            ]
          },
          "terminalList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_TerminalListType"
              },
              {
                "description": "Terminal List"
              }
            ]
          },
          "transactionReference": {
            "type": "string",
            "description": "Transaction Reference"
          },
          "reconciliationFromDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Reconciliation FromDate"
          },
          "reconciliationToDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Reconciliation ToDate"
          },
          "authorizationNumber": {
            "type": "string"
          },
          "settled": {
            "type": "string",
            "description": "Settled"
          },
          "dateSort": {
            "type": "string",
            "description": "Date Sort"
          },
          "pageSize": {
            "type": "string",
            "description": "Page Size"
          },
          "pageNumber": {
            "type": "string",
            "description": "Page Number"
          },
          "offlineReport": {
            "type": "boolean",
            "description": "Offline Report"
          },
          "offlineReportOwner": {
            "type": "string",
            "description": "Offline Report Owner"
          }
        },
        "description": ""
      },
      "tns_EcommerceTransactionsResponse": {
        "title": "tns_EcommerceTransactionsResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_EcommerceTransactionsSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_EcommerceTransactionsSuccessType": {
        "title": "tns_EcommerceTransactionsSuccessType",
        "type": "object",
        "properties": {
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalNumberOfResults": {
            "type": "integer",
            "format": "int32"
          },
          "currentNumberOfResults": {
            "type": "integer",
            "format": "int32"
          },
          "totalNumberOfPages": {
            "type": "integer",
            "format": "int32"
          },
          "currentPageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "offlineReportName": {
            "type": "string",
            "description": "Offline Report Name"
          },
          "ecommerceTransactionsList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_EcommerceTransactionListType"
              },
              {
                "description": "List of transactions"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_EcommerceTransactionListType": {
        "title": "tns_EcommerceTransactionListType",
        "type": "object",
        "properties": {
          "ecommerceTransactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_EcommerceTransactionsType"
            },
            "description": "Ecommerce Transactions"
          }
        },
        "description": ""
      },
      "tns_EcommerceTransactionsType": {
        "title": "tns_EcommerceTransactionsType",
        "type": "object",
        "properties": {
          "transactionReference": {
            "type": "string",
            "description": "Transaction Reference"
          },
          "merchantId": {
            "type": "string",
            "description": "Merchant Id"
          },
          "merchantName": {
            "type": "string",
            "description": "Merchant Name"
          },
          "authorizationNumber": {
            "type": "string",
            "description": "Authorization Number"
          },
          "cardType": {
            "type": "string",
            "description": "Card Type"
          },
          "cardNumber": {
            "type": "string",
            "description": "Card Number"
          },
          "transactionType": {
            "type": "string",
            "description": "Transaction Type"
          },
          "transactionDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Transaction Date"
          },
          "transactionTime": {
            "pattern": "([0-9]){4}|([0-9]){6}|()",
            "type": "string",
            "description": "Transaction Time"
          },
          "settlementAmount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Settlement Amount"
              }
            ]
          },
          "feesAmount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Fees Amount"
              }
            ]
          },
          "vatAmount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Vat Amount"
              }
            ]
          },
          "settlementDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Settlement Date"
          },
          "acquirerReference": {
            "type": "string",
            "description": "Acquirer Reference"
          },
          "cardTypeDescription": {
            "type": "string",
            "description": "Card Type Description"
          },
          "purchaseIdentifier": {
            "type": "string",
            "description": "Purchase Identifier"
          },
          "transactionIdentifier": {
            "type": "string",
            "description": "Transaction Identifier"
          },
          "orderId": {
            "type": "string",
            "description": "Order Id"
          },
          "reconciliationId": {
            "type": "string",
            "description": "Reconciliation Id"
          }
        },
        "description": ""
      },
      "tns_SearchEcommerceMerchantRequest": {
        "title": "tns_SearchEcommerceMerchantRequest",
        "type": "object",
        "properties": {
          "merchantNumber": {
            "type": "string",
            "description": "Merchant Number"
          },
          "merchantEnglishName": {
            "type": "string",
            "description": "Merchant English Name"
          },
          "merchantRegistrationNumber": {
            "type": "string",
            "description": "Merchant Registration Number"
          },
          "merchantAccountNumber": {
            "type": "string",
            "description": "Merchant Account Number"
          },
          "terminalId": {
            "type": "string",
            "description": "Terminal Id"
          },
          "fromCreationDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "From Creation Date"
          },
          "toCreationDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "To Creation Date"
          }
        },
        "description": ""
      },
      "tns_SearchEcommerceMerchantResponse": {
        "title": "tns_SearchEcommerceMerchantResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_SearchEcommerceMerchantSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_SearchEcommerceMerchantSuccessType": {
        "title": "tns_SearchEcommerceMerchantSuccessType",
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Number of results returned",
            "format": "int32"
          },
          "ecommerceMerchantList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_EcommerceMerchantListType"
              },
              {
                "description": "List of merchants"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_EcommerceMerchantListType": {
        "title": "tns_EcommerceMerchantListType",
        "type": "object",
        "properties": {
          "merchants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_EcommerceMerchantType"
            },
            "description": "List Of Merchants"
          }
        },
        "description": ""
      },
      "tns_EcommerceMerchantType": {
        "title": "tns_EcommerceMerchantType",
        "type": "object",
        "properties": {
          "merchantNumber": {
            "type": "string",
            "description": "Merchant Number"
          },
          "merchantAccountNumber": {
            "type": "string",
            "description": "Merchant Account Number"
          },
          "merchantEnglishName": {
            "type": "string",
            "description": "Merchant English Name"
          },
          "merchantArabicName": {
            "type": "string",
            "description": "Merchant Arabic Name"
          },
          "terminalCityName": {
            "type": "string",
            "description": "Terminal City Name"
          },
          "terminalAddress": {
            "type": "string",
            "description": "Terminal Address"
          },
          "phone": {
            "type": "string",
            "description": "Phone"
          },
          "fax": {
            "type": "string",
            "description": "FAX"
          },
          "contactFirstName": {
            "type": "string",
            "description": "Contact First Name"
          },
          "contactLastName": {
            "type": "string",
            "description": "Contact Last Name"
          },
          "mobile1": {
            "type": "string",
            "description": "Mobile1"
          },
          "mobile2": {
            "type": "string",
            "description": "Mobile2"
          },
          "emailAddress1": {
            "pattern": "([a-zA-Z0-9_\\-])([a-zA-Z0-9_\\-\\.]*)@(\\[((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}|((([a-zA-Z0-9\\-]+)\\.)+))([a-zA-Z]{2,}|(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\])|()",
            "type": "string",
            "description": "Email Address1"
          },
          "emailAddress2": {
            "pattern": "([a-zA-Z0-9_\\-])([a-zA-Z0-9_\\-\\.]*)@(\\[((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}|((([a-zA-Z0-9\\-]+)\\.)+))([a-zA-Z]{2,}|(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\])|()",
            "type": "string",
            "description": "Email Address2"
          },
          "numberOfTerminals": {
            "type": "integer",
            "description": "Number of terminals assigned to this merchant.\r\n\t\t\t\t\t\t0\r\n\t\t\t\t\t\t- No terminal will be\r\n\t\t\t\t\t\tassigned\r\n\t\t\t\t\t\t1 - One terminal will be assigned for\r\n\t\t\t\t\t\tthis merchant",
            "format": "int32"
          },
          "terminalList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_EcommerceTerminalListType"
              },
              {
                "description": "List of terminals to attach to this\r\n\t\t\t\t\t\tmerchant"
              }
            ]
          },
          "mcc": {
            "type": "string",
            "description": "MCC"
          },
          "pobox": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "POBOX"
          },
          "postalCode": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "Postal Code"
          },
          "madaCommissionPercentage": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Mada Commission Percentage"
              }
            ]
          },
          "madaFlatCommission": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Mada Flat Commission"
              }
            ]
          },
          "madaCapRate": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Mada CapRate"
              }
            ]
          },
          "creditCommissionPercentage": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Credit Commission Percentage"
              }
            ]
          },
          "creditCommissionFlat": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Credit Commission Flat"
              }
            ]
          },
          "terminalType": {
            "type": "string",
            "description": "Terminal Type"
          },
          "madaOnly": {
            "type": "boolean",
            "description": "Mada Only"
          },
          "createdByUser": {
            "type": "string",
            "description": "Created By User"
          },
          "status": {
            "type": "string",
            "description": "Ticket Number"
          },
          "creationDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Description"
          },
          "installationDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Description"
          },
          "ticketNumber": {
            "type": "string",
            "description": "Ticket Number"
          },
          "description": {
            "type": "string",
            "description": "Description"
          },
          "shopArabicName": {
            "type": "string",
            "description": "Shop Arabic Name"
          },
          "shopEnglishName": {
            "type": "string",
            "description": "Shop English Name"
          },
          "commercialRegisterNumber": {
            "type": "string",
            "description": "Commercial Register Number"
          },
          "commercialRegisterNumberExpiryDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Commercial Register Number Expiry Date"
          },
          "merchantLevel": {
            "type": "integer",
            "description": "Merchant Level\r\n\t\t\t\t\t\t1 ---> Merchant Group\r\n\t\t\t\t\t\t3 ---->\r\n\t\t\t\t\t\tMerchant Site\r\n\t\t\t\t\t\tSkip to return all\r\n\t\t\t\t\t\tlevels",
            "format": "int32"
          },
          "merchantLevelDescription": {
            "type": "string",
            "description": "Card Types"
          },
          "website": {
            "type": "string",
            "description": "WEBSITE"
          },
          "psp": {
            "type": "string"
          },
          "gateway": {
            "type": "string",
            "description": "GATEWAY"
          },
          "paymentType": {
            "type": "string",
            "description": "PAYMENT TYPE"
          },
          "technicalContactFirstName": {
            "type": "string",
            "description": "TECHNICAL CONTACT FIRST NAME"
          },
          "technicalContactLastName": {
            "type": "string",
            "description": "TECHNICAL CONTACT LAST NAME"
          },
          "technicalMobile": {
            "type": "string",
            "description": "TECHNICAL MOBILE"
          },
          "technicalEmailAddress": {
            "type": "string",
            "description": "TECHNICAL EMAIL ADDRESS"
          }
        },
        "description": ""
      },
      "tns_EcommerceTerminalListType": {
        "title": "tns_EcommerceTerminalListType",
        "type": "object",
        "properties": {
          "terminals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_EcommerceTerminalType"
            },
            "description": "List Of Terminals"
          }
        },
        "description": ""
      },
      "tns_EcommerceTerminalType": {
        "title": "tns_EcommerceTerminalType",
        "type": "object",
        "properties": {
          "terminalId": {
            "type": "string",
            "description": "Terminal Id"
          },
          "terminalStatus": {
            "type": "string",
            "description": "Terminal Status"
          },
          "terminalStatusId": {
            "type": "integer",
            "description": "Terminal Status Id",
            "format": "int32"
          }
        },
        "description": ""
      },
      "tns_EcommerceMerchantUpdationRequest": {
        "title": "tns_EcommerceMerchantUpdationRequest",
        "type": "object",
        "properties": {
          "merchantNumber": {
            "type": "string",
            "description": "Merchant Number"
          },
          "merchantEnglishName": {
            "type": "string",
            "description": "Merchant English Name"
          },
          "merchantArabicName": {
            "type": "string",
            "description": "Merchant Arabic Name"
          },
          "terminalCityName": {
            "type": "string",
            "description": "Terminal City Name"
          },
          "terminalAddress": {
            "type": "string",
            "description": "Terminal Address"
          },
          "phone": {
            "type": "string",
            "description": "Phone"
          },
          "fax": {
            "type": "string",
            "description": "FAX"
          },
          "contactFirstName": {
            "type": "string",
            "description": "Contact First Name"
          },
          "contactLastName": {
            "type": "string",
            "description": "Contact Last Name"
          },
          "mobile1": {
            "type": "string",
            "description": "Mobile1"
          },
          "mobile2": {
            "type": "string",
            "description": "Mobile2"
          },
          "emailAddress1": {
            "pattern": "([a-zA-Z0-9_\\-])([a-zA-Z0-9_\\-\\.]*)@(\\[((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}|((([a-zA-Z0-9\\-]+)\\.)+))([a-zA-Z]{2,}|(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\])|()",
            "type": "string",
            "description": "Email Address1"
          },
          "emailAddress2": {
            "pattern": "([a-zA-Z0-9_\\-])([a-zA-Z0-9_\\-\\.]*)@(\\[((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}|((([a-zA-Z0-9\\-]+)\\.)+))([a-zA-Z]{2,}|(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\])|()",
            "type": "string",
            "description": "Email Address2"
          },
          "technicalContactFirstName": {
            "type": "string",
            "description": "Technical Contact FirstName"
          },
          "technicalContactLastName": {
            "type": "string",
            "description": "Technical Contact LastName"
          },
          "technicalMobile": {
            "type": "string",
            "description": "Technical Mobile"
          },
          "technicalEmailAddress": {
            "type": "string",
            "description": "Technical Email Address"
          },
          "mcc": {
            "type": "string",
            "description": "MCC"
          },
          "pobox": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string",
            "description": "POBOX"
          },
          "postalCode": {
            "type": "string",
            "description": "postal Code"
          },
          "updateByUser": {
            "type": "string",
            "description": "Update By User"
          },
          "ticketNumber": {
            "type": "string",
            "description": "Ticket Number"
          },
          "updatedDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Updated Date"
          },
          "description": {
            "type": "string",
            "description": "Description"
          },
          "shopArabicName": {
            "type": "string",
            "description": "Shop Arabic Name"
          },
          "shopEnglishName": {
            "type": "string",
            "description": "Shop English Name"
          },
          "commercialRegisterNumber": {
            "type": "string",
            "description": "Commercial Register Number"
          },
          "commercialRegisterNumberExpiryDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Commercial Register Number Expiry Date"
          },
          "terminalArabicAddress": {
            "type": "string",
            "description": "Terminal Arabic Address"
          },
          "cardTypes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CardType"
              },
              {
                "description": "Card Types"
              }
            ]
          },
          "url": {
            "type": "string",
            "description": "URL"
          },
          "paymentTypeKey": {
            "type": "string",
            "description": "Payment Type Key"
          },
          "pspKy": {
            "type": "string",
            "description": "PSPKy"
          },
          "setupFee": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Setup Fee"
              }
            ]
          },
          "monthlyFee": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Monthly Fee"
              }
            ]
          },
          "gatewayKy": {
            "type": "string",
            "description": "GatewayKy"
          }
        },
        "description": ""
      },
      "tns_EcommerceMerchantUpdationResponse": {
        "title": "tns_EcommerceMerchantUpdationResponse",
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditCardRefNumGenerationRequest": {
        "title": "tns_CreditCardRefNumGenerationRequest",
        "required": [
          "applicationNumber",
          "cif",
          "fee",
          "vat",
          "accountNumber",
          "mobileNumber",
          "language"
        ],
        "type": "object",
        "properties": {
          "applicationNumber": {
            "type": "string"
          },
          "cif": {
            "pattern": "([0-9]){14}|([0]){1}",
            "type": "string"
          },
          "fee": {
            "type": "number"
          },
          "vat": {
            "type": "number"
          },
          "accountNumber": {
            "type": "string"
          },
          "mobileNumber": {
            "pattern": "[0-9]{9,15}",
            "type": "string"
          },
          "language": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreditCardRefNumGenerationResponse": {
        "title": "tns_CreditCardRefNumGenerationResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardRefNumGenerationResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditCardRefNumGenerationResponseType": {
        "title": "tns_CreditCardRefNumGenerationResponseType",
        "type": "object",
        "properties": {
          "referenceNumber": {
            "type": "string"
          },
          "expireDate": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "info": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_EnquiryOrAmendCommunicationRequest": {
        "title": "tns_EnquiryOrAmendCommunicationRequest",
        "required": [
          "action",
          "cardId"
        ],
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "I or S"
          },
          "cardId": {
            "type": "string"
          },
          "communicationType": {
            "type": "string",
            "description": "S: SMS,E: Email,B: Both"
          },
          "maker": {
            "type": "string"
          },
          "checker": {
            "type": "string"
          },
          "templateSubject": {
            "type": "string"
          },
          "templateMessage": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_EnquiryOrAmendCommunicationResponse": {
        "title": "tns_EnquiryOrAmendCommunicationResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_EnquiryOrAmendCommunicationResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_EnquiryOrAmendCommunicationResponseType": {
        "title": "tns_EnquiryOrAmendCommunicationResponseType",
        "type": "object",
        "properties": {
          "templateMessage": {
            "type": "string"
          },
          "mobileNumber": {
            "pattern": "[0-9]{9,15}|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_ManagePricingDetailsRequest": {
        "title": "tns_ManagePricingDetailsRequest",
        "type": "object",
        "properties": {
          "function": {
            "maxLength": 1,
            "type": "string",
            "description": "Number of results returned"
          },
          "institutionNumber": {
            "maxLength": 3,
            "type": "string",
            "description": "Institution No"
          },
          "employerCode": {
            "maxLength": 4,
            "type": "string",
            "description": "Employer Code"
          },
          "employerName": {
            "maxLength": 50,
            "type": "string",
            "description": "Employer Name"
          },
          "employerCurrentAccount": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string",
            "description": "Employer Current Account"
          },
          "feeAmount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Fee Amount"
              }
            ]
          },
          "collectionFrequency": {
            "maxLength": 1,
            "type": "string",
            "description": "Collection Frequency"
          },
          "lastUpdateDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Last Update Date"
          },
          "updateUser": {
            "maxLength": 16,
            "type": "string",
            "description": "Update User"
          },
          "requestedParty": {
            "maxLength": 30,
            "type": "string",
            "description": "Requested Party"
          },
          "startDate": {
            "maxLength": 6,
            "type": "string",
            "description": "Start Date"
          },
          "employerStatus": {
            "maxLength": 1,
            "type": "string",
            "description": "Employer Status"
          }
        },
        "description": ""
      },
      "tns_ManagePricingDetailsResponse": {
        "title": "tns_ManagePricingDetailsResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ManagePricingDetailsSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_ManagePricingDetailsSuccessType": {
        "title": "tns_ManagePricingDetailsSuccessType",
        "type": "object",
        "properties": {
          "function": {
            "maxLength": 1,
            "type": "string",
            "description": "Number of results returned"
          },
          "institutionNumber": {
            "maxLength": 3,
            "type": "string",
            "description": "Institution No"
          },
          "employerCode": {
            "maxLength": 4,
            "type": "string",
            "description": "Employer Code"
          },
          "employerName": {
            "maxLength": 50,
            "type": "string",
            "description": "Employer Name"
          },
          "employerCurrentAccount": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string",
            "description": "Employer Current Account"
          },
          "feeAmount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Fee Amount"
              }
            ]
          },
          "collectionFrequency": {
            "maxLength": 1,
            "type": "string",
            "description": "Collection Frequency"
          },
          "lastUpdateDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Last Update Date"
          },
          "updateUser": {
            "maxLength": 16,
            "type": "string",
            "description": "Update User"
          },
          "requestedParty": {
            "maxLength": 30,
            "type": "string",
            "description": "Requested Party"
          },
          "startDate": {
            "maxLength": 6,
            "type": "string",
            "description": "Start Date"
          },
          "employerStatus": {
            "maxLength": 1,
            "type": "string",
            "description": "Employer Status"
          }
        },
        "description": ""
      },
      "tns_GetCreditCardAggregatedDetailsRequest": {
        "title": "tns_GetCreditCardAggregatedDetailsRequest",
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string",
            "description": "Only Credit Card Number is permitted"
          },
          "cardType": {
            "type": "string"
          },
          "maskBalance": {
            "type": "boolean"
          },
          "requireCreditLimit": {
            "type": "boolean",
            "description": "if Credit Card, Credit Limit is needed."
          },
          "requireInstallmentCount": {
            "type": "boolean",
            "description": "if Credit Card, ongoing installment Count is\r\n\t\t\t\t\t\t\tneeded."
          },
          "requireRewardPoints": {
            "type": "boolean",
            "description": "if Credit Card, reward point is needed."
          },
          "requiresInsuranceInfo": {
            "type": "boolean",
            "description": "if Credit Card, insurance info is needed."
          },
          "requireCashAdvance": {
            "type": "boolean",
            "description": "if Credit Card, cash advance amount is needed."
          },
          "requireRiskPreference": {
            "type": "boolean",
            "description": "if Credit Card, Travel notice info is needed."
          },
          "requireDueDate": {
            "type": "boolean",
            "description": "if Credit Card, due date is needed."
          },
          "requireTokenReferenceId": {
            "type": "boolean",
            "description": "if Credit Card, SADAD Token Reference Number"
          }
        },
        "description": ""
      },
      "tns_GetCreditCardAggregatedDetailsResponse": {
        "title": "tns_GetCreditCardAggregatedDetailsResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetCreditCardAggregatedDetailsSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GetCreditCardAggregatedDetailsSuccessType": {
        "title": "tns_GetCreditCardAggregatedDetailsSuccessType",
        "type": "object",
        "properties": {
          "creditLimit": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Credit Limit of the card"
              }
            ]
          },
          "installmentCount": {
            "type": "string",
            "description": "Active installment count"
          },
          "rewardPoints": {
            "type": "string",
            "description": "Available reward points"
          },
          "insurance": {
            "type": "string",
            "description": "Active insurance name"
          },
          "cashAdvance": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "cash advance available in the card"
              }
            ]
          },
          "dueDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "Credit Limit of the card"
          },
          "tokenReferenceId": {
            "maxLength": 10,
            "type": "string",
            "description": "SADAD Token Reference Number",
            "default": "0"
          },
          "riskPreference": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RiskPreferenceType3"
              },
              {
                "description": "latest Active travel notice info"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_RiskPreferenceType3": {
        "title": "tns_RiskPreferenceType3",
        "type": "object",
        "properties": {
          "pan": {
            "type": "string",
            "description": "Card having the risk preferences for"
          },
          "restrictionPeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ccsDateRangeType3"
              },
              {
                "description": "Period during which the restriction applies"
              }
            ]
          },
          "countryRestrictions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RestrictionType2"
              },
              {
                "description": "Restrictions for the countries"
              }
            ]
          },
          "mccRestrictions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RestrictionType2"
              },
              {
                "description": "Restrictions on MCCs"
              }
            ]
          },
          "transactionTypeRestrictions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RestrictionType2"
              },
              {
                "description": "Restrictions on Transaction Types"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_ccsDateRangeType3": {
        "title": "tns_ccsDateRangeType3",
        "type": "object",
        "properties": {
          "dateFrom": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "From Date"
          },
          "dateTo": {
            "pattern": "([0-9]){8}|()",
            "type": "string",
            "description": "To Date"
          }
        },
        "description": ""
      },
      "tns_RestrictionType2": {
        "title": "tns_RestrictionType2",
        "type": "object",
        "properties": {
          "allAllowed": {
            "type": "boolean",
            "description": "Specifies if any entry value is allowed"
          },
          "noneAllowed": {
            "type": "boolean",
            "description": "Specifies if all entry values are restricted"
          },
          "allowedList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_AllowedListType2"
              },
              {
                "description": "List of allowed entries"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_AllowedListType2": {
        "title": "tns_AllowedListType2",
        "type": "object",
        "properties": {
          "value": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Single short value"
          }
        },
        "description": ""
      },
      "tns_ConvertVirtualCardToPlasticRequest": {
        "title": "tns_ConvertVirtualCardToPlasticRequest",
        "required": [
          "cardId"
        ],
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string"
          },
          "deliveryOption": {
            "type": "string",
            "description": "SP: Saudi Post\r\n\t\t\t\t\t\t\tFC: Fast courier\r\n\t\t\t\t\t\t\tKC: Kiosk Center"
          },
          "deliveryAddress": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DeliveryAddressType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_ConvertVirtualCardToPlasticResponse": {
        "title": "tns_ConvertVirtualCardToPlasticResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ConvertVirtualCardToPlasticSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_ConvertVirtualCardToPlasticSuccessType": {
        "title": "tns_ConvertVirtualCardToPlasticSuccessType",
        "type": "object",
        "properties": {
          "referenceNumber": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "statusDescription": {
            "type": "string"
          },
          "messageDate": {
            "type": "string"
          },
          "messageTime": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_GetCardVirtualDetailsRequest": {
        "title": "tns_GetCardVirtualDetailsRequest",
        "type": "object",
        "properties": {
          "cardNumber": {
            "type": "string"
          },
          "expiryDateFlag": {
            "type": "boolean"
          },
          "unmaskedCardNoFlag": {
            "type": "boolean"
          },
          "cardCVVFlag": {
            "type": "boolean"
          }
        },
        "description": ""
      },
      "tns_GetCardVirtualDetailsResponse": {
        "title": "tns_GetCardVirtualDetailsResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetCardVirtualDetailsSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GetCardVirtualDetailsSuccessType": {
        "title": "tns_GetCardVirtualDetailsSuccessType",
        "type": "object",
        "properties": {
          "cardCVV": {
            "type": "string"
          },
          "expiryDate": {
            "type": "string"
          },
          "unMaskedCardNo": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_GenerateKeyRequest": {
        "title": "tns_GenerateKeyRequest",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_GenerateKeyResponse": {
        "title": "tns_GenerateKeyResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GenerateKeySuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_GenerateKeySuccessType": {
        "title": "tns_GenerateKeySuccessType",
        "type": "object",
        "properties": {
          "newKey": {
            "type": "string"
          },
          "newKeyTimeStamp": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))[T](0[0-9]|1[0-9]|2[0-3]|[0-9])[:]([0-5][0-9])[:]([0-5][0-9])|()",
            "type": "string"
          },
          "oldKey": {
            "type": "string"
          },
          "oldKeyTimestamp": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))[T](0[0-9]|1[0-9]|2[0-3]|[0-9])[:]([0-5][0-9])[:]([0-5][0-9])|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_UpdateRiskCardStatusRequest": {
        "title": "tns_UpdateRiskCardStatusRequest",
        "required": [
          "cardId"
        ],
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string",
            "description": "Credit card ID"
          },
          "expiryDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "currentStatus": {
            "type": "string",
            "description": "Current Status Code of the card."
          },
          "newStatus": {
            "type": "string",
            "description": "New Status Code to set for the card."
          },
          "description": {
            "type": "string",
            "description": "Description or reason for the status update."
          },
          "memo": {
            "type": "string",
            "description": "Notes for the status update."
          }
        },
        "description": ""
      },
      "tns_UpdateRiskCardStatusResponse": {
        "title": "tns_UpdateRiskCardStatusResponse",
        "type": "object",
        "properties": {
          "success": {
            "type": "string"
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditCardRestrictionCheckRequest": {
        "title": "tns_CreditCardRestrictionCheckRequest",
        "type": "object",
        "properties": {
          "cif": {
            "pattern": "([0-9]){14}|([0]){1}|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreditCardRestrictionCheckResponse": {
        "title": "tns_CreditCardRestrictionCheckResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardRestrictionCheckSuccessType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditCardRestrictionCheckSuccessType": {
        "title": "tns_CreditCardRestrictionCheckSuccessType",
        "type": "object",
        "properties": {
          "journalId": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_InquireCreditCardGenericParticularsRequest": {
        "title": "tns_InquireCreditCardGenericParticularsRequest",
        "type": "object",
        "properties": {
          "requestCode": {
            "type": "string"
          },
          "fieldsList": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RequestFieldsListType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_RequestFieldsListType": {
        "title": "tns_RequestFieldsListType",
        "type": "object",
        "properties": {
          "field": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_RequestFieldType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_RequestFieldType": {
        "title": "tns_RequestFieldType",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "code"
          },
          "value": {
            "type": "string",
            "description": "value"
          }
        },
        "description": ""
      },
      "tns_InquireCreditCardGenericParticularsResponse": {
        "title": "tns_InquireCreditCardGenericParticularsResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardGenericParticularsResponseType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_CreditCardGenericParticularsResponseType": {
        "title": "tns_CreditCardGenericParticularsResponseType",
        "type": "object",
        "properties": {
          "fieldsList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_ResponseFieldsListType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_ResponseFieldsListType": {
        "title": "tns_ResponseFieldsListType",
        "type": "object",
        "properties": {
          "field": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_ResponseFieldType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_ResponseFieldType": {
        "title": "tns_ResponseFieldType",
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "code"
          },
          "value": {
            "type": "string",
            "description": "value"
          }
        },
        "description": ""
      },
      "tns_PayCreditCardPaymentPlanRequest": {
        "title": "tns_PayCreditCardPaymentPlanRequest",
        "type": "object",
        "properties": {
          "paymentPlanId": {
            "type": "string",
            "description": "Unique id identifying the payment plan in\r\n\t\t\t\t\t\t\tcortex\r\n\t\t\t\t\t\t\tto pay the full amount"
          },
          "amount": {
            "type": "number",
            "description": "Amount"
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_currencyType"
              },
              {
                "description": "Reference to the Common Currency Identifier\r\n\t\t\t\t\t\tObject\r\n\t\t\t\t\t\tholding the details of the account currency. All amounts\r\n\t\t\t\t\t\tunder the credit account are expressed in this currency"
              }
            ]
          },
          "numberOfInstallments": {
            "type": "string",
            "description": "Number of installments required."
          },
          "externalAccountDetails": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_PaymentPlanExternalAccountDetailsType"
              },
              {
                "description": "External account details - can be used when\r\n\t\t\t\t\t\texternal transfer is required or additional external account\r\n\t\t\t\t\t\tdetails are needed for logging purposes"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_PaymentPlanExternalAccountDetailsType": {
        "title": "tns_PaymentPlanExternalAccountDetailsType",
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "L - Log only - the details will only be\r\n\t\t\t\t\t\tlogged\r\n\t\t\t\t\t\tfor reporting purposes V - Log\r\n\t\t\t\t\t\tand validate - the details will be\r\n\t\t\t\t\t\tlogged after validating that the account\r\n\t\t\t\t\t\tnumber specified is the\r\n\t\t\t\t\t\tsame as the\r\n\t\t\t\t\t\tdirect debit account number linked to\r\n\t\t\t\t\t\tthe credit account\r\n\t\t\t\t\t\tP - Post to external\r\n\t\t\t\t\t\taccount immediately - an attempt to\r\n\t\t\t\t\t\tdebit the\r\n\t\t\t\t\t\texternal account is done on\r\n\t\t\t\t\t\tthe spot regardless if the end of day\r\n\t\t\t\t\t\tprocessing is running or the item is not\r\n\t\t\t\t\t\tposted in Cortex. U - Post\r\n\t\t\t\t\t\tto external\r\n\t\t\t\t\t\taccount immediately and updated the\r\n\t\t\t\t\t\tblocked amount in\r\n\t\t\t\t\t\tCortex. A - Post to\r\n\t\t\t\t\t\texternal account only when the item in\r\n\t\t\t\t\t\tCortex is\r\n\t\t\t\t\t\tposted."
          },
          "source": {
            "type": "string",
            "description": "Action source - numeric value identifying the\r\n\t\t\t\t\t\tsource channel/system of the request."
          },
          "purpose": {
            "type": "string",
            "description": "numeric value identifying the\r\n\t\t\t\t\t\tpurpose of the\r\n\t\t\t\t\t\tadjustment."
          },
          "relationship": {
            "type": "string",
            "description": "Numeric value identifying the relationship of\r\n\t\t\t\t\t\tthe\r\n\t\t\t\t\t\tsource/destination account that did the payment with the\r\n\t\t\t\t\t\tcardholder."
          },
          "accountNumber": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string",
            "description": "Source or destination external account number.\r\n\t\t\t\t\t\tMandatory in case the action is not logging only"
          },
          "accountCurrency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_currencyType"
              },
              {
                "description": "Currency of the external account"
              }
            ]
          },
          "userData1": {
            "type": "string",
            "description": "Customer specific data"
          },
          "userData2": {
            "type": "string",
            "description": "Customer specific data"
          }
        },
        "description": ""
      },
      "tns_PayCreditCardPaymentPlanResponse": {
        "title": "tns_PayCreditCardPaymentPlanResponse",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_PayCreditCardFullPaymentDetailsType"
              }
            ]
          },
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_PayCreditCardFullPaymentDetailsType": {
        "title": "tns_PayCreditCardFullPaymentDetailsType",
        "type": "object",
        "properties": {
          "paymentPlanId": {
            "type": "string",
            "description": "Unique id identifying the payment plan in cortex"
          },
          "institutionCode": {
            "type": "string",
            "description": "Institution code the account linked to this\r\n\t\t\t\t\t\tpayment plan is defined under."
          },
          "accountNumber": {
            "type": "string",
            "description": "Credit account number the payment plan is\r\n\t\t\t\t\t\tdefined for."
          },
          "cardIdentifier": {
            "allOf": [
              {
                "$ref": "#/components/schemas/responseCardIdentifierType"
              },
              {
                "description": "Pan/Card details which was used for the\r\n\t\t\t\t\t\ttransaction\r\n\t\t\t\t\t\tconverted to installment in case any."
              }
            ]
          },
          "paymentPlanName": {
            "type": "string",
            "description": "Name of the payment plan set the payment plan is\r\n\t\t\t\t\t\tcreated under"
          },
          "paymentPlanDescription": {
            "type": "string",
            "description": "Payment plan set description"
          },
          "paymentPlanRule": {
            "type": "string",
            "description": "apply rule to identify if partial (SPP) or\r\n\t\t\t\t\t\tfull plan (Normal) if value is 1 then\r\n\t\t\t\t\t\tSPP (smart payment plan) else is\r\n\t\t\t\t\t\tnormal"
          },
          "numberOfInstallments": {
            "type": "string",
            "description": "Number of installments for the payment plan"
          },
          "paymentPlanStatus": {
            "type": "string",
            "description": "Status of the payment plan. Supported values\r\n\t\t\t\t\t\tare:\r\n\r\n\t\t\t\t\t\tvalue:1 Description: Pending Association\r\n\t\t\t\t\t\tvalue:2 Description: Pending Initialization\r\n\t\t\t\t\t\tvalue:3 Description: Initialized\r\n\t\t\t\t\t\tvalue:4 Description: Cancelled\r\n\t\t\t\t\t\tvalue:5 Description: Completed\r\n\t\t\t\t\t\tvalue:6 Description: Deleted"
          },
          "rateBasis": {
            "type": "string",
            "description": "Basis of interest rate"
          },
          "interestRate": {
            "type": "number",
            "description": "Interest rate applied on the payment plan"
          },
          "itemId": {
            "type": "string",
            "description": "Reference to the credit transaction which was\r\n\t\t\t\t\t\tconverted to a payment plan"
          },
          "dateOflastInstallment": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "The date the last installment was generated. Not\r\n\t\t\t\t\t\tavailable if no installments are generated yet"
          },
          "paymentPlanSource": {
            "type": "string",
            "description": "Source code identifying the source of creation\r\n\t\t\t\t\t\tof the payment plan\r\n\r\n\t\t\t\t\t\tValue Description\r\n\r\n\t\t\t\t\t\t0 Default\r\n\t\t\t\t\t\t1 Online\r\n\t\t\t\t\t\t2 CCS\r\n\t\t\t\t\t\tFinancial\r\n\t\t\t\t\t\t3 TLOG authorization\r\n\t\t\t\t\t\t4 TLOG financial\r\n\t\t\t\t\t\t5 Input File\r\n\t\t\t\t\t\t6 Plan\r\n\t\t\t\t\t\tProgram\r\n\t\t\t\t\t\t7 Web-services authorization\r\n\t\t\t\t\t\t8 Web-services financial\r\n\t\t\t\t\t\t98\r\n\t\t\t\t\t\tAccount re-scheduling\r\n\t\t\t\t\t\t99 Account re-scheduling"
          },
          "user": {
            "type": "string",
            "description": "Id of the user that initiated the payment plan."
          },
          "creationDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "Date the payment plan was created"
          },
          "description": {
            "type": "string",
            "description": "Free form notes associated with the assignment,\r\n\t\t\t\t\t\tentered by the CORTEX user who created the plan."
          },
          "logId": {
            "type": "string",
            "description": "Cortex transaction log ID identifying the\r\n\t\t\t\t\t\tfinancial transaction that generated this payment plan. Only\r\n\t\t\t\t\t\tavailable in case the transaction is an actual financial\r\n\t\t\t\t\t\ttransaction (Purchase/Cash Withdrawal...)."
          },
          "acquirerId": {
            "type": "string",
            "description": "ID of the transaction acquirer"
          },
          "retreivalReferenceNumber": {
            "type": "string",
            "description": "Retrieval reference number identifying the\r\n\t\t\t\t\t\ttransaction\r\n\t\t\t\t\t\tfrom an acquirer that was converted to payment plan"
          },
          "transctionCode": {
            "type": "string",
            "description": "Cortex transaction code. Identifies the type of\r\n\t\t\t\t\t\ttransaction. Only valid in case the credit transaction is a\r\n\t\t\t\t\t\tfinancial one."
          },
          "billingAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InterestAmountType"
              },
              {
                "description": "Amount of the transaction in the billing\r\n\t\t\t\t\t\tcurrency\r\n\t\t\t\t\t\t(currency of the account) that was converted to payment\r\n\t\t\t\t\t\tplan"
              }
            ]
          },
          "planAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InterestAmountType"
              },
              {
                "description": "Actual amount part of the billing amount\r\n\t\t\t\t\t\tthat was\r\n\t\t\t\t\t\tconverted to payment plan."
              }
            ]
          },
          "nextInstallment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InterestAmountType"
              },
              {
                "description": "Next installment amount to be paid"
              }
            ]
          },
          "lastInstallmentAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InterestAmountType"
              },
              {
                "description": "Last installment amount to be paid"
              }
            ]
          },
          "installmentInterest": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InterestAmountType"
              },
              {
                "description": "Interest on a single installment"
              }
            ]
          },
          "lastInstallmentInterest": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InterestAmountType"
              },
              {
                "description": "Interest on the last installment amount"
              }
            ]
          },
          "remainingInstallments": {
            "type": "string",
            "description": "Remaining number of installment before the plan\r\n\t\t\t\t\t\tis completed"
          },
          "initializationDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "Date the payment plan was initialized. Only\r\n\t\t\t\t\t\tavailable\r\n\t\t\t\t\t\tin case the payment plan is in initialized status"
          },
          "localTransactionDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "Local date of the transaction that was\r\n\t\t\t\t\t\tconverted\r\n\t\t\t\t\t\tto payment plan"
          },
          "cardAcceptorLocation": {
            "type": "string",
            "description": "Card acceptor location of the transaction\r\n\t\t\t\t\t\tconverted into a payment plan"
          },
          "mcc": {
            "type": "string",
            "description": "Merchant category code of the transaction."
          },
          "transactionAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InterestAmountType"
              },
              {
                "description": "Original transaction amount that was converted\r\n\t\t\t\t\t\tinto a payment plan"
              }
            ]
          },
          "lastInstallmentDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "Date the last installment will be due"
          },
          "cancellationDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01])))|()",
            "type": "string",
            "description": "Date the installment was cancelled. Only\r\n\t\t\t\t\t\tavailable in case the plan is cancelled"
          },
          "installmentCalculationMethod": {
            "type": "string",
            "description": "Installment Charge Calculation Method\r\n\t\t\t\t\t\tSupported\r\n\t\t\t\t\t\tvalues Description\r\n\r\n\t\t\t\t\t\t1 Add on interest\r\n\t\t\t\t\t\t2 Fixed charge\r\n\t\t\t\t\t\t3 Payment Plan\r\n\t\t\t\t\t\tSchedule\r\n\t\t\t\t\t\t4 Percentage on full amount"
          },
          "fullPlanAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InterestAmountType"
              },
              {
                "description": "Full amount of the payment plan including the\r\n\t\t\t\t\t\tfees (including the already paid installments)"
              }
            ]
          },
          "fullInstallmentFees": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InterestAmountType"
              },
              {
                "description": "The full fees for the installments (including\r\n\t\t\t\t\t\tthe already paid ones)"
              }
            ]
          },
          "remainingPlanAmount": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InterestAmountType"
              },
              {
                "description": "Remaining amount to be paid. In case the plan is\r\n\t\t\t\t\t\tcanceled/deleted, this will have what the\r\n\t\t\t\t\t\tremaining amount was\r\n\t\t\t\t\t\tbefore the plan was\r\n\t\t\t\t\t\tcanceled/deleted. This amount also includes the\r\n\t\t\t\t\t\tremaining fees amount"
              }
            ]
          },
          "remainingPlanAmountNoFees": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InterestAmountType"
              },
              {
                "description": "Remaining amount to be paid excluding the fees.\r\n\t\t\t\t\t\tIn case the plan is canceled/deleted, this will\r\n\t\t\t\t\t\thave what the\r\n\t\t\t\t\t\tremaining amount was before the\r\n\t\t\t\t\t\tplan was canceled/deleted."
              }
            ]
          },
          "remainingInstallmentFees": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InterestAmountType"
              },
              {
                "description": "Remaining fees amount to be deducted from the\r\n\t\t\t\t\t\tcustomer. In case the plan is canceled/deleted,\r\n\t\t\t\t\t\tthis will have what\r\n\t\t\t\t\t\tthe remaining installments\r\n\t\t\t\t\t\tfees amount was before\r\n\t\t\t\t\t\tcanceling/deleting the\r\n\t\t\t\t\t\tplan"
              }
            ]
          },
          "reschedule": {
            "type": "boolean",
            "description": "Flag indicating if the plan is a rescheduling\r\n\t\t\t\t\t\tplan"
          },
          "balloonPayment": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MoneyOptional"
              },
              {
                "description": "Balloon payment"
              }
            ]
          },
          "tenorBreach": {
            "type": "boolean",
            "description": "Flag indicating if Tenor is breached (Single EMI\r\n\t\t\t\t\t\tbreached as per the\r\n\t\t\t\t\t\tmaximum eligible age)"
          },
          "paymentPlanSchedule": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_PaymentPlanScheduleType"
              },
              {
                "description": "Payment Plan Schedule"
              }
            ]
          },
          "paymentPlanGrouped": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_PaymentPlanGroupedType"
              },
              {
                "description": "Grouped installments by amount (in case of\r\n\t\t\t\t\t\toverride it will contain more than one amount)"
              }
            ]
          }
        },
        "description": ""
      },
      "tns_InterestAmountType": {
        "title": "tns_InterestAmountType",
        "type": "object",
        "properties": {
          "amount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              },
              {
                "description": "Amount for the money object"
              }
            ]
          },
          "currency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_currencyType"
              },
              {
                "description": "Currency of the amount"
              }
            ]
          }
        },
        "description": ""
      },
      "wsse_Security": {
        "title": "wsse_Security",
        "required": [
          "UsernameToken"
        ],
        "type": "object",
        "properties": {
          "UsernameToken": {
            "allOf": [
              {
                "$ref": "#/components/schemas/wsse_UsernameToken"
              }
            ]
          }
        },
        "description": ""
      },
      "header_ServiceHeader": {
        "title": "header_ServiceHeader",
        "required": [
          "loggerContext",
          "transactionCode",
          "retryTransaction",
          "tellerId",
          "terminalId",
          "workstationId",
          "override",
          "correction",
          "supervisor",
          "supervisorId",
          "overrideCode",
          "employeeId",
          "branchId",
          "functionId",
          "channelId",
          "bancsPwd",
          "languageCode"
        ],
        "type": "object",
        "properties": {
          "loggerContext": {
            "type": "string"
          },
          "transactionCode": {
            "type": "string"
          },
          "retryTransaction": {
            "type": "boolean"
          },
          "tellerId": {
            "type": "string"
          },
          "terminalId": {
            "type": "string"
          },
          "workstationId": {
            "type": "string"
          },
          "override": {
            "type": "boolean"
          },
          "correction": {
            "type": "string"
          },
          "supervisor": {
            "type": "string"
          },
          "supervisorId": {
            "type": "string"
          },
          "overrideCode": {
            "type": "string"
          },
          "employeeId": {
            "type": "string"
          },
          "branchId": {
            "type": "string"
          },
          "functionId": {
            "type": "string"
          },
          "channelId": {
            "type": "string"
          },
          "bancsPwd": {
            "type": "string"
          },
          "languageCode": {
            "type": "string"
          },
          "authenticationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/header_authenticationType"
              },
              {
                "description": "Can be: NONE, OTP, TOKEN"
              }
            ]
          },
          "IvrTransactionID": {
            "type": "string"
          }
        },
        "description": ""
      },
      "fault_FaultType": {
        "title": "fault_FaultType",
        "required": [
          "number",
          "description"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "retryAfter": {
            "type": "string"
          },
          "system": {
            "type": "string"
          },
          "nativeError": {
            "type": "string"
          },
          "nativeDescription": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_PostalAddress": {
        "title": "Q1_PostalAddress",
        "type": "object",
        "properties": {
          "addressLine1": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string"
          },
          "addressLine2": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string"
          },
          "addressLine3": {
            "maxLength": 70,
            "minLength": 0,
            "type": "string"
          },
          "city": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "region": {
            "maxLength": 35,
            "minLength": 0,
            "type": "string"
          },
          "postalCode": {
            "maxLength": 16,
            "minLength": 0,
            "type": "string"
          },
          "country": {
            "pattern": "([A-Z]{2,2})|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_Money": {
        "title": "Q1_Money",
        "required": [
          "isoCurrencyCode"
        ],
        "type": "object",
        "properties": {
          "isoCurrencyCode": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_MoneyOptional": {
        "title": "Q1_MoneyOptional",
        "required": [
          "isoCurrencyCode"
        ],
        "type": "object",
        "properties": {
          "isoCurrencyCode": {
            "pattern": "([A-Z]{3,3})|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_Cursor": {
        "title": "Q1_Cursor",
        "required": [
          "position",
          "noOfRows"
        ],
        "type": "object",
        "properties": {
          "position": {
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "noOfRows": {
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          }
        },
        "description": ""
      },
      "Q1_Biller": {
        "title": "Q1_Biller",
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "Q1_DocumentType": {
        "title": "Q1_DocumentType",
        "required": [
          "documentId",
          "documentSubId",
          "totalPages",
          "documentType",
          "archivedDate",
          "page"
        ],
        "type": "object",
        "properties": {
          "documentId": {
            "type": "string"
          },
          "documentSubId": {
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "documentType": {
            "type": "string"
          },
          "archivedDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "page": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Q1_PageType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "Q1_PageType": {
        "title": "Q1_PageType",
        "required": [
          "pageNo",
          "pageExt",
          "pageContent"
        ],
        "type": "object",
        "properties": {
          "pageNo": {
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "pageExt": {
            "type": "string"
          },
          "pageContent": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_BillCycle": {
        "title": "Q1_BillCycle",
        "enum": [
          "New",
          "XXX",
          "YYY"
        ],
        "type": "string",
        "description": "Valid Values : New, XXX, YYY"
      },
      "Q1_Flag": {
        "title": "Q1_Flag",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Valid Values : Y or N"
      },
      "Q1_OfferToTag": {
        "title": "Q1_OfferToTag",
        "enum": [
          "Yes",
          "No"
        ],
        "type": "string",
        "description": ""
      },
      "Q1_CustomerId": {
        "title": "Q1_CustomerId",
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_CustomerId2": {
        "title": "Q1_CustomerId2",
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_Parameter": {
        "title": "Q1_Parameter",
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_TransactionType": {
        "title": "Q1_TransactionType",
        "enum": [
          "BIANNUALCYCLE",
          "TODAY",
          "CYCLETODATE",
          "CTD"
        ],
        "type": "string",
        "description": "Valid values are BIANNUALCYCLE, TODAY,\n\t\t\t\tCYCLETODATE, CTD etc"
      },
      "Q1_BeneficiaryId": {
        "title": "Q1_BeneficiaryId",
        "required": [
          "id",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 0.0,
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_DeviceDetails": {
        "title": "Q1_DeviceDetails",
        "required": [
          "machineNonce",
          "sequenceNonce",
          "machineLabel",
          "machineProperties",
          "createDate",
          "lastUsedDate",
          "expiryDate"
        ],
        "type": "object",
        "properties": {
          "machineNonce": {
            "minLength": 1,
            "type": "string"
          },
          "sequenceNonce": {
            "minLength": 1,
            "type": "string"
          },
          "machineLabel": {
            "type": "string"
          },
          "machineProperties": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MachineProperties"
              }
            ]
          },
          "createDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "lastUsedDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "expiryDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_AuthenticationDeviceDetails": {
        "title": "Q1_AuthenticationDeviceDetails",
        "required": [
          "machineNonce",
          "sequenceNonce",
          "machineLabel",
          "machineProperties"
        ],
        "type": "object",
        "properties": {
          "machineNonce": {
            "minLength": 1,
            "type": "string"
          },
          "sequenceNonce": {
            "minLength": 1,
            "type": "string"
          },
          "machineLabel": {
            "type": "string"
          },
          "machineProperties": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MachineProperties"
              }
            ]
          }
        },
        "description": ""
      },
      "Q1_MachineProperties": {
        "title": "Q1_MachineProperties",
        "required": [
          "applicationData"
        ],
        "type": "object",
        "properties": {
          "applicationData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Q1_ApplicationData"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "Q1_ApplicationData": {
        "title": "Q1_ApplicationData",
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "value": {
            "minLength": 1,
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_AuthenticationInfo": {
        "title": "Q1_AuthenticationInfo",
        "required": [
          "methods"
        ],
        "type": "object",
        "properties": {
          "methods": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Methods"
              }
            ]
          }
        },
        "description": ""
      },
      "Q1_Methods": {
        "title": "Q1_Methods",
        "required": [
          "hardToken",
          "softToken",
          "siteImage",
          "trustedPC",
          "callerId",
          "oneTimePass"
        ],
        "type": "object",
        "properties": {
          "hardToken": {
            "type": "boolean"
          },
          "softToken": {
            "type": "boolean"
          },
          "siteImage": {
            "type": "boolean"
          },
          "trustedPC": {
            "type": "boolean"
          },
          "callerId": {
            "type": "boolean"
          },
          "oneTimePass": {
            "type": "boolean"
          }
        },
        "description": ""
      },
      "Q1_TokenDetails": {
        "title": "Q1_TokenDetails",
        "required": [
          "userId",
          "userName",
          "userGroup",
          "vendorId",
          "serialNumber",
          "tokenType",
          "signatureSupported",
          "loadDate",
          "lastUsedDate"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "minLength": 1,
            "type": "string"
          },
          "userName": {
            "minLength": 1,
            "type": "string"
          },
          "userGroup": {
            "minLength": 1,
            "type": "string"
          },
          "vendorId": {
            "type": "string"
          },
          "serialNumber": {
            "type": "string"
          },
          "tokenType": {
            "type": "string"
          },
          "signatureSupported": {
            "type": "boolean"
          },
          "loadDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          },
          "lastUsedDate": {
            "pattern": "((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))",
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_AccountDetails": {
        "title": "Q1_AccountDetails",
        "required": [
          "accountId",
          "balance",
          "overdraft",
          "balanceSAR",
          "availableSAR",
          "averageLastSixMonths",
          "isoCurrencyCode",
          "division",
          "statusCode",
          "accountType",
          "glClassificationCode"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "maxLength": 24,
            "minLength": 14,
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})",
            "type": "string"
          },
          "balance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "overdraft": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "balanceSAR": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "availableSAR": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "averageLastSixMonths": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Money"
              }
            ]
          },
          "isoCurrencyCode": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          },
          "division": {
            "type": "string"
          },
          "statusCode": {
            "maxLength": 3,
            "type": "string"
          },
          "accountType": {
            "maxLength": 4,
            "type": "string"
          },
          "glClassificationCode": {
            "maxLength": 40,
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_Gender": {
        "title": "Q1_Gender",
        "enum": [
          "M",
          "F"
        ],
        "type": "string",
        "description": "Valid values are : M , F etc"
      },
      "Q1_trueOrFalseType": {
        "title": "Q1_trueOrFalseType",
        "enum": [
          "true",
          "false",
          "True",
          "False"
        ],
        "type": "string",
        "description": "Valid values are : true, false, True, False"
      },
      "Q1_trueOrFalseTypeOptional": {
        "title": "Q1_trueOrFalseTypeOptional",
        "enum": [
          "true",
          "false",
          "True",
          "False"
        ],
        "type": "string",
        "description": "Optional.\n\t\t\t\tValid values are : true, false, True,\n\t\t\t\tFalse etc"
      },
      "Q1_YorNType": {
        "title": "Q1_YorNType",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Valid values are : Y, N"
      },
      "Q1_YorNTypeOptional": {
        "title": "Q1_YorNTypeOptional",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "description": "Optional.\n\t\t\t\tValid values are : Y, N"
      },
      "Q1_contactlessIndicatorTypeOptional": {
        "title": "Q1_contactlessIndicatorTypeOptional",
        "enum": [
          "Y",
          "N",
          "V"
        ],
        "type": "string",
        "description": "Optional.\n\t\t\t\tValid values are : Y, N, V"
      },
      "Q1_CustomerChannelType": {
        "title": "Q1_CustomerChannelType",
        "enum": [
          "BOTH",
          "MOBILE",
          "AOL"
        ],
        "type": "string",
        "description": ""
      },
      "Q1_ErrorCategoryType": {
        "title": "Q1_ErrorCategoryType",
        "enum": [
          "BUSINESS",
          "SYSTEM"
        ],
        "type": "string",
        "description": ""
      },
      "Q1_CommonServiceFaultType": {
        "title": "Q1_CommonServiceFaultType",
        "required": [
          "category",
          "code",
          "message",
          "detail"
        ],
        "type": "object",
        "properties": {
          "category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_ErrorCategoryType"
              }
            ]
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_ServicesStatusType": {
        "title": "Q1_ServicesStatusType",
        "enum": [
          "ACTIVE",
          "DISABLE_USER",
          "DISABLE_ADMIN",
          "DELETED"
        ],
        "type": "string",
        "description": ""
      },
      "Q1_ServiceLevelType": {
        "title": "Q1_ServiceLevelType",
        "enum": [
          "INQUIRY",
          "FULL"
        ],
        "type": "string",
        "description": ""
      },
      "Q1_CustomerStatusType": {
        "title": "Q1_CustomerStatusType",
        "required": [
          "userId",
          "aol",
          "mobile",
          "emergencyCash"
        ],
        "type": "object",
        "properties": {
          "userId": {
            "type": "string"
          },
          "aol": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_AolStatusType"
              }
            ]
          },
          "mobile": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_MobileStatusType"
              }
            ]
          },
          "emergencyCash": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_EmergencyCashStatus"
              }
            ]
          }
        },
        "description": ""
      },
      "Q1_AolStatusType": {
        "title": "Q1_AolStatusType",
        "required": [
          "createdBy",
          "createdDate",
          "lastLoginDate",
          "serviceLevel",
          "serviceStatus",
          "passwordRevoked"
        ],
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].[0-9])|()|(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9])",
            "type": "string"
          },
          "lastLoginDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].[0-9])|()|(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9])",
            "type": "string"
          },
          "serviceLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_ServiceLevelType"
              }
            ]
          },
          "serviceStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_ServicesStatusType"
              }
            ]
          },
          "passwordRevoked": {
            "type": "boolean"
          }
        },
        "description": ""
      },
      "Q1_MobileStatusType": {
        "title": "Q1_MobileStatusType",
        "required": [
          "registeredBy",
          "registeredDate",
          "lastLoginDate",
          "serviceLevel",
          "serviceStatus"
        ],
        "type": "object",
        "properties": {
          "registeredBy": {
            "type": "string"
          },
          "registeredDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].[0-9])|()|(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9])",
            "type": "string"
          },
          "lastLoginDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].[0-9])|()|(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9])",
            "type": "string"
          },
          "serviceLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_ServiceLevelType"
              }
            ]
          },
          "serviceStatus": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_ServicesStatusType"
              }
            ]
          }
        },
        "description": ""
      },
      "Q1_EmergencyCashStatus": {
        "title": "Q1_EmergencyCashStatus",
        "required": [
          "registrationDate",
          "status"
        ],
        "type": "object",
        "properties": {
          "registrationDate": {
            "pattern": "(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9].[0-9])|()|(((000[1-9])|(00[1-9][0-9])|(0[1-9][0-9]{2})|([1-9][0-9]{3}))-((0[1-9])|(1[012]))-((0[1-9])|([12][0-9])|(3[01]))T([0-9]|0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9])",
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_TransactionInfo": {
        "title": "Q1_TransactionInfo",
        "required": [
          "transactionType"
        ],
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string"
          },
          "relatedTransactionId": {
            "type": "string"
          },
          "transactionType": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_ClientInfo": {
        "title": "Q1_ClientInfo",
        "required": [
          "clientId"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_SecurityInfo": {
        "title": "Q1_SecurityInfo",
        "required": [
          "username",
          "password"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_CreationInfo": {
        "title": "Q1_CreationInfo",
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          },
          "branch": {
            "maxLength": 5,
            "type": "string"
          },
          "institution": {
            "maxLength": 3,
            "type": "string"
          },
          "teller": {
            "maxLength": 8,
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_RequestHeader": {
        "title": "Q1_RequestHeader",
        "type": "object",
        "properties": {
          "transactionInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_TransactionInfo"
              }
            ]
          },
          "clientInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_ClientInfo"
              }
            ]
          },
          "securityInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_SecurityInfo"
              }
            ]
          },
          "creationInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_CreationInfo"
              }
            ]
          }
        },
        "description": ""
      },
      "Q1_ErrorInfo": {
        "title": "Q1_ErrorInfo",
        "required": [
          "level"
        ],
        "type": "object",
        "properties": {
          "level": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_level"
              }
            ]
          },
          "code": {
            "type": "string"
          },
          "context": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Q1_ReplyHeader": {
        "title": "Q1_ReplyHeader",
        "type": "object",
        "properties": {
          "transactionInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_TransactionInfo"
              }
            ]
          },
          "clientInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_ClientInfo"
              }
            ]
          },
          "errorInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_ErrorInfo"
              }
            ]
          }
        },
        "description": ""
      },
      "CancelPaymentRequest": {
        "title": "CancelPaymentRequest",
        "required": [
          "CancelPaymentRequest"
        ],
        "type": "object",
        "properties": {
          "CancelPaymentRequest": {
            "$ref": "#/components/schemas/tns_CancelPaymentRequest"
          }
        }
      },
      "CancelPaymentResponse": {
        "title": "CancelPaymentResponse",
        "required": [
          "CancelPaymentResponse"
        ],
        "type": "object",
        "properties": {
          "CancelPaymentResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CancelPaymentResponse"
              }
            ]
          }
        }
      },
      "CardActivateRequest": {
        "title": "CardActivateRequest",
        "required": [
          "CardActivateRequest"
        ],
        "type": "object",
        "properties": {
          "CardActivateRequest": {
            "$ref": "#/components/schemas/CardActivateRequestType"
          }
        }
      },
      "CardActivateResponse": {
        "title": "CardActivateResponse",
        "required": [
          "CardActivateResponse"
        ],
        "type": "object",
        "properties": {
          "CardActivateResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CardActivateResponseType"
              }
            ]
          }
        }
      },
      "CardBlockRequest": {
        "title": "CardBlockRequest",
        "required": [
          "CardBlockRequest"
        ],
        "type": "object",
        "properties": {
          "CardBlockRequest": {
            "$ref": "#/components/schemas/CardBlockRequestType"
          }
        }
      },
      "CardBlockResponse": {
        "title": "CardBlockResponse",
        "required": [
          "CardBlockResponse"
        ],
        "type": "object",
        "properties": {
          "CardBlockResponse": {
            "$ref": "#/components/schemas/CardBlockResponseType"
          }
        }
      },
      "CardFeeRequest": {
        "title": "CardFeeRequest",
        "required": [
          "CardFeeRequest"
        ],
        "type": "object",
        "properties": {
          "CardFeeRequest": {
            "$ref": "#/components/schemas/tns_CardFeeRequest"
          }
        }
      },
      "CardFeeResponse": {
        "title": "CardFeeResponse",
        "required": [
          "CardFeeResponse"
        ],
        "type": "object",
        "properties": {
          "CardFeeResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CardFeeResponse"
              }
            ]
          }
        }
      },
      "CashAdvanceHistoryRequest": {
        "title": "CashAdvanceHistoryRequest",
        "required": [
          "CashAdvanceHistoryRequest"
        ],
        "type": "object",
        "properties": {
          "CashAdvanceHistoryRequest": {
            "$ref": "#/components/schemas/tns_CashAdvanceHistoryRequest"
          }
        }
      },
      "CashAdvanceHistoryResponse": {
        "title": "CashAdvanceHistoryResponse",
        "required": [
          "CashAdvanceHistoryResponse"
        ],
        "type": "object",
        "properties": {
          "CashAdvanceHistoryResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CashAdvanceHistoryResponse"
              }
            ]
          }
        }
      },
      "CashBackEarnedRequest": {
        "title": "CashBackEarnedRequest",
        "required": [
          "CashBackEarnedRequest"
        ],
        "type": "object",
        "properties": {
          "CashBackEarnedRequest": {
            "$ref": "#/components/schemas/tns_CashBackEarnedRequest"
          }
        }
      },
      "CashBackEarnedResponse": {
        "title": "CashBackEarnedResponse",
        "required": [
          "CashBackEarnedResponse"
        ],
        "type": "object",
        "properties": {
          "CashBackEarnedResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CashBackEarnedResponse"
              }
            ]
          }
        }
      },
      "CashBackTransactionsRequest": {
        "title": "CashBackTransactionsRequest",
        "required": [
          "CashBackTransactionsRequest"
        ],
        "type": "object",
        "properties": {
          "CashBackTransactionsRequest": {
            "$ref": "#/components/schemas/tns_CashBackTransactionsRequest"
          }
        }
      },
      "CashBackTransactionsResponse": {
        "title": "CashBackTransactionsResponse",
        "required": [
          "CashBackTransactionsResponse"
        ],
        "type": "object",
        "properties": {
          "CashBackTransactionsResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CashBackTransactionsResponse"
              }
            ]
          }
        }
      },
      "ChangeCreditCardEmbossedNameRequest": {
        "title": "ChangeCreditCardEmbossedNameRequest",
        "required": [
          "ChangeCreditCardEmbossedNameRequest"
        ],
        "type": "object",
        "properties": {
          "ChangeCreditCardEmbossedNameRequest": {
            "$ref": "#/components/schemas/tns_ChangeCreditCardEmbossedNameRequest"
          }
        }
      },
      "ChangeCreditCardEmbossedNameResponse": {
        "title": "ChangeCreditCardEmbossedNameResponse",
        "required": [
          "ChangeCreditCardEmbossedNameResponse"
        ],
        "type": "object",
        "properties": {
          "ChangeCreditCardEmbossedNameResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ChangeCreditCardEmbossedNameResponse"
              }
            ]
          }
        }
      },
      "ChangeCreditCardPaymentMethodRequest": {
        "title": "ChangeCreditCardPaymentMethodRequest",
        "required": [
          "ChangeCreditCardPaymentMethodRequest"
        ],
        "type": "object",
        "properties": {
          "ChangeCreditCardPaymentMethodRequest": {
            "$ref": "#/components/schemas/tns_ChangeCreditCardPaymentMethodRequest"
          }
        }
      },
      "ChangeCreditCardPaymentMethodResponse": {
        "title": "ChangeCreditCardPaymentMethodResponse",
        "required": [
          "ChangeCreditCardPaymentMethodResponse"
        ],
        "type": "object",
        "properties": {
          "ChangeCreditCardPaymentMethodResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ChangeCreditCardPaymentMethodResponse"
              }
            ]
          }
        }
      },
      "CheckCreditCardAnnualFeeRefundStatusRequest": {
        "title": "CheckCreditCardAnnualFeeRefundStatusRequest",
        "required": [
          "CheckCreditCardAnnualFeeRefundStatusRequest"
        ],
        "type": "object",
        "properties": {
          "CheckCreditCardAnnualFeeRefundStatusRequest": {
            "$ref": "#/components/schemas/tns_CheckCreditCardAnnualFeeRefundStatusRequest"
          }
        }
      },
      "CheckCreditCardAnnualFeeRefundStatusResponse": {
        "title": "CheckCreditCardAnnualFeeRefundStatusResponse",
        "required": [
          "CheckCreditCardAnnualFeeRefundStatusResponse"
        ],
        "type": "object",
        "properties": {
          "CheckCreditCardAnnualFeeRefundStatusResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CheckCreditCardAnnualFeeRefundStatusResponse"
              }
            ]
          }
        }
      },
      "ConvertVirtualCardToPlasticRequest": {
        "title": "ConvertVirtualCardToPlasticRequest",
        "required": [
          "ConvertVirtualCardToPlasticRequest"
        ],
        "type": "object",
        "properties": {
          "ConvertVirtualCardToPlasticRequest": {
            "$ref": "#/components/schemas/tns_ConvertVirtualCardToPlasticRequest"
          }
        }
      },
      "ConvertVirtualCardToPlasticResponse": {
        "title": "ConvertVirtualCardToPlasticResponse",
        "required": [
          "ConvertVirtualCardToPlasticResponse"
        ],
        "type": "object",
        "properties": {
          "ConvertVirtualCardToPlasticResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ConvertVirtualCardToPlasticResponse"
              }
            ]
          }
        }
      },
      "CreateCreditCardApplicationRequest": {
        "title": "CreateCreditCardApplicationRequest",
        "required": [
          "CreateCreditCardApplicationRequest"
        ],
        "type": "object",
        "properties": {
          "CreateCreditCardApplicationRequest": {
            "$ref": "#/components/schemas/CreateCreditCardApplicationRequestType"
          }
        }
      },
      "CreateCreditCardApplicationResponse": {
        "title": "CreateCreditCardApplicationResponse",
        "required": [
          "CreateCreditCardApplicationResponse"
        ],
        "type": "object",
        "properties": {
          "CreateCreditCardApplicationResponse": {
            "$ref": "#/components/schemas/CreateCreditCardApplicationResponseType"
          }
        }
      },
      "CreateCreditCardPINRequest": {
        "title": "CreateCreditCardPINRequest",
        "required": [
          "CreateCreditCardPINRequest"
        ],
        "type": "object",
        "properties": {
          "CreateCreditCardPINRequest": {
            "$ref": "#/components/schemas/tns_CreateCreditCardPINType"
          }
        }
      },
      "CreateCreditCardPINResponse": {
        "title": "CreateCreditCardPINResponse",
        "required": [
          "CreateCreditCardPINResponse"
        ],
        "type": "object",
        "properties": {
          "CreateCreditCardPINResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreateCreditCardPINResponseType"
              }
            ]
          }
        }
      },
      "CreateEcommerceMerchantRequest": {
        "title": "CreateEcommerceMerchantRequest",
        "required": [
          "CreateEcommerceMerchantRequest"
        ],
        "type": "object",
        "properties": {
          "CreateEcommerceMerchantRequest": {
            "$ref": "#/components/schemas/tns_CreateEcommerceMerchantRequest"
          }
        }
      },
      "CreateEcommerceMerchantResponse": {
        "title": "CreateEcommerceMerchantResponse",
        "required": [
          "CreateEcommerceMerchantResponse"
        ],
        "type": "object",
        "properties": {
          "CreateEcommerceMerchantResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreateEcommerceMerchantResponse"
              }
            ]
          }
        }
      },
      "CreditAccountCashLimitUpdationRequest": {
        "title": "CreditAccountCashLimitUpdationRequest",
        "required": [
          "CreditAccountCashLimitUpdationRequest"
        ],
        "type": "object",
        "properties": {
          "CreditAccountCashLimitUpdationRequest": {
            "$ref": "#/components/schemas/tns_CreditAccountCashLimitUpdationRequest"
          }
        }
      },
      "CreditAccountCashLimitUpdationResponse": {
        "title": "CreditAccountCashLimitUpdationResponse",
        "required": [
          "CreditAccountCashLimitUpdationResponse"
        ],
        "type": "object",
        "properties": {
          "CreditAccountCashLimitUpdationResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditAccountCashLimitUpdationResponse"
              }
            ]
          }
        }
      },
      "CreditAdjustmentRequest": {
        "title": "CreditAdjustmentRequest",
        "required": [
          "CreditAdjustmentRequest"
        ],
        "type": "object",
        "properties": {
          "CreditAdjustmentRequest": {
            "$ref": "#/components/schemas/tns_CreditAdjustmentRequest"
          }
        }
      },
      "CreditAdjustmentResponse": {
        "title": "CreditAdjustmentResponse",
        "required": [
          "CreditAdjustmentResponse"
        ],
        "type": "object",
        "properties": {
          "CreditAdjustmentResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditAdjustmentResponse"
              }
            ]
          }
        }
      },
      "CreditCardAccountClosureInquiryRequest": {
        "title": "CreditCardAccountClosureInquiryRequest",
        "required": [
          "CreditCardAccountClosureInquiryRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardAccountClosureInquiryRequest": {
            "$ref": "#/components/schemas/tns_CreditCardAccountClosureInquiryRequestType"
          }
        }
      },
      "CreditCardAccountClosureInquiryResponse": {
        "title": "CreditCardAccountClosureInquiryResponse",
        "required": [
          "CreditCardAccountClosureInquiryResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardAccountClosureInquiryResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardAccountClosureInquiryResponse"
              }
            ]
          }
        }
      },
      "CreditCardAccountClosureRequest": {
        "title": "CreditCardAccountClosureRequest",
        "required": [
          "CreditCardAccountClosureRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardAccountClosureRequest": {
            "$ref": "#/components/schemas/tns_CreditCardAccountClosureType"
          }
        }
      },
      "CreditCardAccountClosureResponse": {
        "title": "CreditCardAccountClosureResponse",
        "required": [
          "CreditCardAccountClosureResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardAccountClosureResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardAccountClosureResponse"
              }
            ]
          }
        }
      },
      "CreditCardAddressRequest": {
        "title": "CreditCardAddressRequest",
        "required": [
          "CreditCardAddressRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardAddressRequest": {
            "$ref": "#/components/schemas/tns_CreditCardAddressRequest"
          }
        }
      },
      "CreditCardAddressResponse": {
        "title": "CreditCardAddressResponse",
        "required": [
          "CreditCardAddressResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardAddressResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardAddressResponse"
              }
            ]
          }
        }
      },
      "CreditCardApplicationApproveDeclineRequest": {
        "title": "CreditCardApplicationApproveDeclineRequest",
        "required": [
          "CreditCardApplicationApproveDeclineRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardApplicationApproveDeclineRequest": {
            "$ref": "#/components/schemas/CreditCardApplicationApproveDeclineRequestType"
          }
        }
      },
      "CreditCardApplicationApproveDeclineResponse": {
        "title": "CreditCardApplicationApproveDeclineResponse",
        "required": [
          "CreditCardApplicationApproveDeclineResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardApplicationApproveDeclineResponse": {
            "$ref": "#/components/schemas/CreditCardApplicationApproveDeclineResponseType"
          }
        }
      },
      "CreditCardApplicationInquiryDetailRequest": {
        "title": "CreditCardApplicationInquiryDetailRequest",
        "required": [
          "CreditCardApplicationInquiryDetailRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardApplicationInquiryDetailRequest": {
            "$ref": "#/components/schemas/CreditCardApplicationInquiryDetailRequestType"
          }
        }
      },
      "CreditCardApplicationInquiryDetailResponse": {
        "title": "CreditCardApplicationInquiryDetailResponse",
        "required": [
          "CreditCardApplicationInquiryDetailResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardApplicationInquiryDetailResponse": {
            "$ref": "#/components/schemas/CreditCardApplicationInquiryDetailResponseType"
          }
        }
      },
      "CreditCardApplicationInquiryShortRequest": {
        "title": "CreditCardApplicationInquiryShortRequest",
        "required": [
          "CreditCardApplicationInquiryShortRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardApplicationInquiryShortRequest": {
            "$ref": "#/components/schemas/CreditCardApplicationInquiryShortRequestType"
          }
        }
      },
      "CreditCardApplicationInquiryShortResponse": {
        "title": "CreditCardApplicationInquiryShortResponse",
        "required": [
          "CreditCardApplicationInquiryShortResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardApplicationInquiryShortResponse": {
            "$ref": "#/components/schemas/CreditCardApplicationInquiryShortResponseType"
          }
        }
      },
      "CreditCardApplicationSearchRequest": {
        "title": "CreditCardApplicationSearchRequest",
        "required": [
          "CreditCardApplicationSearchRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardApplicationSearchRequest": {
            "$ref": "#/components/schemas/CreditCardApplicationSearchRequestType"
          }
        }
      },
      "CreditCardApplicationSearchResponse": {
        "title": "CreditCardApplicationSearchResponse",
        "required": [
          "CreditCardApplicationSearchResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardApplicationSearchResponse": {
            "$ref": "#/components/schemas/CreditCardApplicationSearchResponseType"
          }
        }
      },
      "CreditCardApplicationUpdateRequest": {
        "title": "CreditCardApplicationUpdateRequest",
        "required": [
          "CreditCardApplicationUpdateRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardApplicationUpdateRequest": {
            "$ref": "#/components/schemas/tns_CreditCardApplicationUpdateRequest"
          }
        }
      },
      "CreditCardApplicationUpdateResponse": {
        "title": "CreditCardApplicationUpdateResponse",
        "required": [
          "CreditCardApplicationUpdateResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardApplicationUpdateResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardApplicationUpdateResponse"
              }
            ]
          }
        }
      },
      "CreditCardDeliveryMethodRequest": {
        "title": "CreditCardDeliveryMethodRequest",
        "required": [
          "CreditCardDeliveryMethodRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardDeliveryMethodRequest": {
            "$ref": "#/components/schemas/tns_CreditCardDeliveryMethodRequest"
          }
        }
      },
      "CreditCardDeliveryMethodResponse": {
        "title": "CreditCardDeliveryMethodResponse",
        "required": [
          "CreditCardDeliveryMethodResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardDeliveryMethodResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardDeliveryMethodResponse"
              }
            ]
          }
        }
      },
      "CreditCardDetailsRequest": {
        "title": "CreditCardDetailsRequest",
        "required": [
          "CreditCardDetailsRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardDetailsRequest": {
            "$ref": "#/components/schemas/CreditCardDetailsRequestType"
          }
        }
      },
      "CreditCardDetailsResponse": {
        "title": "CreditCardDetailsResponse",
        "required": [
          "CreditCardDetailsResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardDetailsResponse": {
            "$ref": "#/components/schemas/CreditCardDetailsResponseType"
          }
        }
      },
      "CreditCardIssueRequest": {
        "title": "CreditCardIssueRequest",
        "required": [
          "CreditCardIssueRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardIssueRequest": {
            "$ref": "#/components/schemas/tns_CreditCardIssueRequestType"
          }
        }
      },
      "CreditCardIssueResponse": {
        "title": "CreditCardIssueResponse",
        "required": [
          "CreditCardIssueResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardIssueResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardIssueResponse"
              }
            ]
          }
        }
      },
      "CreditCardLimitUpdateCheckRequest": {
        "title": "CreditCardLimitUpdateCheckRequest",
        "required": [
          "CreditCardLimitUpdateCheckRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardLimitUpdateCheckRequest": {
            "$ref": "#/components/schemas/tns_CreditCardLimitUpdateCheckRequest"
          }
        }
      },
      "CreditCardLimitUpdateCheckResponse": {
        "title": "CreditCardLimitUpdateCheckResponse",
        "required": [
          "CreditCardLimitUpdateCheckResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardLimitUpdateCheckResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardLimitUpdateCheckResponse"
              }
            ]
          }
        }
      },
      "CreditCardLinkAccountRequest": {
        "title": "CreditCardLinkAccountRequest",
        "required": [
          "CreditCardLinkAccountRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardLinkAccountRequest": {
            "$ref": "#/components/schemas/tns_CreditCardLinkAccountRequest"
          }
        }
      },
      "CreditCardLinkAccountResponse": {
        "title": "CreditCardLinkAccountResponse",
        "required": [
          "CreditCardLinkAccountResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardLinkAccountResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardLinkAccountResponse"
              }
            ]
          }
        }
      },
      "CreditCardListByIdRequest": {
        "title": "CreditCardListByIdRequest",
        "required": [
          "CreditCardListByIdRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardListByIdRequest": {
            "$ref": "#/components/schemas/tns_CreditCardListByIdRequest"
          }
        }
      },
      "CreditCardListByIdResponse": {
        "title": "CreditCardListByIdResponse",
        "required": [
          "CreditCardListByIdResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardListByIdResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardListByIdResponse"
              }
            ]
          }
        }
      },
      "CreditCardLogoInquiryRequest": {
        "title": "CreditCardLogoInquiryRequest",
        "required": [
          "CreditCardLogoInquiryRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardLogoInquiryRequest": {
            "$ref": "#/components/schemas/CreditCardLogoInquiryRequestType"
          }
        }
      },
      "CreditCardLogoInquiryResponse": {
        "title": "CreditCardLogoInquiryResponse",
        "required": [
          "CreditCardLogoInquiryResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardLogoInquiryResponse": {
            "$ref": "#/components/schemas/CreditCardLogoInquiryResponseType"
          }
        }
      },
      "CreditCardNewPaymentPlanRequest": {
        "title": "CreditCardNewPaymentPlanRequest",
        "required": [
          "CreditCardNewPaymentPlanRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardNewPaymentPlanRequest": {
            "$ref": "#/components/schemas/tns_CreditCardNewPaymentPlanRequest"
          }
        }
      },
      "CreditCardNewPaymentPlanResponse": {
        "title": "CreditCardNewPaymentPlanResponse",
        "required": [
          "CreditCardNewPaymentPlanResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardNewPaymentPlanResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardNewPaymentPlanResponse"
              }
            ]
          }
        }
      },
      "CreditCardNumberGenerationRequest": {
        "title": "CreditCardNumberGenerationRequest",
        "required": [
          "CreditCardNumberGenerationRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardNumberGenerationRequest": {
            "$ref": "#/components/schemas/tns_CreditCardNumberGenerationRequest"
          }
        }
      },
      "CreditCardNumberGenerationResponse": {
        "title": "CreditCardNumberGenerationResponse",
        "required": [
          "CreditCardNumberGenerationResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardNumberGenerationResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardNumberGenerationResponse"
              }
            ]
          }
        }
      },
      "CreditCardOTPSMSRequest": {
        "title": "CreditCardOTPSMSRequest",
        "required": [
          "CreditCardOTPSMSRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardOTPSMSRequest": {
            "$ref": "#/components/schemas/tns_CreditCardOTPSMSRequest"
          }
        }
      },
      "CreditCardOTPSMSResponse": {
        "title": "CreditCardOTPSMSResponse",
        "required": [
          "CreditCardOTPSMSResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardOTPSMSResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardOTPSMSResponse"
              }
            ]
          }
        }
      },
      "CreditCardPayMethodRequest": {
        "title": "CreditCardPayMethodRequest",
        "required": [
          "CreditCardPayMethodRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardPayMethodRequest": {
            "$ref": "#/components/schemas/tns_CreditCardPayMethodRequest"
          }
        }
      },
      "CreditCardPayMethodResponse": {
        "title": "CreditCardPayMethodResponse",
        "required": [
          "CreditCardPayMethodResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardPayMethodResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardPayMethodResponse1"
              }
            ]
          }
        }
      },
      "CreditCardPendingTransactionsRequest": {
        "title": "CreditCardPendingTransactionsRequest",
        "required": [
          "CreditCardPendingTransactionsRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardPendingTransactionsRequest": {
            "$ref": "#/components/schemas/tns_CreditCardPendingTransactionsRequest"
          }
        }
      },
      "CreditCardPendingTransactionsResponse": {
        "title": "CreditCardPendingTransactionsResponse",
        "required": [
          "CreditCardPendingTransactionsResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardPendingTransactionsResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardPendingTransactionsResponse"
              }
            ]
          }
        }
      },
      "CreditCardPINAuthenticationRequest": {
        "title": "CreditCardPINAuthenticationRequest",
        "required": [
          "CreditCardPINAuthenticationRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardPINAuthenticationRequest": {
            "$ref": "#/components/schemas/tns_CreditCardPINAuthenticationRequest"
          }
        }
      },
      "CreditCardPINAuthenticationResponse": {
        "title": "CreditCardPINAuthenticationResponse",
        "required": [
          "CreditCardPINAuthenticationResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardPINAuthenticationResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardPINAuthenticationResponse"
              }
            ]
          }
        }
      },
      "CreditCardPINChangeRequest": {
        "title": "CreditCardPINChangeRequest",
        "required": [
          "CreditCardPINChangeRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardPINChangeRequest": {
            "$ref": "#/components/schemas/tns_CreditCardPINChangeRequest"
          }
        }
      },
      "CreditCardPINChangeResponse": {
        "title": "CreditCardPINChangeResponse",
        "required": [
          "CreditCardPINChangeResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardPINChangeResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardPINChangeResponse"
              }
            ]
          }
        }
      },
      "CreditCardPreIssueRequest": {
        "title": "CreditCardPreIssueRequest",
        "required": [
          "CreditCardPreIssueRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardPreIssueRequest": {
            "$ref": "#/components/schemas/tns_CreditCardPreIssueType"
          }
        }
      },
      "CreditCardPreIssueResponse": {
        "title": "CreditCardPreIssueResponse",
        "required": [
          "CreditCardPreIssueResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardPreIssueResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardPreIssueResponse"
              }
            ]
          }
        }
      },
      "CreditCardPrepaidApplicationCreateRequest": {
        "title": "CreditCardPrepaidApplicationCreateRequest",
        "required": [
          "CreditCardPrepaidApplicationCreateRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardPrepaidApplicationCreateRequest": {
            "$ref": "#/components/schemas/tns_CreditCardPrepaidApplicationCreateRequest"
          }
        }
      },
      "CreditCardPrepaidApplicationCreateResponse": {
        "title": "CreditCardPrepaidApplicationCreateResponse",
        "required": [
          "CreditCardPrepaidApplicationCreateResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardPrepaidApplicationCreateResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardPrepaidApplicationCreateResponse"
              }
            ]
          }
        }
      },
      "CreditCardPrepaidApplicationInquiryDetailRequest": {
        "title": "CreditCardPrepaidApplicationInquiryDetailRequest",
        "required": [
          "CreditCardPrepaidApplicationInquiryDetailRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardPrepaidApplicationInquiryDetailRequest": {
            "$ref": "#/components/schemas/tns_CreditCardPrepaidApplicationInquiryDetailRequest"
          }
        }
      },
      "CreditCardPrepaidApplicationInquiryDetailResponse": {
        "title": "CreditCardPrepaidApplicationInquiryDetailResponse",
        "required": [
          "CreditCardPrepaidApplicationInquiryDetailResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardPrepaidApplicationInquiryDetailResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardPrepaidApplicationInquiryDetailResponse"
              }
            ]
          }
        }
      },
      "CreditCardPrepaidApplicationUpdateRequest": {
        "title": "CreditCardPrepaidApplicationUpdateRequest",
        "required": [
          "CreditCardPrepaidApplicationUpdateRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardPrepaidApplicationUpdateRequest": {
            "$ref": "#/components/schemas/tns_CreditCardPrepaidApplicationUpdateRequest"
          }
        }
      },
      "CreditCardPrepaidApplicationUpdateResponse": {
        "title": "CreditCardPrepaidApplicationUpdateResponse",
        "required": [
          "CreditCardPrepaidApplicationUpdateResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardPrepaidApplicationUpdateResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardPrepaidApplicationUpdateResponse"
              }
            ]
          }
        }
      },
      "CreditCardRefNumGenerationRequest": {
        "title": "CreditCardRefNumGenerationRequest",
        "required": [
          "CreditCardRefNumGenerationRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardRefNumGenerationRequest": {
            "$ref": "#/components/schemas/tns_CreditCardRefNumGenerationRequest"
          }
        }
      },
      "CreditCardRefNumGenerationResponse": {
        "title": "CreditCardRefNumGenerationResponse",
        "required": [
          "CreditCardRefNumGenerationResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardRefNumGenerationResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardRefNumGenerationResponse"
              }
            ]
          }
        }
      },
      "CreditCardReIssuePinRequest": {
        "title": "CreditCardReIssuePinRequest",
        "required": [
          "CreditCardReIssuePinRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardReIssuePinRequest": {
            "$ref": "#/components/schemas/tns_CreditCardReIssuePinRequest"
          }
        }
      },
      "CreditCardReIssuePinResponse": {
        "title": "CreditCardReIssuePinResponse",
        "required": [
          "CreditCardReIssuePinResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardReIssuePinResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardReIssuePinResponse"
              }
            ]
          }
        }
      },
      "CreditCardReplacementRequest": {
        "title": "CreditCardReplacementRequest",
        "required": [
          "CreditCardReplacementRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardReplacementRequest": {
            "$ref": "#/components/schemas/tns_CreditCardReplacementRequest"
          }
        }
      },
      "CreditCardReplacementResponse": {
        "title": "CreditCardReplacementResponse",
        "required": [
          "CreditCardReplacementResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardReplacementResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardReplacementResponse"
              }
            ]
          }
        }
      },
      "CreditCardRestrictionCheckRequest": {
        "title": "CreditCardRestrictionCheckRequest",
        "required": [
          "CreditCardRestrictionCheckRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardRestrictionCheckRequest": {
            "$ref": "#/components/schemas/tns_CreditCardRestrictionCheckRequest"
          }
        }
      },
      "CreditCardRestrictionCheckResponse": {
        "title": "CreditCardRestrictionCheckResponse",
        "required": [
          "CreditCardRestrictionCheckResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardRestrictionCheckResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardRestrictionCheckResponse"
              }
            ]
          }
        }
      },
      "CreditCardSMSNotifyRequest": {
        "title": "CreditCardSMSNotifyRequest",
        "required": [
          "CreditCardSMSNotifyRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardSMSNotifyRequest": {
            "$ref": "#/components/schemas/tns_CreditCardSMSNotifyRequest"
          }
        }
      },
      "CreditCardSMSNotifyResponse": {
        "title": "CreditCardSMSNotifyResponse",
        "required": [
          "CreditCardSMSNotifyResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardSMSNotifyResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardSMSNotifyResponse"
              }
            ]
          }
        }
      },
      "CreditCardSmsPushAndPullRequest": {
        "title": "CreditCardSmsPushAndPullRequest",
        "required": [
          "CreditCardSmsPushAndPullRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardSmsPushAndPullRequest": {
            "$ref": "#/components/schemas/tns_CreditCardSmsPushAndPullRequest"
          }
        }
      },
      "CreditCardSmsPushAndPullResponse": {
        "title": "CreditCardSmsPushAndPullResponse",
        "required": [
          "CreditCardSmsPushAndPullResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardSmsPushAndPullResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardSmsPushAndPullResponse"
              }
            ]
          }
        }
      },
      "CreditCardStatementDetailsRequest": {
        "title": "CreditCardStatementDetailsRequest",
        "required": [
          "CreditCardStatementDetailsRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardStatementDetailsRequest": {
            "$ref": "#/components/schemas/tns_CreditCardStatementDetailsRequest"
          }
        }
      },
      "CreditCardStatementDetailsResponse": {
        "title": "CreditCardStatementDetailsResponse",
        "required": [
          "CreditCardStatementDetailsResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardStatementDetailsResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardStatementDetailsResponse"
              }
            ]
          }
        }
      },
      "CreditCardStatementRequest": {
        "title": "CreditCardStatementRequest",
        "required": [
          "CreditCardStatementRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardStatementRequest": {
            "$ref": "#/components/schemas/tns_CreditCardStatementRequest"
          }
        }
      },
      "CreditCardStatementResponse": {
        "title": "CreditCardStatementResponse",
        "required": [
          "CreditCardStatementResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardStatementResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardStatementResponse"
              }
            ]
          }
        }
      },
      "CreditCardSupplementaryCreateRequest": {
        "title": "CreditCardSupplementaryCreateRequest",
        "required": [
          "CreditCardSupplementaryCreateRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardSupplementaryCreateRequest": {
            "$ref": "#/components/schemas/tns_CreditCardSupplementaryCreateRequest"
          }
        }
      },
      "CreditCardSupplementaryCreateResponse": {
        "title": "CreditCardSupplementaryCreateResponse",
        "required": [
          "CreditCardSupplementaryCreateResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardSupplementaryCreateResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardSupplementaryCreateResponse"
              }
            ]
          }
        }
      },
      "CreditCardSupplementaryRequest": {
        "title": "CreditCardSupplementaryRequest",
        "required": [
          "CreditCardSupplementaryRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardSupplementaryRequest": {
            "$ref": "#/components/schemas/CreditCardSupplementaryRequestType"
          }
        }
      },
      "CreditCardSupplementaryResponse": {
        "title": "CreditCardSupplementaryResponse",
        "required": [
          "CreditCardSupplementaryResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardSupplementaryResponse": {
            "$ref": "#/components/schemas/CreditCardSupplementaryResponseType"
          }
        }
      },
      "CreditCardTransactionsRequest": {
        "title": "CreditCardTransactionsRequest",
        "required": [
          "CreditCardTransactionsRequest"
        ],
        "type": "object",
        "properties": {
          "CreditCardTransactionsRequest": {
            "$ref": "#/components/schemas/CreditCardTransactionsRequestType"
          }
        }
      },
      "CreditCardTransactionsResponse": {
        "title": "CreditCardTransactionsResponse",
        "required": [
          "CreditCardTransactionsResponse"
        ],
        "type": "object",
        "properties": {
          "CreditCardTransactionsResponse": {
            "$ref": "#/components/schemas/CreditCardTransactionsResponseType"
          }
        }
      },
      "DisplayCardPINRequest": {
        "title": "DisplayCardPINRequest",
        "required": [
          "DisplayCardPINRequest"
        ],
        "type": "object",
        "properties": {
          "DisplayCardPINRequest": {
            "$ref": "#/components/schemas/DisplayCardPINRequestType"
          }
        }
      },
      "DisplayCardPINResponse": {
        "title": "DisplayCardPINResponse",
        "required": [
          "DisplayCardPINResponse"
        ],
        "type": "object",
        "properties": {
          "DisplayCardPINResponse": {
            "$ref": "#/components/schemas/DisplayCardPINResponseType"
          }
        }
      },
      "EcommerceMerchantUpdationRequest": {
        "title": "EcommerceMerchantUpdationRequest",
        "required": [
          "EcommerceMerchantUpdationRequest"
        ],
        "type": "object",
        "properties": {
          "EcommerceMerchantUpdationRequest": {
            "$ref": "#/components/schemas/tns_EcommerceMerchantUpdationRequest"
          }
        }
      },
      "EcommerceMerchantUpdationResponse": {
        "title": "EcommerceMerchantUpdationResponse",
        "required": [
          "EcommerceMerchantUpdationResponse"
        ],
        "type": "object",
        "properties": {
          "EcommerceMerchantUpdationResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_EcommerceMerchantUpdationResponse"
              }
            ]
          }
        }
      },
      "EcommerceTransactionsRequest": {
        "title": "EcommerceTransactionsRequest",
        "required": [
          "EcommerceTransactionsRequest"
        ],
        "type": "object",
        "properties": {
          "EcommerceTransactionsRequest": {
            "$ref": "#/components/schemas/tns_EcommerceTransactionsRequest"
          }
        }
      },
      "EcommerceTransactionsResponse": {
        "title": "EcommerceTransactionsResponse",
        "required": [
          "EcommerceTransactionsResponse"
        ],
        "type": "object",
        "properties": {
          "EcommerceTransactionsResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_EcommerceTransactionsResponse"
              }
            ]
          }
        }
      },
      "EnquiryOrAmendCommunicationRequest": {
        "title": "EnquiryOrAmendCommunicationRequest",
        "required": [
          "EnquiryOrAmendCommunicationRequest"
        ],
        "type": "object",
        "properties": {
          "EnquiryOrAmendCommunicationRequest": {
            "$ref": "#/components/schemas/tns_EnquiryOrAmendCommunicationRequest"
          }
        }
      },
      "EnquiryOrAmendCommunicationResponse": {
        "title": "EnquiryOrAmendCommunicationResponse",
        "required": [
          "EnquiryOrAmendCommunicationResponse"
        ],
        "type": "object",
        "properties": {
          "EnquiryOrAmendCommunicationResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_EnquiryOrAmendCommunicationResponse"
              }
            ]
          }
        }
      },
      "EntityCreditAccountsStatementsSummaryInquiryRequest": {
        "title": "EntityCreditAccountsStatementsSummaryInquiryRequest",
        "required": [
          "EntityCreditAccountsStatementsSummaryInquiryRequest"
        ],
        "type": "object",
        "properties": {
          "EntityCreditAccountsStatementsSummaryInquiryRequest": {
            "$ref": "#/components/schemas/tns_EntityCreditAccountsStatementsSummaryInquiryRequest"
          }
        }
      },
      "EntityCreditAccountsStatementsSummaryInquiryResponse": {
        "title": "EntityCreditAccountsStatementsSummaryInquiryResponse",
        "required": [
          "EntityCreditAccountsStatementsSummaryInquiryResponse"
        ],
        "type": "object",
        "properties": {
          "EntityCreditAccountsStatementsSummaryInquiryResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_EntityCreditAccountsStatementsSummaryInquiryResponse"
              }
            ]
          }
        }
      },
      "EntityCreditLimitUpdationRequest": {
        "title": "EntityCreditLimitUpdationRequest",
        "required": [
          "EntityCreditLimitUpdationRequest"
        ],
        "type": "object",
        "properties": {
          "EntityCreditLimitUpdationRequest": {
            "$ref": "#/components/schemas/tns_EntityCreditLimitUpdationRequest"
          }
        }
      },
      "EntityCreditLimitUpdationResponse": {
        "title": "EntityCreditLimitUpdationResponse",
        "required": [
          "EntityCreditLimitUpdationResponse"
        ],
        "type": "object",
        "properties": {
          "EntityCreditLimitUpdationResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_EntityCreditLimitUpdationResponse"
              }
            ]
          }
        }
      },
      "EntityCreditStatementsSummaryInquiryRequest": {
        "title": "EntityCreditStatementsSummaryInquiryRequest",
        "required": [
          "EntityCreditStatementsSummaryInquiryRequest"
        ],
        "type": "object",
        "properties": {
          "EntityCreditStatementsSummaryInquiryRequest": {
            "$ref": "#/components/schemas/tns_EntityCreditStatementsSummaryInquiryRequest"
          }
        }
      },
      "EntityCreditStatementsSummaryInquiryResponse": {
        "title": "EntityCreditStatementsSummaryInquiryResponse",
        "required": [
          "EntityCreditStatementsSummaryInquiryResponse"
        ],
        "type": "object",
        "properties": {
          "EntityCreditStatementsSummaryInquiryResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_EntityCreditStatementsSummaryInquiryResponse"
              }
            ]
          }
        }
      },
      "GenerateKeyRequest": {
        "title": "GenerateKeyRequest",
        "required": [
          "GenerateKeyRequest"
        ],
        "type": "object",
        "properties": {
          "GenerateKeyRequest": {
            "$ref": "#/components/schemas/tns_GenerateKeyRequest"
          }
        }
      },
      "GenerateKeyResponse": {
        "title": "GenerateKeyResponse",
        "required": [
          "GenerateKeyResponse"
        ],
        "type": "object",
        "properties": {
          "GenerateKeyResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GenerateKeyResponse"
              }
            ]
          }
        }
      },
      "GetActiveCreditCardListByAccountRequest": {
        "title": "GetActiveCreditCardListByAccountRequest",
        "required": [
          "GetActiveCreditCardListByAccountRequest"
        ],
        "type": "object",
        "properties": {
          "GetActiveCreditCardListByAccountRequest": {
            "$ref": "#/components/schemas/tns_GetActiveCreditCardListByAccountRequest"
          }
        }
      },
      "GetActiveCreditCardListByAccountResponse": {
        "title": "GetActiveCreditCardListByAccountResponse",
        "required": [
          "GetActiveCreditCardListByAccountResponse"
        ],
        "type": "object",
        "properties": {
          "GetActiveCreditCardListByAccountResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetActiveCreditCardListByAccountResponse"
              }
            ]
          }
        }
      },
      "GetCardVirtualDetailsRequest": {
        "title": "GetCardVirtualDetailsRequest",
        "required": [
          "GetCardVirtualDetailsRequest"
        ],
        "type": "object",
        "properties": {
          "GetCardVirtualDetailsRequest": {
            "$ref": "#/components/schemas/tns_GetCardVirtualDetailsRequest"
          }
        }
      },
      "GetCardVirtualDetailsResponse": {
        "title": "GetCardVirtualDetailsResponse",
        "required": [
          "GetCardVirtualDetailsResponse"
        ],
        "type": "object",
        "properties": {
          "GetCardVirtualDetailsResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetCardVirtualDetailsResponse"
              }
            ]
          }
        }
      },
      "GetCortexForexRateRequest": {
        "title": "GetCortexForexRateRequest",
        "required": [
          "GetCortexForexRateRequest"
        ],
        "type": "object",
        "properties": {
          "GetCortexForexRateRequest": {
            "$ref": "#/components/schemas/tns_GetCortexForexRateType"
          }
        }
      },
      "GetCortexForexRateResponse": {
        "title": "GetCortexForexRateResponse",
        "required": [
          "GetCortexForexRateResponse"
        ],
        "type": "object",
        "properties": {
          "GetCortexForexRateResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetCortexForexRateResponse"
              }
            ]
          }
        }
      },
      "GetCountryListRequest": {
        "title": "GetCountryListRequest",
        "required": [
          "GetCountryListRequest"
        ],
        "type": "object",
        "properties": {
          "GetCountryListRequest": {
            "$ref": "#/components/schemas/tns_GetCountryListRequest"
          }
        }
      },
      "GetCountryListResponse": {
        "title": "GetCountryListResponse",
        "required": [
          "GetCountryListResponse"
        ],
        "type": "object",
        "properties": {
          "GetCountryListResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetCountryListResponse"
              }
            ]
          }
        }
      },
      "GetCreditCardAccountDetailsRequest": {
        "title": "GetCreditCardAccountDetailsRequest",
        "required": [
          "GetCreditCardAccountDetailsRequest"
        ],
        "type": "object",
        "properties": {
          "GetCreditCardAccountDetailsRequest": {
            "$ref": "#/components/schemas/tns_GetCreditCardAccountDetailsRequestType"
          }
        }
      },
      "GetCreditCardAccountDetailsResponse": {
        "title": "GetCreditCardAccountDetailsResponse",
        "required": [
          "GetCreditCardAccountDetailsResponse"
        ],
        "type": "object",
        "properties": {
          "GetCreditCardAccountDetailsResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetCreditCardAccountDetailsResponseType"
              }
            ]
          }
        }
      },
      "GetCreditCardAccountPaymentPlansRequest": {
        "title": "GetCreditCardAccountPaymentPlansRequest",
        "required": [
          "GetCreditCardAccountPaymentPlansRequest"
        ],
        "type": "object",
        "properties": {
          "GetCreditCardAccountPaymentPlansRequest": {
            "$ref": "#/components/schemas/tns_GetCreditCardAccountPaymentPlansRequest"
          }
        }
      },
      "GetCreditCardAccountPaymentPlansResponse": {
        "title": "GetCreditCardAccountPaymentPlansResponse",
        "required": [
          "GetCreditCardAccountPaymentPlansResponse"
        ],
        "type": "object",
        "properties": {
          "GetCreditCardAccountPaymentPlansResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetCreditCardAccountPaymentPlansResponse"
              }
            ]
          }
        }
      },
      "GetCreditCardAggregatedDetailsRequest": {
        "title": "GetCreditCardAggregatedDetailsRequest",
        "required": [
          "GetCreditCardAggregatedDetailsRequest"
        ],
        "type": "object",
        "properties": {
          "GetCreditCardAggregatedDetailsRequest": {
            "$ref": "#/components/schemas/tns_GetCreditCardAggregatedDetailsRequest"
          }
        }
      },
      "GetCreditCardAggregatedDetailsResponse": {
        "title": "GetCreditCardAggregatedDetailsResponse",
        "required": [
          "GetCreditCardAggregatedDetailsResponse"
        ],
        "type": "object",
        "properties": {
          "GetCreditCardAggregatedDetailsResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetCreditCardAggregatedDetailsResponse"
              }
            ]
          }
        }
      },
      "GetCreditCardEligiblePaymentPlanTransactionsRequest": {
        "title": "GetCreditCardEligiblePaymentPlanTransactionsRequest",
        "required": [
          "GetCreditCardEligiblePaymentPlanTransactionsRequest"
        ],
        "type": "object",
        "properties": {
          "GetCreditCardEligiblePaymentPlanTransactionsRequest": {
            "$ref": "#/components/schemas/tns_GetCreditCardEligiblePaymentPlanTransactionsRequest"
          }
        }
      },
      "GetCreditCardEligiblePaymentPlanTransactionsResponse": {
        "title": "GetCreditCardEligiblePaymentPlanTransactionsResponse",
        "required": [
          "GetCreditCardEligiblePaymentPlanTransactionsResponse"
        ],
        "type": "object",
        "properties": {
          "GetCreditCardEligiblePaymentPlanTransactionsResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetCreditCardEligiblePaymentPlanTransactionsResponse"
              }
            ]
          }
        }
      },
      "GetCreditCardHistoryRequest": {
        "title": "GetCreditCardHistoryRequest",
        "required": [
          "GetCreditCardHistoryRequest"
        ],
        "type": "object",
        "properties": {
          "GetCreditCardHistoryRequest": {
            "$ref": "#/components/schemas/tns_GetCreditCardHistoryRequest"
          }
        }
      },
      "GetCreditCardHistoryResponse": {
        "title": "GetCreditCardHistoryResponse",
        "required": [
          "GetCreditCardHistoryResponse"
        ],
        "type": "object",
        "properties": {
          "GetCreditCardHistoryResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetCreditCardHistoryResponse"
              }
            ]
          }
        }
      },
      "GetCreditCardPendingActivationRequest": {
        "title": "GetCreditCardPendingActivationRequest",
        "required": [
          "GetCreditCardPendingActivationRequest"
        ],
        "type": "object",
        "properties": {
          "GetCreditCardPendingActivationRequest": {
            "$ref": "#/components/schemas/GetCreditCardPendingActivationRequestType"
          }
        }
      },
      "GetCreditCardPendingActivationResponse": {
        "title": "GetCreditCardPendingActivationResponse",
        "required": [
          "GetCreditCardPendingActivationResponse"
        ],
        "type": "object",
        "properties": {
          "GetCreditCardPendingActivationResponse": {
            "$ref": "#/components/schemas/GetCreditCardPendingActivationResponseDetailsType"
          }
        }
      },
      "GetEntityCardsRequest": {
        "title": "GetEntityCardsRequest",
        "required": [
          "GetEntityCardsRequest"
        ],
        "type": "object",
        "properties": {
          "GetEntityCardsRequest": {
            "$ref": "#/components/schemas/tns_GetEntityCardsRequest"
          }
        }
      },
      "GetEntityCardsResponse": {
        "title": "GetEntityCardsResponse",
        "required": [
          "GetEntityCardsResponse"
        ],
        "type": "object",
        "properties": {
          "GetEntityCardsResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetEntityCardsResponse"
              }
            ]
          }
        }
      },
      "GetEntityListRequest": {
        "title": "GetEntityListRequest",
        "required": [
          "GetEntityListRequest"
        ],
        "type": "object",
        "properties": {
          "GetEntityListRequest": {
            "$ref": "#/components/schemas/tns_GetEntityListRequest"
          }
        }
      },
      "GetEntityListResponse": {
        "title": "GetEntityListResponse",
        "required": [
          "GetEntityListResponse"
        ],
        "type": "object",
        "properties": {
          "GetEntityListResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetEntityListResponse"
              }
            ]
          }
        }
      },
      "GetReasonableLendingInformationRequest": {
        "title": "GetReasonableLendingInformationRequest",
        "required": [
          "GetReasonableLendingInformationRequest"
        ],
        "type": "object",
        "properties": {
          "GetReasonableLendingInformationRequest": {
            "$ref": "#/components/schemas/tns_GetReasonableLendingInformationRequest"
          }
        }
      },
      "GetReasonableLendingInformationResponse": {
        "title": "GetReasonableLendingInformationResponse",
        "required": [
          "GetReasonableLendingInformationResponse"
        ],
        "type": "object",
        "properties": {
          "GetReasonableLendingInformationResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetReasonableLendingInformationResponse"
              }
            ]
          }
        }
      },
      "GetRiskPreferencesRequest": {
        "title": "GetRiskPreferencesRequest",
        "required": [
          "GetRiskPreferencesRequest"
        ],
        "type": "object",
        "properties": {
          "GetRiskPreferencesRequest": {
            "$ref": "#/components/schemas/tns_GetRiskPreferencesRequest"
          }
        }
      },
      "GetRiskPreferencesResponse": {
        "title": "GetRiskPreferencesResponse",
        "required": [
          "GetRiskPreferencesResponse"
        ],
        "type": "object",
        "properties": {
          "GetRiskPreferencesResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetRiskPreferencesResponse"
              }
            ]
          }
        }
      },
      "GetWessamEligibilityDetailsRequest": {
        "title": "GetWessamEligibilityDetailsRequest",
        "required": [
          "GetWessamEligibilityDetailsRequest"
        ],
        "type": "object",
        "properties": {
          "GetWessamEligibilityDetailsRequest": {
            "$ref": "#/components/schemas/tns_GetWessamEligibilityDetailsRequest"
          }
        }
      },
      "GetWessamEligibilityDetailsResponse": {
        "title": "GetWessamEligibilityDetailsResponse",
        "required": [
          "GetWessamEligibilityDetailsResponse"
        ],
        "type": "object",
        "properties": {
          "GetWessamEligibilityDetailsResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_GetWessamEligibilityDetailsResponse"
              }
            ]
          }
        }
      },
      "header_authenticationType": {
        "title": "header_authenticationType",
        "enum": [
          "NONE",
          "OTP",
          "TOKEN"
        ],
        "type": "string",
        "description": ""
      },
      "HimayateeProgramRequest": {
        "title": "HimayateeProgramRequest",
        "required": [
          "HimayateeProgramRequest"
        ],
        "type": "object",
        "properties": {
          "HimayateeProgramRequest": {
            "$ref": "#/components/schemas/tns_HimayateeProgramRequest"
          }
        }
      },
      "HimayateeProgramResponse": {
        "title": "HimayateeProgramResponse",
        "required": [
          "HimayateeProgramResponse"
        ],
        "type": "object",
        "properties": {
          "HimayateeProgramResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_HimayateeProgramResponse"
              }
            ]
          }
        }
      },
      "IDExpiryDateRequest": {
        "title": "IDExpiryDateRequest",
        "required": [
          "IDExpiryDateRequest"
        ],
        "type": "object",
        "properties": {
          "IDExpiryDateRequest": {
            "$ref": "#/components/schemas/tns_IDExpiryDateRequest"
          }
        }
      },
      "IDExpiryDateResponse": {
        "title": "IDExpiryDateResponse",
        "required": [
          "IDExpiryDateResponse"
        ],
        "type": "object",
        "properties": {
          "IDExpiryDateResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_IDExpiryDateResponse"
              }
            ]
          }
        }
      },
      "InquireCreditCardGenericParticularsRequest": {
        "title": "InquireCreditCardGenericParticularsRequest",
        "required": [
          "InquireCreditCardGenericParticularsRequest"
        ],
        "type": "object",
        "properties": {
          "InquireCreditCardGenericParticularsRequest": {
            "$ref": "#/components/schemas/tns_InquireCreditCardGenericParticularsRequest"
          }
        }
      },
      "InquireCreditCardGenericParticularsResponse": {
        "title": "InquireCreditCardGenericParticularsResponse",
        "required": [
          "InquireCreditCardGenericParticularsResponse"
        ],
        "type": "object",
        "properties": {
          "InquireCreditCardGenericParticularsResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InquireCreditCardGenericParticularsResponse"
              }
            ]
          }
        }
      },
      "InquireCreditCardHimayateeProgramRequest": {
        "title": "InquireCreditCardHimayateeProgramRequest",
        "required": [
          "InquireCreditCardHimayateeProgramRequest"
        ],
        "type": "object",
        "properties": {
          "InquireCreditCardHimayateeProgramRequest": {
            "$ref": "#/components/schemas/InquireCreditCardHimayateeProgramRequestType"
          }
        }
      },
      "InquireCreditCardHimayateeProgramResponse": {
        "title": "InquireCreditCardHimayateeProgramResponse",
        "required": [
          "InquireCreditCardHimayateeProgramResponse"
        ],
        "type": "object",
        "properties": {
          "InquireCreditCardHimayateeProgramResponse": {
            "$ref": "#/components/schemas/InquireCreditCardHimayateeProgramResponseType"
          }
        }
      },
      "InquireCreditCardLIRecordRequest": {
        "title": "InquireCreditCardLIRecordRequest",
        "required": [
          "InquireCreditCardLIRecordRequest"
        ],
        "type": "object",
        "properties": {
          "InquireCreditCardLIRecordRequest": {
            "$ref": "#/components/schemas/tns_InquireCreditCardLIRecordRequest"
          }
        }
      },
      "InquireCreditCardLIRecordResponse": {
        "title": "InquireCreditCardLIRecordResponse",
        "required": [
          "InquireCreditCardLIRecordResponse"
        ],
        "type": "object",
        "properties": {
          "InquireCreditCardLIRecordResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_InquireCreditCardLIRecordResponse"
              }
            ]
          }
        }
      },
      "KYCUpdateDetailsRequest": {
        "title": "KYCUpdateDetailsRequest",
        "required": [
          "KYCUpdateDetailsRequest"
        ],
        "type": "object",
        "properties": {
          "KYCUpdateDetailsRequest": {
            "$ref": "#/components/schemas/tns_KYCUpdateDetailsRequest"
          }
        }
      },
      "KYCUpdateDetailsResponse": {
        "title": "KYCUpdateDetailsResponse",
        "required": [
          "KYCUpdateDetailsResponse"
        ],
        "type": "object",
        "properties": {
          "KYCUpdateDetailsResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_KYCUpdateDetailsResponse"
              }
            ]
          }
        }
      },
      "ManagePricingDetailsRequest": {
        "title": "ManagePricingDetailsRequest",
        "required": [
          "ManagePricingDetailsRequest"
        ],
        "type": "object",
        "properties": {
          "ManagePricingDetailsRequest": {
            "$ref": "#/components/schemas/tns_ManagePricingDetailsRequest"
          }
        }
      },
      "ManagePricingDetailsResponse": {
        "title": "ManagePricingDetailsResponse",
        "required": [
          "ManagePricingDetailsResponse"
        ],
        "type": "object",
        "properties": {
          "ManagePricingDetailsResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ManagePricingDetailsResponse"
              }
            ]
          }
        }
      },
      "MerchantStatementDetailsRequest": {
        "title": "MerchantStatementDetailsRequest",
        "required": [
          "MerchantStatementDetailsRequest"
        ],
        "type": "object",
        "properties": {
          "MerchantStatementDetailsRequest": {
            "$ref": "#/components/schemas/tns_MerchantStatementDetailsRequest"
          }
        }
      },
      "MerchantStatementDetailsResponse": {
        "title": "MerchantStatementDetailsResponse",
        "required": [
          "MerchantStatementDetailsResponse"
        ],
        "type": "object",
        "properties": {
          "MerchantStatementDetailsResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_MerchantStatementDetailsResponse"
              }
            ]
          }
        }
      },
      "PayCreditCardPaymentPlanRequest": {
        "title": "PayCreditCardPaymentPlanRequest",
        "required": [
          "PayCreditCardPaymentPlanRequest"
        ],
        "type": "object",
        "properties": {
          "PayCreditCardPaymentPlanRequest": {
            "$ref": "#/components/schemas/tns_PayCreditCardPaymentPlanRequest"
          }
        }
      },
      "PayCreditCardPaymentPlanResponse": {
        "title": "PayCreditCardPaymentPlanResponse",
        "required": [
          "PayCreditCardPaymentPlanResponse"
        ],
        "type": "object",
        "properties": {
          "PayCreditCardPaymentPlanResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_PayCreditCardPaymentPlanResponse"
              }
            ]
          }
        }
      },
      "PaymentRequest": {
        "title": "PaymentRequest",
        "required": [
          "PaymentRequest"
        ],
        "type": "object",
        "properties": {
          "PaymentRequest": {
            "$ref": "#/components/schemas/tns_PaymentRequest"
          }
        }
      },
      "PaymentResponse": {
        "title": "PaymentResponse",
        "required": [
          "PaymentResponse"
        ],
        "type": "object",
        "properties": {
          "PaymentResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_PaymentResponse"
              }
            ]
          }
        }
      },
      "PINDeliveryMethodRequest": {
        "title": "PINDeliveryMethodRequest",
        "required": [
          "PINDeliveryMethodRequest"
        ],
        "type": "object",
        "properties": {
          "PINDeliveryMethodRequest": {
            "$ref": "#/components/schemas/tns_PINDeliveryMethodRequest"
          }
        }
      },
      "PINDeliveryMethodResponse": {
        "title": "PINDeliveryMethodResponse",
        "required": [
          "PINDeliveryMethodResponse"
        ],
        "type": "object",
        "properties": {
          "PINDeliveryMethodResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_PINDeliveryMethodResponse"
              }
            ]
          }
        }
      },
      "Q1_level": {
        "title": "Q1_level",
        "enum": [
          "SUCCESS",
          "WARNING",
          "FAILURE"
        ],
        "type": "string",
        "description": ""
      },
      "RefundCreditCardSurplusAmountRequest": {
        "title": "RefundCreditCardSurplusAmountRequest",
        "required": [
          "RefundCreditCardSurplusAmountRequest"
        ],
        "type": "object",
        "properties": {
          "RefundCreditCardSurplusAmountRequest": {
            "$ref": "#/components/schemas/tns_RefundCreditCardSurplusAmountRequest"
          }
        }
      },
      "RefundCreditCardSurplusAmountResponse": {
        "title": "RefundCreditCardSurplusAmountResponse",
        "required": [
          "RefundCreditCardSurplusAmountResponse"
        ],
        "type": "object",
        "properties": {
          "RefundCreditCardSurplusAmountResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RefundCreditCardSurplusAmountResponse"
              }
            ]
          }
        }
      },
      "ReIssueCreditCardRequest": {
        "title": "ReIssueCreditCardRequest",
        "required": [
          "ReIssueCreditCardRequest"
        ],
        "type": "object",
        "properties": {
          "ReIssueCreditCardRequest": {
            "$ref": "#/components/schemas/tns_ReIssueCreditCardRequest"
          }
        }
      },
      "ReIssueCreditCardResponse": {
        "title": "ReIssueCreditCardResponse",
        "required": [
          "ReIssueCreditCardResponse"
        ],
        "type": "object",
        "properties": {
          "ReIssueCreditCardResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ReIssueCreditCardResponse"
              }
            ]
          }
        }
      },
      "RescheduleAccountRequest": {
        "title": "RescheduleAccountRequest",
        "required": [
          "RescheduleAccountRequest"
        ],
        "type": "object",
        "properties": {
          "RescheduleAccountRequest": {
            "$ref": "#/components/schemas/tns_RescheduleAccountRequest"
          }
        }
      },
      "RescheduleAccountResponse": {
        "title": "RescheduleAccountResponse",
        "required": [
          "RescheduleAccountResponse"
        ],
        "type": "object",
        "properties": {
          "RescheduleAccountResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_RescheduleAccountResponse"
              }
            ]
          }
        }
      },
      "ResetPinTriesRequest": {
        "title": "ResetPinTriesRequest",
        "required": [
          "PinTriesResetRequest"
        ],
        "type": "object",
        "properties": {
          "PinTriesResetRequest": {
            "$ref": "#/components/schemas/tns_PinTriesResetRequest"
          }
        }
      },
      "ResetPinTriesResponse": {
        "title": "ResetPinTriesResponse",
        "required": [
          "PinTriesResetResponse"
        ],
        "type": "object",
        "properties": {
          "PinTriesResetResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_PinTriesResetResponse"
              }
            ]
          }
        }
      },
      "RetrieveEligibilityTableRequest": {
        "title": "RetrieveEligibilityTableRequest",
        "required": [
          "RetrieveEligibilityTableRequest"
        ],
        "type": "object",
        "properties": {
          "RetrieveEligibilityTableRequest": {
            "$ref": "#/components/schemas/RetrieveEligibilityTableRequestType"
          }
        }
      },
      "RetrieveEligibilityTableResponse": {
        "title": "RetrieveEligibilityTableResponse",
        "required": [
          "RetrieveEligibilityTableResponse"
        ],
        "type": "object",
        "properties": {
          "RetrieveEligibilityTableResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RetrieveEligibilityTableResponseType"
              }
            ]
          }
        }
      },
      "SearchEcommerceMerchantRequest": {
        "title": "SearchEcommerceMerchantRequest",
        "required": [
          "SearchEcommerceMerchantRequest"
        ],
        "type": "object",
        "properties": {
          "SearchEcommerceMerchantRequest": {
            "$ref": "#/components/schemas/tns_SearchEcommerceMerchantRequest"
          }
        }
      },
      "SearchEcommerceMerchantResponse": {
        "title": "SearchEcommerceMerchantResponse",
        "required": [
          "SearchEcommerceMerchantResponse"
        ],
        "type": "object",
        "properties": {
          "SearchEcommerceMerchantResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_SearchEcommerceMerchantResponse"
              }
            ]
          }
        }
      },
      "StatementPrintRequest": {
        "title": "StatementPrintRequest",
        "required": [
          "StatementPrintRequest"
        ],
        "type": "object",
        "properties": {
          "StatementPrintRequest": {
            "$ref": "#/components/schemas/tns_StatementPrintRequest"
          }
        }
      },
      "StatementPrintResponse": {
        "title": "StatementPrintResponse",
        "required": [
          "StatementPrintResponse"
        ],
        "type": "object",
        "properties": {
          "StatementPrintResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_StatementPrintResponse"
              }
            ]
          }
        }
      },
      "SubscribeCreditCardHimayateeProgramRequest": {
        "title": "SubscribeCreditCardHimayateeProgramRequest",
        "required": [
          "SubscribeCreditCardHimayateeProgramRequest"
        ],
        "type": "object",
        "properties": {
          "SubscribeCreditCardHimayateeProgramRequest": {
            "$ref": "#/components/schemas/tns_SubscribeCreditCardHimayateeProgramRequest"
          }
        }
      },
      "SubscribeCreditCardHimayateeProgramResponse": {
        "title": "SubscribeCreditCardHimayateeProgramResponse",
        "required": [
          "SubscribeCreditCardHimayateeProgramResponse"
        ],
        "type": "object",
        "properties": {
          "SubscribeCreditCardHimayateeProgramResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_SubscribeCreditCardHimayateeProgramResponse"
              }
            ]
          }
        }
      },
      "tns_account": {
        "title": "tns_account",
        "type": "object",
        "properties": {
          "accountId": {
            "pattern": "([0-9]{14})|(SA[0-9]{4}[a-zA-Z0-9]{18})|()",
            "type": "string"
          },
          "openDate": {
            "type": "string"
          },
          "cif": {
            "pattern": "([0-9]){14}|([0]){1}|()",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "currentBalace": {
            "type": "string"
          },
          "averageSixMonth": {
            "type": "string"
          },
          "type": {
            "maxLength": 4,
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_accountInformation": {
        "title": "tns_accountInformation",
        "type": "object",
        "properties": {
          "account": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_account"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_action": {
        "title": "tns_action",
        "enum": [
          "AU",
          "D"
        ],
        "type": "string",
        "description": ""
      },
      "active": {
        "title": "active",
        "enum": [
          "true",
          "false"
        ],
        "type": "string",
        "description": ""
      },
      "tns_applicationInformation": {
        "title": "tns_applicationInformation",
        "type": "object",
        "properties": {
          "number": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "statusDescription": {
            "type": "string"
          },
          "orgNo": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          },
          "branchNumber": {
            "type": "string"
          },
          "deliveryMethod": {
            "type": "string"
          },
          "campaignCode": {
            "type": "string"
          },
          "channelCreate": {
            "type": "string"
          },
          "channelDescription": {
            "type": "string"
          },
          "salesSourceCode": {
            "type": "string"
          },
          "pinDeliveryMethod": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_applicationInformation1": {
        "title": "tns_applicationInformation1",
        "type": "object",
        "properties": {
          "applicationNumber": {
            "type": "string",
            "default": "M"
          },
          "status": {
            "type": "string"
          },
          "statusDescription": {
            "type": "string"
          },
          "messageDate": {
            "type": "string"
          },
          "messageTime": {
            "type": "string"
          },
          "fursanMembershipNumber": {
            "type": "string"
          }
        },
        "description": ""
      },
      "applicationIsNew": {
        "title": "applicationIsNew",
        "enum": [
          "true",
          "false"
        ],
        "type": "string",
        "description": ""
      },
      "attribute1": {
        "title": "attribute1",
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "description": ""
      },
      "attribute2": {
        "title": "attribute2",
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "description": ""
      },
      "attribute3": {
        "title": "attribute3",
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "description": ""
      },
      "attribute4": {
        "title": "attribute4",
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "description": ""
      },
      "attribute5": {
        "title": "attribute5",
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "description": ""
      },
      "attribute6": {
        "title": "attribute6",
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "description": ""
      },
      "attribute7": {
        "title": "attribute7",
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "description": ""
      },
      "attribute8": {
        "title": "attribute8",
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "description": ""
      },
      "attribute9": {
        "title": "attribute9",
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "description": ""
      },
      "attribute10": {
        "title": "attribute10",
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_CreditCardPayMethodResponseChoice0": {
        "title": "tns_CreditCardPayMethodResponseChoice0",
        "type": "object",
        "properties": {
          "success": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_CreditCardPayMethodResponseType"
              }
            ]
          }
        }
      },
      "tns_CreditCardPayMethodResponseChoice1": {
        "title": "tns_CreditCardPayMethodResponseChoice1",
        "type": "object",
        "properties": {
          "fault": {
            "allOf": [
              {
                "$ref": "../../commonschemas/fault.json#/FaultType"
              }
            ]
          }
        }
      },
      "tns_customerInformation": {
        "title": "tns_customerInformation",
        "required": [
          "marital",
          "maritalDescription",
          "dependents",
          "nationalityId",
          "idDateOfExpiry",
          "nationality",
          "nationalityDescription",
          "nationalityCode",
          "occupation",
          "occupationDescription",
          "educationLevel",
          "educationLevelDescription"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "firstName": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string"
          },
          "secondName": {
            "type": "string"
          },
          "thirdName": {
            "type": "string"
          },
          "familyName": {
            "maxLength": 25,
            "minLength": 0,
            "type": "string"
          },
          "fullName": {
            "maxLength": 75,
            "minLength": 0,
            "type": "string"
          },
          "embosserName": {
            "type": "string"
          },
          "placeOfBirth": {
            "type": "string"
          },
          "dateOfBirth": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "age": {
            "type": "integer",
            "format": "int32"
          },
          "gender": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Q1_Gender"
              }
            ]
          },
          "genderDescription": {
            "type": "string"
          },
          "marital": {
            "type": "string"
          },
          "maritalDescription": {
            "type": "string"
          },
          "dependents": {
            "type": "string"
          },
          "nationalityId": {
            "type": "string"
          },
          "idDateOfExpiry": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "nationality": {
            "type": "string"
          },
          "nationalityDescription": {
            "type": "string"
          },
          "nationalityCode": {
            "type": "string"
          },
          "occupation": {
            "type": "string"
          },
          "occupationDescription": {
            "type": "string"
          },
          "educationLevel": {
            "type": "string"
          },
          "educationLevelDescription": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_employerInformation": {
        "title": "tns_employerInformation",
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusDescription": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "nameEnglish": {
            "type": "string"
          },
          "nameArabic": {
            "type": "string"
          },
          "activity": {
            "type": "string"
          },
          "salary": {
            "type": "string"
          },
          "otherIncome": {
            "type": "string",
            "default": "0"
          },
          "totalIncome": {
            "type": "string"
          },
          "lengthOfServiceYears": {
            "type": "string"
          },
          "lengthOfServiceMonths": {
            "type": "string"
          },
          "phoneArea": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "phoneExt": {
            "type": "string"
          },
          "faxArea": {
            "type": "string"
          },
          "faxNumber": {
            "type": "string"
          },
          "cityCode": {
            "type": "string"
          },
          "mobileNumber": {
            "pattern": "[0-9]{9,15}|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_flag": {
        "title": "tns_flag",
        "enum": [
          "M",
          "N"
        ],
        "type": "string",
        "description": ""
      },
      "function": {
        "title": "function",
        "enum": [
          "C",
          "U",
          "D",
          "I",
          "A",
          "M"
        ],
        "type": "string",
        "minLength": 0,
        "maxLength": 1,
        "description": ""
      },
      "logoMaintained": {
        "title": "logoMaintained",
        "enum": [
          "Done",
          "Not Done"
        ],
        "type": "string",
        "description": ""
      },
      "tns_messageClass": {
        "title": "tns_messageClass",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "type": "integer",
        "description": ""
      },
      "tns_mobileInformation": {
        "title": "tns_mobileInformation",
        "type": "object",
        "properties": {
          "mobileNumber": {
            "type": "array",
            "items": {
              "pattern": "[0-9]{9,15}|()",
              "type": "string"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "option": {
        "title": "option",
        "enum": [
          1,
          2,
          3,
          4,
          5
        ],
        "type": "integer",
        "format": "int32"
      },
      "tns_otherInformation": {
        "title": "tns_otherInformation",
        "type": "object",
        "properties": {
          "bank": {
            "type": "string"
          },
          "pctID": {
            "type": "string"
          },
          "cardFeeOption": {
            "type": "string"
          },
          "applicationSigned": {
            "type": "string"
          },
          "idDocProvided": {
            "type": "string"
          },
          "sufficientFunds": {
            "type": "string"
          },
          "depositVoucherProvided": {
            "type": "string"
          },
          "kycProvided": {
            "type": "string"
          },
          "phoneNoProvided": {
            "type": "string"
          },
          "poBoxProvided": {
            "type": "string"
          },
          "photocopyCardProvided": {
            "type": "string"
          },
          "countryAddress1": {
            "type": "string"
          },
          "countryAddress2": {
            "type": "string"
          },
          "countryCity": {
            "type": "string"
          },
          "countryPOBox": {
            "type": "string"
          },
          "countryZip": {
            "type": "string"
          },
          "countryTelephoneNo": {
            "type": "string"
          },
          "countryFax": {
            "type": "string"
          },
          "nonNCBBank": {
            "type": "string"
          },
          "statementFlag": {
            "type": "string"
          },
          "guarantyAccount": {
            "type": "string"
          },
          "guarantyAmount": {
            "type": "string"
          },
          "oldCardNumber": {
            "type": "string"
          },
          "utilityBillProvided": {
            "type": "string"
          },
          "regDocProvided": {
            "type": "string"
          },
          "customerVerification": {
            "type": "string"
          },
          "employerVerification": {
            "type": "string"
          },
          "existingNCBCard": {
            "type": "string"
          },
          "installmentAmount": {
            "type": "string"
          },
          "wessamSixMonths": {
            "type": "string"
          },
          "scbOldIssueDate": {
            "type": "string"
          },
          "scbOthPayments": {
            "type": "string"
          },
          "scbMaxDelinquency": {
            "type": "string"
          },
          "scbDecision": {
            "type": "string"
          },
          "applicantName": {
            "type": "string"
          },
          "applicantIDNo": {
            "type": "string"
          },
          "applicantIDExpiryDate": {
            "type": "string"
          },
          "applicantPhone": {
            "type": "string"
          },
          "applicantMobile": {
            "type": "string"
          },
          "applicantIDCopy": {
            "type": "string"
          },
          "managerCode": {
            "type": "string"
          },
          "referredTo": {
            "type": "string"
          },
          "referralReason": {
            "type": "string"
          }
        },
        "description": ""
      },
      "printingMethodFilter": {
        "title": "rintingMethodFilter",
        "enum": [
          1,
          3
        ],
        "type": "string",
        "description": ""
      },
      "tns_processCode": {
        "title": "tns_processCode",
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "description": ""
      },
      "tns_rateBasis": {
        "title": "tns_rateBasis",
        "enum": [
          "D",
          "M",
          "Y",
          "y",
          "A"
        ],
        "type": "string",
        "description": ""
      },
      "tns_reject": {
        "title": "tns_reject",
        "type": "object",
        "properties": {
          "Code": {
            "type": "integer",
            "format": "int32"
          },
          "Description": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_rejectErrorInformation": {
        "title": "tns_rejectErrorInformation",
        "required": [
          "reject"
        ],
        "type": "object",
        "properties": {
          "reject": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tns_reject"
            },
            "description": "",
            "nullable": true
          }
        },
        "description": ""
      },
      "requestType": {
        "title": "requestType",
        "enum": [
          "A",
          "D"
        ],
        "type": "string",
        "description": ""
      },
      "tns_residentialInformation": {
        "title": "tns_residentialInformation",
        "required": [
          "commercialRegNo",
          "addressType",
          "address1",
          "address2",
          "cityCode",
          "postalBox",
          "postalCode",
          "ownershipType",
          "ownershipTypeDescription",
          "phoneArea",
          "phoneNumber",
          "faxNumber",
          "emailAddress"
        ],
        "type": "object",
        "properties": {
          "commercialRegNo": {
            "type": "string"
          },
          "addressType": {
            "type": "string"
          },
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "cityCode": {
            "type": "string"
          },
          "postalBox": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "ownershipType": {
            "type": "string"
          },
          "ownershipTypeDescription": {
            "type": "string"
          },
          "phoneArea": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "faxNumber": {
            "type": "string"
          },
          "emailAddress": {
            "pattern": "([a-zA-Z0-9_\\-])([a-zA-Z0-9_\\-\\.]*)@(\\[((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}|((([a-zA-Z0-9\\-]+)\\.)+))([a-zA-Z]{2,}|(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\])|()",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_ruleInformation": {
        "title": "tns_ruleInformation",
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "isDocumentRequired": {
            "type": "string"
          },
          "allowApplications": {
            "type": "string"
          },
          "documentEnglish": {
            "type": "string"
          },
          "documentArabic": {
            "type": "string"
          }
        },
        "description": ""
      },
      "salaryCertificateOption": {
        "title": "salaryCertificateOption",
        "enum": [
          "01",
          "02",
          "03",
          ""
        ],
        "type": "string",
        "minLength": 0,
        "maxLength": 2,
        "description": "Drop down options as 1. Salary Certificate with details 2. Salary Certificate without\r\n\t\t\t\t\t\t\tdetails"
      },
      "SalaryIsBlock": {
        "title": "SalaryIsBlock",
        "enum": [
          "true",
          "false"
        ],
        "type": "string",
        "description": ""
      },
      "tns_scheduledFrequency": {
        "title": "tns_scheduledFrequency",
        "enum": [
          "Daily",
          "Weekly",
          "Monthly",
          "Yearly"
        ],
        "type": "string",
        "description": ""
      },
      "tns_segmentInformation": {
        "title": "tns_segmentInformation",
        "type": "object",
        "properties": {
          "segment": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/segmentType"
            },
            "description": ""
          }
        },
        "description": ""
      },
      "tns_settlementInformation": {
        "title": "tns_settlementInformation",
        "type": "object",
        "properties": {
          "paymentMethod": {
            "maxLength": 1,
            "type": "string",
            "default": "M"
          },
          "billingCycle": {
            "type": "string",
            "default": "N"
          },
          "autoDebit": {
            "type": "string"
          },
          "cardDesign": {
            "type": "string"
          },
          "amountToDeposit": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_success": {
        "title": "tns_success",
        "required": [
          "description"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_success1": {
        "title": "tns_success1",
        "required": [
          "amount",
          "currency"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "number"
          },
          "currency": {
            "pattern": "[A-Z]{3,3}",
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_transactions": {
        "title": "tns_transactions",
        "type": "object",
        "properties": {
          "employerCode": {
            "maxLength": 4,
            "type": "string"
          },
          "lastTransactionDate": {
            "pattern": "([0-9]){8}|()",
            "type": "string"
          },
          "lastTransactionAmount": {
            "allOf": [
              {
                "$ref": "../../commonschemas/schemas.json#/AmountOptional"
              }
            ]
          },
          "salaryCrName": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_transactionType2": {
        "title": "tns_transactionType2",
        "enum": [
          "BIANNUALCYCLE",
          "STATEMENTDATE",
          "CYCLETODATE",
          "CTD"
        ],
        "type": "string",
        "description": ""
      },
      "tns_transferType": {
        "title": "tns_transferType",
        "enum": [
          "A2W",
          "W2A",
          "W2W"
        ],
        "type": "string",
        "description": ""
      },
      "tns_type": {
        "title": "tns_type",
        "enum": [
          "BIANNUALCYCLE",
          "TODAY",
          "CYCLETODATE",
          "CTD"
        ],
        "type": "string",
        "description": ""
      },
      "wessamLastSixMonth": {
        "title": "wessamLastSixMonth",
        "enum": [
          "Y",
          "N"
        ],
        "type": "string",
        "minLength": 0,
        "maxLength": 1,
        "description": ""
      },
      "TransferCashRequest": {
        "title": "TransferCashRequest",
        "required": [
          "TransferCashRequest"
        ],
        "type": "object",
        "properties": {
          "TransferCashRequest": {
            "$ref": "#/components/schemas/tns_TransferCashRequest"
          }
        }
      },
      "TransferCashResponse": {
        "title": "TransferCashResponse",
        "required": [
          "TransferCashResponse"
        ],
        "type": "object",
        "properties": {
          "TransferCashResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_TransferCashResponse"
              }
            ]
          }
        }
      },
      "UnBlockCreditCardRequest": {
        "title": "UnBlockCreditCardRequest",
        "required": [
          "UnBlockCreditCardRequest"
        ],
        "type": "object",
        "properties": {
          "UnBlockCreditCardRequest": {
            "$ref": "#/components/schemas/tns_UnBlockCreditCardRequest"
          }
        }
      },
      "UnBlockCreditCardResponse": {
        "title": "UnBlockCreditCardResponse",
        "required": [
          "UnBlockCreditCardResponse"
        ],
        "type": "object",
        "properties": {
          "UnBlockCreditCardResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_UnBlockCreditCardResponse"
              }
            ]
          }
        }
      },
      "UpdateCreditCardApplicationRequest": {
        "title": "UpdateCreditCardApplicationRequest",
        "required": [
          "UpdateCreditCardApplicationRequest"
        ],
        "type": "object",
        "properties": {
          "UpdateCreditCardApplicationRequest": {
            "$ref": "#/components/schemas/tns_UpdateCreditCardApplicationRequest"
          }
        }
      },
      "UpdateCreditCardApplicationResponse": {
        "title": "UpdateCreditCardApplicationResponse",
        "required": [
          "UpdateCreditCardApplicationResponse"
        ],
        "type": "object",
        "properties": {
          "UpdateCreditCardApplicationResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_UpdateCreditCardApplicationResponse"
              }
            ]
          }
        }
      },
      "UpdateCreditCardCollectionStatusRequest": {
        "title": "UpdateCreditCardCollectionStatusRequest",
        "required": [
          "UpdateCreditCardCollectionStatusRequest"
        ],
        "type": "object",
        "properties": {
          "UpdateCreditCardCollectionStatusRequest": {
            "$ref": "#/components/schemas/tns_UpdateCreditCardCollectionStatusRequestType"
          }
        }
      },
      "UpdateCreditCardCollectionStatusResponse": {
        "title": "UpdateCreditCardCollectionStatusResponse",
        "required": [
          "UpdateCreditCardCollectionStatusResponse"
        ],
        "type": "object",
        "properties": {
          "UpdateCreditCardCollectionStatusResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_UpdateCreditCardCollectionStatusResponseType"
              }
            ]
          }
        }
      },
      "UpdateCreditCardHimayateeProgramStatusRequest": {
        "title": "UpdateCreditCardHimayateeProgramStatusRequest",
        "required": [
          "UpdateCreditCardHimayateeProgramStatusRequest"
        ],
        "type": "object",
        "properties": {
          "UpdateCreditCardHimayateeProgramStatusRequest": {
            "$ref": "#/components/schemas/tns_UpdateCreditCardHimayateeProgramStatusRequest"
          }
        }
      },
      "UpdateCreditCardHimayateeProgramStatusResponse": {
        "title": "UpdateCreditCardHimayateeProgramStatusResponse",
        "required": [
          "UpdateCreditCardHimayateeProgramStatusResponse"
        ],
        "type": "object",
        "properties": {
          "UpdateCreditCardHimayateeProgramStatusResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_UpdateCreditCardHimayateeProgramStatusResponse"
              }
            ]
          }
        }
      },
      "UpdateCreditCardLimitRequest": {
        "title": "UpdateCreditCardLimitRequest",
        "required": [
          "UpdateCreditCardLimitRequest"
        ],
        "type": "object",
        "properties": {
          "UpdateCreditCardLimitRequest": {
            "$ref": "#/components/schemas/tns_UpdateCreditCardLimitRequest"
          }
        }
      },
      "UpdateCreditCardLimitResponse": {
        "title": "UpdateCreditCardLimitResponse",
        "required": [
          "UpdateCreditCardLimitResponse"
        ],
        "type": "object",
        "properties": {
          "UpdateCreditCardLimitResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_UpdateCreditCardLimitResponse"
              }
            ]
          }
        }
      },
      "UpdateCreditCardLIRecordRequest": {
        "title": "UpdateCreditCardLIRecordRequest",
        "required": [
          "UpdateCreditCardLIRecordRequest"
        ],
        "type": "object",
        "properties": {
          "UpdateCreditCardLIRecordRequest": {
            "$ref": "#/components/schemas/tns_UpdateCreditCardLIRecordRequest"
          }
        }
      },
      "UpdateCreditCardLIRecordResponse": {
        "title": "UpdateCreditCardLIRecordResponse",
        "required": [
          "UpdateCreditCardLIRecordResponse"
        ],
        "type": "object",
        "properties": {
          "UpdateCreditCardLIRecordResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_UpdateCreditCardLIRecordResponse"
              }
            ]
          }
        }
      },
      "UpdateCreditCardMobileNumberRequest": {
        "title": "UpdateCreditCardMobileNumberRequest",
        "required": [
          "UpdateCreditCardMobileNumberRequest"
        ],
        "type": "object",
        "properties": {
          "UpdateCreditCardMobileNumberRequest": {
            "$ref": "#/components/schemas/tns_UpdateCreditCardMobileNumberRequest"
          }
        }
      },
      "UpdateCreditCardMobileNumberResponse": {
        "title": "UpdateCreditCardMobileNumberResponse",
        "required": [
          "UpdateCreditCardMobileNumberResponse"
        ],
        "type": "object",
        "properties": {
          "UpdateCreditCardMobileNumberResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_UpdateCreditCardMobileNumberResponse"
              }
            ]
          }
        }
      },
      "UpdateCreditCardPrintingStatusRequest": {
        "title": "UpdateCreditCardPrintingStatusRequest",
        "required": [
          "UpdateCreditCardPrintingStatusRequest"
        ],
        "type": "object",
        "properties": {
          "UpdateCreditCardPrintingStatusRequest": {
            "$ref": "#/components/schemas/tns_UpdateCreditCardPrintingStatusRequest"
          }
        }
      },
      "UpdateCreditCardPrintingStatusResponse": {
        "title": "UpdateCreditCardPrintingStatusResponse",
        "required": [
          "UpdateCreditCardPrintingStatusResponse"
        ],
        "type": "object",
        "properties": {
          "UpdateCreditCardPrintingStatusResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_UpdateCreditCardPrintingStatusResponse"
              }
            ]
          }
        }
      },
      "UpdateCreditCardTransactionAuthorizationRequest": {
        "title": "UpdateCreditCardTransactionAuthorizationRequest",
        "required": [
          "UpdateCreditCardTransactionAuthorizationRequest"
        ],
        "type": "object",
        "properties": {
          "UpdateCreditCardTransactionAuthorizationRequest": {
            "$ref": "#/components/schemas/tns_UpdateCreditCardTransactionAuthorizationRequest"
          }
        }
      },
      "UpdateCreditCardTransactionAuthorizationResponse": {
        "title": "UpdateCreditCardTransactionAuthorizationResponse",
        "required": [
          "UpdateCreditCardTransactionAuthorizationResponse"
        ],
        "type": "object",
        "properties": {
          "UpdateCreditCardTransactionAuthorizationResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_UpdateCreditCardTransactionAuthorizationResponse"
              }
            ]
          }
        }
      },
      "UpdateRiskCardStatusRequest": {
        "title": "UpdateRiskCardStatusRequest",
        "required": [
          "UpdateRiskCardStatusRequest"
        ],
        "type": "object",
        "properties": {
          "UpdateRiskCardStatusRequest": {
            "$ref": "#/components/schemas/tns_UpdateRiskCardStatusRequest"
          }
        }
      },
      "UpdateRiskCardStatusResponse": {
        "title": "UpdateRiskCardStatusResponse",
        "required": [
          "UpdateRiskCardStatusResponse"
        ],
        "type": "object",
        "properties": {
          "UpdateRiskCardStatusResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_UpdateRiskCardStatusResponse"
              }
            ]
          }
        }
      },
      "UpdateRiskLoginCountryRequest": {
        "title": "UpdateRiskLoginCountryRequest",
        "required": [
          "UpdateRiskLoginCountryRequest"
        ],
        "type": "object",
        "properties": {
          "UpdateRiskLoginCountryRequest": {
            "$ref": "#/components/schemas/tns_UpdateRiskLoginCountryRequest"
          }
        }
      },
      "UpdateRiskLoginCountryResponse": {
        "title": "UpdateRiskLoginCountryResponse",
        "required": [
          "UpdateRiskLoginCountryResponse"
        ],
        "type": "object",
        "properties": {
          "UpdateRiskLoginCountryResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_UpdateRiskLoginCountryResponse"
              }
            ]
          }
        }
      },
      "UpdateRiskPreferencesRequest": {
        "title": "UpdateRiskPreferencesRequest",
        "required": [
          "UpdateRiskPreferencesRequest"
        ],
        "type": "object",
        "properties": {
          "UpdateRiskPreferencesRequest": {
            "$ref": "#/components/schemas/tns_UpdateRiskPreferencesRequest"
          }
        }
      },
      "UpdateRiskPreferencesResponse": {
        "title": "UpdateRiskPreferencesResponse",
        "required": [
          "UpdateRiskPreferencesResponse"
        ],
        "type": "object",
        "properties": {
          "UpdateRiskPreferencesResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_UpdateRiskPreferencesResponse"
              }
            ]
          }
        }
      },
      "UpgradeDowngradeCustomerRequest": {
        "title": "UpgradeDowngradeCustomerRequest",
        "required": [
          "UpgradeDowngradeCustomerRequest"
        ],
        "type": "object",
        "properties": {
          "UpgradeDowngradeCustomerRequest": {
            "$ref": "#/components/schemas/tns_UpgradeDowngradeCustomerRequest"
          }
        }
      },
      "UpgradeDowngradeCustomerResponse": {
        "title": "UpgradeDowngradeCustomerResponse",
        "required": [
          "UpgradeDowngradeCustomerResponse"
        ],
        "type": "object",
        "properties": {
          "UpgradeDowngradeCustomerResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_UpgradeDowngradeCustomerResponse"
              }
            ]
          }
        }
      },
      "ValidateCreditCardForReissuanceRequest": {
        "title": "ValidateCreditCardForReissuanceRequest",
        "required": [
          "ValidateCreditCardForReissuanceRequest"
        ],
        "type": "object",
        "properties": {
          "ValidateCreditCardForReissuanceRequest": {
            "$ref": "#/components/schemas/tns_ValidateCreditCardForReissuanceRequest"
          }
        }
      },
      "ValidateCreditCardForReissuanceResponse": {
        "title": "ValidateCreditCardForReissuanceResponse",
        "required": [
          "ValidateCreditCardForReissuanceResponse"
        ],
        "type": "object",
        "properties": {
          "ValidateCreditCardForReissuanceResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_ValidateCreditCardForReissuanceResponse"
              }
            ]
          }
        }
      },
      "WalletToWalletTransferRequest": {
        "title": "WalletToWalletTransferRequest",
        "required": [
          "WalletToWalletTransferRequest"
        ],
        "type": "object",
        "properties": {
          "WalletToWalletTransferRequest": {
            "$ref": "#/components/schemas/tns_WalletToWalletTransferRequest"
          }
        }
      },
      "WalletToWalletTransferResponse": {
        "title": "WalletToWalletTransferResponse",
        "required": [
          "WalletToWalletTransferResponse"
        ],
        "type": "object",
        "properties": {
          "WalletToWalletTransferResponse": {
            "allOf": [
              {
                "$ref": "#/components/schemas/tns_WalletToWalletTransferResponse"
              }
            ]
          }
        }
      },
      "wsse_UsernameToken": {
        "title": "wsse_UsernameToken",
        "required": [
          "Username",
          "Password"
        ],
        "type": "object",
        "properties": {
          "Username": {
            "type": "string"
          },
          "Password": {
            "type": "string"
          }
        },
        "description": ""
      },
      "tns_AmountOptional": {
        "oneOf": [
          {
            "type": "number"
          },
          {
            "type": "string"
          }
        ]
      },
      "tns_CreditCardPayMethodResponse1": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/tns_CreditCardPayMethodResponseChoice0"
          },
          {
            "$ref": "#/components/schemas/tns_CreditCardPayMethodResponseChoice1"
          }
        ]
      },
      "Q1_AmountOptional": {
        "$ref": "../../commonschemas/schemas.json#/AmountOptional"
      }
    },
    "securitySchemes": {
      "mwsecurity": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "mwsecurity": []
    }
  ],
  "tags": [
    {
      "name": "CreditCard APIs",
      "description": ""
    }
  ]
}